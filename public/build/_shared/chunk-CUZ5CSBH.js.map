{
  "version": 3,
  "sources": ["../../../app/context/ThemeContext.tsx", "../../../app/components/Button/Button.module.css", "../../../app/components/Button/Button.tsx", "../../../app/store/slices/pageSlice.ts", "../../../app/store/slices/peopleSlice.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/context/ThemeContext.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/context/ThemeContext.tsx\");\n  import.meta.hot.lastModified = \"1722960578304.9702\";\n}\n// REMIX HMR END\n\nimport React, { createContext, useState, useContext } from 'react';\nconst ThemeContext = createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return <ThemeContext.Provider value={{\n    theme,\n    toggleTheme\n  }}>\n      {children}\n    </ThemeContext.Provider>;\n};\n_s2(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export default {\"button\":\"Button-module__button__Mxh5t\",\"pagination-button\":\"Button-module__pagination-button__KcpSC\",\"search-button\":\"Button-module__search-button__OYIlU\",\"error-boundary-button\":\"Button-module__error-boundary-button__VuxHr\",\"toggle-theme-button\":\"Button-module__toggle-theme-button__HuaIf\"};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Button/Button.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Button/Button.tsx\");\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport styles from './Button.module.css';\nconst Button = ({\n  variant = 'default',\n  className,\n  ...props\n}) => {\n  const variantClass = {\n    default: styles.button,\n    pagination: `${styles.button} ${styles['pagination-button']}`,\n    search: `${styles.button} ${styles['search-button']}`,\n    errorBoundary: `${styles.button} ${styles['error-boundary-button']}`,\n    toggleTheme: `${styles.button} ${styles['toggle-theme-button']}`\n  }[variant];\n  return <button className={`${variantClass} ${className}`} {...props} />;\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/store/slices/pageSlice.ts\"\n);\nimport.meta.hot.lastModified = \"1722860991851.2808\";\n}\n// REMIX HMR END\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface PageState {\n  currentPage: number;\n}\n\nconst initialState: PageState = {\n  currentPage: 1,\n};\n\nconst pageSlice = createSlice({\n  name: 'page',\n  initialState,\n  reducers: {\n    setPage: (state, action: PayloadAction<number>) => {\n      state.currentPage = action.payload;\n    },\n  },\n});\n\nexport const { setPage } = pageSlice.actions;\nexport default pageSlice.reducer;\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/store/slices/peopleSlice.ts\"\n);\nimport.meta.hot.lastModified = \"1722956716698.8818\";\n}\n// REMIX HMR END\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Person } from '../api/interfaces';\n\nexport interface PeopleState {\n  currentPageData: Person[];\n}\n\nconst initialState: PeopleState = {\n  currentPageData: [],\n};\n\nconst peopleSlice = createSlice({\n  name: 'people',\n  initialState,\n  reducers: {\n    setPeople: (state, action: PayloadAction<Person[]>) => {\n      state.currentPageData = action.payload;\n    },\n  },\n});\n\nexport const { setPeople } = peopleSlice.actions;\nexport default peopleSlice.reducer;\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "initialState"]
}
