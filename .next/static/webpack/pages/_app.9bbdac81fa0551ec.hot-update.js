/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js ***!
  \****************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildQueries: function() { return /* binding */ buildQueries; },\n/* harmony export */   configure: function() { return /* binding */ configure; },\n/* harmony export */   createEvent: function() { return /* binding */ createEvent; },\n/* harmony export */   findAllByAltText: function() { return /* binding */ findAllByAltText; },\n/* harmony export */   findAllByDisplayValue: function() { return /* binding */ findAllByDisplayValue; },\n/* harmony export */   findAllByLabelText: function() { return /* binding */ findAllByLabelText; },\n/* harmony export */   findAllByPlaceholderText: function() { return /* binding */ findAllByPlaceholderText; },\n/* harmony export */   findAllByRole: function() { return /* binding */ findAllByRole; },\n/* harmony export */   findAllByTestId: function() { return /* binding */ findAllByTestId; },\n/* harmony export */   findAllByText: function() { return /* binding */ findAllByText; },\n/* harmony export */   findAllByTitle: function() { return /* binding */ findAllByTitle; },\n/* harmony export */   findByAltText: function() { return /* binding */ findByAltText; },\n/* harmony export */   findByDisplayValue: function() { return /* binding */ findByDisplayValue; },\n/* harmony export */   findByLabelText: function() { return /* binding */ findByLabelText; },\n/* harmony export */   findByPlaceholderText: function() { return /* binding */ findByPlaceholderText; },\n/* harmony export */   findByRole: function() { return /* binding */ findByRole; },\n/* harmony export */   findByTestId: function() { return /* binding */ findByTestId; },\n/* harmony export */   findByText: function() { return /* binding */ findByText; },\n/* harmony export */   findByTitle: function() { return /* binding */ findByTitle; },\n/* harmony export */   fireEvent: function() { return /* binding */ fireEvent; },\n/* harmony export */   getAllByAltText: function() { return /* binding */ getAllByAltText; },\n/* harmony export */   getAllByDisplayValue: function() { return /* binding */ getAllByDisplayValue; },\n/* harmony export */   getAllByLabelText: function() { return /* binding */ getAllByLabelTextWithSuggestions; },\n/* harmony export */   getAllByPlaceholderText: function() { return /* binding */ getAllByPlaceholderText; },\n/* harmony export */   getAllByRole: function() { return /* binding */ getAllByRole; },\n/* harmony export */   getAllByTestId: function() { return /* binding */ getAllByTestId; },\n/* harmony export */   getAllByText: function() { return /* binding */ getAllByText; },\n/* harmony export */   getAllByTitle: function() { return /* binding */ getAllByTitle; },\n/* harmony export */   getByAltText: function() { return /* binding */ getByAltText; },\n/* harmony export */   getByDisplayValue: function() { return /* binding */ getByDisplayValue; },\n/* harmony export */   getByLabelText: function() { return /* binding */ getByLabelTextWithSuggestions; },\n/* harmony export */   getByPlaceholderText: function() { return /* binding */ getByPlaceholderText; },\n/* harmony export */   getByRole: function() { return /* binding */ getByRole; },\n/* harmony export */   getByTestId: function() { return /* binding */ getByTestId; },\n/* harmony export */   getByText: function() { return /* binding */ getByText; },\n/* harmony export */   getByTitle: function() { return /* binding */ getByTitle; },\n/* harmony export */   getConfig: function() { return /* binding */ getConfig; },\n/* harmony export */   getDefaultNormalizer: function() { return /* binding */ getDefaultNormalizer; },\n/* harmony export */   getElementError: function() { return /* binding */ getElementError; },\n/* harmony export */   getMultipleElementsFoundError: function() { return /* binding */ getMultipleElementsFoundError; },\n/* harmony export */   getNodeText: function() { return /* binding */ getNodeText; },\n/* harmony export */   getQueriesForElement: function() { return /* binding */ getQueriesForElement; },\n/* harmony export */   getRoles: function() { return /* binding */ getRoles; },\n/* harmony export */   getSuggestedQuery: function() { return /* binding */ getSuggestedQuery; },\n/* harmony export */   isInaccessible: function() { return /* binding */ isInaccessible; },\n/* harmony export */   logDOM: function() { return /* binding */ logDOM; },\n/* harmony export */   logRoles: function() { return /* binding */ logRoles; },\n/* harmony export */   makeFindQuery: function() { return /* binding */ makeFindQuery; },\n/* harmony export */   makeGetAllQuery: function() { return /* binding */ makeGetAllQuery; },\n/* harmony export */   makeSingleQuery: function() { return /* binding */ makeSingleQuery; },\n/* harmony export */   prettyDOM: function() { return /* binding */ prettyDOM; },\n/* harmony export */   prettyFormat: function() { return /* reexport module object */ pretty_format__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   queries: function() { return /* binding */ queries; },\n/* harmony export */   queryAllByAltText: function() { return /* binding */ queryAllByAltTextWithSuggestions; },\n/* harmony export */   queryAllByAttribute: function() { return /* binding */ queryAllByAttribute; },\n/* harmony export */   queryAllByDisplayValue: function() { return /* binding */ queryAllByDisplayValueWithSuggestions; },\n/* harmony export */   queryAllByLabelText: function() { return /* binding */ queryAllByLabelTextWithSuggestions; },\n/* harmony export */   queryAllByPlaceholderText: function() { return /* binding */ queryAllByPlaceholderTextWithSuggestions; },\n/* harmony export */   queryAllByRole: function() { return /* binding */ queryAllByRoleWithSuggestions; },\n/* harmony export */   queryAllByTestId: function() { return /* binding */ queryAllByTestIdWithSuggestions; },\n/* harmony export */   queryAllByText: function() { return /* binding */ queryAllByTextWithSuggestions; },\n/* harmony export */   queryAllByTitle: function() { return /* binding */ queryAllByTitleWithSuggestions; },\n/* harmony export */   queryByAltText: function() { return /* binding */ queryByAltText; },\n/* harmony export */   queryByAttribute: function() { return /* binding */ queryByAttribute; },\n/* harmony export */   queryByDisplayValue: function() { return /* binding */ queryByDisplayValue; },\n/* harmony export */   queryByLabelText: function() { return /* binding */ queryByLabelText; },\n/* harmony export */   queryByPlaceholderText: function() { return /* binding */ queryByPlaceholderText; },\n/* harmony export */   queryByRole: function() { return /* binding */ queryByRole; },\n/* harmony export */   queryByTestId: function() { return /* binding */ queryByTestId; },\n/* harmony export */   queryByText: function() { return /* binding */ queryByText; },\n/* harmony export */   queryByTitle: function() { return /* binding */ queryByTitle; },\n/* harmony export */   queryHelpers: function() { return /* binding */ queryHelpers; },\n/* harmony export */   screen: function() { return /* binding */ screen; },\n/* harmony export */   waitFor: function() { return /* binding */ waitForWrapper; },\n/* harmony export */   waitForElementToBeRemoved: function() { return /* binding */ waitForElementToBeRemoved; },\n/* harmony export */   within: function() { return /* binding */ getQueriesForElement; },\n/* harmony export */   wrapAllByQueryWithSuggestion: function() { return /* binding */ wrapAllByQueryWithSuggestion; },\n/* harmony export */   wrapSingleQueryWithSuggestion: function() { return /* binding */ wrapSingleQueryWithSuggestion; }\n/* harmony export */ });\n/* harmony import */ var pretty_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pretty-format */ \"./node_modules/pretty-format/build/index.js\");\n/* harmony import */ var dom_accessibility_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dom-accessibility-api */ \"./node_modules/dom-accessibility-api/dist/index.mjs\");\n/* harmony import */ var aria_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aria-query */ \"./node_modules/aria-query/lib/index.js\");\n/* harmony import */ var lz_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lz-string */ \"./node_modules/lz-string/libs/lz-string.js\");\n/* harmony import */ var lz_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lz_string__WEBPACK_IMPORTED_MODULE_3__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n/**\n * Source: https://github.com/facebook/jest/blob/e7bb6a1e26ffab90611b2593912df15b69315611/packages/pretty-format/src/plugins/DOMElement.ts\n */\n/* eslint-disable -- trying to stay as close to the original as possible */\n/* istanbul ignore file */\n\nfunction escapeHTML(str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n// Return empty string if keys is empty.\nconst printProps = (keys, props, config, indentation, depth, refs, printer) => {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys.map(key => {\n    const value = props[key];\n    let printed = printer(value, config, indentationNext, depth, refs);\n    if (typeof value !== 'string') {\n      if (printed.indexOf('\\n') !== -1) {\n        printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;\n      }\n      printed = '{' + printed + '}';\n    }\n    return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close;\n  }).join('');\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#node_type_constants\nconst NodeTypeTextNode = 3;\n\n// Return empty string if children is empty.\nconst printChildren = (children, config, indentation, depth, refs, printer) => children.map(child => {\n  const printedChild = typeof child === 'string' ? printText(child, config) : printer(child, config, indentation, depth, refs);\n  if (printedChild === '' && typeof child === 'object' && child !== null && child.nodeType !== NodeTypeTextNode) {\n    // A plugin serialized this Node to '' meaning we should ignore it.\n    return '';\n  }\n  return config.spacingOuter + indentation + printedChild;\n}).join('');\nconst printText = (text, config) => {\n  const contentColor = config.colors.content;\n  return contentColor.open + escapeHTML(text) + contentColor.close;\n};\nconst printComment = (comment, config) => {\n  const commentColor = config.colors.comment;\n  return commentColor.open + '<!--' + escapeHTML(comment) + '-->' + commentColor.close;\n};\n\n// Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\nconst printElement = (type, printedProps, printedChildren, config, indentation) => {\n  const tagColor = config.colors.tag;\n  return tagColor.open + '<' + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type : (printedProps && !config.min ? '' : ' ') + '/') + '>' + tagColor.close;\n};\nconst printElementAsLeaf = (type, config) => {\n  const tagColor = config.colors.tag;\n  return tagColor.open + '<' + type + tagColor.close + ' …' + tagColor.open + ' />' + tagColor.close;\n};\nconst ELEMENT_NODE$1 = 1;\nconst TEXT_NODE$1 = 3;\nconst COMMENT_NODE$1 = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\nconst isCustomElement = val => {\n  const {\n    tagName\n  } = val;\n  return Boolean(typeof tagName === 'string' && tagName.includes('-') || typeof val.hasAttribute === 'function' && val.hasAttribute('is'));\n};\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {\n    nodeType\n  } = val;\n  return nodeType === ELEMENT_NODE$1 && (ELEMENT_REGEXP.test(constructorName) || isCustomElement(val)) || nodeType === TEXT_NODE$1 && constructorName === 'Text' || nodeType === COMMENT_NODE$1 && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n};\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE$1;\n}\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE$1;\n}\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\nfunction createDOMElementFilter(filterNode) {\n  return {\n    test: val => {\n      var _val$constructor2;\n      return ((val == null || (_val$constructor2 = val.constructor) == null ? void 0 : _val$constructor2.name) || isCustomElement(val)) && testNode(val);\n    },\n    serialize: (node, config, indentation, depth, refs, printer) => {\n      if (nodeIsText(node)) {\n        return printText(node.data, config);\n      }\n      if (nodeIsComment(node)) {\n        return printComment(node.data, config);\n      }\n      const type = nodeIsFragment(node) ? \"DocumentFragment\" : node.tagName.toLowerCase();\n      if (++depth > config.maxDepth) {\n        return printElementAsLeaf(type, config);\n      }\n      return printElement(type, printProps(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(attr => attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute) => {\n        props[attribute.name] = attribute.value;\n        return props;\n      }, {}), config, indentation + config.indent, depth, refs, printer), printChildren(Array.prototype.slice.call(node.childNodes || node.children).filter(filterNode), config, indentation + config.indent, depth, refs, printer), config, indentation);\n    }\n  };\n}\n\n// We try to load node dependencies\nlet chalk = null;\nlet readFileSync = null;\nlet codeFrameColumns = null;\ntry {\n  const nodeRequire = module && module.require;\n  readFileSync = nodeRequire.call(module, 'fs').readFileSync;\n  codeFrameColumns = nodeRequire.call(module, '@babel/code-frame').codeFrameColumns;\n  chalk = nodeRequire.call(module, 'chalk');\n} catch {\n  // We're in a browser environment\n}\n\n// frame has the form \"at myMethod (location/to/my/file.js:10:2)\"\nfunction getCodeFrame(frame) {\n  const locationStart = frame.indexOf('(') + 1;\n  const locationEnd = frame.indexOf(')');\n  const frameLocation = frame.slice(locationStart, locationEnd);\n  const frameLocationElements = frameLocation.split(':');\n  const [filename, line, column] = [frameLocationElements[0], parseInt(frameLocationElements[1], 10), parseInt(frameLocationElements[2], 10)];\n  let rawFileContents = '';\n  try {\n    rawFileContents = readFileSync(filename, 'utf-8');\n  } catch {\n    return '';\n  }\n  const codeFrame = codeFrameColumns(rawFileContents, {\n    start: {\n      line,\n      column\n    }\n  }, {\n    highlightCode: true,\n    linesBelow: 0\n  });\n  return chalk.dim(frameLocation) + \"\\n\" + codeFrame + \"\\n\";\n}\nfunction getUserCodeFrame() {\n  // If we couldn't load dependencies, we can't generate the user trace\n  /* istanbul ignore next */\n  if (!readFileSync || !codeFrameColumns) {\n    return '';\n  }\n  const err = new Error();\n  const firstClientCodeFrame = err.stack.split('\\n').slice(1) // Remove first line which has the form \"Error: TypeError\"\n  .find(frame => !frame.includes('node_modules/')); // Ignore frames from 3rd party libraries\n\n  return getCodeFrame(firstClientCodeFrame);\n}\n\n// Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\nconst TEXT_NODE = 3;\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  // eslint-disable-next-line\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (\n      // legacy timers\n      setTimeout._isMockFunction === true ||\n      // modern timers\n      // eslint-disable-next-line prefer-object-has-own -- not supported by our support matrix\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  }\n  // istanbul ignore next\n  return false;\n}\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n  return window.document;\n}\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView === null) {\n    throw new Error(\"It looks like the window object is not available for the provided node.\");\n  } else if (node.then instanceof Function) {\n    throw new Error(\"It looks like you passed a Promise object instead of a DOM node. Did you do something like `fireEvent.click(screen.findBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`, or await the findBy query `fireEvent.click(await screen.findBy...`?\");\n  } else if (Array.isArray(node)) {\n    throw new Error(\"It looks like you passed an Array instead of a DOM node. Did you do something like `fireEvent.click(screen.getAllBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`?\");\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(\"It looks like you passed a `screen` object. Did you do something like `fireEvent.click(screen, ...` when you meant to use a query, e.g. `fireEvent.click(screen.getBy..., `?\");\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(\"The given node is not an Element, the node type is: \" + typeof node + \".\");\n  }\n}\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(\"Expected container to be an Element, a Document or a DocumentFragment but got \" + getTypeName(container) + \".\");\n  }\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n    return typeof object;\n  }\n}\n\nconst shouldHighlight = () => {\n  let colors;\n  try {\n    var _process;\n    colors = JSON.parse((_process = process) == null || (_process = _process.env) == null ? void 0 : _process.COLORS);\n  } catch (e) {\n    // If this throws, process?.env?.COLORS wasn't parsable. Since we only\n    // care about `true` or `false`, we can safely ignore the error.\n  }\n  if (typeof colors === 'boolean') {\n    // If `colors` is set explicitly (both `true` and `false`), use that value.\n    return colors;\n  } else {\n    // If `colors` is not set, colorize if we're in node.\n    return typeof process !== 'undefined' && process.versions !== undefined && process.versions.node !== undefined;\n  }\n};\nconst {\n  DOMCollection\n} = pretty_format__WEBPACK_IMPORTED_MODULE_0__.plugins;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#node_type_constants\nconst ELEMENT_NODE = 1;\nconst COMMENT_NODE = 8;\n\n// https://github.com/facebook/jest/blob/615084195ae1ae61ddd56162c62bbdda17587569/packages/pretty-format/src/plugins/DOMElement.ts#L50\nfunction filterCommentsAndDefaultIgnoreTagsTags(value) {\n  return value.nodeType !== COMMENT_NODE && (value.nodeType !== ELEMENT_NODE || !value.matches(getConfig().defaultIgnore));\n}\nfunction prettyDOM(dom, maxLength, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!dom) {\n    dom = getDocument().body;\n  }\n  if (typeof maxLength !== 'number') {\n    maxLength = typeof process !== 'undefined' && process.env.DEBUG_PRINT_LIMIT || 7000;\n  }\n  if (maxLength === 0) {\n    return '';\n  }\n  if (dom.documentElement) {\n    dom = dom.documentElement;\n  }\n  let domTypeName = typeof dom;\n  if (domTypeName === 'object') {\n    domTypeName = dom.constructor.name;\n  } else {\n    // To don't fall with `in` operator\n    dom = {};\n  }\n  if (!('outerHTML' in dom)) {\n    throw new TypeError(\"Expected an element or document but got \" + domTypeName);\n  }\n  const {\n    filterNode = filterCommentsAndDefaultIgnoreTagsTags,\n    ...prettyFormatOptions\n  } = options;\n  const debugContent = pretty_format__WEBPACK_IMPORTED_MODULE_0__.format(dom, {\n    plugins: [createDOMElementFilter(filterNode), DOMCollection],\n    printFunctionName: false,\n    highlight: shouldHighlight(),\n    ...prettyFormatOptions\n  });\n  return maxLength !== undefined && dom.outerHTML.length > maxLength ? debugContent.slice(0, maxLength) + \"...\" : debugContent;\n}\nconst logDOM = function () {\n  const userCodeFrame = getUserCodeFrame();\n  if (userCodeFrame) {\n    console.log(prettyDOM(...arguments) + \"\\n\\n\" + userCodeFrame);\n  } else {\n    console.log(prettyDOM(...arguments));\n  }\n};\n\n// It would be cleaner for this to live inside './queries', but\n// other parts of the code assume that all exports from\n// './queries' are query functions.\nlet config = {\n  testIdAttribute: 'data-testid',\n  asyncUtilTimeout: 1000,\n  // asyncWrapper and advanceTimersWrapper is to support React's async `act` function.\n  // forcing react-testing-library to wrap all async functions would've been\n  // a total nightmare (consider wrapping every findBy* query and then also\n  // updating `within` so those would be wrapped too. Total nightmare).\n  // so we have this config option that's really only intended for\n  // react-testing-library to use. For that reason, this feature will remain\n  // undocumented.\n  asyncWrapper: cb => cb(),\n  unstable_advanceTimersWrapper: cb => cb(),\n  eventWrapper: cb => cb(),\n  // default value for the `hidden` option in `ByRole` queries\n  defaultHidden: false,\n  // default value for the `ignore` option in `ByText` queries\n  defaultIgnore: 'script, style',\n  // showOriginalStackTrace flag to show the full error stack traces for async errors\n  showOriginalStackTrace: false,\n  // throw errors w/ suggestions for better queries. Opt in so off by default.\n  throwSuggestions: false,\n  // called when getBy* queries fail. (message, container) => Error\n  getElementError(message, container) {\n    const prettifiedDOM = prettyDOM(container);\n    const error = new Error([message, \"Ignored nodes: comments, \" + config.defaultIgnore + \"\\n\" + prettifiedDOM].filter(Boolean).join('\\n\\n'));\n    error.name = 'TestingLibraryElementError';\n    return error;\n  },\n  _disableExpensiveErrorDiagnostics: false,\n  computedStyleSupportsPseudoElements: false\n};\nfunction runWithExpensiveErrorDiagnosticsDisabled(callback) {\n  try {\n    config._disableExpensiveErrorDiagnostics = true;\n    return callback();\n  } finally {\n    config._disableExpensiveErrorDiagnostics = false;\n  }\n}\nfunction configure(newConfig) {\n  if (typeof newConfig === 'function') {\n    // Pass the existing config out to the provided function\n    // and accept a delta in return\n    newConfig = newConfig(config);\n  }\n\n  // Merge the incoming config delta\n  config = {\n    ...config,\n    ...newConfig\n  };\n}\nfunction getConfig() {\n  return config;\n}\n\nconst labelledNodeNames = ['button', 'meter', 'output', 'progress', 'select', 'textarea', 'input'];\nfunction getTextContent(node) {\n  if (labelledNodeNames.includes(node.nodeName.toLowerCase())) {\n    return '';\n  }\n  if (node.nodeType === TEXT_NODE) return node.textContent;\n  return Array.from(node.childNodes).map(childNode => getTextContent(childNode)).join('');\n}\nfunction getLabelContent(element) {\n  let textContent;\n  if (element.tagName.toLowerCase() === 'label') {\n    textContent = getTextContent(element);\n  } else {\n    textContent = element.value || element.textContent;\n  }\n  return textContent;\n}\n\n// Based on https://github.com/eps1lon/dom-accessibility-api/pull/352\nfunction getRealLabels(element) {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- types are not aware of older browsers that don't implement `labels`\n  if (element.labels !== undefined) {\n    var _labels;\n    return (_labels = element.labels) != null ? _labels : [];\n  }\n  if (!isLabelable(element)) return [];\n  const labels = element.ownerDocument.querySelectorAll('label');\n  return Array.from(labels).filter(label => label.control === element);\n}\nfunction isLabelable(element) {\n  return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName) || element.tagName === 'INPUT' && element.getAttribute('type') !== 'hidden';\n}\nfunction getLabels(container, element, _temp) {\n  let {\n    selector = '*'\n  } = _temp === void 0 ? {} : _temp;\n  const ariaLabelledBy = element.getAttribute('aria-labelledby');\n  const labelsId = ariaLabelledBy ? ariaLabelledBy.split(' ') : [];\n  return labelsId.length ? labelsId.map(labelId => {\n    const labellingElement = container.querySelector(\"[id=\\\"\" + labelId + \"\\\"]\");\n    return labellingElement ? {\n      content: getLabelContent(labellingElement),\n      formControl: null\n    } : {\n      content: '',\n      formControl: null\n    };\n  }) : Array.from(getRealLabels(element)).map(label => {\n    const textToMatch = getLabelContent(label);\n    const formControlSelector = 'button, input, meter, output, progress, select, textarea';\n    const labelledFormControl = Array.from(label.querySelectorAll(formControlSelector)).filter(formControlElement => formControlElement.matches(selector))[0];\n    return {\n      content: textToMatch,\n      formControl: labelledFormControl\n    };\n  });\n}\n\nfunction assertNotNullOrUndefined(matcher) {\n  if (matcher === null || matcher === undefined) {\n    throw new Error( // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- implicitly converting `T` to `string`\n    \"It looks like \" + matcher + \" was passed instead of a matcher. Did you do something like getByText(\" + matcher + \")?\");\n  }\n}\nfunction fuzzyMatches(textToMatch, node, matcher, normalizer) {\n  if (typeof textToMatch !== 'string') {\n    return false;\n  }\n  assertNotNullOrUndefined(matcher);\n  const normalizedText = normalizer(textToMatch);\n  if (typeof matcher === 'string' || typeof matcher === 'number') {\n    return normalizedText.toLowerCase().includes(matcher.toString().toLowerCase());\n  } else if (typeof matcher === 'function') {\n    return matcher(normalizedText, node);\n  } else {\n    return matchRegExp(matcher, normalizedText);\n  }\n}\nfunction matches(textToMatch, node, matcher, normalizer) {\n  if (typeof textToMatch !== 'string') {\n    return false;\n  }\n  assertNotNullOrUndefined(matcher);\n  const normalizedText = normalizer(textToMatch);\n  if (matcher instanceof Function) {\n    return matcher(normalizedText, node);\n  } else if (matcher instanceof RegExp) {\n    return matchRegExp(matcher, normalizedText);\n  } else {\n    return normalizedText === String(matcher);\n  }\n}\nfunction getDefaultNormalizer(_temp) {\n  let {\n    trim = true,\n    collapseWhitespace = true\n  } = _temp === void 0 ? {} : _temp;\n  return text => {\n    let normalizedText = text;\n    normalizedText = trim ? normalizedText.trim() : normalizedText;\n    normalizedText = collapseWhitespace ? normalizedText.replace(/\\s+/g, ' ') : normalizedText;\n    return normalizedText;\n  };\n}\n\n/**\n * Constructs a normalizer to pass to functions in matches.js\n * @param {boolean|undefined} trim The user-specified value for `trim`, without\n * any defaulting having been applied\n * @param {boolean|undefined} collapseWhitespace The user-specified value for\n * `collapseWhitespace`, without any defaulting having been applied\n * @param {Function|undefined} normalizer The user-specified normalizer\n * @returns {Function} A normalizer\n */\n\nfunction makeNormalizer(_ref) {\n  let {\n    trim,\n    collapseWhitespace,\n    normalizer\n  } = _ref;\n  if (!normalizer) {\n    // No custom normalizer specified. Just use default.\n    return getDefaultNormalizer({\n      trim,\n      collapseWhitespace\n    });\n  }\n  if (typeof trim !== 'undefined' || typeof collapseWhitespace !== 'undefined') {\n    // They've also specified a value for trim or collapseWhitespace\n    throw new Error('trim and collapseWhitespace are not supported with a normalizer. ' + 'If you want to use the default trim and collapseWhitespace logic in your normalizer, ' + 'use \"getDefaultNormalizer({trim, collapseWhitespace})\" and compose that into your normalizer');\n  }\n  return normalizer;\n}\nfunction matchRegExp(matcher, text) {\n  const match = matcher.test(text);\n  if (matcher.global && matcher.lastIndex !== 0) {\n    console.warn(\"To match all elements we had to reset the lastIndex of the RegExp because the global flag is enabled. We encourage to remove the global flag from the RegExp.\");\n    matcher.lastIndex = 0;\n  }\n  return match;\n}\n\nfunction getNodeText(node) {\n  if (node.matches('input[type=submit], input[type=button], input[type=reset]')) {\n    return node.value;\n  }\n  return Array.from(node.childNodes).filter(child => child.nodeType === TEXT_NODE && Boolean(child.textContent)).map(c => c.textContent).join('');\n}\n\nconst elementRoleList = buildElementRoleList(aria_query__WEBPACK_IMPORTED_MODULE_2__.elementRoles);\n\n/**\n * @param {Element} element -\n * @returns {boolean} - `true` if `element` and its subtree are inaccessible\n */\nfunction isSubtreeInaccessible(element) {\n  if (element.hidden === true) {\n    return true;\n  }\n  if (element.getAttribute('aria-hidden') === 'true') {\n    return true;\n  }\n  const window = element.ownerDocument.defaultView;\n  if (window.getComputedStyle(element).display === 'none') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param {Element} element -\n * @param {object} [options] -\n * @param {function (element: Element): boolean} options.isSubtreeInaccessible -\n * can be used to return cached results from previous isSubtreeInaccessible calls\n * @returns {boolean} true if excluded, otherwise false\n */\nfunction isInaccessible(element, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible\n  } = options;\n  const window = element.ownerDocument.defaultView;\n  // since visibility is inherited we can exit early\n  if (window.getComputedStyle(element).visibility === 'hidden') {\n    return true;\n  }\n  let currentElement = element;\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement)) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\nfunction getImplicitAriaRoles(currentNode) {\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const {\n    match,\n    roles\n  } of elementRoleList) {\n    if (match(currentNode)) {\n      return [...roles];\n    }\n  }\n  return [];\n}\nfunction buildElementRoleList(elementRolesMap) {\n  function makeElementSelector(_ref) {\n    let {\n      name,\n      attributes\n    } = _ref;\n    return \"\" + name + attributes.map(_ref2 => {\n      let {\n        name: attributeName,\n        value,\n        constraints = []\n      } = _ref2;\n      const shouldNotExist = constraints.indexOf('undefined') !== -1;\n      const shouldBeNonEmpty = constraints.indexOf('set') !== -1;\n      const hasExplicitValue = typeof value !== 'undefined';\n      if (hasExplicitValue) {\n        return \"[\" + attributeName + \"=\\\"\" + value + \"\\\"]\";\n      } else if (shouldNotExist) {\n        return \":not([\" + attributeName + \"])\";\n      } else if (shouldBeNonEmpty) {\n        return \"[\" + attributeName + \"]:not([\" + attributeName + \"=\\\"\\\"])\";\n      }\n      return \"[\" + attributeName + \"]\";\n    }).join('');\n  }\n  function getSelectorSpecificity(_ref3) {\n    let {\n      attributes = []\n    } = _ref3;\n    return attributes.length;\n  }\n  function bySelectorSpecificity(_ref4, _ref5) {\n    let {\n      specificity: leftSpecificity\n    } = _ref4;\n    let {\n      specificity: rightSpecificity\n    } = _ref5;\n    return rightSpecificity - leftSpecificity;\n  }\n  function match(element) {\n    let {\n      attributes = []\n    } = element;\n\n    // https://github.com/testing-library/dom-testing-library/issues/814\n    const typeTextIndex = attributes.findIndex(attribute => attribute.value && attribute.name === 'type' && attribute.value === 'text');\n    if (typeTextIndex >= 0) {\n      // not using splice to not mutate the attributes array\n      attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];\n    }\n    const selector = makeElementSelector({\n      ...element,\n      attributes\n    });\n    return node => {\n      if (typeTextIndex >= 0 && node.type !== 'text') {\n        return false;\n      }\n      return node.matches(selector);\n    };\n  }\n  let result = [];\n\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const [element, roles] of elementRolesMap.entries()) {\n    result = [...result, {\n      match: match(element),\n      roles: Array.from(roles),\n      specificity: getSelectorSpecificity(element)\n    }];\n  }\n  return result.sort(bySelectorSpecificity);\n}\nfunction getRoles(container, _temp) {\n  let {\n    hidden = false\n  } = _temp === void 0 ? {} : _temp;\n  function flattenDOM(node) {\n    return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];\n  }\n  return flattenDOM(container).filter(element => {\n    return hidden === false ? isInaccessible(element) === false : true;\n  }).reduce((acc, node) => {\n    let roles = [];\n    // TODO: This violates html-aria which does not allow any role on every element\n    if (node.hasAttribute('role')) {\n      roles = node.getAttribute('role').split(' ').slice(0, 1);\n    } else {\n      roles = getImplicitAriaRoles(node);\n    }\n    return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? {\n      ...rolesAcc,\n      [role]: [...rolesAcc[role], node]\n    } : {\n      ...rolesAcc,\n      [role]: [node]\n    }, acc);\n  }, {});\n}\nfunction prettyRoles(dom, _ref6) {\n  let {\n    hidden,\n    includeDescription\n  } = _ref6;\n  const roles = getRoles(dom, {\n    hidden\n  });\n  // We prefer to skip generic role, we don't recommend it\n  return Object.entries(roles).filter(_ref7 => {\n    let [role] = _ref7;\n    return role !== 'generic';\n  }).map(_ref8 => {\n    let [role, elements] = _ref8;\n    const delimiterBar = '-'.repeat(50);\n    const elementsString = elements.map(el => {\n      const nameString = \"Name \\\"\" + (0,dom_accessibility_api__WEBPACK_IMPORTED_MODULE_1__.computeAccessibleName)(el, {\n        computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements\n      }) + \"\\\":\\n\";\n      const domString = prettyDOM(el.cloneNode(false));\n      if (includeDescription) {\n        const descriptionString = \"Description \\\"\" + (0,dom_accessibility_api__WEBPACK_IMPORTED_MODULE_1__.computeAccessibleDescription)(el, {\n          computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements\n        }) + \"\\\":\\n\";\n        return \"\" + nameString + descriptionString + domString;\n      }\n      return \"\" + nameString + domString;\n    }).join('\\n\\n');\n    return role + \":\\n\\n\" + elementsString + \"\\n\\n\" + delimiterBar;\n  }).join('\\n');\n}\nconst logRoles = function (dom, _temp2) {\n  let {\n    hidden = false\n  } = _temp2 === void 0 ? {} : _temp2;\n  return console.log(prettyRoles(dom, {\n    hidden\n  }));\n};\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)selected, undefined if not selectable\n */\nfunction computeAriaSelected(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-97\n  if (element.tagName === 'OPTION') {\n    return element.selected;\n  }\n\n  // explicit value\n  return checkBooleanAttribute(element, 'aria-selected');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean} -\n */\nfunction computeAriaBusy(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-busy\n  return element.getAttribute('aria-busy') === 'true';\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)checked, undefined if not checked-able\n */\nfunction computeAriaChecked(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-56\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-67\n  if ('indeterminate' in element && element.indeterminate) {\n    return undefined;\n  }\n  if ('checked' in element) {\n    return element.checked;\n  }\n\n  // explicit value\n  return checkBooleanAttribute(element, 'aria-checked');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)pressed, undefined if not press-able\n */\nfunction computeAriaPressed(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-pressed\n  return checkBooleanAttribute(element, 'aria-pressed');\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | string | null} -\n */\nfunction computeAriaCurrent(element) {\n  var _ref9, _checkBooleanAttribut;\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-current\n  return (_ref9 = (_checkBooleanAttribut = checkBooleanAttribute(element, 'aria-current')) != null ? _checkBooleanAttribut : element.getAttribute('aria-current')) != null ? _ref9 : false;\n}\n\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)expanded, undefined if not expand-able\n */\nfunction computeAriaExpanded(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\n  return checkBooleanAttribute(element, 'aria-expanded');\n}\nfunction checkBooleanAttribute(element, attribute) {\n  const attributeValue = element.getAttribute(attribute);\n  if (attributeValue === 'true') {\n    return true;\n  }\n  if (attributeValue === 'false') {\n    return false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} - number if implicit heading or aria-level present, otherwise undefined\n */\nfunction computeHeadingLevel(element) {\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  const implicitHeadingLevels = {\n    H1: 1,\n    H2: 2,\n    H3: 3,\n    H4: 4,\n    H5: 5,\n    H6: 6\n  };\n  // explicit aria-level value\n  // https://www.w3.org/TR/wai-aria-1.2/#aria-level\n  const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));\n  return ariaLevelAttribute || implicitHeadingLevels[element.tagName];\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueNow(element) {\n  const valueNow = element.getAttribute('aria-valuenow');\n  return valueNow === null ? undefined : +valueNow;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueMax(element) {\n  const valueMax = element.getAttribute('aria-valuemax');\n  return valueMax === null ? undefined : +valueMax;\n}\n\n/**\n * @param {Element} element -\n * @returns {number | undefined} -\n */\nfunction computeAriaValueMin(element) {\n  const valueMin = element.getAttribute('aria-valuemin');\n  return valueMin === null ? undefined : +valueMin;\n}\n\n/**\n * @param {Element} element -\n * @returns {string | undefined} -\n */\nfunction computeAriaValueText(element) {\n  const valueText = element.getAttribute('aria-valuetext');\n  return valueText === null ? undefined : valueText;\n}\n\nconst normalize = getDefaultNormalizer();\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nfunction getRegExpMatcher(string) {\n  return new RegExp(escapeRegExp(string.toLowerCase()), 'i');\n}\nfunction makeSuggestion(queryName, element, content, _ref) {\n  let {\n    variant,\n    name\n  } = _ref;\n  let warning = '';\n  const queryOptions = {};\n  const queryArgs = [['Role', 'TestId'].includes(queryName) ? content : getRegExpMatcher(content)];\n  if (name) {\n    queryOptions.name = getRegExpMatcher(name);\n  }\n  if (queryName === 'Role' && isInaccessible(element)) {\n    queryOptions.hidden = true;\n    warning = \"Element is inaccessible. This means that the element and all its children are invisible to screen readers.\\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\\n    \";\n  }\n  if (Object.keys(queryOptions).length > 0) {\n    queryArgs.push(queryOptions);\n  }\n  const queryMethod = variant + \"By\" + queryName;\n  return {\n    queryName,\n    queryMethod,\n    queryArgs,\n    variant,\n    warning,\n    toString() {\n      if (warning) {\n        console.warn(warning);\n      }\n      let [text, options] = queryArgs;\n      text = typeof text === 'string' ? \"'\" + text + \"'\" : text;\n      options = options ? \", { \" + Object.entries(options).map(_ref2 => {\n        let [k, v] = _ref2;\n        return k + \": \" + v;\n      }).join(', ') + \" }\" : '';\n      return queryMethod + \"(\" + text + options + \")\";\n    }\n  };\n}\nfunction canSuggest(currentMethod, requestedMethod, data) {\n  return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());\n}\nfunction getSuggestedQuery(element, variant, method) {\n  var _element$getAttribute, _getImplicitAriaRoles;\n  if (variant === void 0) {\n    variant = 'get';\n  }\n  // don't create suggestions for script and style elements\n  if (element.matches(getConfig().defaultIgnore)) {\n    return undefined;\n  }\n\n  //We prefer to suggest something else if the role is generic\n  const role = (_element$getAttribute = element.getAttribute('role')) != null ? _element$getAttribute : (_getImplicitAriaRoles = getImplicitAriaRoles(element)) == null ? void 0 : _getImplicitAriaRoles[0];\n  if (role !== 'generic' && canSuggest('Role', method, role)) {\n    return makeSuggestion('Role', element, role, {\n      variant,\n      name: (0,dom_accessibility_api__WEBPACK_IMPORTED_MODULE_1__.computeAccessibleName)(element, {\n        computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements\n      })\n    });\n  }\n  const labelText = getLabels(document, element).map(label => label.content).join(' ');\n  if (canSuggest('LabelText', method, labelText)) {\n    return makeSuggestion('LabelText', element, labelText, {\n      variant\n    });\n  }\n  const placeholderText = element.getAttribute('placeholder');\n  if (canSuggest('PlaceholderText', method, placeholderText)) {\n    return makeSuggestion('PlaceholderText', element, placeholderText, {\n      variant\n    });\n  }\n  const textContent = normalize(getNodeText(element));\n  if (canSuggest('Text', method, textContent)) {\n    return makeSuggestion('Text', element, textContent, {\n      variant\n    });\n  }\n  if (canSuggest('DisplayValue', method, element.value)) {\n    return makeSuggestion('DisplayValue', element, normalize(element.value), {\n      variant\n    });\n  }\n  const alt = element.getAttribute('alt');\n  if (canSuggest('AltText', method, alt)) {\n    return makeSuggestion('AltText', element, alt, {\n      variant\n    });\n  }\n  const title = element.getAttribute('title');\n  if (canSuggest('Title', method, title)) {\n    return makeSuggestion('Title', element, title, {\n      variant\n    });\n  }\n  const testId = element.getAttribute(getConfig().testIdAttribute);\n  if (canSuggest('TestId', method, testId)) {\n    return makeSuggestion('TestId', element, testId, {\n      variant\n    });\n  }\n  return undefined;\n}\n\n// This is so the stack trace the developer sees is one that's\n// closer to their code (because async stack traces are hard to follow).\nfunction copyStackTrace(target, source) {\n  target.stack = source.stack.replace(source.message, target.message);\n}\nfunction waitFor(callback, _ref) {\n  let {\n    container = getDocument(),\n    timeout = getConfig().asyncUtilTimeout,\n    showOriginalStackTrace = getConfig().showOriginalStackTrace,\n    stackTraceError,\n    interval = 50,\n    onTimeout = error => {\n      Object.defineProperty(error, 'message', {\n        value: getConfig().getElementError(error.message, container).message\n      });\n      return error;\n    },\n    mutationObserverOptions = {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      characterData: true\n    }\n  } = _ref;\n  if (typeof callback !== 'function') {\n    throw new TypeError('Received `callback` arg must be a function');\n  }\n  return new Promise(async (resolve, reject) => {\n    let lastError, intervalId, observer;\n    let finished = false;\n    let promiseStatus = 'idle';\n    const overallTimeoutTimer = setTimeout(handleTimeout, timeout);\n    const usingJestFakeTimers = jestFakeTimersAreEnabled();\n    if (usingJestFakeTimers) {\n      const {\n        unstable_advanceTimersWrapper: advanceTimersWrapper\n      } = getConfig();\n      checkCallback();\n      // this is a dangerous rule to disable because it could lead to an\n      // infinite loop. However, eslint isn't smart enough to know that we're\n      // setting finished inside `onDone` which will be called when we're done\n      // waiting or when we've timed out.\n      // eslint-disable-next-line no-unmodified-loop-condition\n      while (!finished) {\n        if (!jestFakeTimersAreEnabled()) {\n          const error = new Error(\"Changed from using fake timers to real timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to real timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830\");\n          if (!showOriginalStackTrace) copyStackTrace(error, stackTraceError);\n          reject(error);\n          return;\n        }\n\n        // In this rare case, we *need* to wait for in-flight promises\n        // to resolve before continuing. We don't need to take advantage\n        // of parallelization so we're fine.\n        // https://stackoverflow.com/a/59243586/971592\n        // eslint-disable-next-line no-await-in-loop\n        await advanceTimersWrapper(async () => {\n          // we *could* (maybe should?) use `advanceTimersToNextTimer` but it's\n          // possible that could make this loop go on forever if someone is using\n          // third party code that's setting up recursive timers so rapidly that\n          // the user's timer's don't get a chance to resolve. So we'll advance\n          // by an interval instead. (We have a test for this case).\n          jest.advanceTimersByTime(interval);\n        });\n\n        // Could have timed-out\n        if (finished) {\n          break;\n        }\n        // It's really important that checkCallback is run *before* we flush\n        // in-flight promises. To be honest, I'm not sure why, and I can't quite\n        // think of a way to reproduce the problem in a test, but I spent\n        // an entire day banging my head against a wall on this.\n        checkCallback();\n      }\n    } else {\n      try {\n        checkContainerType(container);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n      intervalId = setInterval(checkRealTimersCallback, interval);\n      const {\n        MutationObserver\n      } = getWindowFromNode(container);\n      observer = new MutationObserver(checkRealTimersCallback);\n      observer.observe(container, mutationObserverOptions);\n      checkCallback();\n    }\n    function onDone(error, result) {\n      finished = true;\n      clearTimeout(overallTimeoutTimer);\n      if (!usingJestFakeTimers) {\n        clearInterval(intervalId);\n        observer.disconnect();\n      }\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    }\n    function checkRealTimersCallback() {\n      if (jestFakeTimersAreEnabled()) {\n        const error = new Error(\"Changed from using real timers to fake timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to fake timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830\");\n        if (!showOriginalStackTrace) copyStackTrace(error, stackTraceError);\n        return reject(error);\n      } else {\n        return checkCallback();\n      }\n    }\n    function checkCallback() {\n      if (promiseStatus === 'pending') return;\n      try {\n        const result = runWithExpensiveErrorDiagnosticsDisabled(callback);\n        if (typeof (result == null ? void 0 : result.then) === 'function') {\n          promiseStatus = 'pending';\n          result.then(resolvedValue => {\n            promiseStatus = 'resolved';\n            onDone(null, resolvedValue);\n          }, rejectedValue => {\n            promiseStatus = 'rejected';\n            lastError = rejectedValue;\n          });\n        } else {\n          onDone(null, result);\n        }\n        // If `callback` throws, wait for the next mutation, interval, or timeout.\n      } catch (error) {\n        // Save the most recent callback error to reject the promise with it in the event of a timeout\n        lastError = error;\n      }\n    }\n    function handleTimeout() {\n      let error;\n      if (lastError) {\n        error = lastError;\n        if (!showOriginalStackTrace && error.name === 'TestingLibraryElementError') {\n          copyStackTrace(error, stackTraceError);\n        }\n      } else {\n        error = new Error('Timed out in waitFor.');\n        if (!showOriginalStackTrace) {\n          copyStackTrace(error, stackTraceError);\n        }\n      }\n      onDone(onTimeout(error), null);\n    }\n  });\n}\nfunction waitForWrapper(callback, options) {\n  // create the error here so its stack trace is as close to the\n  // calling code as possible\n  const stackTraceError = new Error('STACK_TRACE_MESSAGE');\n  return getConfig().asyncWrapper(() => waitFor(callback, {\n    stackTraceError,\n    ...options\n  }));\n}\n\n/*\neslint\n  max-lines-per-function: [\"error\", {\"max\": 200}],\n*/\n\nfunction getElementError(message, container) {\n  return getConfig().getElementError(message, container);\n}\nfunction getMultipleElementsFoundError(message, container) {\n  return getElementError(message + \"\\n\\n(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).\", container);\n}\nfunction queryAllByAttribute(attribute, container, text, _temp) {\n  let {\n    exact = true,\n    collapseWhitespace,\n    trim,\n    normalizer\n  } = _temp === void 0 ? {} : _temp;\n  const matcher = exact ? matches : fuzzyMatches;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll(\"[\" + attribute + \"]\")).filter(node => matcher(node.getAttribute(attribute), node, text, matchNormalizer));\n}\nfunction queryByAttribute(attribute, container, text, options) {\n  const els = queryAllByAttribute(attribute, container, text, options);\n  if (els.length > 1) {\n    throw getMultipleElementsFoundError(\"Found multiple elements by [\" + attribute + \"=\" + text + \"]\", container);\n  }\n  return els[0] || null;\n}\n\n// this accepts a query function and returns a function which throws an error\n// if more than one elements is returned, otherwise it returns the first\n// element or null\nfunction makeSingleQuery(allQuery, getMultipleError) {\n  return function (container) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const els = allQuery(container, ...args);\n    if (els.length > 1) {\n      const elementStrings = els.map(element => getElementError(null, element).message).join('\\n\\n');\n      throw getMultipleElementsFoundError(getMultipleError(container, ...args) + \"\\n\\nHere are the matching elements:\\n\\n\" + elementStrings, container);\n    }\n    return els[0] || null;\n  };\n}\nfunction getSuggestionError(suggestion, container) {\n  return getConfig().getElementError(\"A better query is available, try this:\\n\" + suggestion.toString() + \"\\n\", container);\n}\n\n// this accepts a query function and returns a function which throws an error\n// if an empty list of elements is returned\nfunction makeGetAllQuery(allQuery, getMissingError) {\n  return function (container) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    const els = allQuery(container, ...args);\n    if (!els.length) {\n      throw getConfig().getElementError(getMissingError(container, ...args), container);\n    }\n    return els;\n  };\n}\n\n// this accepts a getter query function and returns a function which calls\n// waitFor and passing a function which invokes the getter.\nfunction makeFindQuery(getter) {\n  return (container, text, options, waitForOptions) => {\n    return waitForWrapper(() => {\n      return getter(container, text, options);\n    }, {\n      container,\n      ...waitForOptions\n    });\n  };\n}\nconst wrapSingleQueryWithSuggestion = (query, queryAllByName, variant) => function (container) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  const element = query(container, ...args);\n  const [{\n    suggest = getConfig().throwSuggestions\n  } = {}] = args.slice(-1);\n  if (element && suggest) {\n    const suggestion = getSuggestedQuery(element, variant);\n    if (suggestion && !queryAllByName.endsWith(suggestion.queryName)) {\n      throw getSuggestionError(suggestion.toString(), container);\n    }\n  }\n  return element;\n};\nconst wrapAllByQueryWithSuggestion = (query, queryAllByName, variant) => function (container) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  const els = query(container, ...args);\n  const [{\n    suggest = getConfig().throwSuggestions\n  } = {}] = args.slice(-1);\n  if (els.length && suggest) {\n    // get a unique list of all suggestion messages.  We are only going to make a suggestion if\n    // all the suggestions are the same\n    const uniqueSuggestionMessages = [...new Set(els.map(element => {\n      var _getSuggestedQuery;\n      return (_getSuggestedQuery = getSuggestedQuery(element, variant)) == null ? void 0 : _getSuggestedQuery.toString();\n    }))];\n    if (\n    // only want to suggest if all the els have the same suggestion.\n    uniqueSuggestionMessages.length === 1 && !queryAllByName.endsWith(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- TODO: Can this be null at runtime?\n    getSuggestedQuery(els[0], variant).queryName)) {\n      throw getSuggestionError(uniqueSuggestionMessages[0], container);\n    }\n  }\n  return els;\n};\n\n// TODO: This deviates from the published declarations\n// However, the implementation always required a dyadic (after `container`) not variadic `queryAllBy` considering the implementation of `makeFindQuery`\n// This is at least statically true and can be verified by accepting `QueryMethod<Arguments, HTMLElement[]>`\nfunction buildQueries(queryAllBy, getMultipleError, getMissingError) {\n  const queryBy = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy, getMultipleError), queryAllBy.name, 'query');\n  const getAllBy = makeGetAllQuery(queryAllBy, getMissingError);\n  const getBy = makeSingleQuery(getAllBy, getMultipleError);\n  const getByWithSuggestions = wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'get');\n  const getAllWithSuggestions = wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name.replace('query', 'get'), 'getAll');\n  const findAllBy = makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name, 'findAll'));\n  const findBy = makeFindQuery(wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'find'));\n  return [queryBy, getAllWithSuggestions, getByWithSuggestions, findAllBy, findBy];\n}\n\nvar queryHelpers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getElementError: getElementError,\n  wrapAllByQueryWithSuggestion: wrapAllByQueryWithSuggestion,\n  wrapSingleQueryWithSuggestion: wrapSingleQueryWithSuggestion,\n  getMultipleElementsFoundError: getMultipleElementsFoundError,\n  queryAllByAttribute: queryAllByAttribute,\n  queryByAttribute: queryByAttribute,\n  makeSingleQuery: makeSingleQuery,\n  makeGetAllQuery: makeGetAllQuery,\n  makeFindQuery: makeFindQuery,\n  buildQueries: buildQueries\n});\n\nfunction queryAllLabels(container) {\n  return Array.from(container.querySelectorAll('label,input')).map(node => {\n    return {\n      node,\n      textToMatch: getLabelContent(node)\n    };\n  }).filter(_ref => {\n    let {\n      textToMatch\n    } = _ref;\n    return textToMatch !== null;\n  });\n}\nconst queryAllLabelsByText = function (container, text, _temp) {\n  let {\n    exact = true,\n    trim,\n    collapseWhitespace,\n    normalizer\n  } = _temp === void 0 ? {} : _temp;\n  const matcher = exact ? matches : fuzzyMatches;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const textToMatchByLabels = queryAllLabels(container);\n  return textToMatchByLabels.filter(_ref2 => {\n    let {\n      node,\n      textToMatch\n    } = _ref2;\n    return matcher(textToMatch, node, text, matchNormalizer);\n  }).map(_ref3 => {\n    let {\n      node\n    } = _ref3;\n    return node;\n  });\n};\nconst queryAllByLabelText = function (container, text, _temp2) {\n  let {\n    selector = '*',\n    exact = true,\n    collapseWhitespace,\n    trim,\n    normalizer\n  } = _temp2 === void 0 ? {} : _temp2;\n  checkContainerType(container);\n  const matcher = exact ? matches : fuzzyMatches;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const matchingLabelledElements = Array.from(container.querySelectorAll('*')).filter(element => {\n    return getRealLabels(element).length || element.hasAttribute('aria-labelledby');\n  }).reduce((labelledElements, labelledElement) => {\n    const labelList = getLabels(container, labelledElement, {\n      selector\n    });\n    labelList.filter(label => Boolean(label.formControl)).forEach(label => {\n      if (matcher(label.content, label.formControl, text, matchNormalizer) && label.formControl) {\n        labelledElements.push(label.formControl);\n      }\n    });\n    const labelsValue = labelList.filter(label => Boolean(label.content)).map(label => label.content);\n    if (matcher(labelsValue.join(' '), labelledElement, text, matchNormalizer)) {\n      labelledElements.push(labelledElement);\n    }\n    if (labelsValue.length > 1) {\n      labelsValue.forEach((labelValue, index) => {\n        if (matcher(labelValue, labelledElement, text, matchNormalizer)) {\n          labelledElements.push(labelledElement);\n        }\n        const labelsFiltered = [...labelsValue];\n        labelsFiltered.splice(index, 1);\n        if (labelsFiltered.length > 1) {\n          if (matcher(labelsFiltered.join(' '), labelledElement, text, matchNormalizer)) {\n            labelledElements.push(labelledElement);\n          }\n        }\n      });\n    }\n    return labelledElements;\n  }, []).concat(queryAllByAttribute('aria-label', container, text, {\n    exact,\n    normalizer: matchNormalizer\n  }));\n  return Array.from(new Set(matchingLabelledElements)).filter(element => element.matches(selector));\n};\n\n// the getAll* query would normally look like this:\n// const getAllByLabelText = makeGetAllQuery(\n//   queryAllByLabelText,\n//   (c, text) => `Unable to find a label with the text of: ${text}`,\n// )\n// however, we can give a more helpful error message than the generic one,\n// so we're writing this one out by hand.\nconst getAllByLabelText = function (container, text) {\n  for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    rest[_key - 2] = arguments[_key];\n  }\n  const els = queryAllByLabelText(container, text, ...rest);\n  if (!els.length) {\n    const labels = queryAllLabelsByText(container, text, ...rest);\n    if (labels.length) {\n      const tagNames = labels.map(label => getTagNameOfElementAssociatedWithLabelViaFor(container, label)).filter(tagName => !!tagName);\n      if (tagNames.length) {\n        throw getConfig().getElementError(tagNames.map(tagName => \"Found a label with the text of: \" + text + \", however the element associated with this label (<\" + tagName + \" />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <\" + tagName + \" />, you can use aria-label or aria-labelledby instead.\").join('\\n\\n'), container);\n      } else {\n        throw getConfig().getElementError(\"Found a label with the text of: \" + text + \", however no form control was found associated to that label. Make sure you're using the \\\"for\\\" attribute or \\\"aria-labelledby\\\" attribute correctly.\", container);\n      }\n    } else {\n      throw getConfig().getElementError(\"Unable to find a label with the text of: \" + text, container);\n    }\n  }\n  return els;\n};\nfunction getTagNameOfElementAssociatedWithLabelViaFor(container, label) {\n  const htmlFor = label.getAttribute('for');\n  if (!htmlFor) {\n    return null;\n  }\n  const element = container.querySelector(\"[id=\\\"\" + htmlFor + \"\\\"]\");\n  return element ? element.tagName.toLowerCase() : null;\n}\n\n// the reason mentioned above is the same reason we're not using buildQueries\nconst getMultipleError$7 = (c, text) => \"Found multiple elements with the text of: \" + text;\nconst queryByLabelText = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllByLabelText, getMultipleError$7), queryAllByLabelText.name, 'query');\nconst getByLabelText = makeSingleQuery(getAllByLabelText, getMultipleError$7);\nconst findAllByLabelText = makeFindQuery(wrapAllByQueryWithSuggestion(getAllByLabelText, getAllByLabelText.name, 'findAll'));\nconst findByLabelText = makeFindQuery(wrapSingleQueryWithSuggestion(getByLabelText, getAllByLabelText.name, 'find'));\nconst getAllByLabelTextWithSuggestions = wrapAllByQueryWithSuggestion(getAllByLabelText, getAllByLabelText.name, 'getAll');\nconst getByLabelTextWithSuggestions = wrapSingleQueryWithSuggestion(getByLabelText, getAllByLabelText.name, 'get');\nconst queryAllByLabelTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByLabelText, queryAllByLabelText.name, 'queryAll');\n\nconst queryAllByPlaceholderText = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  checkContainerType(args[0]);\n  return queryAllByAttribute('placeholder', ...args);\n};\nconst getMultipleError$6 = (c, text) => \"Found multiple elements with the placeholder text of: \" + text;\nconst getMissingError$6 = (c, text) => \"Unable to find an element with the placeholder text of: \" + text;\nconst queryAllByPlaceholderTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByPlaceholderText, queryAllByPlaceholderText.name, 'queryAll');\nconst [queryByPlaceholderText, getAllByPlaceholderText, getByPlaceholderText, findAllByPlaceholderText, findByPlaceholderText] = buildQueries(queryAllByPlaceholderText, getMultipleError$6, getMissingError$6);\n\nconst queryAllByText = function (container, text, _temp) {\n  let {\n    selector = '*',\n    exact = true,\n    collapseWhitespace,\n    trim,\n    ignore = getConfig().defaultIgnore,\n    normalizer\n  } = _temp === void 0 ? {} : _temp;\n  checkContainerType(container);\n  const matcher = exact ? matches : fuzzyMatches;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  let baseArray = [];\n  if (typeof container.matches === 'function' && container.matches(selector)) {\n    baseArray = [container];\n  }\n  return [...baseArray, ...Array.from(container.querySelectorAll(selector))]\n  // TODO: `matches` according lib.dom.d.ts can get only `string` but according our code it can handle also boolean :)\n  .filter(node => !ignore || !node.matches(ignore)).filter(node => matcher(getNodeText(node), node, text, matchNormalizer));\n};\nconst getMultipleError$5 = (c, text) => \"Found multiple elements with the text: \" + text;\nconst getMissingError$5 = function (c, text, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    collapseWhitespace,\n    trim,\n    normalizer,\n    selector\n  } = options;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const normalizedText = matchNormalizer(text.toString());\n  const isNormalizedDifferent = normalizedText !== text.toString();\n  const isCustomSelector = (selector != null ? selector : '*') !== '*';\n  return \"Unable to find an element with the text: \" + (isNormalizedDifferent ? normalizedText + \" (normalized from '\" + text + \"')\" : text) + (isCustomSelector ? \", which matches selector '\" + selector + \"'\" : '') + \". This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\";\n};\nconst queryAllByTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByText, queryAllByText.name, 'queryAll');\nconst [queryByText, getAllByText, getByText, findAllByText, findByText] = buildQueries(queryAllByText, getMultipleError$5, getMissingError$5);\n\nconst queryAllByDisplayValue = function (container, value, _temp) {\n  let {\n    exact = true,\n    collapseWhitespace,\n    trim,\n    normalizer\n  } = _temp === void 0 ? {} : _temp;\n  checkContainerType(container);\n  const matcher = exact ? matches : fuzzyMatches;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll(\"input,textarea,select\")).filter(node => {\n    if (node.tagName === 'SELECT') {\n      const selectedOptions = Array.from(node.options).filter(option => option.selected);\n      return selectedOptions.some(optionNode => matcher(getNodeText(optionNode), optionNode, value, matchNormalizer));\n    } else {\n      return matcher(node.value, node, value, matchNormalizer);\n    }\n  });\n};\nconst getMultipleError$4 = (c, value) => \"Found multiple elements with the display value: \" + value + \".\";\nconst getMissingError$4 = (c, value) => \"Unable to find an element with the display value: \" + value + \".\";\nconst queryAllByDisplayValueWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByDisplayValue, queryAllByDisplayValue.name, 'queryAll');\nconst [queryByDisplayValue, getAllByDisplayValue, getByDisplayValue, findAllByDisplayValue, findByDisplayValue] = buildQueries(queryAllByDisplayValue, getMultipleError$4, getMissingError$4);\n\n// Valid tags are img, input, area and custom elements\nconst VALID_TAG_REGEXP = /^(img|input|area|.+-.+)$/i;\nconst queryAllByAltText = function (container, alt, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  checkContainerType(container);\n  return queryAllByAttribute('alt', container, alt, options).filter(node => VALID_TAG_REGEXP.test(node.tagName));\n};\nconst getMultipleError$3 = (c, alt) => \"Found multiple elements with the alt text: \" + alt;\nconst getMissingError$3 = (c, alt) => \"Unable to find an element with the alt text: \" + alt;\nconst queryAllByAltTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByAltText, queryAllByAltText.name, 'queryAll');\nconst [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = buildQueries(queryAllByAltText, getMultipleError$3, getMissingError$3);\n\nconst isSvgTitle = node => {\n  var _node$parentElement;\n  return node.tagName.toLowerCase() === 'title' && ((_node$parentElement = node.parentElement) == null ? void 0 : _node$parentElement.tagName.toLowerCase()) === 'svg';\n};\nconst queryAllByTitle = function (container, text, _temp) {\n  let {\n    exact = true,\n    collapseWhitespace,\n    trim,\n    normalizer\n  } = _temp === void 0 ? {} : _temp;\n  checkContainerType(container);\n  const matcher = exact ? matches : fuzzyMatches;\n  const matchNormalizer = makeNormalizer({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll('[title], svg > title')).filter(node => matcher(node.getAttribute('title'), node, text, matchNormalizer) || isSvgTitle(node) && matcher(getNodeText(node), node, text, matchNormalizer));\n};\nconst getMultipleError$2 = (c, title) => \"Found multiple elements with the title: \" + title + \".\";\nconst getMissingError$2 = (c, title) => \"Unable to find an element with the title: \" + title + \".\";\nconst queryAllByTitleWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByTitle, queryAllByTitle.name, 'queryAll');\nconst [queryByTitle, getAllByTitle, getByTitle, findAllByTitle, findByTitle] = buildQueries(queryAllByTitle, getMultipleError$2, getMissingError$2);\n\n/* eslint-disable complexity */\nconst queryAllByRole = function (container, role, _temp) {\n  let {\n    hidden = getConfig().defaultHidden,\n    name,\n    description,\n    queryFallbacks = false,\n    selected,\n    busy,\n    checked,\n    pressed,\n    current,\n    level,\n    expanded,\n    value: {\n      now: valueNow,\n      min: valueMin,\n      max: valueMax,\n      text: valueText\n    } = {}\n  } = _temp === void 0 ? {} : _temp;\n  checkContainerType(container);\n  if (selected !== undefined) {\n    var _allRoles$get;\n    // guard against unknown roles\n    if (((_allRoles$get = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get.props['aria-selected']) === undefined) {\n      throw new Error(\"\\\"aria-selected\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (busy !== undefined) {\n    var _allRoles$get2;\n    // guard against unknown roles\n    if (((_allRoles$get2 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get2.props['aria-busy']) === undefined) {\n      throw new Error(\"\\\"aria-busy\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (checked !== undefined) {\n    var _allRoles$get3;\n    // guard against unknown roles\n    if (((_allRoles$get3 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get3.props['aria-checked']) === undefined) {\n      throw new Error(\"\\\"aria-checked\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (pressed !== undefined) {\n    var _allRoles$get4;\n    // guard against unknown roles\n    if (((_allRoles$get4 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get4.props['aria-pressed']) === undefined) {\n      throw new Error(\"\\\"aria-pressed\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (current !== undefined) {\n    var _allRoles$get5;\n    /* istanbul ignore next */\n    // guard against unknown roles\n    // All currently released ARIA versions support `aria-current` on all roles.\n    // Leaving this for symmetry and forward compatibility\n    if (((_allRoles$get5 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get5.props['aria-current']) === undefined) {\n      throw new Error(\"\\\"aria-current\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (level !== undefined) {\n    // guard against using `level` option with any role other than `heading`\n    if (role !== 'heading') {\n      throw new Error(\"Role \\\"\" + role + \"\\\" cannot have \\\"level\\\" property.\");\n    }\n  }\n  if (valueNow !== undefined) {\n    var _allRoles$get6;\n    // guard against unknown roles\n    if (((_allRoles$get6 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get6.props['aria-valuenow']) === undefined) {\n      throw new Error(\"\\\"aria-valuenow\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (valueMax !== undefined) {\n    var _allRoles$get7;\n    // guard against unknown roles\n    if (((_allRoles$get7 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get7.props['aria-valuemax']) === undefined) {\n      throw new Error(\"\\\"aria-valuemax\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (valueMin !== undefined) {\n    var _allRoles$get8;\n    // guard against unknown roles\n    if (((_allRoles$get8 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get8.props['aria-valuemin']) === undefined) {\n      throw new Error(\"\\\"aria-valuemin\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (valueText !== undefined) {\n    var _allRoles$get9;\n    // guard against unknown roles\n    if (((_allRoles$get9 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get9.props['aria-valuetext']) === undefined) {\n      throw new Error(\"\\\"aria-valuetext\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  if (expanded !== undefined) {\n    var _allRoles$get10;\n    // guard against unknown roles\n    if (((_allRoles$get10 = aria_query__WEBPACK_IMPORTED_MODULE_2__.roles.get(role)) == null ? void 0 : _allRoles$get10.props['aria-expanded']) === undefined) {\n      throw new Error(\"\\\"aria-expanded\\\" is not supported on role \\\"\" + role + \"\\\".\");\n    }\n  }\n  const subtreeIsInaccessibleCache = new WeakMap();\n  function cachedIsSubtreeInaccessible(element) {\n    if (!subtreeIsInaccessibleCache.has(element)) {\n      subtreeIsInaccessibleCache.set(element, isSubtreeInaccessible(element));\n    }\n    return subtreeIsInaccessibleCache.get(element);\n  }\n  return Array.from(container.querySelectorAll(\n  // Only query elements that can be matched by the following filters\n  makeRoleSelector(role))).filter(node => {\n    const isRoleSpecifiedExplicitly = node.hasAttribute('role');\n    if (isRoleSpecifiedExplicitly) {\n      const roleValue = node.getAttribute('role');\n      if (queryFallbacks) {\n        return roleValue.split(' ').filter(Boolean).some(roleAttributeToken => roleAttributeToken === role);\n      }\n      // other wise only send the first token to match\n      const [firstRoleAttributeToken] = roleValue.split(' ');\n      return firstRoleAttributeToken === role;\n    }\n    const implicitRoles = getImplicitAriaRoles(node);\n    return implicitRoles.some(implicitRole => {\n      return implicitRole === role;\n    });\n  }).filter(element => {\n    if (selected !== undefined) {\n      return selected === computeAriaSelected(element);\n    }\n    if (busy !== undefined) {\n      return busy === computeAriaBusy(element);\n    }\n    if (checked !== undefined) {\n      return checked === computeAriaChecked(element);\n    }\n    if (pressed !== undefined) {\n      return pressed === computeAriaPressed(element);\n    }\n    if (current !== undefined) {\n      return current === computeAriaCurrent(element);\n    }\n    if (expanded !== undefined) {\n      return expanded === computeAriaExpanded(element);\n    }\n    if (level !== undefined) {\n      return level === computeHeadingLevel(element);\n    }\n    if (valueNow !== undefined || valueMax !== undefined || valueMin !== undefined || valueText !== undefined) {\n      let valueMatches = true;\n      if (valueNow !== undefined) {\n        valueMatches && (valueMatches = valueNow === computeAriaValueNow(element));\n      }\n      if (valueMax !== undefined) {\n        valueMatches && (valueMatches = valueMax === computeAriaValueMax(element));\n      }\n      if (valueMin !== undefined) {\n        valueMatches && (valueMatches = valueMin === computeAriaValueMin(element));\n      }\n      if (valueText !== undefined) {\n        var _computeAriaValueText;\n        valueMatches && (valueMatches = matches((_computeAriaValueText = computeAriaValueText(element)) != null ? _computeAriaValueText : null, element, valueText, text => text));\n      }\n      return valueMatches;\n    }\n    // don't care if aria attributes are unspecified\n    return true;\n  }).filter(element => {\n    if (name === undefined) {\n      // Don't care\n      return true;\n    }\n    return matches((0,dom_accessibility_api__WEBPACK_IMPORTED_MODULE_1__.computeAccessibleName)(element, {\n      computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements\n    }), element, name, text => text);\n  }).filter(element => {\n    if (description === undefined) {\n      // Don't care\n      return true;\n    }\n    return matches((0,dom_accessibility_api__WEBPACK_IMPORTED_MODULE_1__.computeAccessibleDescription)(element, {\n      computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements\n    }), element, description, text => text);\n  }).filter(element => {\n    return hidden === false ? isInaccessible(element, {\n      isSubtreeInaccessible: cachedIsSubtreeInaccessible\n    }) === false : true;\n  });\n};\nfunction makeRoleSelector(role) {\n  var _roleElements$get;\n  const explicitRoleSelector = \"*[role~=\\\"\" + role + \"\\\"]\";\n  const roleRelations = (_roleElements$get = aria_query__WEBPACK_IMPORTED_MODULE_2__.roleElements.get(role)) != null ? _roleElements$get : new Set();\n  const implicitRoleSelectors = new Set(Array.from(roleRelations).map(_ref => {\n    let {\n      name\n    } = _ref;\n    return name;\n  }));\n\n  // Current transpilation config sometimes assumes `...` is always applied to arrays.\n  // `...` is equivalent to `Array.prototype.concat` for arrays.\n  // If you replace this code with `[explicitRoleSelector, ...implicitRoleSelectors]`, make sure every transpilation target retains the `...` in favor of `Array.prototype.concat`.\n  return [explicitRoleSelector].concat(Array.from(implicitRoleSelectors)).join(',');\n}\nconst getNameHint = name => {\n  let nameHint = '';\n  if (name === undefined) {\n    nameHint = '';\n  } else if (typeof name === 'string') {\n    nameHint = \" and name \\\"\" + name + \"\\\"\";\n  } else {\n    nameHint = \" and name `\" + name + \"`\";\n  }\n  return nameHint;\n};\nconst getMultipleError$1 = function (c, role, _temp2) {\n  let {\n    name\n  } = _temp2 === void 0 ? {} : _temp2;\n  return \"Found multiple elements with the role \\\"\" + role + \"\\\"\" + getNameHint(name);\n};\nconst getMissingError$1 = function (container, role, _temp3) {\n  let {\n    hidden = getConfig().defaultHidden,\n    name,\n    description\n  } = _temp3 === void 0 ? {} : _temp3;\n  if (getConfig()._disableExpensiveErrorDiagnostics) {\n    return \"Unable to find role=\\\"\" + role + \"\\\"\" + getNameHint(name);\n  }\n  let roles = '';\n  Array.from(container.children).forEach(childElement => {\n    roles += prettyRoles(childElement, {\n      hidden,\n      includeDescription: description !== undefined\n    });\n  });\n  let roleMessage;\n  if (roles.length === 0) {\n    if (hidden === false) {\n      roleMessage = 'There are no accessible roles. But there might be some inaccessible roles. ' + 'If you wish to access them, then set the `hidden` option to `true`. ' + 'Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole';\n    } else {\n      roleMessage = 'There are no available roles.';\n    }\n  } else {\n    roleMessage = (\"\\nHere are the \" + (hidden === false ? 'accessible' : 'available') + \" roles:\\n\\n  \" + roles.replace(/\\n/g, '\\n  ').replace(/\\n\\s\\s\\n/g, '\\n\\n') + \"\\n\").trim();\n  }\n  let nameHint = '';\n  if (name === undefined) {\n    nameHint = '';\n  } else if (typeof name === 'string') {\n    nameHint = \" and name \\\"\" + name + \"\\\"\";\n  } else {\n    nameHint = \" and name `\" + name + \"`\";\n  }\n  let descriptionHint = '';\n  if (description === undefined) {\n    descriptionHint = '';\n  } else if (typeof description === 'string') {\n    descriptionHint = \" and description \\\"\" + description + \"\\\"\";\n  } else {\n    descriptionHint = \" and description `\" + description + \"`\";\n  }\n  return (\"\\nUnable to find an \" + (hidden === false ? 'accessible ' : '') + \"element with the role \\\"\" + role + \"\\\"\" + nameHint + descriptionHint + \"\\n\\n\" + roleMessage).trim();\n};\nconst queryAllByRoleWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByRole, queryAllByRole.name, 'queryAll');\nconst [queryByRole, getAllByRole, getByRole, findAllByRole, findByRole] = buildQueries(queryAllByRole, getMultipleError$1, getMissingError$1);\n\nconst getTestIdAttribute = () => getConfig().testIdAttribute;\nconst queryAllByTestId = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  checkContainerType(args[0]);\n  return queryAllByAttribute(getTestIdAttribute(), ...args);\n};\nconst getMultipleError = (c, id) => \"Found multiple elements by: [\" + getTestIdAttribute() + \"=\\\"\" + id + \"\\\"]\";\nconst getMissingError = (c, id) => \"Unable to find an element by: [\" + getTestIdAttribute() + \"=\\\"\" + id + \"\\\"]\";\nconst queryAllByTestIdWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByTestId, queryAllByTestId.name, 'queryAll');\nconst [queryByTestId, getAllByTestId, getByTestId, findAllByTestId, findByTestId] = buildQueries(queryAllByTestId, getMultipleError, getMissingError);\n\nvar queries = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  queryAllByLabelText: queryAllByLabelTextWithSuggestions,\n  queryByLabelText: queryByLabelText,\n  getAllByLabelText: getAllByLabelTextWithSuggestions,\n  getByLabelText: getByLabelTextWithSuggestions,\n  findAllByLabelText: findAllByLabelText,\n  findByLabelText: findByLabelText,\n  queryByPlaceholderText: queryByPlaceholderText,\n  queryAllByPlaceholderText: queryAllByPlaceholderTextWithSuggestions,\n  getByPlaceholderText: getByPlaceholderText,\n  getAllByPlaceholderText: getAllByPlaceholderText,\n  findAllByPlaceholderText: findAllByPlaceholderText,\n  findByPlaceholderText: findByPlaceholderText,\n  queryByText: queryByText,\n  queryAllByText: queryAllByTextWithSuggestions,\n  getByText: getByText,\n  getAllByText: getAllByText,\n  findAllByText: findAllByText,\n  findByText: findByText,\n  queryByDisplayValue: queryByDisplayValue,\n  queryAllByDisplayValue: queryAllByDisplayValueWithSuggestions,\n  getByDisplayValue: getByDisplayValue,\n  getAllByDisplayValue: getAllByDisplayValue,\n  findAllByDisplayValue: findAllByDisplayValue,\n  findByDisplayValue: findByDisplayValue,\n  queryByAltText: queryByAltText,\n  queryAllByAltText: queryAllByAltTextWithSuggestions,\n  getByAltText: getByAltText,\n  getAllByAltText: getAllByAltText,\n  findAllByAltText: findAllByAltText,\n  findByAltText: findByAltText,\n  queryByTitle: queryByTitle,\n  queryAllByTitle: queryAllByTitleWithSuggestions,\n  getByTitle: getByTitle,\n  getAllByTitle: getAllByTitle,\n  findAllByTitle: findAllByTitle,\n  findByTitle: findByTitle,\n  queryByRole: queryByRole,\n  queryAllByRole: queryAllByRoleWithSuggestions,\n  getAllByRole: getAllByRole,\n  getByRole: getByRole,\n  findAllByRole: findAllByRole,\n  findByRole: findByRole,\n  queryByTestId: queryByTestId,\n  queryAllByTestId: queryAllByTestIdWithSuggestions,\n  getByTestId: getByTestId,\n  getAllByTestId: getAllByTestId,\n  findAllByTestId: findAllByTestId,\n  findByTestId: findByTestId\n});\n\n/**\n * @typedef {{[key: string]: Function}} FuncMap\n */\n\n/**\n * @param {HTMLElement} element container\n * @param {FuncMap} queries object of functions\n * @param {Object} initialValue for reducer\n * @returns {FuncMap} returns object of functions bound to container\n */\nfunction getQueriesForElement(element, queries$1, initialValue) {\n  if (queries$1 === void 0) {\n    queries$1 = queries;\n  }\n  if (initialValue === void 0) {\n    initialValue = {};\n  }\n  return Object.keys(queries$1).reduce((helpers, key) => {\n    const fn = queries$1[key];\n    helpers[key] = fn.bind(null, element);\n    return helpers;\n  }, initialValue);\n}\n\nconst isRemoved = result => !result || Array.isArray(result) && !result.length;\n\n// Check if the element is not present.\n// As the name implies, waitForElementToBeRemoved should check `present` --> `removed`\nfunction initialCheck(elements) {\n  if (isRemoved(elements)) {\n    throw new Error('The element(s) given to waitForElementToBeRemoved are already removed. waitForElementToBeRemoved requires that the element(s) exist(s) before waiting for removal.');\n  }\n}\nasync function waitForElementToBeRemoved(callback, options) {\n  // created here so we get a nice stacktrace\n  const timeoutError = new Error('Timed out in waitForElementToBeRemoved.');\n  if (typeof callback !== 'function') {\n    initialCheck(callback);\n    const elements = Array.isArray(callback) ? callback : [callback];\n    const getRemainingElements = elements.map(element => {\n      let parent = element.parentElement;\n      if (parent === null) return () => null;\n      while (parent.parentElement) parent = parent.parentElement;\n      return () => parent.contains(element) ? element : null;\n    });\n    callback = () => getRemainingElements.map(c => c()).filter(Boolean);\n  }\n  initialCheck(callback());\n  return waitForWrapper(() => {\n    let result;\n    try {\n      result = callback();\n    } catch (error) {\n      if (error.name === 'TestingLibraryElementError') {\n        return undefined;\n      }\n      throw error;\n    }\n    if (!isRemoved(result)) {\n      throw timeoutError;\n    }\n    return undefined;\n  }, options);\n}\n\n/*\neslint\n  require-await: \"off\"\n*/\n\nconst eventMap = {\n  // Clipboard Events\n  copy: {\n    EventType: 'ClipboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  cut: {\n    EventType: 'ClipboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  paste: {\n    EventType: 'ClipboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  // Composition Events\n  compositionEnd: {\n    EventType: 'CompositionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  compositionStart: {\n    EventType: 'CompositionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  compositionUpdate: {\n    EventType: 'CompositionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  // Keyboard Events\n  keyDown: {\n    EventType: 'KeyboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      charCode: 0,\n      composed: true\n    }\n  },\n  keyPress: {\n    EventType: 'KeyboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      charCode: 0,\n      composed: true\n    }\n  },\n  keyUp: {\n    EventType: 'KeyboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      charCode: 0,\n      composed: true\n    }\n  },\n  // Focus Events\n  focus: {\n    EventType: 'FocusEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false,\n      composed: true\n    }\n  },\n  blur: {\n    EventType: 'FocusEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false,\n      composed: true\n    }\n  },\n  focusIn: {\n    EventType: 'FocusEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  focusOut: {\n    EventType: 'FocusEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  // Form Events\n  change: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  input: {\n    EventType: 'InputEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  invalid: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: true\n    }\n  },\n  submit: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  reset: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // Mouse Events\n  click: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      button: 0,\n      composed: true\n    }\n  },\n  contextMenu: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  dblClick: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  drag: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  dragEnd: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  dragEnter: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  dragExit: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  dragLeave: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  dragOver: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  dragStart: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  drop: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  mouseDown: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  mouseEnter: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false,\n      composed: true\n    }\n  },\n  mouseLeave: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false,\n      composed: true\n    }\n  },\n  mouseMove: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  mouseOut: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  mouseOver: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  mouseUp: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  // Selection Events\n  select: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // Touch Events\n  touchCancel: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  touchEnd: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  touchMove: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  touchStart: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  // UI Events\n  resize: {\n    EventType: 'UIEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  scroll: {\n    EventType: 'UIEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Wheel Events\n  wheel: {\n    EventType: 'WheelEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  // Media Events\n  abort: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  canPlay: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  canPlayThrough: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  durationChange: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  emptied: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  encrypted: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  ended: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  loadedData: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  loadedMetadata: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  loadStart: {\n    EventType: 'ProgressEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  pause: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  play: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  playing: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  progress: {\n    EventType: 'ProgressEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  rateChange: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  seeked: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  seeking: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  stalled: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  suspend: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  timeUpdate: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  volumeChange: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  waiting: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Events\n  load: {\n    // TODO: load events can be UIEvent or Event depending on what generated them\n    // This is where this abstraction breaks down.\n    // But the common targets are <img />, <script /> and window.\n    // Neither of these targets receive a UIEvent\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  error: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Animation Events\n  animationStart: {\n    EventType: 'AnimationEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  animationEnd: {\n    EventType: 'AnimationEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  animationIteration: {\n    EventType: 'AnimationEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // Transition Events\n  transitionCancel: {\n    EventType: 'TransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  transitionEnd: {\n    EventType: 'TransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  transitionRun: {\n    EventType: 'TransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  transitionStart: {\n    EventType: 'TransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // pointer events\n  pointerOver: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  pointerEnter: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  pointerDown: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  pointerMove: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  pointerUp: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  pointerCancel: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  pointerOut: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }\n  },\n  pointerLeave: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  gotPointerCapture: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  lostPointerCapture: {\n    EventType: 'PointerEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    }\n  },\n  // history events\n  popState: {\n    EventType: 'PopStateEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // window events\n  offline: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  online: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  pageHide: {\n    EventType: 'PageTransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  pageShow: {\n    EventType: 'PageTransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  }\n};\nconst eventAliasMap = {\n  doubleClick: 'dblClick'\n};\n\nfunction fireEvent(element, event) {\n  return getConfig().eventWrapper(() => {\n    if (!event) {\n      throw new Error(\"Unable to fire an event - please provide an event object.\");\n    }\n    if (!element) {\n      throw new Error(\"Unable to fire a \\\"\" + event.type + \"\\\" event - please provide a DOM element.\");\n    }\n    return element.dispatchEvent(event);\n  });\n}\nfunction createEvent(eventName, node, init, _temp) {\n  let {\n    EventType = 'Event',\n    defaultInit = {}\n  } = _temp === void 0 ? {} : _temp;\n  if (!node) {\n    throw new Error(\"Unable to fire a \\\"\" + eventName + \"\\\" event - please provide a DOM element.\");\n  }\n  const eventInit = {\n    ...defaultInit,\n    ...init\n  };\n  const {\n    target: {\n      value,\n      files,\n      ...targetProperties\n    } = {}\n  } = eventInit;\n  if (value !== undefined) {\n    setNativeValue(node, value);\n  }\n  if (files !== undefined) {\n    // input.files is a read-only property so this is not allowed:\n    // input.files = [file]\n    // so we have to use this workaround to set the property\n    Object.defineProperty(node, 'files', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: files\n    });\n  }\n  Object.assign(node, targetProperties);\n  const window = getWindowFromNode(node);\n  const EventConstructor = window[EventType] || window.Event;\n  let event;\n  /* istanbul ignore else  */\n  if (typeof EventConstructor === 'function') {\n    event = new EventConstructor(eventName, eventInit);\n  } else {\n    // IE11 polyfill from https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n    event = window.document.createEvent(EventType);\n    const {\n      bubbles,\n      cancelable,\n      detail,\n      ...otherInit\n    } = eventInit;\n    event.initEvent(eventName, bubbles, cancelable, detail);\n    Object.keys(otherInit).forEach(eventKey => {\n      event[eventKey] = otherInit[eventKey];\n    });\n  }\n\n  // DataTransfer is not supported in jsdom: https://github.com/jsdom/jsdom/issues/1568\n  const dataTransferProperties = ['dataTransfer', 'clipboardData'];\n  dataTransferProperties.forEach(dataTransferKey => {\n    const dataTransferValue = eventInit[dataTransferKey];\n    if (typeof dataTransferValue === 'object') {\n      /* istanbul ignore if  */\n      if (typeof window.DataTransfer === 'function') {\n        Object.defineProperty(event, dataTransferKey, {\n          value: Object.getOwnPropertyNames(dataTransferValue).reduce((acc, propName) => {\n            Object.defineProperty(acc, propName, {\n              value: dataTransferValue[propName]\n            });\n            return acc;\n          }, new window.DataTransfer())\n        });\n      } else {\n        Object.defineProperty(event, dataTransferKey, {\n          value: dataTransferValue\n        });\n      }\n    }\n  });\n  return event;\n}\nObject.keys(eventMap).forEach(key => {\n  const {\n    EventType,\n    defaultInit\n  } = eventMap[key];\n  const eventName = key.toLowerCase();\n  createEvent[key] = (node, init) => createEvent(eventName, node, init, {\n    EventType,\n    defaultInit\n  });\n  fireEvent[key] = (node, init) => fireEvent(node, createEvent[key](node, init));\n});\n\n// function written after some investigation here:\n// https://github.com/facebook/react/issues/10135#issuecomment-401496776\nfunction setNativeValue(element, value) {\n  const {\n    set: valueSetter\n  } = Object.getOwnPropertyDescriptor(element, 'value') || {};\n  const prototype = Object.getPrototypeOf(element);\n  const {\n    set: prototypeValueSetter\n  } = Object.getOwnPropertyDescriptor(prototype, 'value') || {};\n  if (prototypeValueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    /* istanbul ignore if */\n    // eslint-disable-next-line no-lonely-if -- Can't be ignored by istanbul otherwise\n    if (valueSetter) {\n      valueSetter.call(element, value);\n    } else {\n      throw new Error('The given element does not have a value setter');\n    }\n  }\n}\nObject.keys(eventAliasMap).forEach(aliasKey => {\n  const key = eventAliasMap[aliasKey];\n  fireEvent[aliasKey] = function () {\n    return fireEvent[key](...arguments);\n  };\n});\n\n/* eslint complexity:[\"error\", 9] */\n\n// WARNING: `lz-string` only has a default export but statically we assume named exports are allowed\nfunction unindent(string) {\n  // remove white spaces first, to save a few bytes.\n  // testing-playground will reformat on load any ways.\n  return string.replace(/[ \\t]*[\\n][ \\t]*/g, '\\n');\n}\nfunction encode(value) {\n  return lz_string__WEBPACK_IMPORTED_MODULE_3___default().compressToEncodedURIComponent(unindent(value));\n}\nfunction getPlaygroundUrl(markup) {\n  return \"https://testing-playground.com/#markup=\" + encode(markup);\n}\nconst debug = (element, maxLength, options) => Array.isArray(element) ? element.forEach(el => logDOM(el, maxLength, options)) : logDOM(element, maxLength, options);\nconst logTestingPlaygroundURL = function (element) {\n  if (element === void 0) {\n    element = getDocument().body;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (!element || !('innerHTML' in element)) {\n    console.log(\"The element you're providing isn't a valid DOM element.\");\n    return;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (!element.innerHTML) {\n    console.log(\"The provided element doesn't have any children.\");\n    return;\n  }\n  const playgroundUrl = getPlaygroundUrl(element.innerHTML);\n  console.log(\"Open this URL in your browser\\n\\n\" + playgroundUrl);\n  return playgroundUrl;\n};\nconst initialValue = {\n  debug,\n  logTestingPlaygroundURL\n};\nconst screen = typeof document !== 'undefined' && document.body // eslint-disable-line @typescript-eslint/no-unnecessary-condition\n? getQueriesForElement(document.body, queries, initialValue) : Object.keys(queries).reduce((helpers, key) => {\n  // `key` is for all intents and purposes the type of keyof `helpers`, which itself is the type of `initialValue` plus incoming properties from `queries`\n  // if `Object.keys(something)` returned Array<keyof typeof something> this explicit type assertion would not be necessary\n  // see https://stackoverflow.com/questions/55012174/why-doesnt-object-keys-return-a-keyof-type-in-typescript\n  helpers[key] = () => {\n    throw new TypeError('For queries bound to document.body a global document has to be available... Learn more: https://testing-library.com/s/screen-global-error');\n  };\n  return helpers;\n}, initialValue);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js\n"));

/***/ }),

/***/ "./node_modules/@testing-library/react/dist/@testing-library/react.esm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@testing-library/react/dist/@testing-library/react.esm.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   act: function() { return /* binding */ act; },\n/* harmony export */   cleanup: function() { return /* binding */ cleanup; },\n/* harmony export */   configure: function() { return /* binding */ configure; },\n/* harmony export */   fireEvent: function() { return /* binding */ fireEvent; },\n/* harmony export */   getConfig: function() { return /* binding */ getConfig; },\n/* harmony export */   render: function() { return /* binding */ render; },\n/* harmony export */   renderHook: function() { return /* binding */ renderHook; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom_test_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/test-utils */ \"./node_modules/react-dom/test-utils.js\");\n/* harmony import */ var react_dom_test_utils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom_test_utils__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/* harmony import */ var _testing_library_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @testing-library/dom */ \"./node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _testing_library_dom__WEBPACK_IMPORTED_MODULE_4__) if([\"default\",\"act\",\"cleanup\",\"configure\",\"fireEvent\",\"getConfig\",\"render\",\"renderHook\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _testing_library_dom__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n\nconst reactAct = typeof react__WEBPACK_IMPORTED_MODULE_0__.act === 'function' ? react__WEBPACK_IMPORTED_MODULE_0__.act : react_dom_test_utils__WEBPACK_IMPORTED_MODULE_1__.act;\nfunction getGlobalThis() {\n  /* istanbul ignore else */\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  /* istanbul ignore next */\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  /* istanbul ignore next */\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  /* istanbul ignore next */\n  if (typeof __webpack_require__.g !== 'undefined') {\n    return __webpack_require__.g;\n  }\n  /* istanbul ignore next */\n  throw new Error('unable to locate global object');\n}\nfunction setIsReactActEnvironment(isReactActEnvironment) {\n  getGlobalThis().IS_REACT_ACT_ENVIRONMENT = isReactActEnvironment;\n}\nfunction getIsReactActEnvironment() {\n  return getGlobalThis().IS_REACT_ACT_ENVIRONMENT;\n}\nfunction withGlobalActEnvironment(actImplementation) {\n  return callback => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(true);\n    try {\n      // The return value of `act` is always a thenable.\n      let callbackNeedsToBeAwaited = false;\n      const actResult = actImplementation(() => {\n        const result = callback();\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          callbackNeedsToBeAwaited = true;\n        }\n        return result;\n      });\n      if (callbackNeedsToBeAwaited) {\n        const thenable = actResult;\n        return {\n          then: (resolve, reject) => {\n            thenable.then(returnValue => {\n              setIsReactActEnvironment(previousActEnvironment);\n              resolve(returnValue);\n            }, error => {\n              setIsReactActEnvironment(previousActEnvironment);\n              reject(error);\n            });\n          }\n        };\n      } else {\n        setIsReactActEnvironment(previousActEnvironment);\n        return actResult;\n      }\n    } catch (error) {\n      // Can't be a `finally {}` block since we don't know if we have to immediately restore IS_REACT_ACT_ENVIRONMENT\n      // or if we have to await the callback first.\n      setIsReactActEnvironment(previousActEnvironment);\n      throw error;\n    }\n  };\n}\nconst act = withGlobalActEnvironment(reactAct);\n\n/* eslint no-console:0 */\n\n// react-testing-library's version of fireEvent will call\n// dom-testing-library's version of fireEvent. The reason\n// we make this distinction however is because we have\n// a few extra events that work a bit differently\nconst fireEvent = function () {\n  return (0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.fireEvent)(...arguments);\n};\nObject.keys(_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.fireEvent).forEach(key => {\n  fireEvent[key] = function () {\n    return _testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.fireEvent[key](...arguments);\n  };\n});\n\n// React event system tracks native mouseOver/mouseOut events for\n// running onMouseEnter/onMouseLeave handlers\n// @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/EnterLeaveEventPlugin.js#L24-L31\nconst mouseEnter = fireEvent.mouseEnter;\nconst mouseLeave = fireEvent.mouseLeave;\nfireEvent.mouseEnter = function () {\n  mouseEnter(...arguments);\n  return fireEvent.mouseOver(...arguments);\n};\nfireEvent.mouseLeave = function () {\n  mouseLeave(...arguments);\n  return fireEvent.mouseOut(...arguments);\n};\nconst pointerEnter = fireEvent.pointerEnter;\nconst pointerLeave = fireEvent.pointerLeave;\nfireEvent.pointerEnter = function () {\n  pointerEnter(...arguments);\n  return fireEvent.pointerOver(...arguments);\n};\nfireEvent.pointerLeave = function () {\n  pointerLeave(...arguments);\n  return fireEvent.pointerOut(...arguments);\n};\nconst select = fireEvent.select;\nfireEvent.select = (node, init) => {\n  select(node, init);\n  // React tracks this event only on focused inputs\n  node.focus();\n\n  // React creates this event when one of the following native events happens\n  // - contextMenu\n  // - mouseUp\n  // - dragEnd\n  // - keyUp\n  // - keyDown\n  // so we can use any here\n  // @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/SelectEventPlugin.js#L203-L224\n  fireEvent.keyUp(node, init);\n};\n\n// React event system tracks native focusout/focusin events for\n// running blur/focus handlers\n// @link https://github.com/facebook/react/pull/19186\nconst blur = fireEvent.blur;\nconst focus = fireEvent.focus;\nfireEvent.blur = function () {\n  fireEvent.focusOut(...arguments);\n  return blur(...arguments);\n};\nfireEvent.focus = function () {\n  fireEvent.focusIn(...arguments);\n  return focus(...arguments);\n};\n\nlet configForRTL = {\n  reactStrictMode: false\n};\nfunction getConfig() {\n  return {\n    ...(0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.getConfig)(),\n    ...configForRTL\n  };\n}\nfunction configure(newConfig) {\n  if (typeof newConfig === 'function') {\n    // Pass the existing config out to the provided function\n    // and accept a delta in return\n    newConfig = newConfig(getConfig());\n  }\n  const {\n    reactStrictMode,\n    ...configForDTL\n  } = newConfig;\n  (0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.configure)(configForDTL);\n  configForRTL = {\n    ...configForRTL,\n    reactStrictMode\n  };\n}\n\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (\n      // legacy timers\n      setTimeout._isMockFunction === true ||\n      // modern timers\n      // eslint-disable-next-line prefer-object-has-own -- No Object.hasOwn in all target environments we support.\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n  return false;\n}\n(0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.configure)({\n  unstable_advanceTimersWrapper: cb => {\n    return act(cb);\n  },\n  // We just want to run `waitFor` without IS_REACT_ACT_ENVIRONMENT\n  // But that's not necessarily how `asyncWrapper` is used since it's a public method.\n  // Let's just hope nobody else is using it.\n  asyncWrapper: async cb => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(false);\n    try {\n      const result = await cb();\n      // Drain microtask queue.\n      // Otherwise we'll restore the previous act() environment, before we resolve the `waitFor` call.\n      // The caller would have no chance to wrap the in-flight Promises in `act()`\n      await new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n        }, 0);\n        if (jestFakeTimersAreEnabled()) {\n          jest.advanceTimersByTime(0);\n        }\n      });\n      return result;\n    } finally {\n      setIsReactActEnvironment(previousActEnvironment);\n    }\n  },\n  eventWrapper: cb => {\n    let result;\n    act(() => {\n      result = cb();\n    });\n    return result;\n  }\n});\n\n// Ideally we'd just use a WeakMap where containers are keys and roots are values.\n// We use two variables so that we can bail out in constant time when we render with a new container (most common use case)\n/**\n * @type {Set<import('react-dom').Container>}\n */\nconst mountedContainers = new Set();\n/**\n * @type Array<{container: import('react-dom').Container, root: ReturnType<typeof createConcurrentRoot>}>\n */\nconst mountedRootEntries = [];\nfunction strictModeIfNeeded(innerElement) {\n  return getConfig().reactStrictMode ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.StrictMode, null, innerElement) : innerElement;\n}\nfunction wrapUiIfNeeded(innerElement, wrapperComponent) {\n  return wrapperComponent ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(wrapperComponent, null, innerElement) : innerElement;\n}\nfunction createConcurrentRoot(container, _ref) {\n  let {\n    hydrate,\n    ui,\n    wrapper: WrapperComponent\n  } = _ref;\n  let root;\n  if (hydrate) {\n    act(() => {\n      root = react_dom_client__WEBPACK_IMPORTED_MODULE_3__.hydrateRoot(container, strictModeIfNeeded(wrapUiIfNeeded(ui, WrapperComponent)));\n    });\n  } else {\n    root = react_dom_client__WEBPACK_IMPORTED_MODULE_3__.createRoot(container);\n  }\n  return {\n    hydrate() {\n      /* istanbul ignore if */\n      if (!hydrate) {\n        throw new Error('Attempted to hydrate a non-hydrateable root. This is a bug in `@testing-library/react`.');\n      }\n      // Nothing to do since hydration happens when creating the root object.\n    },\n    render(element) {\n      root.render(element);\n    },\n    unmount() {\n      root.unmount();\n    }\n  };\n}\nfunction createLegacyRoot(container) {\n  return {\n    hydrate(element) {\n      react_dom__WEBPACK_IMPORTED_MODULE_2___default().hydrate(element, container);\n    },\n    render(element) {\n      react_dom__WEBPACK_IMPORTED_MODULE_2___default().render(element, container);\n    },\n    unmount() {\n      react_dom__WEBPACK_IMPORTED_MODULE_2___default().unmountComponentAtNode(container);\n    }\n  };\n}\nfunction renderRoot(ui, _ref2) {\n  let {\n    baseElement,\n    container,\n    hydrate,\n    queries,\n    root,\n    wrapper: WrapperComponent\n  } = _ref2;\n  act(() => {\n    if (hydrate) {\n      root.hydrate(strictModeIfNeeded(wrapUiIfNeeded(ui, WrapperComponent)), container);\n    } else {\n      root.render(strictModeIfNeeded(wrapUiIfNeeded(ui, WrapperComponent)), container);\n    }\n  });\n  return {\n    container,\n    baseElement,\n    debug: function (el, maxLength, options) {\n      if (el === void 0) {\n        el = baseElement;\n      }\n      return Array.isArray(el) ?\n      // eslint-disable-next-line no-console\n      el.forEach(e => console.log((0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.prettyDOM)(e, maxLength, options))) :\n      // eslint-disable-next-line no-console,\n      console.log((0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.prettyDOM)(el, maxLength, options));\n    },\n    unmount: () => {\n      act(() => {\n        root.unmount();\n      });\n    },\n    rerender: rerenderUi => {\n      renderRoot(rerenderUi, {\n        container,\n        baseElement,\n        root,\n        wrapper: WrapperComponent\n      });\n      // Intentionally do not return anything to avoid unnecessarily complicating the API.\n      // folks can use all the same utilities we return in the first place that are bound to the container\n    },\n    asFragment: () => {\n      /* istanbul ignore else (old jsdom limitation) */\n      if (typeof document.createRange === 'function') {\n        return document.createRange().createContextualFragment(container.innerHTML);\n      } else {\n        const template = document.createElement('template');\n        template.innerHTML = container.innerHTML;\n        return template.content;\n      }\n    },\n    ...(0,_testing_library_dom__WEBPACK_IMPORTED_MODULE_4__.getQueriesForElement)(baseElement, queries)\n  };\n}\nfunction render(ui, _temp) {\n  let {\n    container,\n    baseElement = container,\n    legacyRoot = false,\n    queries,\n    hydrate = false,\n    wrapper\n  } = _temp === void 0 ? {} : _temp;\n  if (legacyRoot && typeof (react_dom__WEBPACK_IMPORTED_MODULE_2___default().render) !== 'function') {\n    const error = new Error('`legacyRoot: true` is not supported in this version of React. ' + 'If your app runs React 19 or later, you should remove this flag. ' + 'If your app runs React 18 or earlier, visit https://react.dev/blog/2022/03/08/react-18-upgrade-guide for upgrade instructions.');\n    Error.captureStackTrace(error, render);\n    throw error;\n  }\n  if (!baseElement) {\n    // default to document.body instead of documentElement to avoid output of potentially-large\n    // head elements (such as JSS style blocks) in debug output\n    baseElement = document.body;\n  }\n  if (!container) {\n    container = baseElement.appendChild(document.createElement('div'));\n  }\n  let root;\n  // eslint-disable-next-line no-negated-condition -- we want to map the evolution of this over time. The root is created first. Only later is it re-used so we don't want to read the case that happens later first.\n  if (!mountedContainers.has(container)) {\n    const createRootImpl = legacyRoot ? createLegacyRoot : createConcurrentRoot;\n    root = createRootImpl(container, {\n      hydrate,\n      ui,\n      wrapper\n    });\n    mountedRootEntries.push({\n      container,\n      root\n    });\n    // we'll add it to the mounted containers regardless of whether it's actually\n    // added to document.body so the cleanup method works regardless of whether\n    // they're passing us a custom container or not.\n    mountedContainers.add(container);\n  } else {\n    mountedRootEntries.forEach(rootEntry => {\n      // Else is unreachable since `mountedContainers` has the `container`.\n      // Only reachable if one would accidentally add the container to `mountedContainers` but not the root to `mountedRootEntries`\n      /* istanbul ignore else */\n      if (rootEntry.container === container) {\n        root = rootEntry.root;\n      }\n    });\n  }\n  return renderRoot(ui, {\n    container,\n    baseElement,\n    queries,\n    hydrate,\n    wrapper,\n    root\n  });\n}\nfunction cleanup() {\n  mountedRootEntries.forEach(_ref3 => {\n    let {\n      root,\n      container\n    } = _ref3;\n    act(() => {\n      root.unmount();\n    });\n    if (container.parentNode === document.body) {\n      document.body.removeChild(container);\n    }\n  });\n  mountedRootEntries.length = 0;\n  mountedContainers.clear();\n}\nfunction renderHook(renderCallback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    initialProps,\n    ...renderOptions\n  } = options;\n  if (renderOptions.legacyRoot && typeof (react_dom__WEBPACK_IMPORTED_MODULE_2___default().render) !== 'function') {\n    const error = new Error('`legacyRoot: true` is not supported in this version of React. ' + 'If your app runs React 19 or later, you should remove this flag. ' + 'If your app runs React 18 or earlier, visit https://react.dev/blog/2022/03/08/react-18-upgrade-guide for upgrade instructions.');\n    Error.captureStackTrace(error, renderHook);\n    throw error;\n  }\n  const result = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  function TestComponent(_ref4) {\n    let {\n      renderCallbackProps\n    } = _ref4;\n    const pendingResult = renderCallback(renderCallbackProps);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n      result.current = pendingResult;\n    });\n    return null;\n  }\n  const {\n    rerender: baseRerender,\n    unmount\n  } = render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TestComponent, {\n    renderCallbackProps: initialProps\n  }), renderOptions);\n  function rerender(rerenderCallbackProps) {\n    return baseRerender( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TestComponent, {\n      renderCallbackProps: rerenderCallbackProps\n    }));\n  }\n  return {\n    result,\n    rerender,\n    unmount\n  };\n}\n\n/* eslint func-name-matching:0 */\n\n// if we're running in a test runner that supports afterEach\n// or teardown then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this then either import the `pure` module\n// or set the RTL_SKIP_AUTO_CLEANUP env variable to 'true'.\nif (typeof process === 'undefined' || !process.env?.RTL_SKIP_AUTO_CLEANUP) {\n  // ignore teardown() in code coverage because Jest does not support it\n  /* istanbul ignore else */\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      cleanup();\n    });\n  } else if (typeof teardown === 'function') {\n    // Block is guarded by `typeof` check.\n    // eslint does not support `typeof` guards.\n    // eslint-disable-next-line no-undef\n    teardown(() => {\n      cleanup();\n    });\n  }\n\n  // No test setup with other test runners available\n  /* istanbul ignore else */\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = getIsReactActEnvironment();\n    beforeAll(() => {\n      previousIsReactActEnvironment = getIsReactActEnvironment();\n      setIsReactActEnvironment(true);\n    });\n    afterAll(() => {\n      setIsReactActEnvironment(previousIsReactActEnvironment);\n    });\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@testing-library/react/dist/@testing-library/react.esm.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/ariaPropsMap.js":
/*!*****************************************************!*\
  !*** ./node_modules/aria-query/lib/ariaPropsMap.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _iterationDecorator = _interopRequireDefault(__webpack_require__(/*! ./util/iterationDecorator */ \"./node_modules/aria-query/lib/util/iterationDecorator.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar properties = [['aria-activedescendant', {\n  'type': 'id'\n}], ['aria-atomic', {\n  'type': 'boolean'\n}], ['aria-autocomplete', {\n  'type': 'token',\n  'values': ['inline', 'list', 'both', 'none']\n}], ['aria-braillelabel', {\n  'type': 'string'\n}], ['aria-brailleroledescription', {\n  'type': 'string'\n}], ['aria-busy', {\n  'type': 'boolean'\n}], ['aria-checked', {\n  'type': 'tristate'\n}], ['aria-colcount', {\n  type: 'integer'\n}], ['aria-colindex', {\n  type: 'integer'\n}], ['aria-colspan', {\n  type: 'integer'\n}], ['aria-controls', {\n  'type': 'idlist'\n}], ['aria-current', {\n  type: 'token',\n  values: ['page', 'step', 'location', 'date', 'time', true, false]\n}], ['aria-describedby', {\n  'type': 'idlist'\n}], ['aria-description', {\n  'type': 'string'\n}], ['aria-details', {\n  'type': 'id'\n}], ['aria-disabled', {\n  'type': 'boolean'\n}], ['aria-dropeffect', {\n  'type': 'tokenlist',\n  'values': ['copy', 'execute', 'link', 'move', 'none', 'popup']\n}], ['aria-errormessage', {\n  'type': 'id'\n}], ['aria-expanded', {\n  'type': 'boolean',\n  'allowundefined': true\n}], ['aria-flowto', {\n  'type': 'idlist'\n}], ['aria-grabbed', {\n  'type': 'boolean',\n  'allowundefined': true\n}], ['aria-haspopup', {\n  'type': 'token',\n  'values': [false, true, 'menu', 'listbox', 'tree', 'grid', 'dialog']\n}], ['aria-hidden', {\n  'type': 'boolean',\n  'allowundefined': true\n}], ['aria-invalid', {\n  'type': 'token',\n  'values': ['grammar', false, 'spelling', true]\n}], ['aria-keyshortcuts', {\n  type: 'string'\n}], ['aria-label', {\n  'type': 'string'\n}], ['aria-labelledby', {\n  'type': 'idlist'\n}], ['aria-level', {\n  'type': 'integer'\n}], ['aria-live', {\n  'type': 'token',\n  'values': ['assertive', 'off', 'polite']\n}], ['aria-modal', {\n  type: 'boolean'\n}], ['aria-multiline', {\n  'type': 'boolean'\n}], ['aria-multiselectable', {\n  'type': 'boolean'\n}], ['aria-orientation', {\n  'type': 'token',\n  'values': ['vertical', 'undefined', 'horizontal']\n}], ['aria-owns', {\n  'type': 'idlist'\n}], ['aria-placeholder', {\n  type: 'string'\n}], ['aria-posinset', {\n  'type': 'integer'\n}], ['aria-pressed', {\n  'type': 'tristate'\n}], ['aria-readonly', {\n  'type': 'boolean'\n}], ['aria-relevant', {\n  'type': 'tokenlist',\n  'values': ['additions', 'all', 'removals', 'text']\n}], ['aria-required', {\n  'type': 'boolean'\n}], ['aria-roledescription', {\n  type: 'string'\n}], ['aria-rowcount', {\n  type: 'integer'\n}], ['aria-rowindex', {\n  type: 'integer'\n}], ['aria-rowspan', {\n  type: 'integer'\n}], ['aria-selected', {\n  'type': 'boolean',\n  'allowundefined': true\n}], ['aria-setsize', {\n  'type': 'integer'\n}], ['aria-sort', {\n  'type': 'token',\n  'values': ['ascending', 'descending', 'none', 'other']\n}], ['aria-valuemax', {\n  'type': 'number'\n}], ['aria-valuemin', {\n  'type': 'number'\n}], ['aria-valuenow', {\n  'type': 'number'\n}], ['aria-valuetext', {\n  'type': 'string'\n}]];\nvar ariaPropsMap = {\n  entries: function entries() {\n    return properties;\n  },\n  forEach: function forEach(fn) {\n    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _iterator = _createForOfIteratorHelper(properties),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          key = _step$value[0],\n          values = _step$value[1];\n        fn.call(thisArg, values, key, properties);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  },\n  get: function get(key) {\n    var item = properties.find(function (tuple) {\n      return tuple[0] === key ? true : false;\n    });\n    return item && item[1];\n  },\n  has: function has(key) {\n    return !!ariaPropsMap.get(key);\n  },\n  keys: function keys() {\n    return properties.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        key = _ref2[0];\n      return key;\n    });\n  },\n  values: function values() {\n    return properties.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        values = _ref4[1];\n      return values;\n    });\n  }\n};\nvar _default = (0, _iterationDecorator.default)(ariaPropsMap, ariaPropsMap.entries());\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvYXJpYVByb3BzTWFwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2YsaURBQWlELG1CQUFPLENBQUMsMkZBQTJCO0FBQ3BGLHVDQUF1Qyx1Q0FBdUM7QUFDOUUsa0NBQWtDO0FBQ2xDLDhCQUE4QjtBQUM5Qix5Q0FBeUMsMEdBQTBHLHdCQUF3QixlQUFlLGVBQWUsZ0JBQWdCLFlBQVksTUFBTSx3QkFBd0IsK0JBQStCLGFBQWEscUJBQXFCLHVDQUF1QyxjQUFjLFdBQVcsWUFBWSxVQUFVLE1BQU0sbURBQW1ELFVBQVUsc0JBQXNCO0FBQ25mLGdDQUFnQztBQUNoQyx5REFBeUQsaUZBQWlGLFdBQVcsd0hBQXdILGdCQUFnQixXQUFXLHlCQUF5QixTQUFTLHdCQUF3Qiw0QkFBNEIsY0FBYyxTQUFTLCtCQUErQix1QkFBdUIsWUFBWSxZQUFZLGdLQUFnSyxrREFBa0QsU0FBUyxrQkFBa0Isa0JBQWtCLG9CQUFvQixzQkFBc0IsOEJBQThCLGNBQWMsdUJBQXVCLGVBQWUsWUFBWSxvQkFBb0IsTUFBTSwyREFBMkQsVUFBVTtBQUN6OEIsa0RBQWtELGdCQUFnQixnRUFBZ0Usd0RBQXdELDZEQUE2RCxzREFBc0Q7QUFDN1MsdUNBQXVDLHVEQUF1RCx1Q0FBdUMsU0FBUyxPQUFPLG9CQUFvQjtBQUN6SztBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOEJBQThCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9hcmlhUHJvcHNNYXAuanM/MTBkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfaXRlcmF0aW9uRGVjb3JhdG9yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91dGlsL2l0ZXJhdGlvbkRlY29yYXRvclwiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgdmFyIF9pID0gYXJyID09IG51bGwgPyBudWxsIDogdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdOyBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9zLCBfZTsgdHJ5IHsgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9XG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cbmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG8sIGFsbG93QXJyYXlMaWtlKSB7IHZhciBpdCA9IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdIHx8IG9bXCJAQGl0ZXJhdG9yXCJdOyBpZiAoIWl0KSB7IGlmIChBcnJheS5pc0FycmF5KG8pIHx8IChpdCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHsgaWYgKGl0KSBvID0gaXQ7IHZhciBpID0gMDsgdmFyIEYgPSBmdW5jdGlvbiBGKCkge307IHJldHVybiB7IHM6IEYsIG46IGZ1bmN0aW9uIG4oKSB7IGlmIChpID49IG8ubGVuZ3RoKSByZXR1cm4geyBkb25lOiB0cnVlIH07IHJldHVybiB7IGRvbmU6IGZhbHNlLCB2YWx1ZTogb1tpKytdIH07IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IHRocm93IF9lMjsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfSB2YXIgbm9ybWFsQ29tcGxldGlvbiA9IHRydWUsIGRpZEVyciA9IGZhbHNlLCBlcnI7IHJldHVybiB7IHM6IGZ1bmN0aW9uIHMoKSB7IGl0ID0gaXQuY2FsbChvKTsgfSwgbjogZnVuY3Rpb24gbigpIHsgdmFyIHN0ZXAgPSBpdC5uZXh0KCk7IG5vcm1hbENvbXBsZXRpb24gPSBzdGVwLmRvbmU7IHJldHVybiBzdGVwOyB9LCBlOiBmdW5jdGlvbiBlKF9lMykgeyBkaWRFcnIgPSB0cnVlOyBlcnIgPSBfZTM7IH0sIGY6IGZ1bmN0aW9uIGYoKSB7IHRyeSB7IGlmICghbm9ybWFsQ29tcGxldGlvbiAmJiBpdC5yZXR1cm4gIT0gbnVsbCkgaXQucmV0dXJuKCk7IH0gZmluYWxseSB7IGlmIChkaWRFcnIpIHRocm93IGVycjsgfSB9IH07IH1cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG52YXIgcHJvcGVydGllcyA9IFtbJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCcsIHtcbiAgJ3R5cGUnOiAnaWQnXG59XSwgWydhcmlhLWF0b21pYycsIHtcbiAgJ3R5cGUnOiAnYm9vbGVhbidcbn1dLCBbJ2FyaWEtYXV0b2NvbXBsZXRlJywge1xuICAndHlwZSc6ICd0b2tlbicsXG4gICd2YWx1ZXMnOiBbJ2lubGluZScsICdsaXN0JywgJ2JvdGgnLCAnbm9uZSddXG59XSwgWydhcmlhLWJyYWlsbGVsYWJlbCcsIHtcbiAgJ3R5cGUnOiAnc3RyaW5nJ1xufV0sIFsnYXJpYS1icmFpbGxlcm9sZWRlc2NyaXB0aW9uJywge1xuICAndHlwZSc6ICdzdHJpbmcnXG59XSwgWydhcmlhLWJ1c3knLCB7XG4gICd0eXBlJzogJ2Jvb2xlYW4nXG59XSwgWydhcmlhLWNoZWNrZWQnLCB7XG4gICd0eXBlJzogJ3RyaXN0YXRlJ1xufV0sIFsnYXJpYS1jb2xjb3VudCcsIHtcbiAgdHlwZTogJ2ludGVnZXInXG59XSwgWydhcmlhLWNvbGluZGV4Jywge1xuICB0eXBlOiAnaW50ZWdlcidcbn1dLCBbJ2FyaWEtY29sc3BhbicsIHtcbiAgdHlwZTogJ2ludGVnZXInXG59XSwgWydhcmlhLWNvbnRyb2xzJywge1xuICAndHlwZSc6ICdpZGxpc3QnXG59XSwgWydhcmlhLWN1cnJlbnQnLCB7XG4gIHR5cGU6ICd0b2tlbicsXG4gIHZhbHVlczogWydwYWdlJywgJ3N0ZXAnLCAnbG9jYXRpb24nLCAnZGF0ZScsICd0aW1lJywgdHJ1ZSwgZmFsc2VdXG59XSwgWydhcmlhLWRlc2NyaWJlZGJ5Jywge1xuICAndHlwZSc6ICdpZGxpc3QnXG59XSwgWydhcmlhLWRlc2NyaXB0aW9uJywge1xuICAndHlwZSc6ICdzdHJpbmcnXG59XSwgWydhcmlhLWRldGFpbHMnLCB7XG4gICd0eXBlJzogJ2lkJ1xufV0sIFsnYXJpYS1kaXNhYmxlZCcsIHtcbiAgJ3R5cGUnOiAnYm9vbGVhbidcbn1dLCBbJ2FyaWEtZHJvcGVmZmVjdCcsIHtcbiAgJ3R5cGUnOiAndG9rZW5saXN0JyxcbiAgJ3ZhbHVlcyc6IFsnY29weScsICdleGVjdXRlJywgJ2xpbmsnLCAnbW92ZScsICdub25lJywgJ3BvcHVwJ11cbn1dLCBbJ2FyaWEtZXJyb3JtZXNzYWdlJywge1xuICAndHlwZSc6ICdpZCdcbn1dLCBbJ2FyaWEtZXhwYW5kZWQnLCB7XG4gICd0eXBlJzogJ2Jvb2xlYW4nLFxuICAnYWxsb3d1bmRlZmluZWQnOiB0cnVlXG59XSwgWydhcmlhLWZsb3d0bycsIHtcbiAgJ3R5cGUnOiAnaWRsaXN0J1xufV0sIFsnYXJpYS1ncmFiYmVkJywge1xuICAndHlwZSc6ICdib29sZWFuJyxcbiAgJ2FsbG93dW5kZWZpbmVkJzogdHJ1ZVxufV0sIFsnYXJpYS1oYXNwb3B1cCcsIHtcbiAgJ3R5cGUnOiAndG9rZW4nLFxuICAndmFsdWVzJzogW2ZhbHNlLCB0cnVlLCAnbWVudScsICdsaXN0Ym94JywgJ3RyZWUnLCAnZ3JpZCcsICdkaWFsb2cnXVxufV0sIFsnYXJpYS1oaWRkZW4nLCB7XG4gICd0eXBlJzogJ2Jvb2xlYW4nLFxuICAnYWxsb3d1bmRlZmluZWQnOiB0cnVlXG59XSwgWydhcmlhLWludmFsaWQnLCB7XG4gICd0eXBlJzogJ3Rva2VuJyxcbiAgJ3ZhbHVlcyc6IFsnZ3JhbW1hcicsIGZhbHNlLCAnc3BlbGxpbmcnLCB0cnVlXVxufV0sIFsnYXJpYS1rZXlzaG9ydGN1dHMnLCB7XG4gIHR5cGU6ICdzdHJpbmcnXG59XSwgWydhcmlhLWxhYmVsJywge1xuICAndHlwZSc6ICdzdHJpbmcnXG59XSwgWydhcmlhLWxhYmVsbGVkYnknLCB7XG4gICd0eXBlJzogJ2lkbGlzdCdcbn1dLCBbJ2FyaWEtbGV2ZWwnLCB7XG4gICd0eXBlJzogJ2ludGVnZXInXG59XSwgWydhcmlhLWxpdmUnLCB7XG4gICd0eXBlJzogJ3Rva2VuJyxcbiAgJ3ZhbHVlcyc6IFsnYXNzZXJ0aXZlJywgJ29mZicsICdwb2xpdGUnXVxufV0sIFsnYXJpYS1tb2RhbCcsIHtcbiAgdHlwZTogJ2Jvb2xlYW4nXG59XSwgWydhcmlhLW11bHRpbGluZScsIHtcbiAgJ3R5cGUnOiAnYm9vbGVhbidcbn1dLCBbJ2FyaWEtbXVsdGlzZWxlY3RhYmxlJywge1xuICAndHlwZSc6ICdib29sZWFuJ1xufV0sIFsnYXJpYS1vcmllbnRhdGlvbicsIHtcbiAgJ3R5cGUnOiAndG9rZW4nLFxuICAndmFsdWVzJzogWyd2ZXJ0aWNhbCcsICd1bmRlZmluZWQnLCAnaG9yaXpvbnRhbCddXG59XSwgWydhcmlhLW93bnMnLCB7XG4gICd0eXBlJzogJ2lkbGlzdCdcbn1dLCBbJ2FyaWEtcGxhY2Vob2xkZXInLCB7XG4gIHR5cGU6ICdzdHJpbmcnXG59XSwgWydhcmlhLXBvc2luc2V0Jywge1xuICAndHlwZSc6ICdpbnRlZ2VyJ1xufV0sIFsnYXJpYS1wcmVzc2VkJywge1xuICAndHlwZSc6ICd0cmlzdGF0ZSdcbn1dLCBbJ2FyaWEtcmVhZG9ubHknLCB7XG4gICd0eXBlJzogJ2Jvb2xlYW4nXG59XSwgWydhcmlhLXJlbGV2YW50Jywge1xuICAndHlwZSc6ICd0b2tlbmxpc3QnLFxuICAndmFsdWVzJzogWydhZGRpdGlvbnMnLCAnYWxsJywgJ3JlbW92YWxzJywgJ3RleHQnXVxufV0sIFsnYXJpYS1yZXF1aXJlZCcsIHtcbiAgJ3R5cGUnOiAnYm9vbGVhbidcbn1dLCBbJ2FyaWEtcm9sZWRlc2NyaXB0aW9uJywge1xuICB0eXBlOiAnc3RyaW5nJ1xufV0sIFsnYXJpYS1yb3djb3VudCcsIHtcbiAgdHlwZTogJ2ludGVnZXInXG59XSwgWydhcmlhLXJvd2luZGV4Jywge1xuICB0eXBlOiAnaW50ZWdlcidcbn1dLCBbJ2FyaWEtcm93c3BhbicsIHtcbiAgdHlwZTogJ2ludGVnZXInXG59XSwgWydhcmlhLXNlbGVjdGVkJywge1xuICAndHlwZSc6ICdib29sZWFuJyxcbiAgJ2FsbG93dW5kZWZpbmVkJzogdHJ1ZVxufV0sIFsnYXJpYS1zZXRzaXplJywge1xuICAndHlwZSc6ICdpbnRlZ2VyJ1xufV0sIFsnYXJpYS1zb3J0Jywge1xuICAndHlwZSc6ICd0b2tlbicsXG4gICd2YWx1ZXMnOiBbJ2FzY2VuZGluZycsICdkZXNjZW5kaW5nJywgJ25vbmUnLCAnb3RoZXInXVxufV0sIFsnYXJpYS12YWx1ZW1heCcsIHtcbiAgJ3R5cGUnOiAnbnVtYmVyJ1xufV0sIFsnYXJpYS12YWx1ZW1pbicsIHtcbiAgJ3R5cGUnOiAnbnVtYmVyJ1xufV0sIFsnYXJpYS12YWx1ZW5vdycsIHtcbiAgJ3R5cGUnOiAnbnVtYmVyJ1xufV0sIFsnYXJpYS12YWx1ZXRleHQnLCB7XG4gICd0eXBlJzogJ3N0cmluZydcbn1dXTtcbnZhciBhcmlhUHJvcHNNYXAgPSB7XG4gIGVudHJpZXM6IGZ1bmN0aW9uIGVudHJpZXMoKSB7XG4gICAgcmV0dXJuIHByb3BlcnRpZXM7XG4gIH0sXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgICB2YXIgdGhpc0FyZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbnVsbDtcbiAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIocHJvcGVydGllcyksXG4gICAgICBfc3RlcDtcbiAgICB0cnkge1xuICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHtcbiAgICAgICAgdmFyIF9zdGVwJHZhbHVlID0gX3NsaWNlZFRvQXJyYXkoX3N0ZXAudmFsdWUsIDIpLFxuICAgICAgICAgIGtleSA9IF9zdGVwJHZhbHVlWzBdLFxuICAgICAgICAgIHZhbHVlcyA9IF9zdGVwJHZhbHVlWzFdO1xuICAgICAgICBmbi5jYWxsKHRoaXNBcmcsIHZhbHVlcywga2V5LCBwcm9wZXJ0aWVzKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIF9pdGVyYXRvci5lKGVycik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIF9pdGVyYXRvci5mKCk7XG4gICAgfVxuICB9LFxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICB2YXIgaXRlbSA9IHByb3BlcnRpZXMuZmluZChmdW5jdGlvbiAodHVwbGUpIHtcbiAgICAgIHJldHVybiB0dXBsZVswXSA9PT0ga2V5ID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH0pO1xuICAgIHJldHVybiBpdGVtICYmIGl0ZW1bMV07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgIHJldHVybiAhIWFyaWFQcm9wc01hcC5nZXQoa2V5KTtcbiAgfSxcbiAga2V5czogZnVuY3Rpb24ga2V5cygpIHtcbiAgICByZXR1cm4gcHJvcGVydGllcy5tYXAoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDEpLFxuICAgICAgICBrZXkgPSBfcmVmMlswXTtcbiAgICAgIHJldHVybiBrZXk7XG4gICAgfSk7XG4gIH0sXG4gIHZhbHVlczogZnVuY3Rpb24gdmFsdWVzKCkge1xuICAgIHJldHVybiBwcm9wZXJ0aWVzLm1hcChmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSxcbiAgICAgICAgdmFsdWVzID0gX3JlZjRbMV07XG4gICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH0pO1xuICB9XG59O1xudmFyIF9kZWZhdWx0ID0gKDAsIF9pdGVyYXRpb25EZWNvcmF0b3IuZGVmYXVsdCkoYXJpYVByb3BzTWFwLCBhcmlhUHJvcHNNYXAuZW50cmllcygpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/ariaPropsMap.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/domMap.js":
/*!***********************************************!*\
  !*** ./node_modules/aria-query/lib/domMap.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _iterationDecorator = _interopRequireDefault(__webpack_require__(/*! ./util/iterationDecorator */ \"./node_modules/aria-query/lib/util/iterationDecorator.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar dom = [['a', {\n  reserved: false\n}], ['abbr', {\n  reserved: false\n}], ['acronym', {\n  reserved: false\n}], ['address', {\n  reserved: false\n}], ['applet', {\n  reserved: false\n}], ['area', {\n  reserved: false\n}], ['article', {\n  reserved: false\n}], ['aside', {\n  reserved: false\n}], ['audio', {\n  reserved: false\n}], ['b', {\n  reserved: false\n}], ['base', {\n  reserved: true\n}], ['bdi', {\n  reserved: false\n}], ['bdo', {\n  reserved: false\n}], ['big', {\n  reserved: false\n}], ['blink', {\n  reserved: false\n}], ['blockquote', {\n  reserved: false\n}], ['body', {\n  reserved: false\n}], ['br', {\n  reserved: false\n}], ['button', {\n  reserved: false\n}], ['canvas', {\n  reserved: false\n}], ['caption', {\n  reserved: false\n}], ['center', {\n  reserved: false\n}], ['cite', {\n  reserved: false\n}], ['code', {\n  reserved: false\n}], ['col', {\n  reserved: true\n}], ['colgroup', {\n  reserved: true\n}], ['content', {\n  reserved: false\n}], ['data', {\n  reserved: false\n}], ['datalist', {\n  reserved: false\n}], ['dd', {\n  reserved: false\n}], ['del', {\n  reserved: false\n}], ['details', {\n  reserved: false\n}], ['dfn', {\n  reserved: false\n}], ['dialog', {\n  reserved: false\n}], ['dir', {\n  reserved: false\n}], ['div', {\n  reserved: false\n}], ['dl', {\n  reserved: false\n}], ['dt', {\n  reserved: false\n}], ['em', {\n  reserved: false\n}], ['embed', {\n  reserved: false\n}], ['fieldset', {\n  reserved: false\n}], ['figcaption', {\n  reserved: false\n}], ['figure', {\n  reserved: false\n}], ['font', {\n  reserved: false\n}], ['footer', {\n  reserved: false\n}], ['form', {\n  reserved: false\n}], ['frame', {\n  reserved: false\n}], ['frameset', {\n  reserved: false\n}], ['h1', {\n  reserved: false\n}], ['h2', {\n  reserved: false\n}], ['h3', {\n  reserved: false\n}], ['h4', {\n  reserved: false\n}], ['h5', {\n  reserved: false\n}], ['h6', {\n  reserved: false\n}], ['head', {\n  reserved: true\n}], ['header', {\n  reserved: false\n}], ['hgroup', {\n  reserved: false\n}], ['hr', {\n  reserved: false\n}], ['html', {\n  reserved: true\n}], ['i', {\n  reserved: false\n}], ['iframe', {\n  reserved: false\n}], ['img', {\n  reserved: false\n}], ['input', {\n  reserved: false\n}], ['ins', {\n  reserved: false\n}], ['kbd', {\n  reserved: false\n}], ['keygen', {\n  reserved: false\n}], ['label', {\n  reserved: false\n}], ['legend', {\n  reserved: false\n}], ['li', {\n  reserved: false\n}], ['link', {\n  reserved: true\n}], ['main', {\n  reserved: false\n}], ['map', {\n  reserved: false\n}], ['mark', {\n  reserved: false\n}], ['marquee', {\n  reserved: false\n}], ['menu', {\n  reserved: false\n}], ['menuitem', {\n  reserved: false\n}], ['meta', {\n  reserved: true\n}], ['meter', {\n  reserved: false\n}], ['nav', {\n  reserved: false\n}], ['noembed', {\n  reserved: true\n}], ['noscript', {\n  reserved: true\n}], ['object', {\n  reserved: false\n}], ['ol', {\n  reserved: false\n}], ['optgroup', {\n  reserved: false\n}], ['option', {\n  reserved: false\n}], ['output', {\n  reserved: false\n}], ['p', {\n  reserved: false\n}], ['param', {\n  reserved: true\n}], ['picture', {\n  reserved: true\n}], ['pre', {\n  reserved: false\n}], ['progress', {\n  reserved: false\n}], ['q', {\n  reserved: false\n}], ['rp', {\n  reserved: false\n}], ['rt', {\n  reserved: false\n}], ['rtc', {\n  reserved: false\n}], ['ruby', {\n  reserved: false\n}], ['s', {\n  reserved: false\n}], ['samp', {\n  reserved: false\n}], ['script', {\n  reserved: true\n}], ['section', {\n  reserved: false\n}], ['select', {\n  reserved: false\n}], ['small', {\n  reserved: false\n}], ['source', {\n  reserved: true\n}], ['spacer', {\n  reserved: false\n}], ['span', {\n  reserved: false\n}], ['strike', {\n  reserved: false\n}], ['strong', {\n  reserved: false\n}], ['style', {\n  reserved: true\n}], ['sub', {\n  reserved: false\n}], ['summary', {\n  reserved: false\n}], ['sup', {\n  reserved: false\n}], ['table', {\n  reserved: false\n}], ['tbody', {\n  reserved: false\n}], ['td', {\n  reserved: false\n}], ['textarea', {\n  reserved: false\n}], ['tfoot', {\n  reserved: false\n}], ['th', {\n  reserved: false\n}], ['thead', {\n  reserved: false\n}], ['time', {\n  reserved: false\n}], ['title', {\n  reserved: true\n}], ['tr', {\n  reserved: false\n}], ['track', {\n  reserved: true\n}], ['tt', {\n  reserved: false\n}], ['u', {\n  reserved: false\n}], ['ul', {\n  reserved: false\n}], ['var', {\n  reserved: false\n}], ['video', {\n  reserved: false\n}], ['wbr', {\n  reserved: false\n}], ['xmp', {\n  reserved: false\n}]];\nvar domMap = {\n  entries: function entries() {\n    return dom;\n  },\n  forEach: function forEach(fn) {\n    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _iterator = _createForOfIteratorHelper(dom),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          key = _step$value[0],\n          values = _step$value[1];\n        fn.call(thisArg, values, key, dom);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  },\n  get: function get(key) {\n    var item = dom.find(function (tuple) {\n      return tuple[0] === key ? true : false;\n    });\n    return item && item[1];\n  },\n  has: function has(key) {\n    return !!domMap.get(key);\n  },\n  keys: function keys() {\n    return dom.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        key = _ref2[0];\n      return key;\n    });\n  },\n  values: function values() {\n    return dom.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        values = _ref4[1];\n      return values;\n    });\n  }\n};\nvar _default = (0, _iterationDecorator.default)(domMap, domMap.entries());\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/domMap.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/elementRoleMap.js":
/*!*******************************************************!*\
  !*** ./node_modules/aria-query/lib/elementRoleMap.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _lite = __webpack_require__(/*! dequal/lite */ \"./node_modules/dequal/lite/index.js\");\nvar _iterationDecorator = _interopRequireDefault(__webpack_require__(/*! ./util/iterationDecorator */ \"./node_modules/aria-query/lib/util/iterationDecorator.js\"));\nvar _rolesMap = _interopRequireDefault(__webpack_require__(/*! ./rolesMap */ \"./node_modules/aria-query/lib/rolesMap.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar elementRoles = [];\nvar keys = _rolesMap.default.keys();\nfor (var i = 0; i < keys.length; i++) {\n  var key = keys[i];\n  var role = _rolesMap.default.get(key);\n  if (role) {\n    var concepts = [].concat(role.baseConcepts, role.relatedConcepts);\n    for (var k = 0; k < concepts.length; k++) {\n      var relation = concepts[k];\n      if (relation.module === 'HTML') {\n        (function () {\n          var concept = relation.concept;\n          if (concept) {\n            var elementRoleRelation = elementRoles.find(function (relation) {\n              return (0, _lite.dequal)(relation, concept);\n            });\n            var roles;\n            if (elementRoleRelation) {\n              roles = elementRoleRelation[1];\n            } else {\n              roles = [];\n            }\n            var isUnique = true;\n            for (var _i = 0; _i < roles.length; _i++) {\n              if (roles[_i] === key) {\n                isUnique = false;\n                break;\n              }\n            }\n            if (isUnique) {\n              roles.push(key);\n            }\n            elementRoles.push([concept, roles]);\n          }\n        })();\n      }\n    }\n  }\n}\nvar elementRoleMap = {\n  entries: function entries() {\n    return elementRoles;\n  },\n  forEach: function forEach(fn) {\n    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _iterator = _createForOfIteratorHelper(elementRoles),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          _key = _step$value[0],\n          values = _step$value[1];\n        fn.call(thisArg, values, _key, elementRoles);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  },\n  get: function get(key) {\n    var item = elementRoles.find(function (tuple) {\n      return key.name === tuple[0].name && (0, _lite.dequal)(key.attributes, tuple[0].attributes);\n    });\n    return item && item[1];\n  },\n  has: function has(key) {\n    return !!elementRoleMap.get(key);\n  },\n  keys: function keys() {\n    return elementRoles.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        key = _ref2[0];\n      return key;\n    });\n  },\n  values: function values() {\n    return elementRoles.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        values = _ref4[1];\n      return values;\n    });\n  }\n};\nvar _default = (0, _iterationDecorator.default)(elementRoleMap, elementRoleMap.entries());\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/elementRoleMap.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/commandRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/commandRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar commandRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget']]\n};\nvar _default = commandRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L2NvbW1hbmRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9hYnN0cmFjdC9jb21tYW5kUm9sZS5qcz81ODg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNvbW1hbmRSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFtdLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCddXVxufTtcbnZhciBfZGVmYXVsdCA9IGNvbW1hbmRSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/commandRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar compositeRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-activedescendant': null,\n    'aria-disabled': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget']]\n};\nvar _default = compositeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L2NvbXBvc2l0ZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L2NvbXBvc2l0ZVJvbGUuanM/OWQ2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBjb21wb3NpdGVSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1hY3RpdmVkZXNjZW5kYW50JzogbnVsbCxcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICd3aWRnZXQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBjb21wb3NpdGVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/inputRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/inputRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar inputRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'input'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget']]\n};\nvar _default = inputRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L2lucHV0Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvYWJzdHJhY3QvaW5wdXRSb2xlLmpzPzUwODIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgaW5wdXRSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ1hGb3JtcydcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gaW5wdXRSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/inputRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar landmarkRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = landmarkRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L2xhbmRtYXJrUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvYWJzdHJhY3QvbGFuZG1hcmtSb2xlLmpzP2M2NmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgbGFuZG1hcmtSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFtdLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gbGFuZG1hcmtSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar rangeRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-valuemax': null,\n    'aria-valuemin': null,\n    'aria-valuenow': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = rangeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3JhbmdlUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9hYnN0cmFjdC9yYW5nZVJvbGUuanM/NThiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciByYW5nZVJvbGUgPSB7XG4gIGFic3RyYWN0OiB0cnVlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLXZhbHVlbWF4JzogbnVsbCxcbiAgICAnYXJpYS12YWx1ZW1pbic6IG51bGwsXG4gICAgJ2FyaWEtdmFsdWVub3cnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gcmFuZ2VSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar roletypeRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: [],\n  prohibitedProps: [],\n  props: {\n    'aria-atomic': null,\n    'aria-busy': null,\n    'aria-controls': null,\n    'aria-current': null,\n    'aria-describedby': null,\n    'aria-details': null,\n    'aria-dropeffect': null,\n    'aria-flowto': null,\n    'aria-grabbed': null,\n    'aria-hidden': null,\n    'aria-keyshortcuts': null,\n    'aria-label': null,\n    'aria-labelledby': null,\n    'aria-live': null,\n    'aria-owns': null,\n    'aria-relevant': null,\n    'aria-roledescription': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'role'\n    },\n    module: 'XHTML'\n  }, {\n    concept: {\n      name: 'type'\n    },\n    module: 'Dublin Core'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: []\n};\nvar _default = roletypeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3JvbGV0eXBlUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3JvbGV0eXBlUm9sZS5qcz8wN2QwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHJvbGV0eXBlUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IHRydWUsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFtdLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWF0b21pYyc6IG51bGwsXG4gICAgJ2FyaWEtYnVzeSc6IG51bGwsXG4gICAgJ2FyaWEtY29udHJvbHMnOiBudWxsLFxuICAgICdhcmlhLWN1cnJlbnQnOiBudWxsLFxuICAgICdhcmlhLWRlc2NyaWJlZGJ5JzogbnVsbCxcbiAgICAnYXJpYS1kZXRhaWxzJzogbnVsbCxcbiAgICAnYXJpYS1kcm9wZWZmZWN0JzogbnVsbCxcbiAgICAnYXJpYS1mbG93dG8nOiBudWxsLFxuICAgICdhcmlhLWdyYWJiZWQnOiBudWxsLFxuICAgICdhcmlhLWhpZGRlbic6IG51bGwsXG4gICAgJ2FyaWEta2V5c2hvcnRjdXRzJzogbnVsbCxcbiAgICAnYXJpYS1sYWJlbCc6IG51bGwsXG4gICAgJ2FyaWEtbGFiZWxsZWRieSc6IG51bGwsXG4gICAgJ2FyaWEtbGl2ZSc6IG51bGwsXG4gICAgJ2FyaWEtb3ducyc6IG51bGwsXG4gICAgJ2FyaWEtcmVsZXZhbnQnOiBudWxsLFxuICAgICdhcmlhLXJvbGVkZXNjcmlwdGlvbic6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdyb2xlJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEhUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAndHlwZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0R1YmxpbiBDb3JlJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbXVxufTtcbnZhciBfZGVmYXVsdCA9IHJvbGV0eXBlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar sectionRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: [],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'frontmatter'\n    },\n    module: 'DTB'\n  }, {\n    concept: {\n      name: 'level'\n    },\n    module: 'DTB'\n  }, {\n    concept: {\n      name: 'level'\n    },\n    module: 'SMIL'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = sectionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3NlY3Rpb25Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9hYnN0cmFjdC9zZWN0aW9uUm9sZS5qcz9iMjA4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHNlY3Rpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogW10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdmcm9udG1hdHRlcidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0RUQidcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdsZXZlbCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0RUQidcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdsZXZlbCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ1NNSUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHNlY3Rpb25Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar sectionheadRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = sectionheadRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3NlY3Rpb25oZWFkUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvYWJzdHJhY3Qvc2VjdGlvbmhlYWRSb2xlLmpzPzZhMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgc2VjdGlvbmhlYWRSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFtdLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHNlY3Rpb25oZWFkUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/selectRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/selectRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar selectRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-orientation': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite'], ['roletype', 'structure', 'section', 'group']]\n};\nvar _default = selectRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3NlbGVjdFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9hYnN0cmFjdC9zZWxlY3RSb2xlLmpzPzM1YWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgc2VsZWN0Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IHRydWUsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtb3JpZW50YXRpb24nOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbXBvc2l0ZSddLCBbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2dyb3VwJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gc2VsZWN0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/selectRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/structureRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/structureRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar structureRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: [],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype']]\n};\nvar _default = structureRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3N0cnVjdHVyZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3N0cnVjdHVyZVJvbGUuanM/ODFmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBzdHJ1Y3R1cmVSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogW10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHN0cnVjdHVyZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/structureRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar widgetRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: [],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype']]\n};\nvar _default = widgetRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3dpZGdldFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3dpZGdldFJvbGUuanM/YjlhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB3aWRnZXRSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogW10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHdpZGdldFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/abstract/windowRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/abstract/windowRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar windowRole = {\n  abstract: true,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-modal': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype']]\n};\nvar _default = windowRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2Fic3RyYWN0L3dpbmRvd1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9hYnN0cmFjdC93aW5kb3dSb2xlLmpzPzgzOGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgd2luZG93Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IHRydWUsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtbW9kYWwnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnXV1cbn07XG52YXIgX2RlZmF1bHQgPSB3aW5kb3dSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/abstract/windowRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _commandRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/commandRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/commandRole.js\"));\nvar _compositeRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/compositeRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js\"));\nvar _inputRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/inputRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/inputRole.js\"));\nvar _landmarkRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/landmarkRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js\"));\nvar _rangeRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/rangeRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js\"));\nvar _roletypeRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/roletypeRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js\"));\nvar _sectionRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/sectionRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js\"));\nvar _sectionheadRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/sectionheadRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js\"));\nvar _selectRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/selectRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/selectRole.js\"));\nvar _structureRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/structureRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/structureRole.js\"));\nvar _widgetRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/widgetRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js\"));\nvar _windowRole = _interopRequireDefault(__webpack_require__(/*! ./abstract/windowRole */ \"./node_modules/aria-query/lib/etc/roles/abstract/windowRole.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ariaAbstractRoles = [['command', _commandRole.default], ['composite', _compositeRole.default], ['input', _inputRole.default], ['landmark', _landmarkRole.default], ['range', _rangeRole.default], ['roletype', _roletypeRole.default], ['section', _sectionRole.default], ['sectionhead', _sectionheadRole.default], ['select', _selectRole.default], ['structure', _structureRole.default], ['widget', _widgetRole.default], ['window', _windowRole.default]];\nvar _default = ariaAbstractRoles;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2FyaWFBYnN0cmFjdFJvbGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2YsMENBQTBDLG1CQUFPLENBQUMsK0ZBQXdCO0FBQzFFLDRDQUE0QyxtQkFBTyxDQUFDLG1HQUEwQjtBQUM5RSx3Q0FBd0MsbUJBQU8sQ0FBQywyRkFBc0I7QUFDdEUsMkNBQTJDLG1CQUFPLENBQUMsaUdBQXlCO0FBQzVFLHdDQUF3QyxtQkFBTyxDQUFDLDJGQUFzQjtBQUN0RSwyQ0FBMkMsbUJBQU8sQ0FBQyxpR0FBeUI7QUFDNUUsMENBQTBDLG1CQUFPLENBQUMsK0ZBQXdCO0FBQzFFLDhDQUE4QyxtQkFBTyxDQUFDLHVHQUE0QjtBQUNsRix5Q0FBeUMsbUJBQU8sQ0FBQyw2RkFBdUI7QUFDeEUsNENBQTRDLG1CQUFPLENBQUMsbUdBQTBCO0FBQzlFLHlDQUF5QyxtQkFBTyxDQUFDLDZGQUF1QjtBQUN4RSx5Q0FBeUMsbUJBQU8sQ0FBQyw2RkFBdUI7QUFDeEUsdUNBQXVDLHVDQUF1Qzs7QUFFOUU7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvYXJpYUFic3RyYWN0Um9sZXMuanM/YTRkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfY29tbWFuZFJvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Fic3RyYWN0L2NvbW1hbmRSb2xlXCIpKTtcbnZhciBfY29tcG9zaXRlUm9sZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYWJzdHJhY3QvY29tcG9zaXRlUm9sZVwiKSk7XG52YXIgX2lucHV0Um9sZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYWJzdHJhY3QvaW5wdXRSb2xlXCIpKTtcbnZhciBfbGFuZG1hcmtSb2xlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9hYnN0cmFjdC9sYW5kbWFya1JvbGVcIikpO1xudmFyIF9yYW5nZVJvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Fic3RyYWN0L3JhbmdlUm9sZVwiKSk7XG52YXIgX3JvbGV0eXBlUm9sZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYWJzdHJhY3Qvcm9sZXR5cGVSb2xlXCIpKTtcbnZhciBfc2VjdGlvblJvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Fic3RyYWN0L3NlY3Rpb25Sb2xlXCIpKTtcbnZhciBfc2VjdGlvbmhlYWRSb2xlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9hYnN0cmFjdC9zZWN0aW9uaGVhZFJvbGVcIikpO1xudmFyIF9zZWxlY3RSb2xlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9hYnN0cmFjdC9zZWxlY3RSb2xlXCIpKTtcbnZhciBfc3RydWN0dXJlUm9sZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYWJzdHJhY3Qvc3RydWN0dXJlUm9sZVwiKSk7XG52YXIgX3dpZGdldFJvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Fic3RyYWN0L3dpZGdldFJvbGVcIikpO1xudmFyIF93aW5kb3dSb2xlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9hYnN0cmFjdC93aW5kb3dSb2xlXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBhcmlhQWJzdHJhY3RSb2xlcyA9IFtbJ2NvbW1hbmQnLCBfY29tbWFuZFJvbGUuZGVmYXVsdF0sIFsnY29tcG9zaXRlJywgX2NvbXBvc2l0ZVJvbGUuZGVmYXVsdF0sIFsnaW5wdXQnLCBfaW5wdXRSb2xlLmRlZmF1bHRdLCBbJ2xhbmRtYXJrJywgX2xhbmRtYXJrUm9sZS5kZWZhdWx0XSwgWydyYW5nZScsIF9yYW5nZVJvbGUuZGVmYXVsdF0sIFsncm9sZXR5cGUnLCBfcm9sZXR5cGVSb2xlLmRlZmF1bHRdLCBbJ3NlY3Rpb24nLCBfc2VjdGlvblJvbGUuZGVmYXVsdF0sIFsnc2VjdGlvbmhlYWQnLCBfc2VjdGlvbmhlYWRSb2xlLmRlZmF1bHRdLCBbJ3NlbGVjdCcsIF9zZWxlY3RSb2xlLmRlZmF1bHRdLCBbJ3N0cnVjdHVyZScsIF9zdHJ1Y3R1cmVSb2xlLmRlZmF1bHRdLCBbJ3dpZGdldCcsIF93aWRnZXRSb2xlLmRlZmF1bHRdLCBbJ3dpbmRvdycsIF93aW5kb3dSb2xlLmRlZmF1bHRdXTtcbnZhciBfZGVmYXVsdCA9IGFyaWFBYnN0cmFjdFJvbGVzO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js":
/*!****************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _docAbstractRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docAbstractRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js\"));\nvar _docAcknowledgmentsRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docAcknowledgmentsRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js\"));\nvar _docAfterwordRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docAfterwordRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js\"));\nvar _docAppendixRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docAppendixRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js\"));\nvar _docBacklinkRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docBacklinkRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js\"));\nvar _docBiblioentryRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docBiblioentryRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js\"));\nvar _docBibliographyRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docBibliographyRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js\"));\nvar _docBibliorefRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docBibliorefRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js\"));\nvar _docChapterRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docChapterRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js\"));\nvar _docColophonRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docColophonRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js\"));\nvar _docConclusionRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docConclusionRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js\"));\nvar _docCoverRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docCoverRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js\"));\nvar _docCreditRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docCreditRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js\"));\nvar _docCreditsRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docCreditsRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js\"));\nvar _docDedicationRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docDedicationRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js\"));\nvar _docEndnoteRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docEndnoteRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js\"));\nvar _docEndnotesRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docEndnotesRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js\"));\nvar _docEpigraphRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docEpigraphRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js\"));\nvar _docEpilogueRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docEpilogueRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js\"));\nvar _docErrataRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docErrataRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js\"));\nvar _docExampleRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docExampleRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js\"));\nvar _docFootnoteRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docFootnoteRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js\"));\nvar _docForewordRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docForewordRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js\"));\nvar _docGlossaryRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docGlossaryRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js\"));\nvar _docGlossrefRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docGlossrefRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js\"));\nvar _docIndexRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docIndexRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js\"));\nvar _docIntroductionRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docIntroductionRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js\"));\nvar _docNoterefRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docNoterefRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js\"));\nvar _docNoticeRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docNoticeRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js\"));\nvar _docPagebreakRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docPagebreakRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js\"));\nvar _docPagelistRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docPagelistRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js\"));\nvar _docPartRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docPartRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js\"));\nvar _docPrefaceRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docPrefaceRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js\"));\nvar _docPrologueRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docPrologueRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js\"));\nvar _docPullquoteRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docPullquoteRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js\"));\nvar _docQnaRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docQnaRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js\"));\nvar _docSubtitleRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docSubtitleRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js\"));\nvar _docTipRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docTipRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js\"));\nvar _docTocRole = _interopRequireDefault(__webpack_require__(/*! ./dpub/docTocRole */ \"./node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ariaDpubRoles = [['doc-abstract', _docAbstractRole.default], ['doc-acknowledgments', _docAcknowledgmentsRole.default], ['doc-afterword', _docAfterwordRole.default], ['doc-appendix', _docAppendixRole.default], ['doc-backlink', _docBacklinkRole.default], ['doc-biblioentry', _docBiblioentryRole.default], ['doc-bibliography', _docBibliographyRole.default], ['doc-biblioref', _docBibliorefRole.default], ['doc-chapter', _docChapterRole.default], ['doc-colophon', _docColophonRole.default], ['doc-conclusion', _docConclusionRole.default], ['doc-cover', _docCoverRole.default], ['doc-credit', _docCreditRole.default], ['doc-credits', _docCreditsRole.default], ['doc-dedication', _docDedicationRole.default], ['doc-endnote', _docEndnoteRole.default], ['doc-endnotes', _docEndnotesRole.default], ['doc-epigraph', _docEpigraphRole.default], ['doc-epilogue', _docEpilogueRole.default], ['doc-errata', _docErrataRole.default], ['doc-example', _docExampleRole.default], ['doc-footnote', _docFootnoteRole.default], ['doc-foreword', _docForewordRole.default], ['doc-glossary', _docGlossaryRole.default], ['doc-glossref', _docGlossrefRole.default], ['doc-index', _docIndexRole.default], ['doc-introduction', _docIntroductionRole.default], ['doc-noteref', _docNoterefRole.default], ['doc-notice', _docNoticeRole.default], ['doc-pagebreak', _docPagebreakRole.default], ['doc-pagelist', _docPagelistRole.default], ['doc-part', _docPartRole.default], ['doc-preface', _docPrefaceRole.default], ['doc-prologue', _docPrologueRole.default], ['doc-pullquote', _docPullquoteRole.default], ['doc-qna', _docQnaRole.default], ['doc-subtitle', _docSubtitleRole.default], ['doc-tip', _docTipRole.default], ['doc-toc', _docTocRole.default]];\nvar _default = ariaDpubRoles;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _graphicsDocumentRole = _interopRequireDefault(__webpack_require__(/*! ./graphics/graphicsDocumentRole */ \"./node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js\"));\nvar _graphicsObjectRole = _interopRequireDefault(__webpack_require__(/*! ./graphics/graphicsObjectRole */ \"./node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js\"));\nvar _graphicsSymbolRole = _interopRequireDefault(__webpack_require__(/*! ./graphics/graphicsSymbolRole */ \"./node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ariaGraphicsRoles = [['graphics-document', _graphicsDocumentRole.default], ['graphics-object', _graphicsObjectRole.default], ['graphics-symbol', _graphicsSymbolRole.default]];\nvar _default = ariaGraphicsRoles;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2FyaWFHcmFwaGljc1JvbGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2YsbURBQW1ELG1CQUFPLENBQUMsaUhBQWlDO0FBQzVGLGlEQUFpRCxtQkFBTyxDQUFDLDZHQUErQjtBQUN4RixpREFBaUQsbUJBQU8sQ0FBQyw2R0FBK0I7QUFDeEYsdUNBQXVDLHVDQUF1Qzs7QUFFOUU7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvYXJpYUdyYXBoaWNzUm9sZXMuanM/ZjMxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfZ3JhcGhpY3NEb2N1bWVudFJvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2dyYXBoaWNzL2dyYXBoaWNzRG9jdW1lbnRSb2xlXCIpKTtcbnZhciBfZ3JhcGhpY3NPYmplY3RSb2xlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ncmFwaGljcy9ncmFwaGljc09iamVjdFJvbGVcIikpO1xudmFyIF9ncmFwaGljc1N5bWJvbFJvbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2dyYXBoaWNzL2dyYXBoaWNzU3ltYm9sUm9sZVwiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgYXJpYUdyYXBoaWNzUm9sZXMgPSBbWydncmFwaGljcy1kb2N1bWVudCcsIF9ncmFwaGljc0RvY3VtZW50Um9sZS5kZWZhdWx0XSwgWydncmFwaGljcy1vYmplY3QnLCBfZ3JhcGhpY3NPYmplY3RSb2xlLmRlZmF1bHRdLCBbJ2dyYXBoaWNzLXN5bWJvbCcsIF9ncmFwaGljc1N5bWJvbFJvbGUuZGVmYXVsdF1dO1xudmFyIF9kZWZhdWx0ID0gYXJpYUdyYXBoaWNzUm9sZXM7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _alertRole = _interopRequireDefault(__webpack_require__(/*! ./literal/alertRole */ \"./node_modules/aria-query/lib/etc/roles/literal/alertRole.js\"));\nvar _alertdialogRole = _interopRequireDefault(__webpack_require__(/*! ./literal/alertdialogRole */ \"./node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js\"));\nvar _applicationRole = _interopRequireDefault(__webpack_require__(/*! ./literal/applicationRole */ \"./node_modules/aria-query/lib/etc/roles/literal/applicationRole.js\"));\nvar _articleRole = _interopRequireDefault(__webpack_require__(/*! ./literal/articleRole */ \"./node_modules/aria-query/lib/etc/roles/literal/articleRole.js\"));\nvar _bannerRole = _interopRequireDefault(__webpack_require__(/*! ./literal/bannerRole */ \"./node_modules/aria-query/lib/etc/roles/literal/bannerRole.js\"));\nvar _blockquoteRole = _interopRequireDefault(__webpack_require__(/*! ./literal/blockquoteRole */ \"./node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js\"));\nvar _buttonRole = _interopRequireDefault(__webpack_require__(/*! ./literal/buttonRole */ \"./node_modules/aria-query/lib/etc/roles/literal/buttonRole.js\"));\nvar _captionRole = _interopRequireDefault(__webpack_require__(/*! ./literal/captionRole */ \"./node_modules/aria-query/lib/etc/roles/literal/captionRole.js\"));\nvar _cellRole = _interopRequireDefault(__webpack_require__(/*! ./literal/cellRole */ \"./node_modules/aria-query/lib/etc/roles/literal/cellRole.js\"));\nvar _checkboxRole = _interopRequireDefault(__webpack_require__(/*! ./literal/checkboxRole */ \"./node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js\"));\nvar _codeRole = _interopRequireDefault(__webpack_require__(/*! ./literal/codeRole */ \"./node_modules/aria-query/lib/etc/roles/literal/codeRole.js\"));\nvar _columnheaderRole = _interopRequireDefault(__webpack_require__(/*! ./literal/columnheaderRole */ \"./node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js\"));\nvar _comboboxRole = _interopRequireDefault(__webpack_require__(/*! ./literal/comboboxRole */ \"./node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js\"));\nvar _complementaryRole = _interopRequireDefault(__webpack_require__(/*! ./literal/complementaryRole */ \"./node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js\"));\nvar _contentinfoRole = _interopRequireDefault(__webpack_require__(/*! ./literal/contentinfoRole */ \"./node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js\"));\nvar _definitionRole = _interopRequireDefault(__webpack_require__(/*! ./literal/definitionRole */ \"./node_modules/aria-query/lib/etc/roles/literal/definitionRole.js\"));\nvar _deletionRole = _interopRequireDefault(__webpack_require__(/*! ./literal/deletionRole */ \"./node_modules/aria-query/lib/etc/roles/literal/deletionRole.js\"));\nvar _dialogRole = _interopRequireDefault(__webpack_require__(/*! ./literal/dialogRole */ \"./node_modules/aria-query/lib/etc/roles/literal/dialogRole.js\"));\nvar _directoryRole = _interopRequireDefault(__webpack_require__(/*! ./literal/directoryRole */ \"./node_modules/aria-query/lib/etc/roles/literal/directoryRole.js\"));\nvar _documentRole = _interopRequireDefault(__webpack_require__(/*! ./literal/documentRole */ \"./node_modules/aria-query/lib/etc/roles/literal/documentRole.js\"));\nvar _emphasisRole = _interopRequireDefault(__webpack_require__(/*! ./literal/emphasisRole */ \"./node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js\"));\nvar _feedRole = _interopRequireDefault(__webpack_require__(/*! ./literal/feedRole */ \"./node_modules/aria-query/lib/etc/roles/literal/feedRole.js\"));\nvar _figureRole = _interopRequireDefault(__webpack_require__(/*! ./literal/figureRole */ \"./node_modules/aria-query/lib/etc/roles/literal/figureRole.js\"));\nvar _formRole = _interopRequireDefault(__webpack_require__(/*! ./literal/formRole */ \"./node_modules/aria-query/lib/etc/roles/literal/formRole.js\"));\nvar _genericRole = _interopRequireDefault(__webpack_require__(/*! ./literal/genericRole */ \"./node_modules/aria-query/lib/etc/roles/literal/genericRole.js\"));\nvar _gridRole = _interopRequireDefault(__webpack_require__(/*! ./literal/gridRole */ \"./node_modules/aria-query/lib/etc/roles/literal/gridRole.js\"));\nvar _gridcellRole = _interopRequireDefault(__webpack_require__(/*! ./literal/gridcellRole */ \"./node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js\"));\nvar _groupRole = _interopRequireDefault(__webpack_require__(/*! ./literal/groupRole */ \"./node_modules/aria-query/lib/etc/roles/literal/groupRole.js\"));\nvar _headingRole = _interopRequireDefault(__webpack_require__(/*! ./literal/headingRole */ \"./node_modules/aria-query/lib/etc/roles/literal/headingRole.js\"));\nvar _imgRole = _interopRequireDefault(__webpack_require__(/*! ./literal/imgRole */ \"./node_modules/aria-query/lib/etc/roles/literal/imgRole.js\"));\nvar _insertionRole = _interopRequireDefault(__webpack_require__(/*! ./literal/insertionRole */ \"./node_modules/aria-query/lib/etc/roles/literal/insertionRole.js\"));\nvar _linkRole = _interopRequireDefault(__webpack_require__(/*! ./literal/linkRole */ \"./node_modules/aria-query/lib/etc/roles/literal/linkRole.js\"));\nvar _listRole = _interopRequireDefault(__webpack_require__(/*! ./literal/listRole */ \"./node_modules/aria-query/lib/etc/roles/literal/listRole.js\"));\nvar _listboxRole = _interopRequireDefault(__webpack_require__(/*! ./literal/listboxRole */ \"./node_modules/aria-query/lib/etc/roles/literal/listboxRole.js\"));\nvar _listitemRole = _interopRequireDefault(__webpack_require__(/*! ./literal/listitemRole */ \"./node_modules/aria-query/lib/etc/roles/literal/listitemRole.js\"));\nvar _logRole = _interopRequireDefault(__webpack_require__(/*! ./literal/logRole */ \"./node_modules/aria-query/lib/etc/roles/literal/logRole.js\"));\nvar _mainRole = _interopRequireDefault(__webpack_require__(/*! ./literal/mainRole */ \"./node_modules/aria-query/lib/etc/roles/literal/mainRole.js\"));\nvar _markRole = _interopRequireDefault(__webpack_require__(/*! ./literal/markRole */ \"./node_modules/aria-query/lib/etc/roles/literal/markRole.js\"));\nvar _marqueeRole = _interopRequireDefault(__webpack_require__(/*! ./literal/marqueeRole */ \"./node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js\"));\nvar _mathRole = _interopRequireDefault(__webpack_require__(/*! ./literal/mathRole */ \"./node_modules/aria-query/lib/etc/roles/literal/mathRole.js\"));\nvar _menuRole = _interopRequireDefault(__webpack_require__(/*! ./literal/menuRole */ \"./node_modules/aria-query/lib/etc/roles/literal/menuRole.js\"));\nvar _menubarRole = _interopRequireDefault(__webpack_require__(/*! ./literal/menubarRole */ \"./node_modules/aria-query/lib/etc/roles/literal/menubarRole.js\"));\nvar _menuitemRole = _interopRequireDefault(__webpack_require__(/*! ./literal/menuitemRole */ \"./node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js\"));\nvar _menuitemcheckboxRole = _interopRequireDefault(__webpack_require__(/*! ./literal/menuitemcheckboxRole */ \"./node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js\"));\nvar _menuitemradioRole = _interopRequireDefault(__webpack_require__(/*! ./literal/menuitemradioRole */ \"./node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js\"));\nvar _meterRole = _interopRequireDefault(__webpack_require__(/*! ./literal/meterRole */ \"./node_modules/aria-query/lib/etc/roles/literal/meterRole.js\"));\nvar _navigationRole = _interopRequireDefault(__webpack_require__(/*! ./literal/navigationRole */ \"./node_modules/aria-query/lib/etc/roles/literal/navigationRole.js\"));\nvar _noneRole = _interopRequireDefault(__webpack_require__(/*! ./literal/noneRole */ \"./node_modules/aria-query/lib/etc/roles/literal/noneRole.js\"));\nvar _noteRole = _interopRequireDefault(__webpack_require__(/*! ./literal/noteRole */ \"./node_modules/aria-query/lib/etc/roles/literal/noteRole.js\"));\nvar _optionRole = _interopRequireDefault(__webpack_require__(/*! ./literal/optionRole */ \"./node_modules/aria-query/lib/etc/roles/literal/optionRole.js\"));\nvar _paragraphRole = _interopRequireDefault(__webpack_require__(/*! ./literal/paragraphRole */ \"./node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js\"));\nvar _presentationRole = _interopRequireDefault(__webpack_require__(/*! ./literal/presentationRole */ \"./node_modules/aria-query/lib/etc/roles/literal/presentationRole.js\"));\nvar _progressbarRole = _interopRequireDefault(__webpack_require__(/*! ./literal/progressbarRole */ \"./node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js\"));\nvar _radioRole = _interopRequireDefault(__webpack_require__(/*! ./literal/radioRole */ \"./node_modules/aria-query/lib/etc/roles/literal/radioRole.js\"));\nvar _radiogroupRole = _interopRequireDefault(__webpack_require__(/*! ./literal/radiogroupRole */ \"./node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js\"));\nvar _regionRole = _interopRequireDefault(__webpack_require__(/*! ./literal/regionRole */ \"./node_modules/aria-query/lib/etc/roles/literal/regionRole.js\"));\nvar _rowRole = _interopRequireDefault(__webpack_require__(/*! ./literal/rowRole */ \"./node_modules/aria-query/lib/etc/roles/literal/rowRole.js\"));\nvar _rowgroupRole = _interopRequireDefault(__webpack_require__(/*! ./literal/rowgroupRole */ \"./node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js\"));\nvar _rowheaderRole = _interopRequireDefault(__webpack_require__(/*! ./literal/rowheaderRole */ \"./node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js\"));\nvar _scrollbarRole = _interopRequireDefault(__webpack_require__(/*! ./literal/scrollbarRole */ \"./node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js\"));\nvar _searchRole = _interopRequireDefault(__webpack_require__(/*! ./literal/searchRole */ \"./node_modules/aria-query/lib/etc/roles/literal/searchRole.js\"));\nvar _searchboxRole = _interopRequireDefault(__webpack_require__(/*! ./literal/searchboxRole */ \"./node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js\"));\nvar _separatorRole = _interopRequireDefault(__webpack_require__(/*! ./literal/separatorRole */ \"./node_modules/aria-query/lib/etc/roles/literal/separatorRole.js\"));\nvar _sliderRole = _interopRequireDefault(__webpack_require__(/*! ./literal/sliderRole */ \"./node_modules/aria-query/lib/etc/roles/literal/sliderRole.js\"));\nvar _spinbuttonRole = _interopRequireDefault(__webpack_require__(/*! ./literal/spinbuttonRole */ \"./node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js\"));\nvar _statusRole = _interopRequireDefault(__webpack_require__(/*! ./literal/statusRole */ \"./node_modules/aria-query/lib/etc/roles/literal/statusRole.js\"));\nvar _strongRole = _interopRequireDefault(__webpack_require__(/*! ./literal/strongRole */ \"./node_modules/aria-query/lib/etc/roles/literal/strongRole.js\"));\nvar _subscriptRole = _interopRequireDefault(__webpack_require__(/*! ./literal/subscriptRole */ \"./node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js\"));\nvar _superscriptRole = _interopRequireDefault(__webpack_require__(/*! ./literal/superscriptRole */ \"./node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js\"));\nvar _switchRole = _interopRequireDefault(__webpack_require__(/*! ./literal/switchRole */ \"./node_modules/aria-query/lib/etc/roles/literal/switchRole.js\"));\nvar _tabRole = _interopRequireDefault(__webpack_require__(/*! ./literal/tabRole */ \"./node_modules/aria-query/lib/etc/roles/literal/tabRole.js\"));\nvar _tableRole = _interopRequireDefault(__webpack_require__(/*! ./literal/tableRole */ \"./node_modules/aria-query/lib/etc/roles/literal/tableRole.js\"));\nvar _tablistRole = _interopRequireDefault(__webpack_require__(/*! ./literal/tablistRole */ \"./node_modules/aria-query/lib/etc/roles/literal/tablistRole.js\"));\nvar _tabpanelRole = _interopRequireDefault(__webpack_require__(/*! ./literal/tabpanelRole */ \"./node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js\"));\nvar _termRole = _interopRequireDefault(__webpack_require__(/*! ./literal/termRole */ \"./node_modules/aria-query/lib/etc/roles/literal/termRole.js\"));\nvar _textboxRole = _interopRequireDefault(__webpack_require__(/*! ./literal/textboxRole */ \"./node_modules/aria-query/lib/etc/roles/literal/textboxRole.js\"));\nvar _timeRole = _interopRequireDefault(__webpack_require__(/*! ./literal/timeRole */ \"./node_modules/aria-query/lib/etc/roles/literal/timeRole.js\"));\nvar _timerRole = _interopRequireDefault(__webpack_require__(/*! ./literal/timerRole */ \"./node_modules/aria-query/lib/etc/roles/literal/timerRole.js\"));\nvar _toolbarRole = _interopRequireDefault(__webpack_require__(/*! ./literal/toolbarRole */ \"./node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js\"));\nvar _tooltipRole = _interopRequireDefault(__webpack_require__(/*! ./literal/tooltipRole */ \"./node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js\"));\nvar _treeRole = _interopRequireDefault(__webpack_require__(/*! ./literal/treeRole */ \"./node_modules/aria-query/lib/etc/roles/literal/treeRole.js\"));\nvar _treegridRole = _interopRequireDefault(__webpack_require__(/*! ./literal/treegridRole */ \"./node_modules/aria-query/lib/etc/roles/literal/treegridRole.js\"));\nvar _treeitemRole = _interopRequireDefault(__webpack_require__(/*! ./literal/treeitemRole */ \"./node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ariaLiteralRoles = [['alert', _alertRole.default], ['alertdialog', _alertdialogRole.default], ['application', _applicationRole.default], ['article', _articleRole.default], ['banner', _bannerRole.default], ['blockquote', _blockquoteRole.default], ['button', _buttonRole.default], ['caption', _captionRole.default], ['cell', _cellRole.default], ['checkbox', _checkboxRole.default], ['code', _codeRole.default], ['columnheader', _columnheaderRole.default], ['combobox', _comboboxRole.default], ['complementary', _complementaryRole.default], ['contentinfo', _contentinfoRole.default], ['definition', _definitionRole.default], ['deletion', _deletionRole.default], ['dialog', _dialogRole.default], ['directory', _directoryRole.default], ['document', _documentRole.default], ['emphasis', _emphasisRole.default], ['feed', _feedRole.default], ['figure', _figureRole.default], ['form', _formRole.default], ['generic', _genericRole.default], ['grid', _gridRole.default], ['gridcell', _gridcellRole.default], ['group', _groupRole.default], ['heading', _headingRole.default], ['img', _imgRole.default], ['insertion', _insertionRole.default], ['link', _linkRole.default], ['list', _listRole.default], ['listbox', _listboxRole.default], ['listitem', _listitemRole.default], ['log', _logRole.default], ['main', _mainRole.default], ['mark', _markRole.default], ['marquee', _marqueeRole.default], ['math', _mathRole.default], ['menu', _menuRole.default], ['menubar', _menubarRole.default], ['menuitem', _menuitemRole.default], ['menuitemcheckbox', _menuitemcheckboxRole.default], ['menuitemradio', _menuitemradioRole.default], ['meter', _meterRole.default], ['navigation', _navigationRole.default], ['none', _noneRole.default], ['note', _noteRole.default], ['option', _optionRole.default], ['paragraph', _paragraphRole.default], ['presentation', _presentationRole.default], ['progressbar', _progressbarRole.default], ['radio', _radioRole.default], ['radiogroup', _radiogroupRole.default], ['region', _regionRole.default], ['row', _rowRole.default], ['rowgroup', _rowgroupRole.default], ['rowheader', _rowheaderRole.default], ['scrollbar', _scrollbarRole.default], ['search', _searchRole.default], ['searchbox', _searchboxRole.default], ['separator', _separatorRole.default], ['slider', _sliderRole.default], ['spinbutton', _spinbuttonRole.default], ['status', _statusRole.default], ['strong', _strongRole.default], ['subscript', _subscriptRole.default], ['superscript', _superscriptRole.default], ['switch', _switchRole.default], ['tab', _tabRole.default], ['table', _tableRole.default], ['tablist', _tablistRole.default], ['tabpanel', _tabpanelRole.default], ['term', _termRole.default], ['textbox', _textboxRole.default], ['time', _timeRole.default], ['timer', _timerRole.default], ['toolbar', _toolbarRole.default], ['tooltip', _tooltipRole.default], ['tree', _treeRole.default], ['treegrid', _treegridRole.default], ['treeitem', _treeitemRole.default]];\nvar _default = ariaLiteralRoles;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docAbstractRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'abstract [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docAbstractRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQWJzdHJhY3RSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQWJzdHJhY3RSb2xlLmpzPzE5MGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jQWJzdHJhY3RSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2Fic3RyYWN0IFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0Fic3RyYWN0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docAcknowledgmentsRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'acknowledgments [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docAcknowledgmentsRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQWNrbm93bGVkZ21lbnRzUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0Fja25vd2xlZGdtZW50c1JvbGUuanM/MDgzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NBY2tub3dsZWRnbWVudHNSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2Fja25vd2xlZGdtZW50cyBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NBY2tub3dsZWRnbWVudHNSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docAfterwordRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'afterword [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docAfterwordRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQWZ0ZXJ3b3JkUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0FmdGVyd29yZFJvbGUuanM/Nzc2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NBZnRlcndvcmRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2FmdGVyd29yZCBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NBZnRlcndvcmRSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docAppendixRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'appendix [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docAppendixRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQXBwZW5kaXhSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQXBwZW5kaXhSb2xlLmpzPzU4ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jQXBwZW5kaXhSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2FwcGVuZGl4IFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0FwcGVuZGl4Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docBacklinkRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'referrer [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command', 'link']]\n};\nvar _default = docBacklinkRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQmFja2xpbmtSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQmFja2xpbmtSb2xlLmpzP2FjOGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jQmFja2xpbmtSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAncmVmZXJyZXIgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21tYW5kJywgJ2xpbmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NCYWNrbGlua1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docBiblioentryRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'EPUB biblioentry [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: ['doc-bibliography'],\n  requiredContextRole: ['doc-bibliography'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'listitem']]\n};\nvar _default = docBiblioentryRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQmlibGlvZW50cnlSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQmlibGlvZW50cnlSb2xlLmpzP2JmYzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jQmlibGlvZW50cnlSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgJ2FyaWEtaGFzcG9wdXAnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnRVBVQiBiaWJsaW9lbnRyeSBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWydkb2MtYmlibGlvZ3JhcGh5J10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFsnZG9jLWJpYmxpb2dyYXBoeSddLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGlzdGl0ZW0nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NCaWJsaW9lbnRyeVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docBibliographyRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'bibliography [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['doc-biblioentry']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docBibliographyRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQmlibGlvZ3JhcGh5Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0JpYmxpb2dyYXBoeVJvbGUuanM/OGQ3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NCaWJsaW9ncmFwaHlSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2JpYmxpb2dyYXBoeSBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtbJ2RvYy1iaWJsaW9lbnRyeSddXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2xhbmRtYXJrJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jQmlibGlvZ3JhcGh5Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docBibliorefRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'biblioref [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command', 'link']]\n};\nvar _default = docBibliorefRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQmlibGlvcmVmUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0JpYmxpb3JlZlJvbGUuanM/Y2FmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NCaWJsaW9yZWZSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnYmlibGlvcmVmIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICd3aWRnZXQnLCAnY29tbWFuZCcsICdsaW5rJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jQmlibGlvcmVmUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docChapterRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'chapter [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docChapterRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ2hhcHRlclJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NDaGFwdGVyUm9sZS5qcz84Zjg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY0NoYXB0ZXJSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NoYXB0ZXIgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2xhbmRtYXJrJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jQ2hhcHRlclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docColophonRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'colophon [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docColophonRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ29sb3Bob25Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ29sb3Bob25Sb2xlLmpzPzQ0OTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jQ29sb3Bob25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NvbG9waG9uIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0NvbG9waG9uUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docConclusionRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'conclusion [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docConclusionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ29uY2x1c2lvblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NDb25jbHVzaW9uUm9sZS5qcz85ZTg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY0NvbmNsdXNpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NvbmNsdXNpb24gW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2xhbmRtYXJrJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jQ29uY2x1c2lvblJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docCoverRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'cover [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'img']]\n};\nvar _default = docCoverRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ292ZXJSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ292ZXJSb2xlLmpzPzUwYjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jQ292ZXJSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NvdmVyIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdpbWcnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NDb3ZlclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docCreditRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'credit [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docCreditRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ3JlZGl0Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0NyZWRpdFJvbGUuanM/YzEyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NDcmVkaXRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NyZWRpdCBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NDcmVkaXRSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docCreditsRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'credits [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docCreditsRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jQ3JlZGl0c1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NDcmVkaXRzUm9sZS5qcz83YTI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY0NyZWRpdHNSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NyZWRpdHMgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2xhbmRtYXJrJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jQ3JlZGl0c1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docDedicationRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'dedication [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docDedicationRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRGVkaWNhdGlvblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NEZWRpY2F0aW9uUm9sZS5qcz85N2IzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY0RlZGljYXRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2RlZGljYXRpb24gW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jRGVkaWNhdGlvblJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docEndnoteRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'rearnote [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: ['doc-endnotes'],\n  requiredContextRole: ['doc-endnotes'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'listitem']]\n};\nvar _default = docEndnoteRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRW5kbm90ZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NFbmRub3RlUm9sZS5qcz8wNDQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY0VuZG5vdGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3JlYXJub3RlIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbJ2RvYy1lbmRub3RlcyddLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbJ2RvYy1lbmRub3RlcyddLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGlzdGl0ZW0nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NFbmRub3RlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docEndnotesRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'rearnotes [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['doc-endnote']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docEndnotesRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRW5kbm90ZXNSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRW5kbm90ZXNSb2xlLmpzP2U4ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jRW5kbm90ZXNSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3JlYXJub3RlcyBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtbJ2RvYy1lbmRub3RlJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NFbmRub3Rlc1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docEpigraphRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'epigraph [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docEpigraphRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXBpZ3JhcGhSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXBpZ3JhcGhSb2xlLmpzPzYyZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jRXBpZ3JhcGhSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2VwaWdyYXBoIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0VwaWdyYXBoUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docEpilogueRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'epilogue [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docEpilogueRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXBpbG9ndWVSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXBpbG9ndWVSb2xlLmpzPzgxNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jRXBpbG9ndWVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2VwaWxvZ3VlIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0VwaWxvZ3VlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docErrataRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'errata [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docErrataRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXJyYXRhUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0VycmF0YVJvbGUuanM/M2MzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NFcnJhdGFSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2VycmF0YSBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NFcnJhdGFSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docExampleRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docExampleRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXhhbXBsZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRXhhbXBsZVJvbGUuanM/YTI4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NFeGFtcGxlUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWRpc2FibGVkJzogbnVsbCxcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWV4cGFuZGVkJzogbnVsbCxcbiAgICAnYXJpYS1oYXNwb3B1cCc6IG51bGwsXG4gICAgJ2FyaWEtaW52YWxpZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0V4YW1wbGVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docFootnoteRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'footnote [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docFootnoteRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRm9vdG5vdGVSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRm9vdG5vdGVSb2xlLmpzP2M4ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jRm9vdG5vdGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2Zvb3Rub3RlIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0Zvb3Rub3RlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docForewordRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'foreword [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docForewordRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRm9yZXdvcmRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jRm9yZXdvcmRSb2xlLmpzPzZmODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jRm9yZXdvcmRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2ZvcmV3b3JkIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0ZvcmV3b3JkUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docGlossaryRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'glossary [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['definition'], ['term']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docGlossaryRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jR2xvc3NhcnlSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jR2xvc3NhcnlSb2xlLmpzPzJkOGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jR2xvc3NhcnlSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2dsb3NzYXJ5IFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1snZGVmaW5pdGlvbiddLCBbJ3Rlcm0nXV0sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY0dsb3NzYXJ5Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docGlossrefRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'glossref [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command', 'link']]\n};\nvar _default = docGlossrefRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jR2xvc3NyZWZSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jR2xvc3NyZWZSb2xlLmpzP2I5YTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jR2xvc3NyZWZSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnZ2xvc3NyZWYgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21tYW5kJywgJ2xpbmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NHbG9zc3JlZlJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docIndexRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'index [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark', 'navigation']]\n};\nvar _default = docIndexRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jSW5kZXhSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jSW5kZXhSb2xlLmpzP2VmZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jSW5kZXhSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2luZGV4IFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyaycsICduYXZpZ2F0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jSW5kZXhSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docIntroductionRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'introduction [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docIntroductionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jSW50cm9kdWN0aW9uUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY0ludHJvZHVjdGlvblJvbGUuanM/NTBlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NJbnRyb2R1Y3Rpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2ludHJvZHVjdGlvbiBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NJbnRyb2R1Y3Rpb25Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docNoterefRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'noteref [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command', 'link']]\n};\nvar _default = docNoterefRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jTm90ZXJlZlJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NOb3RlcmVmUm9sZS5qcz80MTRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY05vdGVyZWZSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnbm90ZXJlZiBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbW1hbmQnLCAnbGluayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY05vdGVyZWZSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docNoticeRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'notice [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'note']]\n};\nvar _default = docNoticeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jTm90aWNlUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY05vdGljZVJvbGUuanM/ZTY5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NOb3RpY2VSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ25vdGljZSBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbm90ZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY05vdGljZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docPagebreakRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'pagebreak [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'separator']]\n};\nvar _default = docPagebreakRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUGFnZWJyZWFrUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NQYWdlYnJlYWtSb2xlLmpzPzQ1NzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jUGFnZWJyZWFrUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiB0cnVlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWV4cGFuZGVkJzogbnVsbCxcbiAgICAnYXJpYS1oYXNwb3B1cCc6IG51bGwsXG4gICAgJ2FyaWEtaW52YWxpZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdwYWdlYnJlYWsgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZXBhcmF0b3InXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NQYWdlYnJlYWtSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docPagelistRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'page-list [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark', 'navigation']]\n};\nvar _default = docPagelistRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUGFnZWxpc3RSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUGFnZWxpc3RSb2xlLmpzPzI0YmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jUGFnZWxpc3RSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3BhZ2UtbGlzdCBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnLCAnbmF2aWdhdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY1BhZ2VsaXN0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docPartRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'part [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docPartRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUGFydFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NQYXJ0Um9sZS5qcz9hOTA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY1BhcnRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgJ2FyaWEtaGFzcG9wdXAnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAncGFydCBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NQYXJ0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docPrefaceRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'preface [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docPrefaceRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUHJlZmFjZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZHB1Yi9kb2NQcmVmYWNlUm9sZS5qcz8xOWM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY1ByZWZhY2VSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3ByZWZhY2UgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2xhbmRtYXJrJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jUHJlZmFjZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docPrologueRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'prologue [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = docPrologueRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUHJvbG9ndWVSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUHJvbG9ndWVSb2xlLmpzPzFlZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jUHJvbG9ndWVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3Byb2xvZ3VlIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY1Byb2xvZ3VlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docPullquoteRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'pullquote [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['none']]\n};\nvar _default = docPullquoteRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUHVsbHF1b3RlUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY1B1bGxxdW90ZVJvbGUuanM/ZDBlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NQdWxscXVvdGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdwdWxscXVvdGUgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ25vbmUnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NQdWxscXVvdGVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docQnaRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'qna [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = docQnaRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jUW5hUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY1FuYVJvbGUuanM/MzQ4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NRbmFSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3FuYSBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NRbmFSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docSubtitleRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'subtitle [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'sectionhead']]\n};\nvar _default = docSubtitleRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jU3VidGl0bGVSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jU3VidGl0bGVSb2xlLmpzP2YzNjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZG9jU3VidGl0bGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3N1YnRpdGxlIFtFUFVCLVNTVl0nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdFUFVCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbmhlYWQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NTdWJ0aXRsZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docTipRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'help [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'note']]\n};\nvar _default = docTipRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jVGlwUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY1RpcFJvbGUuanM/ZTA1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NUaXBSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2hlbHAgW0VQVUItU1NWXSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0VQVUInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ25vdGUnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBkb2NUaXBSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar docTocRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'toc [EPUB-SSV]'\n    },\n    module: 'EPUB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark', 'navigation']]\n};\nvar _default = docTocRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2RwdWIvZG9jVG9jUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9kcHViL2RvY1RvY1JvbGUuanM/ZGU3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkb2NUb2NSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3RvYyBbRVBVQi1TU1ZdJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRVBVQidcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnLCAnbmF2aWdhdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRvY1RvY1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js":
/*!********************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar graphicsDocumentRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    module: 'GRAPHICS',\n    concept: {\n      name: 'graphics-object'\n    }\n  }, {\n    module: 'ARIA',\n    concept: {\n      name: 'img'\n    }\n  }, {\n    module: 'ARIA',\n    concept: {\n      name: 'article'\n    }\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'document']]\n};\nvar _default = graphicsDocumentRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2dyYXBoaWNzL2dyYXBoaWNzRG9jdW1lbnRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9ncmFwaGljcy9ncmFwaGljc0RvY3VtZW50Um9sZS5qcz8xZGVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGdyYXBoaWNzRG9jdW1lbnRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgJ2FyaWEtaGFzcG9wdXAnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBtb2R1bGU6ICdHUkFQSElDUycsXG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2dyYXBoaWNzLW9iamVjdCdcbiAgICB9XG4gIH0sIHtcbiAgICBtb2R1bGU6ICdBUklBJyxcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaW1nJ1xuICAgIH1cbiAgfSwge1xuICAgIG1vZHVsZTogJ0FSSUEnLFxuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdhcnRpY2xlJ1xuICAgIH1cbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ2RvY3VtZW50J11dXG59O1xudmFyIF9kZWZhdWx0ID0gZ3JhcGhpY3NEb2N1bWVudFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar graphicsObjectRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    module: 'GRAPHICS',\n    concept: {\n      name: 'graphics-document'\n    }\n  }, {\n    module: 'ARIA',\n    concept: {\n      name: 'group'\n    }\n  }, {\n    module: 'ARIA',\n    concept: {\n      name: 'img'\n    }\n  }, {\n    module: 'GRAPHICS',\n    concept: {\n      name: 'graphics-symbol'\n    }\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'group']]\n};\nvar _default = graphicsObjectRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2dyYXBoaWNzL2dyYXBoaWNzT2JqZWN0Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2dyYXBoaWNzL2dyYXBoaWNzT2JqZWN0Um9sZS5qcz9mZjE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGdyYXBoaWNzT2JqZWN0Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgbW9kdWxlOiAnR1JBUEhJQ1MnLFxuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdncmFwaGljcy1kb2N1bWVudCdcbiAgICB9XG4gIH0sIHtcbiAgICBtb2R1bGU6ICdBUklBJyxcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnZ3JvdXAnXG4gICAgfVxuICB9LCB7XG4gICAgbW9kdWxlOiAnQVJJQScsXG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2ltZydcbiAgICB9XG4gIH0sIHtcbiAgICBtb2R1bGU6ICdHUkFQSElDUycsXG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2dyYXBoaWNzLXN5bWJvbCdcbiAgICB9XG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2dyb3VwJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZ3JhcGhpY3NPYmplY3RSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar graphicsSymbolRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'img']]\n};\nvar _default = graphicsSymbolRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2dyYXBoaWNzL2dyYXBoaWNzU3ltYm9sUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvZ3JhcGhpY3MvZ3JhcGhpY3NTeW1ib2xSb2xlLmpzP2Q4YjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZ3JhcGhpY3NTeW1ib2xSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWRpc2FibGVkJzogbnVsbCxcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWV4cGFuZGVkJzogbnVsbCxcbiAgICAnYXJpYS1oYXNwb3B1cCc6IG51bGwsXG4gICAgJ2FyaWEtaW52YWxpZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdpbWcnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBncmFwaGljc1N5bWJvbFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/alertRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/alertRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar alertRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-atomic': 'true',\n    'aria-live': 'assertive'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'alert'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = alertRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYWxlcnRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYWxlcnRSb2xlLmpzP2YxZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgYWxlcnRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYXRvbWljJzogJ3RydWUnLFxuICAgICdhcmlhLWxpdmUnOiAnYXNzZXJ0aXZlJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2FsZXJ0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEZvcm1zJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGFsZXJ0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/alertRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar alertdialogRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'alert'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'alert'], ['roletype', 'window', 'dialog']]\n};\nvar _default = alertdialogRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYWxlcnRkaWFsb2dSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYWxlcnRkaWFsb2dSb2xlLmpzPzFjZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgYWxlcnRkaWFsb2dSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2FsZXJ0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEZvcm1zJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdhbGVydCddLCBbJ3JvbGV0eXBlJywgJ3dpbmRvdycsICdkaWFsb2cnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBhbGVydGRpYWxvZ1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/applicationRole.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/applicationRole.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar applicationRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-activedescendant': null,\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'Device Independence Delivery Unit'\n    }\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = applicationRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYXBwbGljYXRpb25Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2FwcGxpY2F0aW9uUm9sZS5qcz9mYzA0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGFwcGxpY2F0aW9uUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCc6IG51bGwsXG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ0RldmljZSBJbmRlcGVuZGVuY2UgRGVsaXZlcnkgVW5pdCdcbiAgICB9XG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IGFwcGxpY2F0aW9uUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/applicationRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/articleRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/articleRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar articleRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-posinset': null,\n    'aria-setsize': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'article'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'document']]\n};\nvar _default = articleRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYXJ0aWNsZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9hcnRpY2xlUm9sZS5qcz9hYTExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGFydGljbGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtcG9zaW5zZXQnOiBudWxsLFxuICAgICdhcmlhLXNldHNpemUnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnYXJ0aWNsZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdkb2N1bWVudCddXVxufTtcbnZhciBfZGVmYXVsdCA9IGFydGljbGVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/articleRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/bannerRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/bannerRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar bannerRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      constraints: ['scoped to the body element'],\n      name: 'header'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = bannerRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYmFubmVyUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYmFubmVyUm9sZS5qcz85NTQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGJhbm5lclJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgY29uc3RyYWludHM6IFsnc2NvcGVkIHRvIHRoZSBib2R5IGVsZW1lbnQnXSxcbiAgICAgIG5hbWU6ICdoZWFkZXInXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGJhbm5lclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/bannerRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar blockquoteRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'blockquote'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = blockquoteRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYmxvY2txdW90ZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9ibG9ja3F1b3RlUm9sZS5qcz82NDk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGJsb2NrcXVvdGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdibG9ja3F1b3RlJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBibG9ja3F1b3RlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/buttonRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/buttonRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar buttonRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-pressed': null\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'button'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'image'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'reset'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'submit'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'button'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'trigger'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command']]\n};\nvar _default = buttonRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvYnV0dG9uUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2J1dHRvblJvbGUuanM/YjdiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBidXR0b25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWRpc2FibGVkJzogbnVsbCxcbiAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgJ2FyaWEtaGFzcG9wdXAnOiBudWxsLFxuICAgICdhcmlhLXByZXNzZWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBuYW1lOiAndHlwZScsXG4gICAgICAgIHZhbHVlOiAnYnV0dG9uJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ2ltYWdlJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3Jlc2V0J1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3N1Ym1pdCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdidXR0b24nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3RyaWdnZXInXG4gICAgfSxcbiAgICBtb2R1bGU6ICdYRm9ybXMnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21tYW5kJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gYnV0dG9uUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/buttonRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/captionRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/captionRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar captionRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'caption'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['figure', 'grid', 'table'],\n  requiredContextRole: ['figure', 'grid', 'table'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = captionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY2FwdGlvblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9jYXB0aW9uUm9sZS5qcz8xYzE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNhcHRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NhcHRpb24nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbJ2ZpZ3VyZScsICdncmlkJywgJ3RhYmxlJ10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFsnZmlndXJlJywgJ2dyaWQnLCAndGFibGUnXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gY2FwdGlvblJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/captionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/cellRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/cellRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar cellRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-colindex': null,\n    'aria-colspan': null,\n    'aria-rowindex': null,\n    'aria-rowspan': null\n  },\n  relatedConcepts: [{\n    concept: {\n      constraints: ['ancestor table element has table role'],\n      name: 'td'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['row'],\n  requiredContextRole: ['row'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = cellRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY2VsbFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9jZWxsUm9sZS5qcz8xNmI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNlbGxSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJywgJ2NvbnRlbnRzJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtY29saW5kZXgnOiBudWxsLFxuICAgICdhcmlhLWNvbHNwYW4nOiBudWxsLFxuICAgICdhcmlhLXJvd2luZGV4JzogbnVsbCxcbiAgICAnYXJpYS1yb3dzcGFuJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgY29uc3RyYWludHM6IFsnYW5jZXN0b3IgdGFibGUgZWxlbWVudCBoYXMgdGFibGUgcm9sZSddLFxuICAgICAgbmFtZTogJ3RkJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWydyb3cnXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydyb3cnXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gY2VsbFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/cellRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar checkboxRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-checked': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-invalid': null,\n    'aria-readonly': null,\n    'aria-required': null\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'checkbox'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'option'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-checked': null\n  },\n  superClass: [['roletype', 'widget', 'input']]\n};\nvar _default = checkboxRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY2hlY2tib3hSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY2hlY2tib3hSb2xlLmpzP2JmODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgY2hlY2tib3hSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWNoZWNrZWQnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsLFxuICAgICdhcmlhLXJlYWRvbmx5JzogbnVsbCxcbiAgICAnYXJpYS1yZXF1aXJlZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICdjaGVja2JveCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdvcHRpb24nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdBUklBJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS1jaGVja2VkJzogbnVsbFxuICB9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICd3aWRnZXQnLCAnaW5wdXQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBjaGVja2JveFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/codeRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/codeRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar codeRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'code'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = codeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29kZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9jb2RlUm9sZS5qcz9iNDMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNvZGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2NvZGUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGNvZGVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/codeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar columnheaderRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-sort': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'th'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'scope',\n        value: 'col'\n      }],\n      name: 'th'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'scope',\n        value: 'colgroup'\n      }],\n      name: 'th'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['row'],\n  requiredContextRole: ['row'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'cell'], ['roletype', 'structure', 'section', 'cell', 'gridcell'], ['roletype', 'widget', 'gridcell'], ['roletype', 'structure', 'sectionhead']]\n};\nvar _default = columnheaderRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29sdW1uaGVhZGVyUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9jb2x1bW5oZWFkZXJSb2xlLmpzPzUwMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgY29sdW1uaGVhZGVyUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJywgJ2NvbnRlbnRzJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtc29ydCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICd0aCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBuYW1lOiAnc2NvcGUnLFxuICAgICAgICB2YWx1ZTogJ2NvbCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ3RoJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIG5hbWU6ICdzY29wZScsXG4gICAgICAgIHZhbHVlOiAnY29sZ3JvdXAnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICd0aCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFsncm93J10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFsncm93J10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdjZWxsJ10sIFsncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnY2VsbCcsICdncmlkY2VsbCddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdncmlkY2VsbCddLCBbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uaGVhZCddXVxufTtcbnZhciBfZGVmYXVsdCA9IGNvbHVtbmhlYWRlclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar comboboxRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-activedescendant': null,\n    'aria-autocomplete': null,\n    'aria-errormessage': null,\n    'aria-invalid': null,\n    'aria-readonly': null,\n    'aria-required': null,\n    'aria-expanded': 'false',\n    'aria-haspopup': 'listbox'\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'email'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'search'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'tel'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'text'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'url'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'url'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'multiple'\n      }, {\n        constraints: ['undefined'],\n        name: 'size'\n      }],\n      constraints: ['the multiple attribute is not set and the size attribute does not have a value greater than 1'],\n      name: 'select'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'select'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-controls': null,\n    'aria-expanded': 'false'\n  },\n  superClass: [['roletype', 'widget', 'input']]\n};\nvar _default = comboboxRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29tYm9ib3hSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2NvbWJvYm94Um9sZS5qcz8zOGU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNvbWJvYm94Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCc6IG51bGwsXG4gICAgJ2FyaWEtYXV0b2NvbXBsZXRlJzogbnVsbCxcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsLFxuICAgICdhcmlhLXJlYWRvbmx5JzogbnVsbCxcbiAgICAnYXJpYS1yZXF1aXJlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiAnZmFsc2UnLFxuICAgICdhcmlhLWhhc3BvcHVwJzogJ2xpc3Rib3gnXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2xpc3QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICdlbWFpbCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3NlYXJjaCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3RlbCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3RleHQnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2xpc3QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICd1cmwnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2xpc3QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICd1cmwnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWyd1bmRlZmluZWQnXSxcbiAgICAgICAgbmFtZTogJ211bHRpcGxlJ1xuICAgICAgfSwge1xuICAgICAgICBjb25zdHJhaW50czogWyd1bmRlZmluZWQnXSxcbiAgICAgICAgbmFtZTogJ3NpemUnXG4gICAgICB9XSxcbiAgICAgIGNvbnN0cmFpbnRzOiBbJ3RoZSBtdWx0aXBsZSBhdHRyaWJ1dGUgaXMgbm90IHNldCBhbmQgdGhlIHNpemUgYXR0cmlidXRlIGRvZXMgbm90IGhhdmUgYSB2YWx1ZSBncmVhdGVyIHRoYW4gMSddLFxuICAgICAgbmFtZTogJ3NlbGVjdCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnc2VsZWN0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEZvcm1zJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS1jb250cm9scyc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiAnZmFsc2UnXG4gIH0sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCddXVxufTtcbnZhciBfZGVmYXVsdCA9IGNvbWJvYm94Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar complementaryRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'aside'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'aria-label'\n      }],\n      constraints: ['scoped to a sectioning content element', 'scoped to a sectioning root element other than body'],\n      name: 'aside'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'aria-labelledby'\n      }],\n      constraints: ['scoped to a sectioning content element', 'scoped to a sectioning root element other than body'],\n      name: 'aside'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = complementaryRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29tcGxlbWVudGFyeVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29tcGxlbWVudGFyeVJvbGUuanM/NzRiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBjb21wbGVtZW50YXJ5Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnYXNpZGUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgY29uc3RyYWludHM6IFsnc2V0J10sXG4gICAgICAgIG5hbWU6ICdhcmlhLWxhYmVsJ1xuICAgICAgfV0sXG4gICAgICBjb25zdHJhaW50czogWydzY29wZWQgdG8gYSBzZWN0aW9uaW5nIGNvbnRlbnQgZWxlbWVudCcsICdzY29wZWQgdG8gYSBzZWN0aW9uaW5nIHJvb3QgZWxlbWVudCBvdGhlciB0aGFuIGJvZHknXSxcbiAgICAgIG5hbWU6ICdhc2lkZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2FyaWEtbGFiZWxsZWRieSdcbiAgICAgIH1dLFxuICAgICAgY29uc3RyYWludHM6IFsnc2NvcGVkIHRvIGEgc2VjdGlvbmluZyBjb250ZW50IGVsZW1lbnQnLCAnc2NvcGVkIHRvIGEgc2VjdGlvbmluZyByb290IGVsZW1lbnQgb3RoZXIgdGhhbiBib2R5J10sXG4gICAgICBuYW1lOiAnYXNpZGUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGNvbXBsZW1lbnRhcnlSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar contentinfoRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      constraints: ['scoped to the body element'],\n      name: 'footer'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = contentinfoRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29udGVudGluZm9Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9jb250ZW50aW5mb1JvbGUuanM/YTkwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBjb250ZW50aW5mb1JvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgY29uc3RyYWludHM6IFsnc2NvcGVkIHRvIHRoZSBib2R5IGVsZW1lbnQnXSxcbiAgICAgIG5hbWU6ICdmb290ZXInXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IGNvbnRlbnRpbmZvUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/definitionRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/definitionRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar definitionRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'dd'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = definitionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZGVmaW5pdGlvblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9kZWZpbml0aW9uUm9sZS5qcz82ZjdmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRlZmluaXRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdkZCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZGVmaW5pdGlvblJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/definitionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/deletionRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/deletionRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar deletionRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'del'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = deletionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZGVsZXRpb25Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZGVsZXRpb25Sb2xlLmpzPzQ2ODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZGVsZXRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2RlbCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZGVsZXRpb25Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/deletionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/dialogRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/dialogRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar dialogRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'dialog'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'window']]\n};\nvar _default = dialogRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZGlhbG9nUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2RpYWxvZ1JvbGUuanM/OWEwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBkaWFsb2dSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2RpYWxvZydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpbmRvdyddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRpYWxvZ1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/dialogRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/directoryRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/directoryRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar directoryRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    module: 'DAISY Guide'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'list']]\n};\nvar _default = directoryRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZGlyZWN0b3J5Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9kaXJlY3RvcnlSb2xlLmpzPzc4ODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZGlyZWN0b3J5Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBtb2R1bGU6ICdEQUlTWSBHdWlkZSdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGlzdCddXVxufTtcbnZhciBfZGVmYXVsdCA9IGRpcmVjdG9yeVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/directoryRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/documentRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/documentRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar documentRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'Device Independence Delivery Unit'\n    }\n  }, {\n    concept: {\n      name: 'html'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = documentRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZG9jdW1lbnRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2RvY3VtZW50Um9sZS5qcz8yOWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGRvY3VtZW50Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnRGV2aWNlIEluZGVwZW5kZW5jZSBEZWxpdmVyeSBVbml0J1xuICAgIH1cbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdodG1sJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZG9jdW1lbnRSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/documentRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar emphasisRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'em'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = emphasisRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZW1waGFzaXNSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZW1waGFzaXNSb2xlLmpzPzRlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZW1waGFzaXNSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2VtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBlbXBoYXNpc1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/feedRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/feedRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar feedRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['article']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'list']]\n};\nvar _default = feedRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZmVlZFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZmVlZFJvbGUuanM/ZDQ1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBmZWVkUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtbJ2FydGljbGUnXV0sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsaXN0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gZmVlZFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/feedRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/figureRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/figureRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar figureRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'figure'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = figureRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZmlndXJlUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2ZpZ3VyZVJvbGUuanM/N2YyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBmaWd1cmVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdmaWd1cmUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGZpZ3VyZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/figureRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/formRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/formRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar formRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'aria-label'\n      }],\n      name: 'form'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'aria-labelledby'\n      }],\n      name: 'form'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'name'\n      }],\n      name: 'form'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = formRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZm9ybVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZm9ybVJvbGUuanM/NDI4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBmb3JtUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2FyaWEtbGFiZWwnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdmb3JtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnYXJpYS1sYWJlbGxlZGJ5J1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnZm9ybSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ25hbWUnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdmb3JtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBmb3JtUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/formRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/genericRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/genericRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar genericRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'a'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'area'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'aside'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'b'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'bdo'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'body'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'data'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'div'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      constraints: ['scoped to the main element', 'scoped to a sectioning content element', 'scoped to a sectioning root element other than body'],\n      name: 'footer'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      constraints: ['scoped to the main element', 'scoped to a sectioning content element', 'scoped to a sectioning root element other than body'],\n      name: 'header'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'hgroup'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'i'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'pre'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'q'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'samp'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'section'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'small'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'span'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'u'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = genericRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ2VuZXJpY1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ2VuZXJpY1JvbGUuanM/Yzg5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBnZW5lcmljUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ3Byb2hpYml0ZWQnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbJ2FyaWEtbGFiZWwnLCAnYXJpYS1sYWJlbGxlZGJ5J10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdhJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdhcmVhJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdhc2lkZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnYidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnYmRvJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdib2R5J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdkYXRhJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdkaXYnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgY29uc3RyYWludHM6IFsnc2NvcGVkIHRvIHRoZSBtYWluIGVsZW1lbnQnLCAnc2NvcGVkIHRvIGEgc2VjdGlvbmluZyBjb250ZW50IGVsZW1lbnQnLCAnc2NvcGVkIHRvIGEgc2VjdGlvbmluZyByb290IGVsZW1lbnQgb3RoZXIgdGhhbiBib2R5J10sXG4gICAgICBuYW1lOiAnZm9vdGVyJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGNvbnN0cmFpbnRzOiBbJ3Njb3BlZCB0byB0aGUgbWFpbiBlbGVtZW50JywgJ3Njb3BlZCB0byBhIHNlY3Rpb25pbmcgY29udGVudCBlbGVtZW50JywgJ3Njb3BlZCB0byBhIHNlY3Rpb25pbmcgcm9vdCBlbGVtZW50IG90aGVyIHRoYW4gYm9keSddLFxuICAgICAgbmFtZTogJ2hlYWRlcidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaGdyb3VwJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdpJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdwcmUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3EnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3NhbXAnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3NlY3Rpb24nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3NtYWxsJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdzcGFuJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICd1J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZ2VuZXJpY1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/genericRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/gridRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/gridRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar gridRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-multiselectable': null,\n    'aria-readonly': null\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['row'], ['row', 'rowgroup']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite'], ['roletype', 'structure', 'section', 'table']]\n};\nvar _default = gridRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ3JpZFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ3JpZFJvbGUuanM/ZjM5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBncmlkUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtbXVsdGlzZWxlY3RhYmxlJzogbnVsbCxcbiAgICAnYXJpYS1yZWFkb25seSc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1sncm93J10sIFsncm93JywgJ3Jvd2dyb3VwJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbXBvc2l0ZSddLCBbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ3RhYmxlJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gZ3JpZFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/gridRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar gridcellRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-invalid': null,\n    'aria-readonly': null,\n    'aria-required': null,\n    'aria-selected': null\n  },\n  relatedConcepts: [{\n    concept: {\n      constraints: ['ancestor table element has grid role', 'ancestor table element has treegrid role'],\n      name: 'td'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['row'],\n  requiredContextRole: ['row'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'cell'], ['roletype', 'widget']]\n};\nvar _default = gridcellRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ3JpZGNlbGxSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9ncmlkY2VsbFJvbGUuanM/NzJjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBncmlkY2VsbFJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgJ2FyaWEtaGFzcG9wdXAnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsLFxuICAgICdhcmlhLXJlYWRvbmx5JzogbnVsbCxcbiAgICAnYXJpYS1yZXF1aXJlZCc6IG51bGwsXG4gICAgJ2FyaWEtc2VsZWN0ZWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBjb25zdHJhaW50czogWydhbmNlc3RvciB0YWJsZSBlbGVtZW50IGhhcyBncmlkIHJvbGUnLCAnYW5jZXN0b3IgdGFibGUgZWxlbWVudCBoYXMgdHJlZWdyaWQgcm9sZSddLFxuICAgICAgbmFtZTogJ3RkJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWydyb3cnXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydyb3cnXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2NlbGwnXSwgWydyb2xldHlwZScsICd3aWRnZXQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBncmlkY2VsbFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/groupRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/groupRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar groupRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-activedescendant': null,\n    'aria-disabled': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'details'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'fieldset'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'optgroup'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'address'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = groupRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ3JvdXBSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvZ3JvdXBSb2xlLmpzP2M3ODciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgZ3JvdXBSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCc6IG51bGwsXG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnZGV0YWlscydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnZmllbGRzZXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ29wdGdyb3VwJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdhZGRyZXNzJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBncm91cFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/groupRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/headingRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/headingRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar headingRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-level': '2'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'h1'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'h2'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'h3'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'h4'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'h5'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'h6'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-level': '2'\n  },\n  superClass: [['roletype', 'structure', 'sectionhead']]\n};\nvar _default = headingRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvaGVhZGluZ1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9oZWFkaW5nUm9sZS5qcz81ZWE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGhlYWRpbmdSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1sZXZlbCc6ICcyJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2gxJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdoMidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaDMnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2g0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdoNSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaDYnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS1sZXZlbCc6ICcyJ1xuICB9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbmhlYWQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBoZWFkaW5nUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/headingRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/imgRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/imgRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar imgRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'alt'\n      }],\n      name: 'img'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'alt'\n      }],\n      name: 'img'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'imggroup'\n    },\n    module: 'DTB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = imgRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvaW1nUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2ltZ1JvbGUuanM/YjMzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBpbWdSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2FsdCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2ltZydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWyd1bmRlZmluZWQnXSxcbiAgICAgICAgbmFtZTogJ2FsdCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2ltZydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaW1nZ3JvdXAnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdEVEInXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gaW1nUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/imgRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/insertionRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/insertionRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar insertionRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'ins'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = insertionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvaW5zZXJ0aW9uUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2luc2VydGlvblJvbGUuanM/M2RhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBpbnNlcnRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2lucydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gaW5zZXJ0aW9uUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/insertionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/linkRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/linkRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar linkRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-expanded': null,\n    'aria-haspopup': null\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'href'\n      }],\n      name: 'a'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'href'\n      }],\n      name: 'area'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command']]\n};\nvar _default = linkRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbGlua1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9saW5rUm9sZS5qcz8wYzE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGxpbmtSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgY29uc3RyYWludHM6IFsnc2V0J10sXG4gICAgICAgIG5hbWU6ICdocmVmJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnYSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2hyZWYnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdhcmVhJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbW1hbmQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBsaW5rUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/linkRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/listRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/listRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar listRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'menu'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'ol'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'ul'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['listitem']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = listRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbGlzdFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbGlzdFJvbGUuanM/OGJhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBsaXN0Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnbWVudSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnb2wnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3VsJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtbJ2xpc3RpdGVtJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBsaXN0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/listRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/listboxRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/listboxRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar listboxRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-expanded': null,\n    'aria-invalid': null,\n    'aria-multiselectable': null,\n    'aria-readonly': null,\n    'aria-required': null,\n    'aria-orientation': 'vertical'\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['>1'],\n        name: 'size'\n      }],\n      constraints: ['the size attribute value is greater than 1'],\n      name: 'select'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'multiple'\n      }],\n      name: 'select'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'datalist'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'list'\n    },\n    module: 'ARIA'\n  }, {\n    concept: {\n      name: 'select'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['option', 'group'], ['option']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite', 'select'], ['roletype', 'structure', 'section', 'group', 'select']]\n};\nvar _default = listboxRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbGlzdGJveFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL2xpc3Rib3hSb2xlLmpzPzVmNmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgbGlzdGJveFJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogdHJ1ZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsLFxuICAgICdhcmlhLW11bHRpc2VsZWN0YWJsZSc6IG51bGwsXG4gICAgJ2FyaWEtcmVhZG9ubHknOiBudWxsLFxuICAgICdhcmlhLXJlcXVpcmVkJzogbnVsbCxcbiAgICAnYXJpYS1vcmllbnRhdGlvbic6ICd2ZXJ0aWNhbCdcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJz4xJ10sXG4gICAgICAgIG5hbWU6ICdzaXplJ1xuICAgICAgfV0sXG4gICAgICBjb25zdHJhaW50czogWyd0aGUgc2l6ZSBhdHRyaWJ1dGUgdmFsdWUgaXMgZ3JlYXRlciB0aGFuIDEnXSxcbiAgICAgIG5hbWU6ICdzZWxlY3QnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgbmFtZTogJ211bHRpcGxlJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnc2VsZWN0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdkYXRhbGlzdCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnbGlzdCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0FSSUEnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnc2VsZWN0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEZvcm1zJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1snb3B0aW9uJywgJ2dyb3VwJ10sIFsnb3B0aW9uJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbXBvc2l0ZScsICdzZWxlY3QnXSwgWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdncm91cCcsICdzZWxlY3QnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBsaXN0Ym94Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/listboxRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/listitemRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/listitemRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar listitemRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-level': null,\n    'aria-posinset': null,\n    'aria-setsize': null\n  },\n  relatedConcepts: [{\n    concept: {\n      constraints: ['direct descendant of ol', 'direct descendant of ul', 'direct descendant of menu'],\n      name: 'li'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'item'\n    },\n    module: 'XForms'\n  }],\n  requireContextRole: ['directory', 'list'],\n  requiredContextRole: ['directory', 'list'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = listitemRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbGlzdGl0ZW1Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbGlzdGl0ZW1Sb2xlLmpzPzUxMWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgbGlzdGl0ZW1Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtbGV2ZWwnOiBudWxsLFxuICAgICdhcmlhLXBvc2luc2V0JzogbnVsbCxcbiAgICAnYXJpYS1zZXRzaXplJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgY29uc3RyYWludHM6IFsnZGlyZWN0IGRlc2NlbmRhbnQgb2Ygb2wnLCAnZGlyZWN0IGRlc2NlbmRhbnQgb2YgdWwnLCAnZGlyZWN0IGRlc2NlbmRhbnQgb2YgbWVudSddLFxuICAgICAgbmFtZTogJ2xpJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdpdGVtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEZvcm1zJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbJ2RpcmVjdG9yeScsICdsaXN0J10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFsnZGlyZWN0b3J5JywgJ2xpc3QnXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gbGlzdGl0ZW1Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/listitemRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/logRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/logRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar logRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-live': 'polite'\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = logRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbG9nUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbG9nUm9sZS5qcz8zZTYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGxvZ1JvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1saXZlJzogJ3BvbGl0ZSdcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IGxvZ1JvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/logRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/mainRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/mainRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar mainRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'main'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = mainRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWFpblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9tYWluUm9sZS5qcz85NmY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIG1haW5Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdtYWluJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBtYWluUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/mainRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/markRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/markRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar markRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: [],\n  props: {\n    'aria-braillelabel': null,\n    'aria-brailleroledescription': null,\n    'aria-description': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'mark'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = markRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWFya1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL21hcmtSb2xlLmpzPzZlNTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgbWFya1JvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydwcm9oaWJpdGVkJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYnJhaWxsZWxhYmVsJzogbnVsbCxcbiAgICAnYXJpYS1icmFpbGxlcm9sZWRlc2NyaXB0aW9uJzogbnVsbCxcbiAgICAnYXJpYS1kZXNjcmlwdGlvbic6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdtYXJrJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBtYXJrUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/markRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar marqueeRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = marqueeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWFycXVlZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWFycXVlZVJvbGUuanM/MDg5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBtYXJxdWVlUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IG1hcnF1ZWVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/mathRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/mathRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar mathRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'math'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = mathRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWF0aFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9tYXRoUm9sZS5qcz8zNjE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIG1hdGhSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdtYXRoJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBtYXRoUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/mathRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/menuRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/menuRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar menuRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-orientation': 'vertical'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'MENU'\n    },\n    module: 'JAPI'\n  }, {\n    concept: {\n      name: 'list'\n    },\n    module: 'ARIA'\n  }, {\n    concept: {\n      name: 'select'\n    },\n    module: 'XForms'\n  }, {\n    concept: {\n      name: 'sidebar'\n    },\n    module: 'DTB'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['menuitem', 'group'], ['menuitemradio', 'group'], ['menuitemcheckbox', 'group'], ['menuitem'], ['menuitemcheckbox'], ['menuitemradio']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite', 'select'], ['roletype', 'structure', 'section', 'group', 'select']]\n};\nvar _default = menuRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudVJvbGUuanM/ZWRkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBtZW51Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLW9yaWVudGF0aW9uJzogJ3ZlcnRpY2FsJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ01FTlUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdKQVBJJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2xpc3QnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdBUklBJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3NlbGVjdCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ1hGb3JtcydcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdzaWRlYmFyJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnRFRCJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1snbWVudWl0ZW0nLCAnZ3JvdXAnXSwgWydtZW51aXRlbXJhZGlvJywgJ2dyb3VwJ10sIFsnbWVudWl0ZW1jaGVja2JveCcsICdncm91cCddLCBbJ21lbnVpdGVtJ10sIFsnbWVudWl0ZW1jaGVja2JveCddLCBbJ21lbnVpdGVtcmFkaW8nXV0sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICd3aWRnZXQnLCAnY29tcG9zaXRlJywgJ3NlbGVjdCddLCBbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2dyb3VwJywgJ3NlbGVjdCddXVxufTtcbnZhciBfZGVmYXVsdCA9IG1lbnVSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/menuRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/menubarRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/menubarRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar menubarRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-orientation': 'horizontal'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'toolbar'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['menuitem', 'group'], ['menuitemradio', 'group'], ['menuitemcheckbox', 'group'], ['menuitem'], ['menuitemcheckbox'], ['menuitemradio']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite', 'select', 'menu'], ['roletype', 'structure', 'section', 'group', 'select', 'menu']]\n};\nvar _default = menubarRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWJhclJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWJhclJvbGUuanM/MjM5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBtZW51YmFyUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLW9yaWVudGF0aW9uJzogJ2hvcml6b250YWwnXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAndG9vbGJhcidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0FSSUEnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbWydtZW51aXRlbScsICdncm91cCddLCBbJ21lbnVpdGVtcmFkaW8nLCAnZ3JvdXAnXSwgWydtZW51aXRlbWNoZWNrYm94JywgJ2dyb3VwJ10sIFsnbWVudWl0ZW0nXSwgWydtZW51aXRlbWNoZWNrYm94J10sIFsnbWVudWl0ZW1yYWRpbyddXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21wb3NpdGUnLCAnc2VsZWN0JywgJ21lbnUnXSwgWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdncm91cCcsICdzZWxlY3QnLCAnbWVudSddXVxufTtcbnZhciBfZGVmYXVsdCA9IG1lbnViYXJSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/menubarRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar menuitemRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-posinset': null,\n    'aria-setsize': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'MENU_ITEM'\n    },\n    module: 'JAPI'\n  }, {\n    concept: {\n      name: 'listitem'\n    },\n    module: 'ARIA'\n  }, {\n    concept: {\n      name: 'option'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: ['group', 'menu', 'menubar'],\n  requiredContextRole: ['group', 'menu', 'menubar'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'command']]\n};\nvar _default = menuitemRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWl0ZW1Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL21lbnVpdGVtUm9sZS5qcz8wNjA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIG1lbnVpdGVtUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJywgJ2NvbnRlbnRzJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLWV4cGFuZGVkJzogbnVsbCxcbiAgICAnYXJpYS1oYXNwb3B1cCc6IG51bGwsXG4gICAgJ2FyaWEtcG9zaW5zZXQnOiBudWxsLFxuICAgICdhcmlhLXNldHNpemUnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnTUVOVV9JVEVNJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSkFQSSdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdsaXN0aXRlbSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0FSSUEnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnb3B0aW9uJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnQVJJQSdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWydncm91cCcsICdtZW51JywgJ21lbnViYXInXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydncm91cCcsICdtZW51JywgJ21lbnViYXInXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21tYW5kJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gbWVudWl0ZW1Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar menuitemcheckboxRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'menuitem'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: ['group', 'menu', 'menubar'],\n  requiredContextRole: ['group', 'menu', 'menubar'],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-checked': null\n  },\n  superClass: [['roletype', 'widget', 'input', 'checkbox'], ['roletype', 'widget', 'command', 'menuitem']]\n};\nvar _default = menuitemcheckboxRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWl0ZW1jaGVja2JveFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWl0ZW1jaGVja2JveFJvbGUuanM/NmYzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBtZW51aXRlbWNoZWNrYm94Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiB0cnVlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ21lbnVpdGVtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnQVJJQSdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWydncm91cCcsICdtZW51JywgJ21lbnViYXInXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydncm91cCcsICdtZW51JywgJ21lbnViYXInXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge1xuICAgICdhcmlhLWNoZWNrZWQnOiBudWxsXG4gIH0sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCcsICdjaGVja2JveCddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21tYW5kJywgJ21lbnVpdGVtJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gbWVudWl0ZW1jaGVja2JveFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar menuitemradioRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'menuitem'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: ['group', 'menu', 'menubar'],\n  requiredContextRole: ['group', 'menu', 'menubar'],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-checked': null\n  },\n  superClass: [['roletype', 'widget', 'input', 'checkbox', 'menuitemcheckbox'], ['roletype', 'widget', 'command', 'menuitem', 'menuitemcheckbox'], ['roletype', 'widget', 'input', 'radio']]\n};\nvar _default = menuitemradioRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWl0ZW1yYWRpb1JvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWVudWl0ZW1yYWRpb1JvbGUuanM/Y2UzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBtZW51aXRlbXJhZGlvUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiB0cnVlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ21lbnVpdGVtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnQVJJQSdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWydncm91cCcsICdtZW51JywgJ21lbnViYXInXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydncm91cCcsICdtZW51JywgJ21lbnViYXInXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge1xuICAgICdhcmlhLWNoZWNrZWQnOiBudWxsXG4gIH0sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCcsICdjaGVja2JveCcsICdtZW51aXRlbWNoZWNrYm94J10sIFsncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbW1hbmQnLCAnbWVudWl0ZW0nLCAnbWVudWl0ZW1jaGVja2JveCddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCcsICdyYWRpbyddXVxufTtcbnZhciBfZGVmYXVsdCA9IG1lbnVpdGVtcmFkaW9Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/meterRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/meterRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar meterRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-valuetext': null,\n    'aria-valuemax': '100',\n    'aria-valuemin': '0'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'meter'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-valuenow': null\n  },\n  superClass: [['roletype', 'structure', 'range']]\n};\nvar _default = meterRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWV0ZXJSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbWV0ZXJSb2xlLmpzPzEwYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgbWV0ZXJSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLXZhbHVldGV4dCc6IG51bGwsXG4gICAgJ2FyaWEtdmFsdWVtYXgnOiAnMTAwJyxcbiAgICAnYXJpYS12YWx1ZW1pbic6ICcwJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ21ldGVyJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7XG4gICAgJ2FyaWEtdmFsdWVub3cnOiBudWxsXG4gIH0sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdyYW5nZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IG1ldGVyUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/meterRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/navigationRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/navigationRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar navigationRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'nav'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = navigationRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbmF2aWdhdGlvblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9uYXZpZ2F0aW9uUm9sZS5qcz81N2ZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIG5hdmlnYXRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICduYXYnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdsYW5kbWFyayddXVxufTtcbnZhciBfZGVmYXVsdCA9IG5hdmlnYXRpb25Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/navigationRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/noneRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/noneRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar noneRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: [],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: []\n};\nvar _default = noneRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbm9uZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbm9uZVJvbGUuanM/OTc2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBub25lUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFtdLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtdXG59O1xudmFyIF9kZWZhdWx0ID0gbm9uZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/noneRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/noteRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/noteRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar noteRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = noteRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbm90ZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvbm90ZVJvbGUuanM/ZjM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBub3RlUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSBub3RlUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/noteRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/optionRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/optionRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar optionRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-checked': null,\n    'aria-posinset': null,\n    'aria-setsize': null,\n    'aria-selected': 'false'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'item'\n    },\n    module: 'XForms'\n  }, {\n    concept: {\n      name: 'listitem'\n    },\n    module: 'ARIA'\n  }, {\n    concept: {\n      name: 'option'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-selected': 'false'\n  },\n  superClass: [['roletype', 'widget', 'input']]\n};\nvar _default = optionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvb3B0aW9uUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL29wdGlvblJvbGUuanM/OGM5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBvcHRpb25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWNoZWNrZWQnOiBudWxsLFxuICAgICdhcmlhLXBvc2luc2V0JzogbnVsbCxcbiAgICAnYXJpYS1zZXRzaXplJzogbnVsbCxcbiAgICAnYXJpYS1zZWxlY3RlZCc6ICdmYWxzZSdcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdpdGVtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnWEZvcm1zJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2xpc3RpdGVtJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnQVJJQSdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdvcHRpb24nXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS1zZWxlY3RlZCc6ICdmYWxzZSdcbiAgfSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2lucHV0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gb3B0aW9uUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/optionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar paragraphRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'p'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = paragraphRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcGFyYWdyYXBoUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3BhcmFncmFwaFJvbGUuanM/YjBhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBwYXJhZ3JhcGhSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3AnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IHBhcmFncmFwaFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/presentationRole.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/presentationRole.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar presentationRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'alt',\n        value: ''\n      }],\n      name: 'img'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = presentationRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcHJlc2VudGF0aW9uUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9wcmVzZW50YXRpb25Sb2xlLmpzP2NjODMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgcHJlc2VudGF0aW9uUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ3Byb2hpYml0ZWQnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbJ2FyaWEtbGFiZWwnLCAnYXJpYS1sYWJlbGxlZGJ5J10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIG5hbWU6ICdhbHQnLFxuICAgICAgICB2YWx1ZTogJydcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2ltZydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHByZXNlbnRhdGlvblJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/presentationRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar progressbarRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-valuetext': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'progress'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'status'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'range'], ['roletype', 'widget']]\n};\nvar _default = progressbarRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcHJvZ3Jlc3NiYXJSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcHJvZ3Jlc3NiYXJSb2xlLmpzP2RhNWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgcHJvZ3Jlc3NiYXJSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLXZhbHVldGV4dCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdwcm9ncmVzcydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnc3RhdHVzJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnQVJJQSdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3JhbmdlJ10sIFsncm9sZXR5cGUnLCAnd2lkZ2V0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gcHJvZ3Jlc3NiYXJSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/radioRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/radioRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar radioRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-checked': null,\n    'aria-posinset': null,\n    'aria-setsize': null\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'radio'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-checked': null\n  },\n  superClass: [['roletype', 'widget', 'input']]\n};\nvar _default = radioRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcmFkaW9Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3JhZGlvUm9sZS5qcz84YjEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHJhZGlvUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiB0cnVlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1jaGVja2VkJzogbnVsbCxcbiAgICAnYXJpYS1wb3NpbnNldCc6IG51bGwsXG4gICAgJ2FyaWEtc2V0c2l6ZSc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICdyYWRpbydcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7XG4gICAgJ2FyaWEtY2hlY2tlZCc6IG51bGxcbiAgfSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2lucHV0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gcmFkaW9Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/radioRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar radiogroupRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null,\n    'aria-readonly': null,\n    'aria-required': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'list'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['radio']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite', 'select'], ['roletype', 'structure', 'section', 'group', 'select']]\n};\nvar _default = radiogroupRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcmFkaW9ncm91cFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcmFkaW9ncm91cFJvbGUuanM/NTczZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciByYWRpb2dyb3VwUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbCxcbiAgICAnYXJpYS1yZWFkb25seSc6IG51bGwsXG4gICAgJ2FyaWEtcmVxdWlyZWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnbGlzdCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0FSSUEnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbWydyYWRpbyddXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21wb3NpdGUnLCAnc2VsZWN0J10sIFsncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnZ3JvdXAnLCAnc2VsZWN0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gcmFkaW9ncm91cFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/regionRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/regionRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar regionRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'aria-label'\n      }],\n      name: 'section'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['set'],\n        name: 'aria-labelledby'\n      }],\n      name: 'section'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'Device Independence Glossart perceivable unit'\n    }\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = regionRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcmVnaW9uUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcmVnaW9uUm9sZS5qcz9mZjAwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHJlZ2lvblJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogdHJ1ZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWydzZXQnXSxcbiAgICAgICAgbmFtZTogJ2FyaWEtbGFiZWwnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICdzZWN0aW9uJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnYXJpYS1sYWJlbGxlZGJ5J1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnc2VjdGlvbidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnRGV2aWNlIEluZGVwZW5kZW5jZSBHbG9zc2FydCBwZXJjZWl2YWJsZSB1bml0J1xuICAgIH1cbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSByZWdpb25Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/regionRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/rowRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/rowRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar rowRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-colindex': null,\n    'aria-expanded': null,\n    'aria-level': null,\n    'aria-posinset': null,\n    'aria-rowindex': null,\n    'aria-selected': null,\n    'aria-setsize': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'tr'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['grid', 'rowgroup', 'table', 'treegrid'],\n  requiredContextRole: ['grid', 'rowgroup', 'table', 'treegrid'],\n  requiredOwnedElements: [['cell'], ['columnheader'], ['gridcell'], ['rowheader']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'group'], ['roletype', 'widget']]\n};\nvar _default = rowRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcm93Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9yb3dSb2xlLmpzP2Q4N2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgcm93Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWNvbGluZGV4JzogbnVsbCxcbiAgICAnYXJpYS1leHBhbmRlZCc6IG51bGwsXG4gICAgJ2FyaWEtbGV2ZWwnOiBudWxsLFxuICAgICdhcmlhLXBvc2luc2V0JzogbnVsbCxcbiAgICAnYXJpYS1yb3dpbmRleCc6IG51bGwsXG4gICAgJ2FyaWEtc2VsZWN0ZWQnOiBudWxsLFxuICAgICdhcmlhLXNldHNpemUnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAndHInXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbJ2dyaWQnLCAncm93Z3JvdXAnLCAndGFibGUnLCAndHJlZWdyaWQnXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydncmlkJywgJ3Jvd2dyb3VwJywgJ3RhYmxlJywgJ3RyZWVncmlkJ10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1snY2VsbCddLCBbJ2NvbHVtbmhlYWRlciddLCBbJ2dyaWRjZWxsJ10sIFsncm93aGVhZGVyJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnZ3JvdXAnXSwgWydyb2xldHlwZScsICd3aWRnZXQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSByb3dSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/rowRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar rowgroupRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'tbody'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'tfoot'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'thead'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['grid', 'table', 'treegrid'],\n  requiredContextRole: ['grid', 'table', 'treegrid'],\n  requiredOwnedElements: [['row']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = rowgroupRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcm93Z3JvdXBSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3Jvd2dyb3VwUm9sZS5qcz8wNDlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHJvd2dyb3VwUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAndGJvZHknXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3Rmb290J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICd0aGVhZCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFsnZ3JpZCcsICd0YWJsZScsICd0cmVlZ3JpZCddLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbJ2dyaWQnLCAndGFibGUnLCAndHJlZWdyaWQnXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbWydyb3cnXV0sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnXV1cbn07XG52YXIgX2RlZmF1bHQgPSByb3dncm91cFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar rowheaderRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-sort': null\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'scope',\n        value: 'row'\n      }],\n      name: 'th'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        name: 'scope',\n        value: 'rowgroup'\n      }],\n      name: 'th'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: ['row', 'rowgroup'],\n  requiredContextRole: ['row', 'rowgroup'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'cell'], ['roletype', 'structure', 'section', 'cell', 'gridcell'], ['roletype', 'widget', 'gridcell'], ['roletype', 'structure', 'sectionhead']]\n};\nvar _default = rowheaderRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcm93aGVhZGVyUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvcm93aGVhZGVyUm9sZS5qcz8yNGNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHJvd2hlYWRlclJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogdHJ1ZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLXNvcnQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBuYW1lOiAnc2NvcGUnLFxuICAgICAgICB2YWx1ZTogJ3JvdydcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ3RoJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIG5hbWU6ICdzY29wZScsXG4gICAgICAgIHZhbHVlOiAncm93Z3JvdXAnXG4gICAgICB9XSxcbiAgICAgIG5hbWU6ICd0aCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFsncm93JywgJ3Jvd2dyb3VwJ10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFsncm93JywgJ3Jvd2dyb3VwJ10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdjZWxsJ10sIFsncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnY2VsbCcsICdncmlkY2VsbCddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdncmlkY2VsbCddLCBbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uaGVhZCddXVxufTtcbnZhciBfZGVmYXVsdCA9IHJvd2hlYWRlclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar scrollbarRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-valuetext': null,\n    'aria-orientation': 'vertical',\n    'aria-valuemax': '100',\n    'aria-valuemin': '0'\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-controls': null,\n    'aria-valuenow': null\n  },\n  superClass: [['roletype', 'structure', 'range'], ['roletype', 'widget']]\n};\nvar _default = scrollbarRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2Nyb2xsYmFyUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9zY3JvbGxiYXJSb2xlLmpzPzI5YmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgc2Nyb2xsYmFyUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogdHJ1ZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZGlzYWJsZWQnOiBudWxsLFxuICAgICdhcmlhLXZhbHVldGV4dCc6IG51bGwsXG4gICAgJ2FyaWEtb3JpZW50YXRpb24nOiAndmVydGljYWwnLFxuICAgICdhcmlhLXZhbHVlbWF4JzogJzEwMCcsXG4gICAgJ2FyaWEtdmFsdWVtaW4nOiAnMCdcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS1jb250cm9scyc6IG51bGwsXG4gICAgJ2FyaWEtdmFsdWVub3cnOiBudWxsXG4gIH0sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdyYW5nZSddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCddXVxufTtcbnZhciBfZGVmYXVsdCA9IHNjcm9sbGJhclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/searchRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/searchRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar searchRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'landmark']]\n};\nvar _default = searchRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2VhcmNoUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9zZWFyY2hSb2xlLmpzPzNhYTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgc2VhcmNoUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBzZWFyY2hSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/searchRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar searchboxRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'search'\n      }],\n      constraints: ['the list attribute is not set'],\n      name: 'input'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'input', 'textbox']]\n};\nvar _default = searchboxRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2VhcmNoYm94Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2VhcmNoYm94Um9sZS5qcz81MDg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHNlYXJjaGJveFJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogdHJ1ZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWyd1bmRlZmluZWQnXSxcbiAgICAgICAgbmFtZTogJ2xpc3QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICdzZWFyY2gnXG4gICAgICB9XSxcbiAgICAgIGNvbnN0cmFpbnRzOiBbJ3RoZSBsaXN0IGF0dHJpYnV0ZSBpcyBub3Qgc2V0J10sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICd3aWRnZXQnLCAnaW5wdXQnLCAndGV4dGJveCddXVxufTtcbnZhciBfZGVmYXVsdCA9IHNlYXJjaGJveFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/separatorRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/separatorRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar separatorRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-orientation': 'horizontal',\n    'aria-valuemax': '100',\n    'aria-valuemin': '0',\n    'aria-valuenow': null,\n    'aria-valuetext': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'hr'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure']]\n};\nvar _default = separatorRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2VwYXJhdG9yUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2VwYXJhdG9yUm9sZS5qcz9lNDczIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHNlcGFyYXRvclJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IHRydWUsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWRpc2FibGVkJzogbnVsbCxcbiAgICAnYXJpYS1vcmllbnRhdGlvbic6ICdob3Jpem9udGFsJyxcbiAgICAnYXJpYS12YWx1ZW1heCc6ICcxMDAnLFxuICAgICdhcmlhLXZhbHVlbWluJzogJzAnLFxuICAgICdhcmlhLXZhbHVlbm93JzogbnVsbCxcbiAgICAnYXJpYS12YWx1ZXRleHQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaHInXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBzZXBhcmF0b3JSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/separatorRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/sliderRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/sliderRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar sliderRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-haspopup': null,\n    'aria-invalid': null,\n    'aria-readonly': null,\n    'aria-valuetext': null,\n    'aria-orientation': 'horizontal',\n    'aria-valuemax': '100',\n    'aria-valuemin': '0'\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'range'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-valuenow': null\n  },\n  superClass: [['roletype', 'widget', 'input'], ['roletype', 'structure', 'range']]\n};\nvar _default = sliderRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2xpZGVyUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc2xpZGVyUm9sZS5qcz84NmFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHNsaWRlclJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogdHJ1ZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogdHJ1ZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1oYXNwb3B1cCc6IG51bGwsXG4gICAgJ2FyaWEtaW52YWxpZCc6IG51bGwsXG4gICAgJ2FyaWEtcmVhZG9ubHknOiBudWxsLFxuICAgICdhcmlhLXZhbHVldGV4dCc6IG51bGwsXG4gICAgJ2FyaWEtb3JpZW50YXRpb24nOiAnaG9yaXpvbnRhbCcsXG4gICAgJ2FyaWEtdmFsdWVtYXgnOiAnMTAwJyxcbiAgICAnYXJpYS12YWx1ZW1pbic6ICcwJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3JhbmdlJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS12YWx1ZW5vdyc6IG51bGxcbiAgfSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2lucHV0J10sIFsncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3JhbmdlJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gc2xpZGVyUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/sliderRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar spinbuttonRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null,\n    'aria-readonly': null,\n    'aria-required': null,\n    'aria-valuetext': null,\n    'aria-valuenow': '0'\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        name: 'type',\n        value: 'number'\n      }],\n      name: 'input'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite'], ['roletype', 'widget', 'input'], ['roletype', 'structure', 'range']]\n};\nvar _default = spinbuttonRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3BpbmJ1dHRvblJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9zcGluYnV0dG9uUm9sZS5qcz8wYmI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHNwaW5idXR0b25Sb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsLFxuICAgICdhcmlhLXJlYWRvbmx5JzogbnVsbCxcbiAgICAnYXJpYS1yZXF1aXJlZCc6IG51bGwsXG4gICAgJ2FyaWEtdmFsdWV0ZXh0JzogbnVsbCxcbiAgICAnYXJpYS12YWx1ZW5vdyc6ICcwJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ251bWJlcidcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbXBvc2l0ZSddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCddLCBbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdyYW5nZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHNwaW5idXR0b25Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/statusRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/statusRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar statusRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-atomic': 'true',\n    'aria-live': 'polite'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'output'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = statusRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3RhdHVzUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3N0YXR1c1JvbGUuanM/NWIwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBzdGF0dXNSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYXRvbWljJzogJ3RydWUnLFxuICAgICdhcmlhLWxpdmUnOiAncG9saXRlJ1xuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ291dHB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gc3RhdHVzUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/statusRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/strongRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/strongRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar strongRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'strong'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = strongRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3Ryb25nUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3N0cm9uZ1JvbGUuanM/YzZlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBzdHJvbmdSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3N0cm9uZydcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gc3Ryb25nUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/strongRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js":
/*!************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar subscriptRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'sub'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = subscriptRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3Vic2NyaXB0Um9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3N1YnNjcmlwdFJvbGUuanM/MmI1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBzdWJzY3JpcHRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3N1YidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gc3Vic2NyaXB0Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar superscriptRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['prohibited'],\n  prohibitedProps: ['aria-label', 'aria-labelledby'],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'sup'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = superscriptRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3VwZXJzY3JpcHRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3VwZXJzY3JpcHRSb2xlLmpzP2MyYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgc3VwZXJzY3JpcHRSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsncHJvaGliaXRlZCddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFsnYXJpYS1sYWJlbCcsICdhcmlhLWxhYmVsbGVkYnknXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3N1cCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gc3VwZXJzY3JpcHRSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/switchRole.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/switchRole.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar switchRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'button'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-checked': null\n  },\n  superClass: [['roletype', 'widget', 'input', 'checkbox']]\n};\nvar _default = switchRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvc3dpdGNoUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC9zd2l0Y2hSb2xlLmpzPzM4OWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgc3dpdGNoUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiB0cnVlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2J1dHRvbidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0FSSUEnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge1xuICAgICdhcmlhLWNoZWNrZWQnOiBudWxsXG4gIH0sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCcsICdjaGVja2JveCddXVxufTtcbnZhciBfZGVmYXVsdCA9IHN3aXRjaFJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/switchRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/tabRole.js":
/*!******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/tabRole.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar tabRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: true,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-disabled': null,\n    'aria-expanded': null,\n    'aria-haspopup': null,\n    'aria-posinset': null,\n    'aria-setsize': null,\n    'aria-selected': 'false'\n  },\n  relatedConcepts: [],\n  requireContextRole: ['tablist'],\n  requiredContextRole: ['tablist'],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'sectionhead'], ['roletype', 'widget']]\n};\nvar _default = tabRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGFiUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3RhYlJvbGUuanM/Zjk1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB0YWJSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiB0cnVlLFxuICBuYW1lRnJvbTogWydhdXRob3InLCAnY29udGVudHMnXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1kaXNhYmxlZCc6IG51bGwsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1wb3NpbnNldCc6IG51bGwsXG4gICAgJ2FyaWEtc2V0c2l6ZSc6IG51bGwsXG4gICAgJ2FyaWEtc2VsZWN0ZWQnOiAnZmFsc2UnXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogWyd0YWJsaXN0J10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFsndGFibGlzdCddLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb25oZWFkJ10sIFsncm9sZXR5cGUnLCAnd2lkZ2V0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gdGFiUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/tabRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/tableRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/tableRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar tableRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-colcount': null,\n    'aria-rowcount': null\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'table'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['row'], ['row', 'rowgroup']],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = tableRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGFibGVSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGFibGVSb2xlLmpzPzI4OTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgdGFibGVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1jb2xjb3VudCc6IG51bGwsXG4gICAgJ2FyaWEtcm93Y291bnQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAndGFibGUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1sncm93J10sIFsncm93JywgJ3Jvd2dyb3VwJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSB0YWJsZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/tableRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/tablistRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/tablistRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar tablistRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-level': null,\n    'aria-multiselectable': null,\n    'aria-orientation': 'horizontal'\n  },\n  relatedConcepts: [{\n    module: 'DAISY',\n    concept: {\n      name: 'guide'\n    }\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['tab']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite']]\n};\nvar _default = tablistRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGFibGlzdFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC90YWJsaXN0Um9sZS5qcz81NDZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHRhYmxpc3RSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtbGV2ZWwnOiBudWxsLFxuICAgICdhcmlhLW11bHRpc2VsZWN0YWJsZSc6IG51bGwsXG4gICAgJ2FyaWEtb3JpZW50YXRpb24nOiAnaG9yaXpvbnRhbCdcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIG1vZHVsZTogJ0RBSVNZJyxcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnZ3VpZGUnXG4gICAgfVxuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1sndGFiJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbXBvc2l0ZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHRhYmxpc3RSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/tablistRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar tabpanelRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = tabpanelRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGFicGFuZWxSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3RhYnBhbmVsUm9sZS5qcz84YWQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHRhYnBhbmVsUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IHRhYnBhbmVsUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/termRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/termRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar termRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'dfn'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'dt'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = termRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGVybVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3Rlcm1Sb2xlLmpzP2E1MjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgdGVybVJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2RmbidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnZHQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IHRlcm1Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/termRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/textboxRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/textboxRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar textboxRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-activedescendant': null,\n    'aria-autocomplete': null,\n    'aria-errormessage': null,\n    'aria-haspopup': null,\n    'aria-invalid': null,\n    'aria-multiline': null,\n    'aria-placeholder': null,\n    'aria-readonly': null,\n    'aria-required': null\n  },\n  relatedConcepts: [{\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'type'\n      }, {\n        constraints: ['undefined'],\n        name: 'list'\n      }],\n      constraints: ['the list attribute is not set'],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'email'\n      }],\n      constraints: ['the list attribute is not set'],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'tel'\n      }],\n      constraints: ['the list attribute is not set'],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'text'\n      }],\n      constraints: ['the list attribute is not set'],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      attributes: [{\n        constraints: ['undefined'],\n        name: 'list'\n      }, {\n        name: 'type',\n        value: 'url'\n      }],\n      constraints: ['the list attribute is not set'],\n      name: 'input'\n    },\n    module: 'HTML'\n  }, {\n    concept: {\n      name: 'input'\n    },\n    module: 'XForms'\n  }, {\n    concept: {\n      name: 'textarea'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'input']]\n};\nvar _default = textboxRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGV4dGJveFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC90ZXh0Ym94Um9sZS5qcz8yN2U4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHRleHRib3hSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IHRydWUsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHtcbiAgICAnYXJpYS1hY3RpdmVkZXNjZW5kYW50JzogbnVsbCxcbiAgICAnYXJpYS1hdXRvY29tcGxldGUnOiBudWxsLFxuICAgICdhcmlhLWVycm9ybWVzc2FnZSc6IG51bGwsXG4gICAgJ2FyaWEtaGFzcG9wdXAnOiBudWxsLFxuICAgICdhcmlhLWludmFsaWQnOiBudWxsLFxuICAgICdhcmlhLW11bHRpbGluZSc6IG51bGwsXG4gICAgJ2FyaWEtcGxhY2Vob2xkZXInOiBudWxsLFxuICAgICdhcmlhLXJlYWRvbmx5JzogbnVsbCxcbiAgICAnYXJpYS1yZXF1aXJlZCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAndHlwZSdcbiAgICAgIH0sIHtcbiAgICAgICAgY29uc3RyYWludHM6IFsndW5kZWZpbmVkJ10sXG4gICAgICAgIG5hbWU6ICdsaXN0J1xuICAgICAgfV0sXG4gICAgICBjb25zdHJhaW50czogWyd0aGUgbGlzdCBhdHRyaWJ1dGUgaXMgbm90IHNldCddLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ2VtYWlsJ1xuICAgICAgfV0sXG4gICAgICBjb25zdHJhaW50czogWyd0aGUgbGlzdCBhdHRyaWJ1dGUgaXMgbm90IHNldCddLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3RlbCdcbiAgICAgIH1dLFxuICAgICAgY29uc3RyYWludHM6IFsndGhlIGxpc3QgYXR0cmlidXRlIGlzIG5vdCBzZXQnXSxcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWyd1bmRlZmluZWQnXSxcbiAgICAgICAgbmFtZTogJ2xpc3QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICd0eXBlJyxcbiAgICAgICAgdmFsdWU6ICd0ZXh0J1xuICAgICAgfV0sXG4gICAgICBjb25zdHJhaW50czogWyd0aGUgbGlzdCBhdHRyaWJ1dGUgaXMgbm90IHNldCddLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3VybCdcbiAgICAgIH1dLFxuICAgICAgY29uc3RyYWludHM6IFsndGhlIGxpc3QgYXR0cmlidXRlIGlzIG5vdCBzZXQnXSxcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdYRm9ybXMnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAndGV4dGFyZWEnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9XSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICd3aWRnZXQnLCAnaW5wdXQnXV1cbn07XG52YXIgX2RlZmF1bHQgPSB0ZXh0Ym94Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/textboxRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/timeRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/timeRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar timeRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [{\n    concept: {\n      name: 'time'\n    },\n    module: 'HTML'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = timeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGltZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC90aW1lUm9sZS5qcz80ZTRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHRpbWVSb2xlID0ge1xuICBhYnN0cmFjdDogZmFsc2UsXG4gIGFjY2Vzc2libGVOYW1lUmVxdWlyZWQ6IGZhbHNlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbe1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICd0aW1lJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nXV1cbn07XG52YXIgX2RlZmF1bHQgPSB0aW1lUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/timeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/timerRole.js":
/*!********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/timerRole.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar timerRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'status']]\n};\nvar _default = timerRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdGltZXJSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3RpbWVyUm9sZS5qcz9hMDQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHRpbWVyUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge30sXG4gIHJlbGF0ZWRDb25jZXB0czogW10sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnc3RhdHVzJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gdGltZXJSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/timerRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar toolbarRole = {\n  abstract: false,\n  accessibleNameRequired: false,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-orientation': 'horizontal'\n  },\n  relatedConcepts: [{\n    concept: {\n      name: 'menubar'\n    },\n    module: 'ARIA'\n  }],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section', 'group']]\n};\nvar _default = toolbarRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdG9vbGJhclJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdG9vbGJhclJvbGUuanM/MzY2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB0b29sYmFyUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiBmYWxzZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvciddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLW9yaWVudGF0aW9uJzogJ2hvcml6b250YWwnXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAnbWVudWJhcidcbiAgICB9LFxuICAgIG1vZHVsZTogJ0FSSUEnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3N0cnVjdHVyZScsICdzZWN0aW9uJywgJ2dyb3VwJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gdG9vbGJhclJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar tooltipRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [],\n  requiredProps: {},\n  superClass: [['roletype', 'structure', 'section']]\n};\nvar _default = tooltipRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdG9vbHRpcFJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdG9vbHRpcFJvbGUuanM/ZWI4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB0b29sdGlwUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJywgJ2NvbnRlbnRzJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHt9LFxuICBzdXBlckNsYXNzOiBbWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbiddXVxufTtcbnZhciBfZGVmYXVsdCA9IHRvb2x0aXBSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/treeRole.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/treeRole.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar treeRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {\n    'aria-errormessage': null,\n    'aria-invalid': null,\n    'aria-multiselectable': null,\n    'aria-required': null,\n    'aria-orientation': 'vertical'\n  },\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['treeitem', 'group'], ['treeitem']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite', 'select'], ['roletype', 'structure', 'section', 'group', 'select']]\n};\nvar _default = treeRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdHJlZVJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdHJlZVJvbGUuanM/NjMyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB0cmVlUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtZXJyb3JtZXNzYWdlJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbCxcbiAgICAnYXJpYS1tdWx0aXNlbGVjdGFibGUnOiBudWxsLFxuICAgICdhcmlhLXJlcXVpcmVkJzogbnVsbCxcbiAgICAnYXJpYS1vcmllbnRhdGlvbic6ICd2ZXJ0aWNhbCdcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1sndHJlZWl0ZW0nLCAnZ3JvdXAnXSwgWyd0cmVlaXRlbSddXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21wb3NpdGUnLCAnc2VsZWN0J10sIFsncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnZ3JvdXAnLCAnc2VsZWN0J11dXG59O1xudmFyIF9kZWZhdWx0ID0gdHJlZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/treeRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/treegridRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/treegridRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar treegridRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author'],\n  prohibitedProps: [],\n  props: {},\n  relatedConcepts: [],\n  requireContextRole: [],\n  requiredContextRole: [],\n  requiredOwnedElements: [['row'], ['row', 'rowgroup']],\n  requiredProps: {},\n  superClass: [['roletype', 'widget', 'composite', 'grid'], ['roletype', 'structure', 'section', 'table', 'grid'], ['roletype', 'widget', 'composite', 'select', 'tree'], ['roletype', 'structure', 'section', 'group', 'select', 'tree']]\n};\nvar _default = treegridRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdHJlZWdyaWRSb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL2V0Yy9yb2xlcy9saXRlcmFsL3RyZWVncmlkUm9sZS5qcz81YzVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIHRyZWVncmlkUm9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7fSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW1sncm93J10sIFsncm93JywgJ3Jvd2dyb3VwJ11dLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnd2lkZ2V0JywgJ2NvbXBvc2l0ZScsICdncmlkJ10sIFsncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAndGFibGUnLCAnZ3JpZCddLCBbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdjb21wb3NpdGUnLCAnc2VsZWN0JywgJ3RyZWUnXSwgWydyb2xldHlwZScsICdzdHJ1Y3R1cmUnLCAnc2VjdGlvbicsICdncm91cCcsICdzZWxlY3QnLCAndHJlZSddXVxufTtcbnZhciBfZGVmYXVsdCA9IHRyZWVncmlkUm9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/treegridRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar treeitemRole = {\n  abstract: false,\n  accessibleNameRequired: true,\n  baseConcepts: [],\n  childrenPresentational: false,\n  nameFrom: ['author', 'contents'],\n  prohibitedProps: [],\n  props: {\n    'aria-expanded': null,\n    'aria-haspopup': null\n  },\n  relatedConcepts: [],\n  requireContextRole: ['group', 'tree'],\n  requiredContextRole: ['group', 'tree'],\n  requiredOwnedElements: [],\n  requiredProps: {\n    'aria-selected': null\n  },\n  superClass: [['roletype', 'structure', 'section', 'listitem'], ['roletype', 'widget', 'input', 'option']]\n};\nvar _default = treeitemRole;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvdHJlZWl0ZW1Sb2xlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9ldGMvcm9sZXMvbGl0ZXJhbC90cmVlaXRlbVJvbGUuanM/MDhlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB0cmVlaXRlbVJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogdHJ1ZSxcbiAgYmFzZUNvbmNlcHRzOiBbXSxcbiAgY2hpbGRyZW5QcmVzZW50YXRpb25hbDogZmFsc2UsXG4gIG5hbWVGcm9tOiBbJ2F1dGhvcicsICdjb250ZW50cyddLFxuICBwcm9oaWJpdGVkUHJvcHM6IFtdLFxuICBwcm9wczoge1xuICAgICdhcmlhLWV4cGFuZGVkJzogbnVsbCxcbiAgICAnYXJpYS1oYXNwb3B1cCc6IG51bGxcbiAgfSxcbiAgcmVsYXRlZENvbmNlcHRzOiBbXSxcbiAgcmVxdWlyZUNvbnRleHRSb2xlOiBbJ2dyb3VwJywgJ3RyZWUnXSxcbiAgcmVxdWlyZWRDb250ZXh0Um9sZTogWydncm91cCcsICd0cmVlJ10sXG4gIHJlcXVpcmVkT3duZWRFbGVtZW50czogW10sXG4gIHJlcXVpcmVkUHJvcHM6IHtcbiAgICAnYXJpYS1zZWxlY3RlZCc6IG51bGxcbiAgfSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGlzdGl0ZW0nXSwgWydyb2xldHlwZScsICd3aWRnZXQnLCAnaW5wdXQnLCAnb3B0aW9uJ11dXG59O1xudmFyIF9kZWZhdWx0ID0gdHJlZWl0ZW1Sb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/aria-query/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.roles = exports.roleElements = exports.elementRoles = exports.dom = exports.aria = void 0;\nvar _ariaPropsMap = _interopRequireDefault(__webpack_require__(/*! ./ariaPropsMap */ \"./node_modules/aria-query/lib/ariaPropsMap.js\"));\nvar _domMap = _interopRequireDefault(__webpack_require__(/*! ./domMap */ \"./node_modules/aria-query/lib/domMap.js\"));\nvar _rolesMap = _interopRequireDefault(__webpack_require__(/*! ./rolesMap */ \"./node_modules/aria-query/lib/rolesMap.js\"));\nvar _elementRoleMap = _interopRequireDefault(__webpack_require__(/*! ./elementRoleMap */ \"./node_modules/aria-query/lib/elementRoleMap.js\"));\nvar _roleElementMap = _interopRequireDefault(__webpack_require__(/*! ./roleElementMap */ \"./node_modules/aria-query/lib/roleElementMap.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar aria = _ariaPropsMap.default;\nexports.aria = aria;\nvar dom = _domMap.default;\nexports.dom = dom;\nvar roles = _rolesMap.default;\nexports.roles = roles;\nvar elementRoles = _elementRoleMap.default;\nexports.elementRoles = elementRoles;\nvar roleElements = _roleElementMap.default;\nexports.roleElements = roleElements;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsYUFBYSxHQUFHLG9CQUFvQixHQUFHLG9CQUFvQixHQUFHLFdBQVcsR0FBRyxZQUFZO0FBQ3hGLDJDQUEyQyxtQkFBTyxDQUFDLHFFQUFnQjtBQUNuRSxxQ0FBcUMsbUJBQU8sQ0FBQyx5REFBVTtBQUN2RCx1Q0FBdUMsbUJBQU8sQ0FBQyw2REFBWTtBQUMzRCw2Q0FBNkMsbUJBQU8sQ0FBQyx5RUFBa0I7QUFDdkUsNkNBQTZDLG1CQUFPLENBQUMseUVBQWtCO0FBQ3ZFLHVDQUF1Qyx1Q0FBdUM7O0FBRTlFO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsV0FBVztBQUNYO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hcmlhLXF1ZXJ5L2xpYi9pbmRleC5qcz9kMzk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yb2xlcyA9IGV4cG9ydHMucm9sZUVsZW1lbnRzID0gZXhwb3J0cy5lbGVtZW50Um9sZXMgPSBleHBvcnRzLmRvbSA9IGV4cG9ydHMuYXJpYSA9IHZvaWQgMDtcbnZhciBfYXJpYVByb3BzTWFwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9hcmlhUHJvcHNNYXBcIikpO1xudmFyIF9kb21NYXAgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2RvbU1hcFwiKSk7XG52YXIgX3JvbGVzTWFwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9yb2xlc01hcFwiKSk7XG52YXIgX2VsZW1lbnRSb2xlTWFwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9lbGVtZW50Um9sZU1hcFwiKSk7XG52YXIgX3JvbGVFbGVtZW50TWFwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9yb2xlRWxlbWVudE1hcFwiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgYXJpYSA9IF9hcmlhUHJvcHNNYXAuZGVmYXVsdDtcbmV4cG9ydHMuYXJpYSA9IGFyaWE7XG52YXIgZG9tID0gX2RvbU1hcC5kZWZhdWx0O1xuZXhwb3J0cy5kb20gPSBkb207XG52YXIgcm9sZXMgPSBfcm9sZXNNYXAuZGVmYXVsdDtcbmV4cG9ydHMucm9sZXMgPSByb2xlcztcbnZhciBlbGVtZW50Um9sZXMgPSBfZWxlbWVudFJvbGVNYXAuZGVmYXVsdDtcbmV4cG9ydHMuZWxlbWVudFJvbGVzID0gZWxlbWVudFJvbGVzO1xudmFyIHJvbGVFbGVtZW50cyA9IF9yb2xlRWxlbWVudE1hcC5kZWZhdWx0O1xuZXhwb3J0cy5yb2xlRWxlbWVudHMgPSByb2xlRWxlbWVudHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/roleElementMap.js":
/*!*******************************************************!*\
  !*** ./node_modules/aria-query/lib/roleElementMap.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _iterationDecorator = _interopRequireDefault(__webpack_require__(/*! ./util/iterationDecorator */ \"./node_modules/aria-query/lib/util/iterationDecorator.js\"));\nvar _rolesMap = _interopRequireDefault(__webpack_require__(/*! ./rolesMap */ \"./node_modules/aria-query/lib/rolesMap.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar roleElement = [];\nvar keys = _rolesMap.default.keys();\nfor (var i = 0; i < keys.length; i++) {\n  var key = keys[i];\n  var role = _rolesMap.default.get(key);\n  var relationConcepts = [];\n  if (role) {\n    var concepts = [].concat(role.baseConcepts, role.relatedConcepts);\n    for (var k = 0; k < concepts.length; k++) {\n      var relation = concepts[k];\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n        if (concept != null) {\n          relationConcepts.push(concept);\n        }\n      }\n    }\n    if (relationConcepts.length > 0) {\n      roleElement.push([key, relationConcepts]);\n    }\n  }\n}\nvar roleElementMap = {\n  entries: function entries() {\n    return roleElement;\n  },\n  forEach: function forEach(fn) {\n    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _iterator = _createForOfIteratorHelper(roleElement),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          _key = _step$value[0],\n          values = _step$value[1];\n        fn.call(thisArg, values, _key, roleElement);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  },\n  get: function get(key) {\n    var item = roleElement.find(function (tuple) {\n      return tuple[0] === key ? true : false;\n    });\n    return item && item[1];\n  },\n  has: function has(key) {\n    return !!roleElementMap.get(key);\n  },\n  keys: function keys() {\n    return roleElement.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        key = _ref2[0];\n      return key;\n    });\n  },\n  values: function values() {\n    return roleElement.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        values = _ref4[1];\n      return values;\n    });\n  }\n};\nvar _default = (0, _iterationDecorator.default)(roleElementMap, roleElementMap.entries());\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/roleElementMap.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/rolesMap.js":
/*!*************************************************!*\
  !*** ./node_modules/aria-query/lib/rolesMap.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _ariaAbstractRoles = _interopRequireDefault(__webpack_require__(/*! ./etc/roles/ariaAbstractRoles */ \"./node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js\"));\nvar _ariaLiteralRoles = _interopRequireDefault(__webpack_require__(/*! ./etc/roles/ariaLiteralRoles */ \"./node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js\"));\nvar _ariaDpubRoles = _interopRequireDefault(__webpack_require__(/*! ./etc/roles/ariaDpubRoles */ \"./node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js\"));\nvar _ariaGraphicsRoles = _interopRequireDefault(__webpack_require__(/*! ./etc/roles/ariaGraphicsRoles */ \"./node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js\"));\nvar _iterationDecorator = _interopRequireDefault(__webpack_require__(/*! ./util/iterationDecorator */ \"./node_modules/aria-query/lib/util/iterationDecorator.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar roles = [].concat(_ariaAbstractRoles.default, _ariaLiteralRoles.default, _ariaDpubRoles.default, _ariaGraphicsRoles.default);\nroles.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    roleDefinition = _ref2[1];\n  // Conglomerate the properties\n  var _iterator = _createForOfIteratorHelper(roleDefinition.superClass),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var superClassIter = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(superClassIter),\n        _step2;\n      try {\n        var _loop = function _loop() {\n          var superClassName = _step2.value;\n          var superClassRoleTuple = roles.find(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 1),\n              name = _ref4[0];\n            return name === superClassName;\n          });\n          if (superClassRoleTuple) {\n            var superClassDefinition = superClassRoleTuple[1];\n            for (var _i2 = 0, _Object$keys = Object.keys(superClassDefinition.props); _i2 < _Object$keys.length; _i2++) {\n              var prop = _Object$keys[_i2];\n              if (\n              // $FlowIssue Accessing the hasOwnProperty on the Object prototype is fine.\n              !Object.prototype.hasOwnProperty.call(roleDefinition.props, prop)) {\n                Object.assign(roleDefinition.props, _defineProperty({}, prop, superClassDefinition.props[prop]));\n              }\n            }\n          }\n        };\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n});\nvar rolesMap = {\n  entries: function entries() {\n    return roles;\n  },\n  forEach: function forEach(fn) {\n    var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _iterator3 = _createForOfIteratorHelper(roles),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n          key = _step3$value[0],\n          values = _step3$value[1];\n        fn.call(thisArg, values, key, roles);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  },\n  get: function get(key) {\n    var item = roles.find(function (tuple) {\n      return tuple[0] === key ? true : false;\n    });\n    return item && item[1];\n  },\n  has: function has(key) {\n    return !!rolesMap.get(key);\n  },\n  keys: function keys() {\n    return roles.map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 1),\n        key = _ref6[0];\n      return key;\n    });\n  },\n  values: function values() {\n    return roles.map(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        values = _ref8[1];\n      return values;\n    });\n  }\n};\nvar _default = (0, _iterationDecorator.default)(rolesMap, rolesMap.entries());\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/rolesMap.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/util/iterationDecorator.js":
/*!****************************************************************!*\
  !*** ./node_modules/aria-query/lib/util/iterationDecorator.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = iterationDecorator;\nvar _iteratorProxy = _interopRequireDefault(__webpack_require__(/*! ./iteratorProxy */ \"./node_modules/aria-query/lib/util/iteratorProxy.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction iterationDecorator(collection, entries) {\n  if (typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol') {\n    Object.defineProperty(collection, Symbol.iterator, {\n      value: _iteratorProxy.default.bind(entries)\n    });\n  }\n  return collection;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvdXRpbC9pdGVyYXRpb25EZWNvcmF0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZiw0Q0FBNEMsbUJBQU8sQ0FBQyw0RUFBaUI7QUFDckUsdUNBQXVDLHVDQUF1QztBQUM5RSx3QkFBd0IsMkJBQTJCLHNHQUFzRyxxQkFBcUIsbUJBQW1CLDhIQUE4SDtBQUMvVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL3V0aWwvaXRlcmF0aW9uRGVjb3JhdG9yLmpzPzZhMTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpdGVyYXRpb25EZWNvcmF0b3I7XG52YXIgX2l0ZXJhdG9yUHJveHkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2l0ZXJhdG9yUHJveHlcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cbmZ1bmN0aW9uIGl0ZXJhdGlvbkRlY29yYXRvcihjb2xsZWN0aW9uLCBlbnRyaWVzKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIF90eXBlb2YoU3ltYm9sLml0ZXJhdG9yKSA9PT0gJ3N5bWJvbCcpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29sbGVjdGlvbiwgU3ltYm9sLml0ZXJhdG9yLCB7XG4gICAgICB2YWx1ZTogX2l0ZXJhdG9yUHJveHkuZGVmYXVsdC5iaW5kKGVudHJpZXMpXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIGNvbGxlY3Rpb247XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/util/iterationDecorator.js\n"));

/***/ }),

/***/ "./node_modules/aria-query/lib/util/iteratorProxy.js":
/*!***********************************************************!*\
  !*** ./node_modules/aria-query/lib/util/iteratorProxy.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\n// eslint-disable-next-line no-unused-vars\nfunction iteratorProxy() {\n  var values = this;\n  var index = 0;\n  var iter = {\n    '@@iterator': function iterator() {\n      return iter;\n    },\n    next: function next() {\n      if (index < values.length) {\n        var value = values[index];\n        index = index + 1;\n        return {\n          done: false,\n          value: value\n        };\n      } else {\n        return {\n          done: true\n        };\n      }\n    }\n  };\n  return iter;\n}\nvar _default = iteratorProxy;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvdXRpbC9pdGVyYXRvclByb3h5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2FyaWEtcXVlcnkvbGliL3V0aWwvaXRlcmF0b3JQcm94eS5qcz9lMDYwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbmZ1bmN0aW9uIGl0ZXJhdG9yUHJveHkoKSB7XG4gIHZhciB2YWx1ZXMgPSB0aGlzO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgaXRlciA9IHtcbiAgICAnQEBpdGVyYXRvcic6IGZ1bmN0aW9uIGl0ZXJhdG9yKCkge1xuICAgICAgcmV0dXJuIGl0ZXI7XG4gICAgfSxcbiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgaWYgKGluZGV4IDwgdmFsdWVzLmxlbmd0aCkge1xuICAgICAgICB2YXIgdmFsdWUgPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkb25lOiBmYWxzZSxcbiAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZG9uZTogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGl0ZXI7XG59XG52YXIgX2RlZmF1bHQgPSBpdGVyYXRvclByb3h5O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/aria-query/lib/util/iteratorProxy.js\n"));

/***/ }),

/***/ "./node_modules/dequal/lite/index.js":
/*!*******************************************!*\
  !*** ./node_modules/dequal/lite/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var has = Object.prototype.hasOwnProperty;\n\nfunction dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n\nexports.dequal = dequal;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVxdWFsL2xpdGUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZGVxdWFsL2xpdGUvaW5kZXguanM/ODExOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZGVxdWFsKGZvbywgYmFyKSB7XG5cdHZhciBjdG9yLCBsZW47XG5cdGlmIChmb28gPT09IGJhcikgcmV0dXJuIHRydWU7XG5cblx0aWYgKGZvbyAmJiBiYXIgJiYgKGN0b3I9Zm9vLmNvbnN0cnVjdG9yKSA9PT0gYmFyLmNvbnN0cnVjdG9yKSB7XG5cdFx0aWYgKGN0b3IgPT09IERhdGUpIHJldHVybiBmb28uZ2V0VGltZSgpID09PSBiYXIuZ2V0VGltZSgpO1xuXHRcdGlmIChjdG9yID09PSBSZWdFeHApIHJldHVybiBmb28udG9TdHJpbmcoKSA9PT0gYmFyLnRvU3RyaW5nKCk7XG5cblx0XHRpZiAoY3RvciA9PT0gQXJyYXkpIHtcblx0XHRcdGlmICgobGVuPWZvby5sZW5ndGgpID09PSBiYXIubGVuZ3RoKSB7XG5cdFx0XHRcdHdoaWxlIChsZW4tLSAmJiBkZXF1YWwoZm9vW2xlbl0sIGJhcltsZW5dKSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbGVuID09PSAtMTtcblx0XHR9XG5cblx0XHRpZiAoIWN0b3IgfHwgdHlwZW9mIGZvbyA9PT0gJ29iamVjdCcpIHtcblx0XHRcdGxlbiA9IDA7XG5cdFx0XHRmb3IgKGN0b3IgaW4gZm9vKSB7XG5cdFx0XHRcdGlmIChoYXMuY2FsbChmb28sIGN0b3IpICYmICsrbGVuICYmICFoYXMuY2FsbChiYXIsIGN0b3IpKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlmICghKGN0b3IgaW4gYmFyKSB8fCAhZGVxdWFsKGZvb1tjdG9yXSwgYmFyW2N0b3JdKSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIE9iamVjdC5rZXlzKGJhcikubGVuZ3RoID09PSBsZW47XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGZvbyAhPT0gZm9vICYmIGJhciAhPT0gYmFyO1xufVxuXG5leHBvcnRzLmRlcXVhbCA9IGRlcXVhbDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dequal/lite/index.js\n"));

/***/ }),

/***/ "./node_modules/lz-string/libs/lz-string.js":
/*!**************************************************!*\
  !*** ./node_modules/lz-string/libs/lz-string.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return LZString; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lz-string/libs/lz-string.js\n"));

/***/ }),

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = function() {\n    let { onlyFirst = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const pattern = [\n        \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\n        \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"\n    ].join(\"|\");\n    return new RegExp(pattern, onlyFirst ? undefined : \"g\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1yZWdleC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUc7UUFBQyxFQUFDQyxZQUFZLEtBQUssRUFBQyxvRUFBRyxDQUFDO0lBQ3hDLE1BQU1DLFVBQVU7UUFDZjtRQUNBO0tBQ0EsQ0FBQ0MsSUFBSSxDQUFDO0lBRVAsT0FBTyxJQUFJQyxPQUFPRixTQUFTRCxZQUFZSSxZQUFZO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hbnNpLXJlZ2V4L2luZGV4LmpzPzkyYjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICh7b25seUZpcnN0ID0gZmFsc2V9ID0ge30pID0+IHtcblx0Y29uc3QgcGF0dGVybiA9IFtcblx0XHQnW1xcXFx1MDAxQlxcXFx1MDA5Ql1bW1xcXFxdKCkjOz9dKig/Oig/Oig/Oig/OjtbLWEtekEtWlxcXFxkXFxcXC8jJi46PT8lQH5fXSspKnxbYS16QS1aXFxcXGRdKyg/OjtbLWEtekEtWlxcXFxkXFxcXC8jJi46PT8lQH5fXSopKik/XFxcXHUwMDA3KScsXG5cdFx0Jyg/Oig/OlxcXFxkezEsNH0oPzo7XFxcXGR7MCw0fSkqKT9bXFxcXGRBLVBSLVRaY2YtbnRxcnk9Pjx+XSkpJ1xuXHRdLmpvaW4oJ3wnKTtcblxuXHRyZXR1cm4gbmV3IFJlZ0V4cChwYXR0ZXJuLCBvbmx5Rmlyc3QgPyB1bmRlZmluZWQgOiAnZycpO1xufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwib25seUZpcnN0IiwicGF0dGVybiIsImpvaW4iLCJSZWdFeHAiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ansi-regex/index.js\n"));

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _testing_library_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @testing-library/react */ \"./node_modules/@testing-library/react/dist/@testing-library/react.esm.js\");\n/* harmony import */ var vitest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vitest */ \"./node_modules/vitest/dist/index.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_app */ \"./src/pages/_app.tsx\");\n\n\n\n\n\n// Мокаем Head, чтобы не рендерить его фактическое содержимое\nvitest__WEBPACK_IMPORTED_MODULE_4__.vi.mock(\"next/head\", ()=>({\n        __esModule: true,\n        default: (param)=>{\n            let { children } = param;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n                lineNumber: 15,\n                columnNumber: 5\n            }, undefined);\n        }\n    }));\n(0,vitest__WEBPACK_IMPORTED_MODULE_4__.describe)(\"MyApp\", ()=>{\n    (0,vitest__WEBPACK_IMPORTED_MODULE_4__.it)(\"should render the component with correct page props\", ()=>{\n        const MockComponent = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"Mock Component\"\n            }, void 0, false, {\n                fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n                lineNumber: 21,\n                columnNumber: 33\n            }, undefined);\n        const pageProps = {\n            foo: \"bar\"\n        };\n        (0,_testing_library_react__WEBPACK_IMPORTED_MODULE_2__.render)(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            Component: MockComponent,\n            pageProps: pageProps\n        }, void 0, false, {\n            fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n            lineNumber: 24,\n            columnNumber: 12\n        }, undefined));\n        (0,vitest__WEBPACK_IMPORTED_MODULE_4__.expect)(_testing_library_react__WEBPACK_IMPORTED_MODULE_2__.screen.getByText(\"Mock Component\")).toBeInTheDocument();\n        (0,vitest__WEBPACK_IMPORTED_MODULE_4__.expect)(_testing_library_react__WEBPACK_IMPORTED_MODULE_2__.screen.getByText(/viewport/i)).toBeInTheDocument();\n        (0,vitest__WEBPACK_IMPORTED_MODULE_4__.expect)(_testing_library_react__WEBPACK_IMPORTED_MODULE_2__.screen.getByText(/RS School - React Project/i)).toBeInTheDocument();\n    });\n    (0,vitest__WEBPACK_IMPORTED_MODULE_4__.it)(\"should wrap the component in Provider, ErrorBoundary, and ThemeProvider\", ()=>{\n        // Мокаем обертки для проверки\n        const mockStoreProvider = vitest__WEBPACK_IMPORTED_MODULE_4__.vi.fn((param)=>{\n            let { children } = param;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n                lineNumber: 34,\n                columnNumber: 56\n            }, undefined);\n        });\n        const mockErrorBoundary = vitest__WEBPACK_IMPORTED_MODULE_4__.vi.fn((param)=>{\n            let { children } = param;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n                lineNumber: 37,\n                columnNumber: 56\n            }, undefined);\n        });\n        const mockThemeProvider = vitest__WEBPACK_IMPORTED_MODULE_4__.vi.fn((param)=>{\n            let { children } = param;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n                lineNumber: 40,\n                columnNumber: 56\n            }, undefined);\n        });\n        // Мокаем импортируемые компоненты\n        vitest__WEBPACK_IMPORTED_MODULE_4__.vi.mock(\"../components/ErrorBoundary/ErrorBoundary\", ()=>mockErrorBoundary);\n        vitest__WEBPACK_IMPORTED_MODULE_4__.vi.mock(\"../context/ThemeContext\", ()=>({\n                ThemeProvider: mockThemeProvider\n            }));\n        vitest__WEBPACK_IMPORTED_MODULE_4__.vi.mock(\"react-redux\", ()=>({\n                Provider: mockStoreProvider\n            }));\n        const MockComponent = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"Mock Component\"\n            }, void 0, false, {\n                fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n                lineNumber: 53,\n                columnNumber: 33\n            }, undefined);\n        (0,_testing_library_react__WEBPACK_IMPORTED_MODULE_2__.render)(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            Component: MockComponent,\n            pageProps: {}\n        }, void 0, false, {\n            fileName: \"/Users/seygorin/Desktop/JS/Epam/rolling-scopes-school/stage-react/RSS-react-tasks/src/pages/_app.tsx\",\n            lineNumber: 55,\n            columnNumber: 12\n        }, undefined));\n        (0,vitest__WEBPACK_IMPORTED_MODULE_4__.expect)(mockStoreProvider).toHaveBeenCalled();\n        (0,vitest__WEBPACK_IMPORTED_MODULE_4__.expect)(mockErrorBoundary).toHaveBeenCalled();\n        (0,vitest__WEBPACK_IMPORTED_MODULE_4__.expect)(mockThemeProvider).toHaveBeenCalled();\n    });\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBCO0FBQzhCO0FBQ047QUFDdkI7QUFPM0IsNkRBQTZEO0FBQzdETSxzQ0FBRUEsQ0FBQ0UsSUFBSSxDQUFDLGFBQWEsSUFBTztRQUMxQkMsWUFBWTtRQUNaQyxTQUFTO2dCQUFDLEVBQUVDLFFBQVEsRUFBaUM7aUNBQ25ELDhEQUFDQzswQkFBTUQ7Ozs7Ozs7SUFFWDtBQUVBUixnREFBUUEsQ0FBQyxTQUFTO0lBQ2hCQywwQ0FBRUEsQ0FBQyx1REFBdUQ7UUFDeEQsTUFBTVMsZ0JBQWdCLGtCQUFNLDhEQUFDQzswQkFBSTs7Ozs7O1FBQ2pDLE1BQU1DLFlBQVk7WUFBRUMsS0FBSztRQUFNO1FBRS9CZiw4REFBTUEsZUFBQyw4REFBQ00sNENBQUtBO1lBQUNVLFdBQVdKO1lBQWVFLFdBQVdBOzs7Ozs7UUFFbkRWLDhDQUFNQSxDQUFDSCwwREFBTUEsQ0FBQ2dCLFNBQVMsQ0FBQyxtQkFBbUJDLGlCQUFpQjtRQUM1RGQsOENBQU1BLENBQUNILDBEQUFNQSxDQUFDZ0IsU0FBUyxDQUFDLGNBQWNDLGlCQUFpQjtRQUN2RGQsOENBQU1BLENBQUNILDBEQUFNQSxDQUFDZ0IsU0FBUyxDQUFDLCtCQUErQkMsaUJBQWlCO0lBQzFFO0lBRUFmLDBDQUFFQSxDQUFDLDJFQUEyRTtRQUM1RSw4QkFBOEI7UUFDOUIsTUFBTWdCLG9CQUFvQmQsc0NBQUVBLENBQUNlLEVBQUUsQ0FDN0I7Z0JBQUMsRUFBRVYsUUFBUSxFQUFpQztpQ0FBSyw4REFBQ0c7MEJBQUtIOzs7Ozs7O1FBRXpELE1BQU1XLG9CQUFvQmhCLHNDQUFFQSxDQUFDZSxFQUFFLENBQzdCO2dCQUFDLEVBQUVWLFFBQVEsRUFBaUM7aUNBQUssOERBQUNHOzBCQUFLSDs7Ozs7OztRQUV6RCxNQUFNWSxvQkFBb0JqQixzQ0FBRUEsQ0FBQ2UsRUFBRSxDQUM3QjtnQkFBQyxFQUFFVixRQUFRLEVBQWlDO2lDQUFLLDhEQUFDRzswQkFBS0g7Ozs7Ozs7UUFHekQsa0NBQWtDO1FBQ2xDTCxzQ0FBRUEsQ0FBQ0UsSUFBSSxDQUNMLDZDQUNBLElBQU1jO1FBRVJoQixzQ0FBRUEsQ0FBQ0UsSUFBSSxDQUFDLDJCQUEyQixJQUFPO2dCQUN4Q2dCLGVBQWVEO1lBQ2pCO1FBQ0FqQixzQ0FBRUEsQ0FBQ0UsSUFBSSxDQUFDLGVBQWUsSUFBTztnQkFBRWlCLFVBQVVMO1lBQWtCO1FBRTVELE1BQU1QLGdCQUFnQixrQkFBTSw4REFBQ0M7MEJBQUk7Ozs7OztRQUVqQ2IsOERBQU1BLGVBQUMsOERBQUNNLDRDQUFLQTtZQUFDVSxXQUFXSjtZQUFlRSxXQUFXLENBQUM7Ozs7OztRQUVwRFYsOENBQU1BLENBQUNlLG1CQUFtQk0sZ0JBQWdCO1FBQzFDckIsOENBQU1BLENBQUNpQixtQkFBbUJJLGdCQUFnQjtRQUMxQ3JCLDhDQUFNQSxDQUFDa0IsbUJBQW1CRyxnQkFBZ0I7SUFDNUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvX2FwcC50c3g/ZjlkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCB7IGRlc2NyaWJlLCBpdCwgZXhwZWN0LCB2aSB9IGZyb20gJ3ZpdGVzdCc7XG5pbXBvcnQgTXlBcHAgZnJvbSAnLi9fYXBwJztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgc3RvcmUgfSBmcm9tICcuLi9zdG9yZS9zdG9yZSc7XG5pbXBvcnQgRXJyb3JCb3VuZGFyeSBmcm9tICcuLi9jb21wb25lbnRzL0Vycm9yQm91bmRhcnkvRXJyb3JCb3VuZGFyeSc7XG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9UaGVtZUNvbnRleHQnO1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcblxuLy8g0JzQvtC60LDQtdC8IEhlYWQsINGH0YLQvtCx0Ysg0L3QtSDRgNC10L3QtNC10YDQuNGC0Ywg0LXQs9C+INGE0LDQutGC0LjRh9C10YHQutC+0LUg0YHQvtC00LXRgNC20LjQvNC+0LVcbnZpLm1vY2soJ25leHQvaGVhZCcsICgpID0+ICh7XG4gIF9fZXNNb2R1bGU6IHRydWUsXG4gIGRlZmF1bHQ6ICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSA9PiAoXG4gICAgPGhlYWQ+e2NoaWxkcmVufTwvaGVhZD5cbiAgKSxcbn0pKTtcblxuZGVzY3JpYmUoJ015QXBwJywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIHJlbmRlciB0aGUgY29tcG9uZW50IHdpdGggY29ycmVjdCBwYWdlIHByb3BzJywgKCkgPT4ge1xuICAgIGNvbnN0IE1vY2tDb21wb25lbnQgPSAoKSA9PiA8ZGl2Pk1vY2sgQ29tcG9uZW50PC9kaXY+O1xuICAgIGNvbnN0IHBhZ2VQcm9wcyA9IHsgZm9vOiAnYmFyJyB9O1xuXG4gICAgcmVuZGVyKDxNeUFwcCBDb21wb25lbnQ9e01vY2tDb21wb25lbnR9IHBhZ2VQcm9wcz17cGFnZVByb3BzfSAvPik7XG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnTW9jayBDb21wb25lbnQnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgvdmlld3BvcnQvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL1JTIFNjaG9vbCAtIFJlYWN0IFByb2plY3QvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgd3JhcCB0aGUgY29tcG9uZW50IGluIFByb3ZpZGVyLCBFcnJvckJvdW5kYXJ5LCBhbmQgVGhlbWVQcm92aWRlcicsICgpID0+IHtcbiAgICAvLyDQnNC+0LrQsNC10Lwg0L7QsdC10YDRgtC60Lgg0LTQu9GPINC/0YDQvtCy0LXRgNC60LhcbiAgICBjb25zdCBtb2NrU3RvcmVQcm92aWRlciA9IHZpLmZuKFxuICAgICAgKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pID0+IDxkaXY+e2NoaWxkcmVufTwvZGl2PixcbiAgICApO1xuICAgIGNvbnN0IG1vY2tFcnJvckJvdW5kYXJ5ID0gdmkuZm4oXG4gICAgICAoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfSkgPT4gPGRpdj57Y2hpbGRyZW59PC9kaXY+LFxuICAgICk7XG4gICAgY29uc3QgbW9ja1RoZW1lUHJvdmlkZXIgPSB2aS5mbihcbiAgICAgICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSA9PiA8ZGl2PntjaGlsZHJlbn08L2Rpdj4sXG4gICAgKTtcblxuICAgIC8vINCc0L7QutCw0LXQvCDQuNC80L/QvtGA0YLQuNGA0YPQtdC80YvQtSDQutC+0LzQv9C+0L3QtdC90YLRi1xuICAgIHZpLm1vY2soXG4gICAgICAnLi4vY29tcG9uZW50cy9FcnJvckJvdW5kYXJ5L0Vycm9yQm91bmRhcnknLFxuICAgICAgKCkgPT4gbW9ja0Vycm9yQm91bmRhcnksXG4gICAgKTtcbiAgICB2aS5tb2NrKCcuLi9jb250ZXh0L1RoZW1lQ29udGV4dCcsICgpID0+ICh7XG4gICAgICBUaGVtZVByb3ZpZGVyOiBtb2NrVGhlbWVQcm92aWRlcixcbiAgICB9KSk7XG4gICAgdmkubW9jaygncmVhY3QtcmVkdXgnLCAoKSA9PiAoeyBQcm92aWRlcjogbW9ja1N0b3JlUHJvdmlkZXIgfSkpO1xuXG4gICAgY29uc3QgTW9ja0NvbXBvbmVudCA9ICgpID0+IDxkaXY+TW9jayBDb21wb25lbnQ8L2Rpdj47XG5cbiAgICByZW5kZXIoPE15QXBwIENvbXBvbmVudD17TW9ja0NvbXBvbmVudH0gcGFnZVByb3BzPXt7fX0gLz4pO1xuXG4gICAgZXhwZWN0KG1vY2tTdG9yZVByb3ZpZGVyKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgZXhwZWN0KG1vY2tFcnJvckJvdW5kYXJ5KS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgZXhwZWN0KG1vY2tUaGVtZVByb3ZpZGVyKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJyZW5kZXIiLCJzY3JlZW4iLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidmkiLCJNeUFwcCIsIm1vY2siLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNoaWxkcmVuIiwiaGVhZCIsIk1vY2tDb21wb25lbnQiLCJkaXYiLCJwYWdlUHJvcHMiLCJmb28iLCJDb21wb25lbnQiLCJnZXRCeVRleHQiLCJ0b0JlSW5UaGVEb2N1bWVudCIsIm1vY2tTdG9yZVByb3ZpZGVyIiwiZm4iLCJtb2NrRXJyb3JCb3VuZGFyeSIsIm1vY2tUaGVtZVByb3ZpZGVyIiwiVGhlbWVQcm92aWRlciIsIlByb3ZpZGVyIiwidG9IYXZlQmVlbkNhbGxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/collections.js":
/*!*********************************************************!*\
  !*** ./node_modules/pretty-format/build/collections.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.printIteratorEntries = printIteratorEntries;\nexports.printIteratorValues = printIteratorValues;\nexports.printListItems = printListItems;\nexports.printObjectProperties = printObjectProperties;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getKeysOfEnumerableProperties = (object, compareKeys) => {\n  const keys = Object.keys(object).sort(compareKeys);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(object).forEach(symbol => {\n      if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {\n        keys.push(symbol);\n      }\n    });\n  }\n\n  return keys;\n};\n/**\n * Return entries (for example, of a map)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\n\nfunction printIteratorEntries(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer, // Too bad, so sad that separator for ECMAScript Map has been ' => '\n  // What a distracting diff if you change a data structure to/from\n  // ECMAScript Object or Immutable.Map/OrderedMap which use the default.\n  separator = ': '\n) {\n  let result = '';\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    while (!current.done) {\n      const name = printer(\n        current.value[0],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      const value = printer(\n        current.value[1],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      result += indentationNext + name + separator + value;\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return values (for example, of a set)\n * with spacing, indentation, and comma\n * without surrounding punctuation (braces or brackets)\n */\n\nfunction printIteratorValues(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) {\n  let result = '';\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    while (!current.done) {\n      result +=\n        indentationNext +\n        printer(current.value, config, indentationNext, depth, refs);\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return items (for example, of an array)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, brackets)\n **/\n\nfunction printListItems(list, config, indentation, depth, refs, printer) {\n  let result = '';\n\n  if (list.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    for (let i = 0; i < list.length; i++) {\n      result += indentationNext;\n\n      if (i in list) {\n        result += printer(list[i], config, indentationNext, depth, refs);\n      }\n\n      if (i < list.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return properties of an object\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\n\nfunction printObjectProperties(val, config, indentation, depth, refs, printer) {\n  let result = '';\n  const keys = getKeysOfEnumerableProperties(val, config.compareKeys);\n\n  if (keys.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = printer(key, config, indentationNext, depth, refs);\n      const value = printer(val[key], config, indentationNext, depth, refs);\n      result += indentationNext + name + ': ' + value;\n\n      if (i < keys.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9jb2xsZWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiw0QkFBNEI7QUFDNUIsMkJBQTJCO0FBQzNCLHNCQUFzQjtBQUN0Qiw2QkFBNkI7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsaUJBQWlCO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvYnVpbGQvY29sbGVjdGlvbnMuanM/YzljZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5wcmludEl0ZXJhdG9yRW50cmllcyA9IHByaW50SXRlcmF0b3JFbnRyaWVzO1xuZXhwb3J0cy5wcmludEl0ZXJhdG9yVmFsdWVzID0gcHJpbnRJdGVyYXRvclZhbHVlcztcbmV4cG9ydHMucHJpbnRMaXN0SXRlbXMgPSBwcmludExpc3RJdGVtcztcbmV4cG9ydHMucHJpbnRPYmplY3RQcm9wZXJ0aWVzID0gcHJpbnRPYmplY3RQcm9wZXJ0aWVzO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuY29uc3QgZ2V0S2V5c09mRW51bWVyYWJsZVByb3BlcnRpZXMgPSAob2JqZWN0LCBjb21wYXJlS2V5cykgPT4ge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KS5zb3J0KGNvbXBhcmVLZXlzKTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KS5mb3JFYWNoKHN5bWJvbCA9PiB7XG4gICAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bWJvbCkuZW51bWVyYWJsZSkge1xuICAgICAgICBrZXlzLnB1c2goc3ltYm9sKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufTtcbi8qKlxuICogUmV0dXJuIGVudHJpZXMgKGZvciBleGFtcGxlLCBvZiBhIG1hcClcbiAqIHdpdGggc3BhY2luZywgaW5kZW50YXRpb24sIGFuZCBjb21tYVxuICogd2l0aG91dCBzdXJyb3VuZGluZyBwdW5jdHVhdGlvbiAoZm9yIGV4YW1wbGUsIGJyYWNlcylcbiAqL1xuXG5mdW5jdGlvbiBwcmludEl0ZXJhdG9yRW50cmllcyhcbiAgaXRlcmF0b3IsXG4gIGNvbmZpZyxcbiAgaW5kZW50YXRpb24sXG4gIGRlcHRoLFxuICByZWZzLFxuICBwcmludGVyLCAvLyBUb28gYmFkLCBzbyBzYWQgdGhhdCBzZXBhcmF0b3IgZm9yIEVDTUFTY3JpcHQgTWFwIGhhcyBiZWVuICcgPT4gJ1xuICAvLyBXaGF0IGEgZGlzdHJhY3RpbmcgZGlmZiBpZiB5b3UgY2hhbmdlIGEgZGF0YSBzdHJ1Y3R1cmUgdG8vZnJvbVxuICAvLyBFQ01BU2NyaXB0IE9iamVjdCBvciBJbW11dGFibGUuTWFwL09yZGVyZWRNYXAgd2hpY2ggdXNlIHRoZSBkZWZhdWx0LlxuICBzZXBhcmF0b3IgPSAnOiAnXG4pIHtcbiAgbGV0IHJlc3VsdCA9ICcnO1xuICBsZXQgY3VycmVudCA9IGl0ZXJhdG9yLm5leHQoKTtcblxuICBpZiAoIWN1cnJlbnQuZG9uZSkge1xuICAgIHJlc3VsdCArPSBjb25maWcuc3BhY2luZ091dGVyO1xuICAgIGNvbnN0IGluZGVudGF0aW9uTmV4dCA9IGluZGVudGF0aW9uICsgY29uZmlnLmluZGVudDtcblxuICAgIHdoaWxlICghY3VycmVudC5kb25lKSB7XG4gICAgICBjb25zdCBuYW1lID0gcHJpbnRlcihcbiAgICAgICAgY3VycmVudC52YWx1ZVswXSxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBpbmRlbnRhdGlvbk5leHQsXG4gICAgICAgIGRlcHRoLFxuICAgICAgICByZWZzXG4gICAgICApO1xuICAgICAgY29uc3QgdmFsdWUgPSBwcmludGVyKFxuICAgICAgICBjdXJyZW50LnZhbHVlWzFdLFxuICAgICAgICBjb25maWcsXG4gICAgICAgIGluZGVudGF0aW9uTmV4dCxcbiAgICAgICAgZGVwdGgsXG4gICAgICAgIHJlZnNcbiAgICAgICk7XG4gICAgICByZXN1bHQgKz0gaW5kZW50YXRpb25OZXh0ICsgbmFtZSArIHNlcGFyYXRvciArIHZhbHVlO1xuICAgICAgY3VycmVudCA9IGl0ZXJhdG9yLm5leHQoKTtcblxuICAgICAgaWYgKCFjdXJyZW50LmRvbmUpIHtcbiAgICAgICAgcmVzdWx0ICs9ICcsJyArIGNvbmZpZy5zcGFjaW5nSW5uZXI7XG4gICAgICB9IGVsc2UgaWYgKCFjb25maWcubWluKSB7XG4gICAgICAgIHJlc3VsdCArPSAnLCc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVzdWx0ICs9IGNvbmZpZy5zcGFjaW5nT3V0ZXIgKyBpbmRlbnRhdGlvbjtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFJldHVybiB2YWx1ZXMgKGZvciBleGFtcGxlLCBvZiBhIHNldClcbiAqIHdpdGggc3BhY2luZywgaW5kZW50YXRpb24sIGFuZCBjb21tYVxuICogd2l0aG91dCBzdXJyb3VuZGluZyBwdW5jdHVhdGlvbiAoYnJhY2VzIG9yIGJyYWNrZXRzKVxuICovXG5cbmZ1bmN0aW9uIHByaW50SXRlcmF0b3JWYWx1ZXMoXG4gIGl0ZXJhdG9yLFxuICBjb25maWcsXG4gIGluZGVudGF0aW9uLFxuICBkZXB0aCxcbiAgcmVmcyxcbiAgcHJpbnRlclxuKSB7XG4gIGxldCByZXN1bHQgPSAnJztcbiAgbGV0IGN1cnJlbnQgPSBpdGVyYXRvci5uZXh0KCk7XG5cbiAgaWYgKCFjdXJyZW50LmRvbmUpIHtcbiAgICByZXN1bHQgKz0gY29uZmlnLnNwYWNpbmdPdXRlcjtcbiAgICBjb25zdCBpbmRlbnRhdGlvbk5leHQgPSBpbmRlbnRhdGlvbiArIGNvbmZpZy5pbmRlbnQ7XG5cbiAgICB3aGlsZSAoIWN1cnJlbnQuZG9uZSkge1xuICAgICAgcmVzdWx0ICs9XG4gICAgICAgIGluZGVudGF0aW9uTmV4dCArXG4gICAgICAgIHByaW50ZXIoY3VycmVudC52YWx1ZSwgY29uZmlnLCBpbmRlbnRhdGlvbk5leHQsIGRlcHRoLCByZWZzKTtcbiAgICAgIGN1cnJlbnQgPSBpdGVyYXRvci5uZXh0KCk7XG5cbiAgICAgIGlmICghY3VycmVudC5kb25lKSB7XG4gICAgICAgIHJlc3VsdCArPSAnLCcgKyBjb25maWcuc3BhY2luZ0lubmVyO1xuICAgICAgfSBlbHNlIGlmICghY29uZmlnLm1pbikge1xuICAgICAgICByZXN1bHQgKz0gJywnO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlc3VsdCArPSBjb25maWcuc3BhY2luZ091dGVyICsgaW5kZW50YXRpb247XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBSZXR1cm4gaXRlbXMgKGZvciBleGFtcGxlLCBvZiBhbiBhcnJheSlcbiAqIHdpdGggc3BhY2luZywgaW5kZW50YXRpb24sIGFuZCBjb21tYVxuICogd2l0aG91dCBzdXJyb3VuZGluZyBwdW5jdHVhdGlvbiAoZm9yIGV4YW1wbGUsIGJyYWNrZXRzKVxuICoqL1xuXG5mdW5jdGlvbiBwcmludExpc3RJdGVtcyhsaXN0LCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikge1xuICBsZXQgcmVzdWx0ID0gJyc7XG5cbiAgaWYgKGxpc3QubGVuZ3RoKSB7XG4gICAgcmVzdWx0ICs9IGNvbmZpZy5zcGFjaW5nT3V0ZXI7XG4gICAgY29uc3QgaW5kZW50YXRpb25OZXh0ID0gaW5kZW50YXRpb24gKyBjb25maWcuaW5kZW50O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICByZXN1bHQgKz0gaW5kZW50YXRpb25OZXh0O1xuXG4gICAgICBpZiAoaSBpbiBsaXN0KSB7XG4gICAgICAgIHJlc3VsdCArPSBwcmludGVyKGxpc3RbaV0sIGNvbmZpZywgaW5kZW50YXRpb25OZXh0LCBkZXB0aCwgcmVmcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChpIDwgbGlzdC5sZW5ndGggLSAxKSB7XG4gICAgICAgIHJlc3VsdCArPSAnLCcgKyBjb25maWcuc3BhY2luZ0lubmVyO1xuICAgICAgfSBlbHNlIGlmICghY29uZmlnLm1pbikge1xuICAgICAgICByZXN1bHQgKz0gJywnO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlc3VsdCArPSBjb25maWcuc3BhY2luZ091dGVyICsgaW5kZW50YXRpb247XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBSZXR1cm4gcHJvcGVydGllcyBvZiBhbiBvYmplY3RcbiAqIHdpdGggc3BhY2luZywgaW5kZW50YXRpb24sIGFuZCBjb21tYVxuICogd2l0aG91dCBzdXJyb3VuZGluZyBwdW5jdHVhdGlvbiAoZm9yIGV4YW1wbGUsIGJyYWNlcylcbiAqL1xuXG5mdW5jdGlvbiBwcmludE9iamVjdFByb3BlcnRpZXModmFsLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikge1xuICBsZXQgcmVzdWx0ID0gJyc7XG4gIGNvbnN0IGtleXMgPSBnZXRLZXlzT2ZFbnVtZXJhYmxlUHJvcGVydGllcyh2YWwsIGNvbmZpZy5jb21wYXJlS2V5cyk7XG5cbiAgaWYgKGtleXMubGVuZ3RoKSB7XG4gICAgcmVzdWx0ICs9IGNvbmZpZy5zcGFjaW5nT3V0ZXI7XG4gICAgY29uc3QgaW5kZW50YXRpb25OZXh0ID0gaW5kZW50YXRpb24gKyBjb25maWcuaW5kZW50O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xuICAgICAgY29uc3QgbmFtZSA9IHByaW50ZXIoa2V5LCBjb25maWcsIGluZGVudGF0aW9uTmV4dCwgZGVwdGgsIHJlZnMpO1xuICAgICAgY29uc3QgdmFsdWUgPSBwcmludGVyKHZhbFtrZXldLCBjb25maWcsIGluZGVudGF0aW9uTmV4dCwgZGVwdGgsIHJlZnMpO1xuICAgICAgcmVzdWx0ICs9IGluZGVudGF0aW9uTmV4dCArIG5hbWUgKyAnOiAnICsgdmFsdWU7XG5cbiAgICAgIGlmIChpIDwga2V5cy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHJlc3VsdCArPSAnLCcgKyBjb25maWcuc3BhY2luZ0lubmVyO1xuICAgICAgfSBlbHNlIGlmICghY29uZmlnLm1pbikge1xuICAgICAgICByZXN1bHQgKz0gJywnO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlc3VsdCArPSBjb25maWcuc3BhY2luZ091dGVyICsgaW5kZW50YXRpb247XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/collections.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/pretty-format/build/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.DEFAULT_OPTIONS = void 0;\nexports.format = format;\nexports.plugins = void 0;\n\nvar _ansiStyles = _interopRequireDefault(__webpack_require__(/*! ansi-styles */ \"./node_modules/pretty-format/node_modules/ansi-styles/index.js\"));\n\nvar _collections = __webpack_require__(/*! ./collections */ \"./node_modules/pretty-format/build/collections.js\");\n\nvar _AsymmetricMatcher = _interopRequireDefault(\n  __webpack_require__(/*! ./plugins/AsymmetricMatcher */ \"./node_modules/pretty-format/build/plugins/AsymmetricMatcher.js\")\n);\n\nvar _ConvertAnsi = _interopRequireDefault(__webpack_require__(/*! ./plugins/ConvertAnsi */ \"./node_modules/pretty-format/build/plugins/ConvertAnsi.js\"));\n\nvar _DOMCollection = _interopRequireDefault(__webpack_require__(/*! ./plugins/DOMCollection */ \"./node_modules/pretty-format/build/plugins/DOMCollection.js\"));\n\nvar _DOMElement = _interopRequireDefault(__webpack_require__(/*! ./plugins/DOMElement */ \"./node_modules/pretty-format/build/plugins/DOMElement.js\"));\n\nvar _Immutable = _interopRequireDefault(__webpack_require__(/*! ./plugins/Immutable */ \"./node_modules/pretty-format/build/plugins/Immutable.js\"));\n\nvar _ReactElement = _interopRequireDefault(__webpack_require__(/*! ./plugins/ReactElement */ \"./node_modules/pretty-format/build/plugins/ReactElement.js\"));\n\nvar _ReactTestComponent = _interopRequireDefault(\n  __webpack_require__(/*! ./plugins/ReactTestComponent */ \"./node_modules/pretty-format/build/plugins/ReactTestComponent.js\")\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\nconst toString = Object.prototype.toString;\nconst toISOString = Date.prototype.toISOString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\n/**\n * Explicitly comparing typeof constructor to function avoids undefined as name\n * when mock identity-obj-proxy returns the key as the value for any key.\n */\n\nconst getConstructorName = val =>\n  (typeof val.constructor === 'function' && val.constructor.name) || 'Object';\n/* global window */\n\n/** Is val is equal to global window object? Works even if it does not exist :) */\n\nconst isWindow = val => typeof window !== 'undefined' && val === window;\n\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nconst NEWLINE_REGEXP = /\\n/gi;\n\nclass PrettyFormatPluginError extends Error {\n  constructor(message, stack) {\n    super(message);\n    this.stack = stack;\n    this.name = this.constructor.name;\n  }\n}\n\nfunction isToStringedArrayType(toStringed) {\n  return (\n    toStringed === '[object Array]' ||\n    toStringed === '[object ArrayBuffer]' ||\n    toStringed === '[object DataView]' ||\n    toStringed === '[object Float32Array]' ||\n    toStringed === '[object Float64Array]' ||\n    toStringed === '[object Int8Array]' ||\n    toStringed === '[object Int16Array]' ||\n    toStringed === '[object Int32Array]' ||\n    toStringed === '[object Uint8Array]' ||\n    toStringed === '[object Uint8ClampedArray]' ||\n    toStringed === '[object Uint16Array]' ||\n    toStringed === '[object Uint32Array]'\n  );\n}\n\nfunction printNumber(val) {\n  return Object.is(val, -0) ? '-0' : String(val);\n}\n\nfunction printBigInt(val) {\n  return String(`${val}n`);\n}\n\nfunction printFunction(val, printFunctionName) {\n  if (!printFunctionName) {\n    return '[Function]';\n  }\n\n  return '[Function ' + (val.name || 'anonymous') + ']';\n}\n\nfunction printSymbol(val) {\n  return String(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n}\n\nfunction printError(val) {\n  return '[' + errorToString.call(val) + ']';\n}\n/**\n * The first port of call for printing an object, handles most of the\n * data-types in JS.\n */\n\nfunction printBasicValue(val, printFunctionName, escapeRegex, escapeString) {\n  if (val === true || val === false) {\n    return '' + val;\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (val === null) {\n    return 'null';\n  }\n\n  const typeOf = typeof val;\n\n  if (typeOf === 'number') {\n    return printNumber(val);\n  }\n\n  if (typeOf === 'bigint') {\n    return printBigInt(val);\n  }\n\n  if (typeOf === 'string') {\n    if (escapeString) {\n      return '\"' + val.replace(/\"|\\\\/g, '\\\\$&') + '\"';\n    }\n\n    return '\"' + val + '\"';\n  }\n\n  if (typeOf === 'function') {\n    return printFunction(val, printFunctionName);\n  }\n\n  if (typeOf === 'symbol') {\n    return printSymbol(val);\n  }\n\n  const toStringed = toString.call(val);\n\n  if (toStringed === '[object WeakMap]') {\n    return 'WeakMap {}';\n  }\n\n  if (toStringed === '[object WeakSet]') {\n    return 'WeakSet {}';\n  }\n\n  if (\n    toStringed === '[object Function]' ||\n    toStringed === '[object GeneratorFunction]'\n  ) {\n    return printFunction(val, printFunctionName);\n  }\n\n  if (toStringed === '[object Symbol]') {\n    return printSymbol(val);\n  }\n\n  if (toStringed === '[object Date]') {\n    return isNaN(+val) ? 'Date { NaN }' : toISOString.call(val);\n  }\n\n  if (toStringed === '[object Error]') {\n    return printError(val);\n  }\n\n  if (toStringed === '[object RegExp]') {\n    if (escapeRegex) {\n      // https://github.com/benjamingr/RegExp.escape/blob/main/polyfill.js\n      return regExpToString.call(val).replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    return regExpToString.call(val);\n  }\n\n  if (val instanceof Error) {\n    return printError(val);\n  }\n\n  return null;\n}\n/**\n * Handles more complex objects ( such as objects with circular references.\n * maps and sets etc )\n */\n\nfunction printComplexValue(\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  hasCalledToJSON\n) {\n  if (refs.indexOf(val) !== -1) {\n    return '[Circular]';\n  }\n\n  refs = refs.slice();\n  refs.push(val);\n  const hitMaxDepth = ++depth > config.maxDepth;\n  const min = config.min;\n\n  if (\n    config.callToJSON &&\n    !hitMaxDepth &&\n    val.toJSON &&\n    typeof val.toJSON === 'function' &&\n    !hasCalledToJSON\n  ) {\n    return printer(val.toJSON(), config, indentation, depth, refs, true);\n  }\n\n  const toStringed = toString.call(val);\n\n  if (toStringed === '[object Arguments]') {\n    return hitMaxDepth\n      ? '[Arguments]'\n      : (min ? '' : 'Arguments ') +\n          '[' +\n          (0, _collections.printListItems)(\n            val,\n            config,\n            indentation,\n            depth,\n            refs,\n            printer\n          ) +\n          ']';\n  }\n\n  if (isToStringedArrayType(toStringed)) {\n    return hitMaxDepth\n      ? '[' + val.constructor.name + ']'\n      : (min\n          ? ''\n          : !config.printBasicPrototype && val.constructor.name === 'Array'\n          ? ''\n          : val.constructor.name + ' ') +\n          '[' +\n          (0, _collections.printListItems)(\n            val,\n            config,\n            indentation,\n            depth,\n            refs,\n            printer\n          ) +\n          ']';\n  }\n\n  if (toStringed === '[object Map]') {\n    return hitMaxDepth\n      ? '[Map]'\n      : 'Map {' +\n          (0, _collections.printIteratorEntries)(\n            val.entries(),\n            config,\n            indentation,\n            depth,\n            refs,\n            printer,\n            ' => '\n          ) +\n          '}';\n  }\n\n  if (toStringed === '[object Set]') {\n    return hitMaxDepth\n      ? '[Set]'\n      : 'Set {' +\n          (0, _collections.printIteratorValues)(\n            val.values(),\n            config,\n            indentation,\n            depth,\n            refs,\n            printer\n          ) +\n          '}';\n  } // Avoid failure to serialize global window object in jsdom test environment.\n  // For example, not even relevant if window is prop of React element.\n\n  return hitMaxDepth || isWindow(val)\n    ? '[' + getConstructorName(val) + ']'\n    : (min\n        ? ''\n        : !config.printBasicPrototype && getConstructorName(val) === 'Object'\n        ? ''\n        : getConstructorName(val) + ' ') +\n        '{' +\n        (0, _collections.printObjectProperties)(\n          val,\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        '}';\n}\n\nfunction isNewPlugin(plugin) {\n  return plugin.serialize != null;\n}\n\nfunction printPlugin(plugin, val, config, indentation, depth, refs) {\n  let printed;\n\n  try {\n    printed = isNewPlugin(plugin)\n      ? plugin.serialize(val, config, indentation, depth, refs, printer)\n      : plugin.print(\n          val,\n          valChild => printer(valChild, config, indentation, depth, refs),\n          str => {\n            const indentationNext = indentation + config.indent;\n            return (\n              indentationNext +\n              str.replace(NEWLINE_REGEXP, '\\n' + indentationNext)\n            );\n          },\n          {\n            edgeSpacing: config.spacingOuter,\n            min: config.min,\n            spacing: config.spacingInner\n          },\n          config.colors\n        );\n  } catch (error) {\n    throw new PrettyFormatPluginError(error.message, error.stack);\n  }\n\n  if (typeof printed !== 'string') {\n    throw new Error(\n      `pretty-format: Plugin must return type \"string\" but instead returned \"${typeof printed}\".`\n    );\n  }\n\n  return printed;\n}\n\nfunction findPlugin(plugins, val) {\n  for (let p = 0; p < plugins.length; p++) {\n    try {\n      if (plugins[p].test(val)) {\n        return plugins[p];\n      }\n    } catch (error) {\n      throw new PrettyFormatPluginError(error.message, error.stack);\n    }\n  }\n\n  return null;\n}\n\nfunction printer(val, config, indentation, depth, refs, hasCalledToJSON) {\n  const plugin = findPlugin(config.plugins, val);\n\n  if (plugin !== null) {\n    return printPlugin(plugin, val, config, indentation, depth, refs);\n  }\n\n  const basicResult = printBasicValue(\n    val,\n    config.printFunctionName,\n    config.escapeRegex,\n    config.escapeString\n  );\n\n  if (basicResult !== null) {\n    return basicResult;\n  }\n\n  return printComplexValue(\n    val,\n    config,\n    indentation,\n    depth,\n    refs,\n    hasCalledToJSON\n  );\n}\n\nconst DEFAULT_THEME = {\n  comment: 'gray',\n  content: 'reset',\n  prop: 'yellow',\n  tag: 'cyan',\n  value: 'green'\n};\nconst DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME);\nconst DEFAULT_OPTIONS = {\n  callToJSON: true,\n  compareKeys: undefined,\n  escapeRegex: false,\n  escapeString: true,\n  highlight: false,\n  indent: 2,\n  maxDepth: Infinity,\n  min: false,\n  plugins: [],\n  printBasicPrototype: true,\n  printFunctionName: true,\n  theme: DEFAULT_THEME\n};\nexports.DEFAULT_OPTIONS = DEFAULT_OPTIONS;\n\nfunction validateOptions(options) {\n  Object.keys(options).forEach(key => {\n    if (!DEFAULT_OPTIONS.hasOwnProperty(key)) {\n      throw new Error(`pretty-format: Unknown option \"${key}\".`);\n    }\n  });\n\n  if (options.min && options.indent !== undefined && options.indent !== 0) {\n    throw new Error(\n      'pretty-format: Options \"min\" and \"indent\" cannot be used together.'\n    );\n  }\n\n  if (options.theme !== undefined) {\n    if (options.theme === null) {\n      throw new Error('pretty-format: Option \"theme\" must not be null.');\n    }\n\n    if (typeof options.theme !== 'object') {\n      throw new Error(\n        `pretty-format: Option \"theme\" must be of type \"object\" but instead received \"${typeof options.theme}\".`\n      );\n    }\n  }\n}\n\nconst getColorsHighlight = options =>\n  DEFAULT_THEME_KEYS.reduce((colors, key) => {\n    const value =\n      options.theme && options.theme[key] !== undefined\n        ? options.theme[key]\n        : DEFAULT_THEME[key];\n    const color = value && _ansiStyles.default[value];\n\n    if (\n      color &&\n      typeof color.close === 'string' &&\n      typeof color.open === 'string'\n    ) {\n      colors[key] = color;\n    } else {\n      throw new Error(\n        `pretty-format: Option \"theme\" has a key \"${key}\" whose value \"${value}\" is undefined in ansi-styles.`\n      );\n    }\n\n    return colors;\n  }, Object.create(null));\n\nconst getColorsEmpty = () =>\n  DEFAULT_THEME_KEYS.reduce((colors, key) => {\n    colors[key] = {\n      close: '',\n      open: ''\n    };\n    return colors;\n  }, Object.create(null));\n\nconst getPrintFunctionName = options =>\n  options && options.printFunctionName !== undefined\n    ? options.printFunctionName\n    : DEFAULT_OPTIONS.printFunctionName;\n\nconst getEscapeRegex = options =>\n  options && options.escapeRegex !== undefined\n    ? options.escapeRegex\n    : DEFAULT_OPTIONS.escapeRegex;\n\nconst getEscapeString = options =>\n  options && options.escapeString !== undefined\n    ? options.escapeString\n    : DEFAULT_OPTIONS.escapeString;\n\nconst getConfig = options => {\n  var _options$printBasicPr;\n\n  return {\n    callToJSON:\n      options && options.callToJSON !== undefined\n        ? options.callToJSON\n        : DEFAULT_OPTIONS.callToJSON,\n    colors:\n      options && options.highlight\n        ? getColorsHighlight(options)\n        : getColorsEmpty(),\n    compareKeys:\n      options && typeof options.compareKeys === 'function'\n        ? options.compareKeys\n        : DEFAULT_OPTIONS.compareKeys,\n    escapeRegex: getEscapeRegex(options),\n    escapeString: getEscapeString(options),\n    indent:\n      options && options.min\n        ? ''\n        : createIndent(\n            options && options.indent !== undefined\n              ? options.indent\n              : DEFAULT_OPTIONS.indent\n          ),\n    maxDepth:\n      options && options.maxDepth !== undefined\n        ? options.maxDepth\n        : DEFAULT_OPTIONS.maxDepth,\n    min:\n      options && options.min !== undefined ? options.min : DEFAULT_OPTIONS.min,\n    plugins:\n      options && options.plugins !== undefined\n        ? options.plugins\n        : DEFAULT_OPTIONS.plugins,\n    printBasicPrototype:\n      (_options$printBasicPr =\n        options === null || options === void 0\n          ? void 0\n          : options.printBasicPrototype) !== null &&\n      _options$printBasicPr !== void 0\n        ? _options$printBasicPr\n        : true,\n    printFunctionName: getPrintFunctionName(options),\n    spacingInner: options && options.min ? ' ' : '\\n',\n    spacingOuter: options && options.min ? '' : '\\n'\n  };\n};\n\nfunction createIndent(indent) {\n  return new Array(indent + 1).join(' ');\n}\n/**\n * Returns a presentation string of your `val` object\n * @param val any potential JavaScript object\n * @param options Custom settings\n */\n\nfunction format(val, options) {\n  if (options) {\n    validateOptions(options);\n\n    if (options.plugins) {\n      const plugin = findPlugin(options.plugins, val);\n\n      if (plugin !== null) {\n        return printPlugin(plugin, val, getConfig(options), '', 0, []);\n      }\n    }\n  }\n\n  const basicResult = printBasicValue(\n    val,\n    getPrintFunctionName(options),\n    getEscapeRegex(options),\n    getEscapeString(options)\n  );\n\n  if (basicResult !== null) {\n    return basicResult;\n  }\n\n  return printComplexValue(val, getConfig(options), '', 0, []);\n}\n\nconst plugins = {\n  AsymmetricMatcher: _AsymmetricMatcher.default,\n  ConvertAnsi: _ConvertAnsi.default,\n  DOMCollection: _DOMCollection.default,\n  DOMElement: _DOMElement.default,\n  Immutable: _Immutable.default,\n  ReactElement: _ReactElement.default,\n  ReactTestComponent: _ReactTestComponent.default\n};\nexports.plugins = plugins;\nvar _default = format;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/index.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/AsymmetricMatcher.js":
/*!***********************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/AsymmetricMatcher.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar _collections = __webpack_require__(/*! ../collections */ \"./node_modules/pretty-format/build/collections.js\");\n\nvar global = (function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n})();\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nconst asymmetricMatcher =\n  typeof Symbol === 'function' && Symbol.for\n    ? Symbol.for('jest.asymmetricMatcher')\n    : 0x1357a5;\nconst SPACE = ' ';\n\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  const stringedValue = val.toString();\n\n  if (\n    stringedValue === 'ArrayContaining' ||\n    stringedValue === 'ArrayNotContaining'\n  ) {\n    if (++depth > config.maxDepth) {\n      return '[' + stringedValue + ']';\n    }\n\n    return (\n      stringedValue +\n      SPACE +\n      '[' +\n      (0, _collections.printListItems)(\n        val.sample,\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      ']'\n    );\n  }\n\n  if (\n    stringedValue === 'ObjectContaining' ||\n    stringedValue === 'ObjectNotContaining'\n  ) {\n    if (++depth > config.maxDepth) {\n      return '[' + stringedValue + ']';\n    }\n\n    return (\n      stringedValue +\n      SPACE +\n      '{' +\n      (0, _collections.printObjectProperties)(\n        val.sample,\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      '}'\n    );\n  }\n\n  if (\n    stringedValue === 'StringMatching' ||\n    stringedValue === 'StringNotMatching'\n  ) {\n    return (\n      stringedValue +\n      SPACE +\n      printer(val.sample, config, indentation, depth, refs)\n    );\n  }\n\n  if (\n    stringedValue === 'StringContaining' ||\n    stringedValue === 'StringNotContaining'\n  ) {\n    return (\n      stringedValue +\n      SPACE +\n      printer(val.sample, config, indentation, depth, refs)\n    );\n  }\n\n  return val.toAsymmetricMatcher();\n};\n\nexports.serialize = serialize;\n\nconst test = val => val && val.$$typeof === asymmetricMatcher;\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL0FzeW1tZXRyaWNNYXRjaGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLFlBQVksR0FBRyxpQkFBaUIsR0FBRyxrQkFBZTs7QUFFbEQsbUJBQW1CLG1CQUFPLENBQUMseUVBQWdCOztBQUUzQztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQkFBaUI7O0FBRWpCOztBQUVBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvYnVpbGQvcGx1Z2lucy9Bc3ltbWV0cmljTWF0Y2hlci5qcz84NmVmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnRlc3QgPSBleHBvcnRzLnNlcmlhbGl6ZSA9IGV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9jb2xsZWN0aW9ucyA9IHJlcXVpcmUoJy4uL2NvbGxlY3Rpb25zJyk7XG5cbnZhciBnbG9iYWwgPSAoZnVuY3Rpb24gKCkge1xuICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGdsb2JhbFRoaXM7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZ2xvYmFsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBzZWxmO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbiAgfVxufSkoKTtcblxudmFyIFN5bWJvbCA9IGdsb2JhbFsnamVzdC1zeW1ib2wtZG8tbm90LXRvdWNoJ10gfHwgZ2xvYmFsLlN5bWJvbDtcbmNvbnN0IGFzeW1tZXRyaWNNYXRjaGVyID1cbiAgdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yXG4gICAgPyBTeW1ib2wuZm9yKCdqZXN0LmFzeW1tZXRyaWNNYXRjaGVyJylcbiAgICA6IDB4MTM1N2E1O1xuY29uc3QgU1BBQ0UgPSAnICc7XG5cbmNvbnN0IHNlcmlhbGl6ZSA9ICh2YWwsIGNvbmZpZywgaW5kZW50YXRpb24sIGRlcHRoLCByZWZzLCBwcmludGVyKSA9PiB7XG4gIGNvbnN0IHN0cmluZ2VkVmFsdWUgPSB2YWwudG9TdHJpbmcoKTtcblxuICBpZiAoXG4gICAgc3RyaW5nZWRWYWx1ZSA9PT0gJ0FycmF5Q29udGFpbmluZycgfHxcbiAgICBzdHJpbmdlZFZhbHVlID09PSAnQXJyYXlOb3RDb250YWluaW5nJ1xuICApIHtcbiAgICBpZiAoKytkZXB0aCA+IGNvbmZpZy5tYXhEZXB0aCkge1xuICAgICAgcmV0dXJuICdbJyArIHN0cmluZ2VkVmFsdWUgKyAnXSc7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIHN0cmluZ2VkVmFsdWUgK1xuICAgICAgU1BBQ0UgK1xuICAgICAgJ1snICtcbiAgICAgICgwLCBfY29sbGVjdGlvbnMucHJpbnRMaXN0SXRlbXMpKFxuICAgICAgICB2YWwuc2FtcGxlLFxuICAgICAgICBjb25maWcsXG4gICAgICAgIGluZGVudGF0aW9uLFxuICAgICAgICBkZXB0aCxcbiAgICAgICAgcmVmcyxcbiAgICAgICAgcHJpbnRlclxuICAgICAgKSArXG4gICAgICAnXSdcbiAgICApO1xuICB9XG5cbiAgaWYgKFxuICAgIHN0cmluZ2VkVmFsdWUgPT09ICdPYmplY3RDb250YWluaW5nJyB8fFxuICAgIHN0cmluZ2VkVmFsdWUgPT09ICdPYmplY3ROb3RDb250YWluaW5nJ1xuICApIHtcbiAgICBpZiAoKytkZXB0aCA+IGNvbmZpZy5tYXhEZXB0aCkge1xuICAgICAgcmV0dXJuICdbJyArIHN0cmluZ2VkVmFsdWUgKyAnXSc7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIHN0cmluZ2VkVmFsdWUgK1xuICAgICAgU1BBQ0UgK1xuICAgICAgJ3snICtcbiAgICAgICgwLCBfY29sbGVjdGlvbnMucHJpbnRPYmplY3RQcm9wZXJ0aWVzKShcbiAgICAgICAgdmFsLnNhbXBsZSxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBpbmRlbnRhdGlvbixcbiAgICAgICAgZGVwdGgsXG4gICAgICAgIHJlZnMsXG4gICAgICAgIHByaW50ZXJcbiAgICAgICkgK1xuICAgICAgJ30nXG4gICAgKTtcbiAgfVxuXG4gIGlmIChcbiAgICBzdHJpbmdlZFZhbHVlID09PSAnU3RyaW5nTWF0Y2hpbmcnIHx8XG4gICAgc3RyaW5nZWRWYWx1ZSA9PT0gJ1N0cmluZ05vdE1hdGNoaW5nJ1xuICApIHtcbiAgICByZXR1cm4gKFxuICAgICAgc3RyaW5nZWRWYWx1ZSArXG4gICAgICBTUEFDRSArXG4gICAgICBwcmludGVyKHZhbC5zYW1wbGUsIGNvbmZpZywgaW5kZW50YXRpb24sIGRlcHRoLCByZWZzKVxuICAgICk7XG4gIH1cblxuICBpZiAoXG4gICAgc3RyaW5nZWRWYWx1ZSA9PT0gJ1N0cmluZ0NvbnRhaW5pbmcnIHx8XG4gICAgc3RyaW5nZWRWYWx1ZSA9PT0gJ1N0cmluZ05vdENvbnRhaW5pbmcnXG4gICkge1xuICAgIHJldHVybiAoXG4gICAgICBzdHJpbmdlZFZhbHVlICtcbiAgICAgIFNQQUNFICtcbiAgICAgIHByaW50ZXIodmFsLnNhbXBsZSwgY29uZmlnLCBpbmRlbnRhdGlvbiwgZGVwdGgsIHJlZnMpXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiB2YWwudG9Bc3ltbWV0cmljTWF0Y2hlcigpO1xufTtcblxuZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7XG5cbmNvbnN0IHRlc3QgPSB2YWwgPT4gdmFsICYmIHZhbC4kJHR5cGVvZiA9PT0gYXN5bW1ldHJpY01hdGNoZXI7XG5cbmV4cG9ydHMudGVzdCA9IHRlc3Q7XG5jb25zdCBwbHVnaW4gPSB7XG4gIHNlcmlhbGl6ZSxcbiAgdGVzdFxufTtcbnZhciBfZGVmYXVsdCA9IHBsdWdpbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/AsymmetricMatcher.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/ConvertAnsi.js":
/*!*****************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/ConvertAnsi.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar _ansiRegex = _interopRequireDefault(__webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\"));\n\nvar _ansiStyles = _interopRequireDefault(__webpack_require__(/*! ansi-styles */ \"./node_modules/pretty-format/node_modules/ansi-styles/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst toHumanReadableAnsi = text =>\n  text.replace((0, _ansiRegex.default)(), match => {\n    switch (match) {\n      case _ansiStyles.default.red.close:\n      case _ansiStyles.default.green.close:\n      case _ansiStyles.default.cyan.close:\n      case _ansiStyles.default.gray.close:\n      case _ansiStyles.default.white.close:\n      case _ansiStyles.default.yellow.close:\n      case _ansiStyles.default.bgRed.close:\n      case _ansiStyles.default.bgGreen.close:\n      case _ansiStyles.default.bgYellow.close:\n      case _ansiStyles.default.inverse.close:\n      case _ansiStyles.default.dim.close:\n      case _ansiStyles.default.bold.close:\n      case _ansiStyles.default.reset.open:\n      case _ansiStyles.default.reset.close:\n        return '</>';\n\n      case _ansiStyles.default.red.open:\n        return '<red>';\n\n      case _ansiStyles.default.green.open:\n        return '<green>';\n\n      case _ansiStyles.default.cyan.open:\n        return '<cyan>';\n\n      case _ansiStyles.default.gray.open:\n        return '<gray>';\n\n      case _ansiStyles.default.white.open:\n        return '<white>';\n\n      case _ansiStyles.default.yellow.open:\n        return '<yellow>';\n\n      case _ansiStyles.default.bgRed.open:\n        return '<bgRed>';\n\n      case _ansiStyles.default.bgGreen.open:\n        return '<bgGreen>';\n\n      case _ansiStyles.default.bgYellow.open:\n        return '<bgYellow>';\n\n      case _ansiStyles.default.inverse.open:\n        return '<inverse>';\n\n      case _ansiStyles.default.dim.open:\n        return '<dim>';\n\n      case _ansiStyles.default.bold.open:\n        return '<bold>';\n\n      default:\n        return '';\n    }\n  });\n\nconst test = val =>\n  typeof val === 'string' && !!val.match((0, _ansiRegex.default)());\n\nexports.test = test;\n\nconst serialize = (val, config, indentation, depth, refs, printer) =>\n  printer(toHumanReadableAnsi(val), config, indentation, depth, refs);\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL0NvbnZlcnRBbnNpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLFlBQVksR0FBRyxpQkFBaUIsR0FBRyxrQkFBZTs7QUFFbEQsd0NBQXdDLG1CQUFPLENBQUMsc0RBQVk7O0FBRTVELHlDQUF5QyxtQkFBTyxDQUFDLG1GQUFhOztBQUU5RDtBQUNBLHdDQUF3QztBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBLFlBQVk7O0FBRVo7QUFDQTs7QUFFQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcmV0dHktZm9ybWF0L2J1aWxkL3BsdWdpbnMvQ29udmVydEFuc2kuanM/NjFlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy50ZXN0ID0gZXhwb3J0cy5zZXJpYWxpemUgPSBleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfYW5zaVJlZ2V4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCdhbnNpLXJlZ2V4JykpO1xuXG52YXIgX2Fuc2lTdHlsZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoJ2Fuc2ktc3R5bGVzJykpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge2RlZmF1bHQ6IG9ian07XG59XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmNvbnN0IHRvSHVtYW5SZWFkYWJsZUFuc2kgPSB0ZXh0ID0+XG4gIHRleHQucmVwbGFjZSgoMCwgX2Fuc2lSZWdleC5kZWZhdWx0KSgpLCBtYXRjaCA9PiB7XG4gICAgc3dpdGNoIChtYXRjaCkge1xuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LnJlZC5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5ncmVlbi5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5jeWFuLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmdyYXkuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQud2hpdGUuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQueWVsbG93LmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJnUmVkLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJnR3JlZW4uY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYmdZZWxsb3cuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuaW52ZXJzZS5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5kaW0uY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYm9sZC5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5yZXNldC5vcGVuOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LnJlc2V0LmNsb3NlOlxuICAgICAgICByZXR1cm4gJzwvPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5yZWQub3BlbjpcbiAgICAgICAgcmV0dXJuICc8cmVkPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5ncmVlbi5vcGVuOlxuICAgICAgICByZXR1cm4gJzxncmVlbj4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuY3lhbi5vcGVuOlxuICAgICAgICByZXR1cm4gJzxjeWFuPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5ncmF5Lm9wZW46XG4gICAgICAgIHJldHVybiAnPGdyYXk+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LndoaXRlLm9wZW46XG4gICAgICAgIHJldHVybiAnPHdoaXRlPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC55ZWxsb3cub3BlbjpcbiAgICAgICAgcmV0dXJuICc8eWVsbG93Pic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5iZ1JlZC5vcGVuOlxuICAgICAgICByZXR1cm4gJzxiZ1JlZD4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYmdHcmVlbi5vcGVuOlxuICAgICAgICByZXR1cm4gJzxiZ0dyZWVuPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5iZ1llbGxvdy5vcGVuOlxuICAgICAgICByZXR1cm4gJzxiZ1llbGxvdz4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuaW52ZXJzZS5vcGVuOlxuICAgICAgICByZXR1cm4gJzxpbnZlcnNlPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5kaW0ub3BlbjpcbiAgICAgICAgcmV0dXJuICc8ZGltPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5ib2xkLm9wZW46XG4gICAgICAgIHJldHVybiAnPGJvbGQ+JztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfSk7XG5cbmNvbnN0IHRlc3QgPSB2YWwgPT5cbiAgdHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgJiYgISF2YWwubWF0Y2goKDAsIF9hbnNpUmVnZXguZGVmYXVsdCkoKSk7XG5cbmV4cG9ydHMudGVzdCA9IHRlc3Q7XG5cbmNvbnN0IHNlcmlhbGl6ZSA9ICh2YWwsIGNvbmZpZywgaW5kZW50YXRpb24sIGRlcHRoLCByZWZzLCBwcmludGVyKSA9PlxuICBwcmludGVyKHRvSHVtYW5SZWFkYWJsZUFuc2kodmFsKSwgY29uZmlnLCBpbmRlbnRhdGlvbiwgZGVwdGgsIHJlZnMpO1xuXG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcbmNvbnN0IHBsdWdpbiA9IHtcbiAgc2VyaWFsaXplLFxuICB0ZXN0XG59O1xudmFyIF9kZWZhdWx0ID0gcGx1Z2luO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/ConvertAnsi.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/DOMCollection.js":
/*!*******************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/DOMCollection.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar _collections = __webpack_require__(/*! ../collections */ \"./node_modules/pretty-format/build/collections.js\");\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\nconst SPACE = ' ';\nconst OBJECT_NAMES = ['DOMStringMap', 'NamedNodeMap'];\nconst ARRAY_REGEXP = /^(HTML\\w*Collection|NodeList)$/;\n\nconst testName = name =>\n  OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name);\n\nconst test = val =>\n  val &&\n  val.constructor &&\n  !!val.constructor.name &&\n  testName(val.constructor.name);\n\nexports.test = test;\n\nconst isNamedNodeMap = collection =>\n  collection.constructor.name === 'NamedNodeMap';\n\nconst serialize = (collection, config, indentation, depth, refs, printer) => {\n  const name = collection.constructor.name;\n\n  if (++depth > config.maxDepth) {\n    return '[' + name + ']';\n  }\n\n  return (\n    (config.min ? '' : name + SPACE) +\n    (OBJECT_NAMES.indexOf(name) !== -1\n      ? '{' +\n        (0, _collections.printObjectProperties)(\n          isNamedNodeMap(collection)\n            ? Array.from(collection).reduce((props, attribute) => {\n                props[attribute.name] = attribute.value;\n                return props;\n              }, {})\n            : {...collection},\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        '}'\n      : '[' +\n        (0, _collections.printListItems)(\n          Array.from(collection),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        ']')\n  );\n};\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL0RPTUNvbGxlY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsWUFBWSxHQUFHLGlCQUFpQixHQUFHLGtCQUFlOztBQUVsRCxtQkFBbUIsbUJBQU8sQ0FBQyx5RUFBZ0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWTs7QUFFWjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxJQUFJO0FBQ25CLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvYnVpbGQvcGx1Z2lucy9ET01Db2xsZWN0aW9uLmpzPzg5MWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudGVzdCA9IGV4cG9ydHMuc2VyaWFsaXplID0gZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2NvbGxlY3Rpb25zID0gcmVxdWlyZSgnLi4vY29sbGVjdGlvbnMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBsb2NhbC9iYW4tdHlwZXMtZXZlbnR1YWxseSAqL1xuY29uc3QgU1BBQ0UgPSAnICc7XG5jb25zdCBPQkpFQ1RfTkFNRVMgPSBbJ0RPTVN0cmluZ01hcCcsICdOYW1lZE5vZGVNYXAnXTtcbmNvbnN0IEFSUkFZX1JFR0VYUCA9IC9eKEhUTUxcXHcqQ29sbGVjdGlvbnxOb2RlTGlzdCkkLztcblxuY29uc3QgdGVzdE5hbWUgPSBuYW1lID0+XG4gIE9CSkVDVF9OQU1FUy5pbmRleE9mKG5hbWUpICE9PSAtMSB8fCBBUlJBWV9SRUdFWFAudGVzdChuYW1lKTtcblxuY29uc3QgdGVzdCA9IHZhbCA9PlxuICB2YWwgJiZcbiAgdmFsLmNvbnN0cnVjdG9yICYmXG4gICEhdmFsLmNvbnN0cnVjdG9yLm5hbWUgJiZcbiAgdGVzdE5hbWUodmFsLmNvbnN0cnVjdG9yLm5hbWUpO1xuXG5leHBvcnRzLnRlc3QgPSB0ZXN0O1xuXG5jb25zdCBpc05hbWVkTm9kZU1hcCA9IGNvbGxlY3Rpb24gPT5cbiAgY29sbGVjdGlvbi5jb25zdHJ1Y3Rvci5uYW1lID09PSAnTmFtZWROb2RlTWFwJztcblxuY29uc3Qgc2VyaWFsaXplID0gKGNvbGxlY3Rpb24sIGNvbmZpZywgaW5kZW50YXRpb24sIGRlcHRoLCByZWZzLCBwcmludGVyKSA9PiB7XG4gIGNvbnN0IG5hbWUgPSBjb2xsZWN0aW9uLmNvbnN0cnVjdG9yLm5hbWU7XG5cbiAgaWYgKCsrZGVwdGggPiBjb25maWcubWF4RGVwdGgpIHtcbiAgICByZXR1cm4gJ1snICsgbmFtZSArICddJztcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgKGNvbmZpZy5taW4gPyAnJyA6IG5hbWUgKyBTUEFDRSkgK1xuICAgIChPQkpFQ1RfTkFNRVMuaW5kZXhPZihuYW1lKSAhPT0gLTFcbiAgICAgID8gJ3snICtcbiAgICAgICAgKDAsIF9jb2xsZWN0aW9ucy5wcmludE9iamVjdFByb3BlcnRpZXMpKFxuICAgICAgICAgIGlzTmFtZWROb2RlTWFwKGNvbGxlY3Rpb24pXG4gICAgICAgICAgICA/IEFycmF5LmZyb20oY29sbGVjdGlvbikucmVkdWNlKChwcm9wcywgYXR0cmlidXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJvcHNbYXR0cmlidXRlLm5hbWVdID0gYXR0cmlidXRlLnZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcztcbiAgICAgICAgICAgICAgfSwge30pXG4gICAgICAgICAgICA6IHsuLi5jb2xsZWN0aW9ufSxcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgaW5kZW50YXRpb24sXG4gICAgICAgICAgZGVwdGgsXG4gICAgICAgICAgcmVmcyxcbiAgICAgICAgICBwcmludGVyXG4gICAgICAgICkgK1xuICAgICAgICAnfSdcbiAgICAgIDogJ1snICtcbiAgICAgICAgKDAsIF9jb2xsZWN0aW9ucy5wcmludExpc3RJdGVtcykoXG4gICAgICAgICAgQXJyYXkuZnJvbShjb2xsZWN0aW9uKSxcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgaW5kZW50YXRpb24sXG4gICAgICAgICAgZGVwdGgsXG4gICAgICAgICAgcmVmcyxcbiAgICAgICAgICBwcmludGVyXG4gICAgICAgICkgK1xuICAgICAgICAnXScpXG4gICk7XG59O1xuXG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcbmNvbnN0IHBsdWdpbiA9IHtcbiAgc2VyaWFsaXplLFxuICB0ZXN0XG59O1xudmFyIF9kZWZhdWx0ID0gcGx1Z2luO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/DOMCollection.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/DOMElement.js":
/*!****************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/DOMElement.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar _markup = __webpack_require__(/*! ./lib/markup */ \"./node_modules/pretty-format/build/plugins/lib/markup.js\");\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n\nconst testHasAttribute = val => {\n  try {\n    return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  } catch {\n    return false;\n  }\n};\n\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {nodeType, tagName} = val;\n  const isCustomElement =\n    (typeof tagName === 'string' && tagName.includes('-')) ||\n    testHasAttribute(val);\n  return (\n    (nodeType === ELEMENT_NODE &&\n      (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||\n    (nodeType === TEXT_NODE && constructorName === 'Text') ||\n    (nodeType === COMMENT_NODE && constructorName === 'Comment') ||\n    (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')\n  );\n};\n\nconst test = val => {\n  var _val$constructor;\n\n  return (\n    (val === null || val === void 0\n      ? void 0\n      : (_val$constructor = val.constructor) === null ||\n        _val$constructor === void 0\n      ? void 0\n      : _val$constructor.name) && testNode(val)\n  );\n};\n\nexports.test = test;\n\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\n\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\n\nconst serialize = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n\n  const type = nodeIsFragment(node)\n    ? 'DocumentFragment'\n    : node.tagName.toLowerCase();\n\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n\n  return (0, _markup.printElement)(\n    type,\n    (0, _markup.printProps)(\n      nodeIsFragment(node)\n        ? []\n        : Array.from(node.attributes)\n            .map(attr => attr.name)\n            .sort(),\n      nodeIsFragment(node)\n        ? {}\n        : Array.from(node.attributes).reduce((props, attribute) => {\n            props[attribute.name] = attribute.value;\n            return props;\n          }, {}),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    (0, _markup.printChildren)(\n      Array.prototype.slice.call(node.childNodes || node.children),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    config,\n    indentation\n  );\n};\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL0RPTUVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsWUFBWSxHQUFHLGlCQUFpQixHQUFHLGtCQUFlOztBQUVsRCxjQUFjLG1CQUFPLENBQUMsOEVBQWM7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUyxtQkFBbUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZOztBQUVaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxJQUFJO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvYnVpbGQvcGx1Z2lucy9ET01FbGVtZW50LmpzPzEwNzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudGVzdCA9IGV4cG9ydHMuc2VyaWFsaXplID0gZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX21hcmt1cCA9IHJlcXVpcmUoJy4vbGliL21hcmt1cCcpO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5jb25zdCBFTEVNRU5UX05PREUgPSAxO1xuY29uc3QgVEVYVF9OT0RFID0gMztcbmNvbnN0IENPTU1FTlRfTk9ERSA9IDg7XG5jb25zdCBGUkFHTUVOVF9OT0RFID0gMTE7XG5jb25zdCBFTEVNRU5UX1JFR0VYUCA9IC9eKChIVE1MfFNWRylcXHcqKT9FbGVtZW50JC87XG5cbmNvbnN0IHRlc3RIYXNBdHRyaWJ1dGUgPSB2YWwgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsLmhhc0F0dHJpYnV0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB2YWwuaGFzQXR0cmlidXRlKCdpcycpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmNvbnN0IHRlc3ROb2RlID0gdmFsID0+IHtcbiAgY29uc3QgY29uc3RydWN0b3JOYW1lID0gdmFsLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGNvbnN0IHtub2RlVHlwZSwgdGFnTmFtZX0gPSB2YWw7XG4gIGNvbnN0IGlzQ3VzdG9tRWxlbWVudCA9XG4gICAgKHR5cGVvZiB0YWdOYW1lID09PSAnc3RyaW5nJyAmJiB0YWdOYW1lLmluY2x1ZGVzKCctJykpIHx8XG4gICAgdGVzdEhhc0F0dHJpYnV0ZSh2YWwpO1xuICByZXR1cm4gKFxuICAgIChub2RlVHlwZSA9PT0gRUxFTUVOVF9OT0RFICYmXG4gICAgICAoRUxFTUVOVF9SRUdFWFAudGVzdChjb25zdHJ1Y3Rvck5hbWUpIHx8IGlzQ3VzdG9tRWxlbWVudCkpIHx8XG4gICAgKG5vZGVUeXBlID09PSBURVhUX05PREUgJiYgY29uc3RydWN0b3JOYW1lID09PSAnVGV4dCcpIHx8XG4gICAgKG5vZGVUeXBlID09PSBDT01NRU5UX05PREUgJiYgY29uc3RydWN0b3JOYW1lID09PSAnQ29tbWVudCcpIHx8XG4gICAgKG5vZGVUeXBlID09PSBGUkFHTUVOVF9OT0RFICYmIGNvbnN0cnVjdG9yTmFtZSA9PT0gJ0RvY3VtZW50RnJhZ21lbnQnKVxuICApO1xufTtcblxuY29uc3QgdGVzdCA9IHZhbCA9PiB7XG4gIHZhciBfdmFsJGNvbnN0cnVjdG9yO1xuXG4gIHJldHVybiAoXG4gICAgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHZvaWQgMFxuICAgICAgPyB2b2lkIDBcbiAgICAgIDogKF92YWwkY29uc3RydWN0b3IgPSB2YWwuY29uc3RydWN0b3IpID09PSBudWxsIHx8XG4gICAgICAgIF92YWwkY29uc3RydWN0b3IgPT09IHZvaWQgMFxuICAgICAgPyB2b2lkIDBcbiAgICAgIDogX3ZhbCRjb25zdHJ1Y3Rvci5uYW1lKSAmJiB0ZXN0Tm9kZSh2YWwpXG4gICk7XG59O1xuXG5leHBvcnRzLnRlc3QgPSB0ZXN0O1xuXG5mdW5jdGlvbiBub2RlSXNUZXh0KG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09IFRFWFRfTk9ERTtcbn1cblxuZnVuY3Rpb24gbm9kZUlzQ29tbWVudChub2RlKSB7XG4gIHJldHVybiBub2RlLm5vZGVUeXBlID09PSBDT01NRU5UX05PREU7XG59XG5cbmZ1bmN0aW9uIG5vZGVJc0ZyYWdtZW50KG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09IEZSQUdNRU5UX05PREU7XG59XG5cbmNvbnN0IHNlcmlhbGl6ZSA9IChub2RlLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT4ge1xuICBpZiAobm9kZUlzVGV4dChub2RlKSkge1xuICAgIHJldHVybiAoMCwgX21hcmt1cC5wcmludFRleHQpKG5vZGUuZGF0YSwgY29uZmlnKTtcbiAgfVxuXG4gIGlmIChub2RlSXNDb21tZW50KG5vZGUpKSB7XG4gICAgcmV0dXJuICgwLCBfbWFya3VwLnByaW50Q29tbWVudCkobm9kZS5kYXRhLCBjb25maWcpO1xuICB9XG5cbiAgY29uc3QgdHlwZSA9IG5vZGVJc0ZyYWdtZW50KG5vZGUpXG4gICAgPyAnRG9jdW1lbnRGcmFnbWVudCdcbiAgICA6IG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICgrK2RlcHRoID4gY29uZmlnLm1heERlcHRoKSB7XG4gICAgcmV0dXJuICgwLCBfbWFya3VwLnByaW50RWxlbWVudEFzTGVhZikodHlwZSwgY29uZmlnKTtcbiAgfVxuXG4gIHJldHVybiAoMCwgX21hcmt1cC5wcmludEVsZW1lbnQpKFxuICAgIHR5cGUsXG4gICAgKDAsIF9tYXJrdXAucHJpbnRQcm9wcykoXG4gICAgICBub2RlSXNGcmFnbWVudChub2RlKVxuICAgICAgICA/IFtdXG4gICAgICAgIDogQXJyYXkuZnJvbShub2RlLmF0dHJpYnV0ZXMpXG4gICAgICAgICAgICAubWFwKGF0dHIgPT4gYXR0ci5uYW1lKVxuICAgICAgICAgICAgLnNvcnQoKSxcbiAgICAgIG5vZGVJc0ZyYWdtZW50KG5vZGUpXG4gICAgICAgID8ge31cbiAgICAgICAgOiBBcnJheS5mcm9tKG5vZGUuYXR0cmlidXRlcykucmVkdWNlKChwcm9wcywgYXR0cmlidXRlKSA9PiB7XG4gICAgICAgICAgICBwcm9wc1thdHRyaWJ1dGUubmFtZV0gPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gcHJvcHM7XG4gICAgICAgICAgfSwge30pLFxuICAgICAgY29uZmlnLFxuICAgICAgaW5kZW50YXRpb24gKyBjb25maWcuaW5kZW50LFxuICAgICAgZGVwdGgsXG4gICAgICByZWZzLFxuICAgICAgcHJpbnRlclxuICAgICksXG4gICAgKDAsIF9tYXJrdXAucHJpbnRDaGlsZHJlbikoXG4gICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChub2RlLmNoaWxkTm9kZXMgfHwgbm9kZS5jaGlsZHJlbiksXG4gICAgICBjb25maWcsXG4gICAgICBpbmRlbnRhdGlvbiArIGNvbmZpZy5pbmRlbnQsXG4gICAgICBkZXB0aCxcbiAgICAgIHJlZnMsXG4gICAgICBwcmludGVyXG4gICAgKSxcbiAgICBjb25maWcsXG4gICAgaW5kZW50YXRpb25cbiAgKTtcbn07XG5cbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuY29uc3QgcGx1Z2luID0ge1xuICBzZXJpYWxpemUsXG4gIHRlc3Rcbn07XG52YXIgX2RlZmF1bHQgPSBwbHVnaW47XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/DOMElement.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/Immutable.js":
/*!***************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/Immutable.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar _collections = __webpack_require__(/*! ../collections */ \"./node_modules/pretty-format/build/collections.js\");\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// SENTINEL constants are from https://github.com/facebook/immutable-js\nconst IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\nconst IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\nconst IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\nconst IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\nconst IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\nconst IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@'; // immutable v4\n\nconst IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\nconst IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\nconst IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\nconst getImmutableName = name => 'Immutable.' + name;\n\nconst printAsLeaf = name => '[' + name + ']';\n\nconst SPACE = ' ';\nconst LAZY = '…'; // Seq is lazy if it calls a method like filter\n\nconst printImmutableEntries = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  type\n) =>\n  ++depth > config.maxDepth\n    ? printAsLeaf(getImmutableName(type))\n    : getImmutableName(type) +\n      SPACE +\n      '{' +\n      (0, _collections.printIteratorEntries)(\n        val.entries(),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      '}'; // Record has an entries method because it is a collection in immutable v3.\n// Return an iterator for Immutable Record from version v3 or v4.\n\nfunction getRecordEntries(val) {\n  let i = 0;\n  return {\n    next() {\n      if (i < val._keys.length) {\n        const key = val._keys[i++];\n        return {\n          done: false,\n          value: [key, val.get(key)]\n        };\n      }\n\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n}\n\nconst printImmutableRecord = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) => {\n  // _name property is defined only for an Immutable Record instance\n  // which was constructed with a second optional descriptive name arg\n  const name = getImmutableName(val._name || 'Record');\n  return ++depth > config.maxDepth\n    ? printAsLeaf(name)\n    : name +\n        SPACE +\n        '{' +\n        (0, _collections.printIteratorEntries)(\n          getRecordEntries(val),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        '}';\n};\n\nconst printImmutableSeq = (val, config, indentation, depth, refs, printer) => {\n  const name = getImmutableName('Seq');\n\n  if (++depth > config.maxDepth) {\n    return printAsLeaf(name);\n  }\n\n  if (val[IS_KEYED_SENTINEL]) {\n    return (\n      name +\n      SPACE +\n      '{' + // from Immutable collection of entries or from ECMAScript object\n      (val._iter || val._object\n        ? (0, _collections.printIteratorEntries)(\n            val.entries(),\n            config,\n            indentation,\n            depth,\n            refs,\n            printer\n          )\n        : LAZY) +\n      '}'\n    );\n  }\n\n  return (\n    name +\n    SPACE +\n    '[' +\n    (val._iter || // from Immutable collection of values\n    val._array || // from ECMAScript array\n    val._collection || // from ECMAScript collection in immutable v4\n    val._iterable // from ECMAScript collection in immutable v3\n      ? (0, _collections.printIteratorValues)(\n          val.values(),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        )\n      : LAZY) +\n    ']'\n  );\n};\n\nconst printImmutableValues = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  type\n) =>\n  ++depth > config.maxDepth\n    ? printAsLeaf(getImmutableName(type))\n    : getImmutableName(type) +\n      SPACE +\n      '[' +\n      (0, _collections.printIteratorValues)(\n        val.values(),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      ']';\n\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  if (val[IS_MAP_SENTINEL]) {\n    return printImmutableEntries(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map'\n    );\n  }\n\n  if (val[IS_LIST_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      'List'\n    );\n  }\n\n  if (val[IS_SET_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set'\n    );\n  }\n\n  if (val[IS_STACK_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      'Stack'\n    );\n  }\n\n  if (val[IS_SEQ_SENTINEL]) {\n    return printImmutableSeq(val, config, indentation, depth, refs, printer);\n  } // For compatibility with immutable v3 and v4, let record be the default.\n\n  return printImmutableRecord(val, config, indentation, depth, refs, printer);\n}; // Explicitly comparing sentinel properties to true avoids false positive\n// when mock identity-obj-proxy returns the key as the value for any key.\n\nexports.serialize = serialize;\n\nconst test = val =>\n  val &&\n  (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/Immutable.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/ReactElement.js":
/*!******************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/ReactElement.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar ReactIs = _interopRequireWildcard(__webpack_require__(/*! react-is */ \"./node_modules/pretty-format/node_modules/react-is/index.js\"));\n\nvar _markup = __webpack_require__(/*! ./lib/markup */ \"./node_modules/pretty-format/build/plugins/lib/markup.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Given element.props.children, or subtree during recursive traversal,\n// return flattened array of children.\nconst getChildren = (arg, children = []) => {\n  if (Array.isArray(arg)) {\n    arg.forEach(item => {\n      getChildren(item, children);\n    });\n  } else if (arg != null && arg !== false) {\n    children.push(arg);\n  }\n\n  return children;\n};\n\nconst getType = element => {\n  const type = element.type;\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || 'Unknown';\n  }\n\n  if (ReactIs.isFragment(element)) {\n    return 'React.Fragment';\n  }\n\n  if (ReactIs.isSuspense(element)) {\n    return 'React.Suspense';\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (ReactIs.isContextProvider(element)) {\n      return 'Context.Provider';\n    }\n\n    if (ReactIs.isContextConsumer(element)) {\n      return 'Context.Consumer';\n    }\n\n    if (ReactIs.isForwardRef(element)) {\n      if (type.displayName) {\n        return type.displayName;\n      }\n\n      const functionName = type.render.displayName || type.render.name || '';\n      return functionName !== ''\n        ? 'ForwardRef(' + functionName + ')'\n        : 'ForwardRef';\n    }\n\n    if (ReactIs.isMemo(element)) {\n      const functionName =\n        type.displayName || type.type.displayName || type.type.name || '';\n      return functionName !== '' ? 'Memo(' + functionName + ')' : 'Memo';\n    }\n  }\n\n  return 'UNDEFINED';\n};\n\nconst getPropKeys = element => {\n  const {props} = element;\n  return Object.keys(props)\n    .filter(key => key !== 'children' && props[key] !== undefined)\n    .sort();\n};\n\nconst serialize = (element, config, indentation, depth, refs, printer) =>\n  ++depth > config.maxDepth\n    ? (0, _markup.printElementAsLeaf)(getType(element), config)\n    : (0, _markup.printElement)(\n        getType(element),\n        (0, _markup.printProps)(\n          getPropKeys(element),\n          element.props,\n          config,\n          indentation + config.indent,\n          depth,\n          refs,\n          printer\n        ),\n        (0, _markup.printChildren)(\n          getChildren(element.props.children),\n          config,\n          indentation + config.indent,\n          depth,\n          refs,\n          printer\n        ),\n        config,\n        indentation\n      );\n\nexports.serialize = serialize;\n\nconst test = val => val != null && ReactIs.isElement(val);\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL1JlYWN0RWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixZQUFZLEdBQUcsaUJBQWlCLEdBQUcsa0JBQWU7O0FBRWxELHNDQUFzQyxtQkFBTyxDQUFDLDZFQUFVOztBQUV4RCxjQUFjLG1CQUFPLENBQUMsOEVBQWM7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFNBQVMsT0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUI7O0FBRWpCOztBQUVBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvYnVpbGQvcGx1Z2lucy9SZWFjdEVsZW1lbnQuanM/MTM5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy50ZXN0ID0gZXhwb3J0cy5zZXJpYWxpemUgPSBleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBSZWFjdElzID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgncmVhY3QtaXMnKSk7XG5cbnZhciBfbWFya3VwID0gcmVxdWlyZSgnLi9saWIvbWFya3VwJyk7XG5cbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCkge1xuICBpZiAodHlwZW9mIFdlYWtNYXAgIT09ICdmdW5jdGlvbicpIHJldHVybiBudWxsO1xuICB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7XG4gICAgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wO1xuICB9KShub2RlSW50ZXJvcCk7XG59XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHtcbiAgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG4gIGlmIChvYmogPT09IG51bGwgfHwgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnICYmIHR5cGVvZiBvYmogIT09ICdmdW5jdGlvbicpKSB7XG4gICAgcmV0dXJuIHtkZWZhdWx0OiBvYmp9O1xuICB9XG4gIHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7XG4gIGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkge1xuICAgIHJldHVybiBjYWNoZS5nZXQob2JqKTtcbiAgfVxuICB2YXIgbmV3T2JqID0ge307XG4gIHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGtleSAhPT0gJ2RlZmF1bHQnICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yXG4gICAgICAgID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSlcbiAgICAgICAgOiBudWxsO1xuICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4gIGlmIChjYWNoZSkge1xuICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gIH1cbiAgcmV0dXJuIG5ld09iajtcbn1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLy8gR2l2ZW4gZWxlbWVudC5wcm9wcy5jaGlsZHJlbiwgb3Igc3VidHJlZSBkdXJpbmcgcmVjdXJzaXZlIHRyYXZlcnNhbCxcbi8vIHJldHVybiBmbGF0dGVuZWQgYXJyYXkgb2YgY2hpbGRyZW4uXG5jb25zdCBnZXRDaGlsZHJlbiA9IChhcmcsIGNoaWxkcmVuID0gW10pID0+IHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuICAgIGFyZy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgZ2V0Q2hpbGRyZW4oaXRlbSwgY2hpbGRyZW4pO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKGFyZyAhPSBudWxsICYmIGFyZyAhPT0gZmFsc2UpIHtcbiAgICBjaGlsZHJlbi5wdXNoKGFyZyk7XG4gIH1cblxuICByZXR1cm4gY2hpbGRyZW47XG59O1xuXG5jb25zdCBnZXRUeXBlID0gZWxlbWVudCA9PiB7XG4gIGNvbnN0IHR5cGUgPSBlbGVtZW50LnR5cGU7XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB0eXBlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHR5cGUuZGlzcGxheU5hbWUgfHwgdHlwZS5uYW1lIHx8ICdVbmtub3duJztcbiAgfVxuXG4gIGlmIChSZWFjdElzLmlzRnJhZ21lbnQoZWxlbWVudCkpIHtcbiAgICByZXR1cm4gJ1JlYWN0LkZyYWdtZW50JztcbiAgfVxuXG4gIGlmIChSZWFjdElzLmlzU3VzcGVuc2UoZWxlbWVudCkpIHtcbiAgICByZXR1cm4gJ1JlYWN0LlN1c3BlbnNlJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcgJiYgdHlwZSAhPT0gbnVsbCkge1xuICAgIGlmIChSZWFjdElzLmlzQ29udGV4dFByb3ZpZGVyKGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gJ0NvbnRleHQuUHJvdmlkZXInO1xuICAgIH1cblxuICAgIGlmIChSZWFjdElzLmlzQ29udGV4dENvbnN1bWVyKGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gJ0NvbnRleHQuQ29uc3VtZXInO1xuICAgIH1cblxuICAgIGlmIChSZWFjdElzLmlzRm9yd2FyZFJlZihlbGVtZW50KSkge1xuICAgICAgaWYgKHR5cGUuZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHR5cGUuZGlzcGxheU5hbWU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGZ1bmN0aW9uTmFtZSA9IHR5cGUucmVuZGVyLmRpc3BsYXlOYW1lIHx8IHR5cGUucmVuZGVyLm5hbWUgfHwgJyc7XG4gICAgICByZXR1cm4gZnVuY3Rpb25OYW1lICE9PSAnJ1xuICAgICAgICA/ICdGb3J3YXJkUmVmKCcgKyBmdW5jdGlvbk5hbWUgKyAnKSdcbiAgICAgICAgOiAnRm9yd2FyZFJlZic7XG4gICAgfVxuXG4gICAgaWYgKFJlYWN0SXMuaXNNZW1vKGVsZW1lbnQpKSB7XG4gICAgICBjb25zdCBmdW5jdGlvbk5hbWUgPVxuICAgICAgICB0eXBlLmRpc3BsYXlOYW1lIHx8IHR5cGUudHlwZS5kaXNwbGF5TmFtZSB8fCB0eXBlLnR5cGUubmFtZSB8fCAnJztcbiAgICAgIHJldHVybiBmdW5jdGlvbk5hbWUgIT09ICcnID8gJ01lbW8oJyArIGZ1bmN0aW9uTmFtZSArICcpJyA6ICdNZW1vJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gJ1VOREVGSU5FRCc7XG59O1xuXG5jb25zdCBnZXRQcm9wS2V5cyA9IGVsZW1lbnQgPT4ge1xuICBjb25zdCB7cHJvcHN9ID0gZWxlbWVudDtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BzKVxuICAgIC5maWx0ZXIoa2V5ID0+IGtleSAhPT0gJ2NoaWxkcmVuJyAmJiBwcm9wc1trZXldICE9PSB1bmRlZmluZWQpXG4gICAgLnNvcnQoKTtcbn07XG5cbmNvbnN0IHNlcmlhbGl6ZSA9IChlbGVtZW50LCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT5cbiAgKytkZXB0aCA+IGNvbmZpZy5tYXhEZXB0aFxuICAgID8gKDAsIF9tYXJrdXAucHJpbnRFbGVtZW50QXNMZWFmKShnZXRUeXBlKGVsZW1lbnQpLCBjb25maWcpXG4gICAgOiAoMCwgX21hcmt1cC5wcmludEVsZW1lbnQpKFxuICAgICAgICBnZXRUeXBlKGVsZW1lbnQpLFxuICAgICAgICAoMCwgX21hcmt1cC5wcmludFByb3BzKShcbiAgICAgICAgICBnZXRQcm9wS2V5cyhlbGVtZW50KSxcbiAgICAgICAgICBlbGVtZW50LnByb3BzLFxuICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICBpbmRlbnRhdGlvbiArIGNvbmZpZy5pbmRlbnQsXG4gICAgICAgICAgZGVwdGgsXG4gICAgICAgICAgcmVmcyxcbiAgICAgICAgICBwcmludGVyXG4gICAgICAgICksXG4gICAgICAgICgwLCBfbWFya3VwLnByaW50Q2hpbGRyZW4pKFxuICAgICAgICAgIGdldENoaWxkcmVuKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pLFxuICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICBpbmRlbnRhdGlvbiArIGNvbmZpZy5pbmRlbnQsXG4gICAgICAgICAgZGVwdGgsXG4gICAgICAgICAgcmVmcyxcbiAgICAgICAgICBwcmludGVyXG4gICAgICAgICksXG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgaW5kZW50YXRpb25cbiAgICAgICk7XG5cbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuXG5jb25zdCB0ZXN0ID0gdmFsID0+IHZhbCAhPSBudWxsICYmIFJlYWN0SXMuaXNFbGVtZW50KHZhbCk7XG5cbmV4cG9ydHMudGVzdCA9IHRlc3Q7XG5jb25zdCBwbHVnaW4gPSB7XG4gIHNlcmlhbGl6ZSxcbiAgdGVzdFxufTtcbnZhciBfZGVmYXVsdCA9IHBsdWdpbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/ReactElement.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/ReactTestComponent.js":
/*!************************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/ReactTestComponent.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.test = exports.serialize = exports[\"default\"] = void 0;\n\nvar _markup = __webpack_require__(/*! ./lib/markup */ \"./node_modules/pretty-format/build/plugins/lib/markup.js\");\n\nvar global = (function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n})();\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nconst testSymbol =\n  typeof Symbol === 'function' && Symbol.for\n    ? Symbol.for('react.test.json')\n    : 0xea71357;\n\nconst getPropKeys = object => {\n  const {props} = object;\n  return props\n    ? Object.keys(props)\n        .filter(key => props[key] !== undefined)\n        .sort()\n    : [];\n};\n\nconst serialize = (object, config, indentation, depth, refs, printer) =>\n  ++depth > config.maxDepth\n    ? (0, _markup.printElementAsLeaf)(object.type, config)\n    : (0, _markup.printElement)(\n        object.type,\n        object.props\n          ? (0, _markup.printProps)(\n              getPropKeys(object),\n              object.props,\n              config,\n              indentation + config.indent,\n              depth,\n              refs,\n              printer\n            )\n          : '',\n        object.children\n          ? (0, _markup.printChildren)(\n              object.children,\n              config,\n              indentation + config.indent,\n              depth,\n              refs,\n              printer\n            )\n          : '',\n        config,\n        indentation\n      );\n\nexports.serialize = serialize;\n\nconst test = val => val && val.$$typeof === testSymbol;\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL1JlYWN0VGVzdENvbXBvbmVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixZQUFZLEdBQUcsaUJBQWlCLEdBQUcsa0JBQWU7O0FBRWxELGNBQWMsbUJBQU8sQ0FBQyw4RUFBYzs7QUFFcEM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTLE9BQU87QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCOztBQUVqQjs7QUFFQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcmV0dHktZm9ybWF0L2J1aWxkL3BsdWdpbnMvUmVhY3RUZXN0Q29tcG9uZW50LmpzPzhhYjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudGVzdCA9IGV4cG9ydHMuc2VyaWFsaXplID0gZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX21hcmt1cCA9IHJlcXVpcmUoJy4vbGliL21hcmt1cCcpO1xuXG52YXIgZ2xvYmFsID0gKGZ1bmN0aW9uICgpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBnbG9iYWxUaGlzO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGdsb2JhbDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gc2VsZjtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB3aW5kb3c7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG4gIH1cbn0pKCk7XG5cbnZhciBTeW1ib2wgPSBnbG9iYWxbJ2plc3Qtc3ltYm9sLWRvLW5vdC10b3VjaCddIHx8IGdsb2JhbC5TeW1ib2w7XG5jb25zdCB0ZXN0U3ltYm9sID1cbiAgdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yXG4gICAgPyBTeW1ib2wuZm9yKCdyZWFjdC50ZXN0Lmpzb24nKVxuICAgIDogMHhlYTcxMzU3O1xuXG5jb25zdCBnZXRQcm9wS2V5cyA9IG9iamVjdCA9PiB7XG4gIGNvbnN0IHtwcm9wc30gPSBvYmplY3Q7XG4gIHJldHVybiBwcm9wc1xuICAgID8gT2JqZWN0LmtleXMocHJvcHMpXG4gICAgICAgIC5maWx0ZXIoa2V5ID0+IHByb3BzW2tleV0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgLnNvcnQoKVxuICAgIDogW107XG59O1xuXG5jb25zdCBzZXJpYWxpemUgPSAob2JqZWN0LCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT5cbiAgKytkZXB0aCA+IGNvbmZpZy5tYXhEZXB0aFxuICAgID8gKDAsIF9tYXJrdXAucHJpbnRFbGVtZW50QXNMZWFmKShvYmplY3QudHlwZSwgY29uZmlnKVxuICAgIDogKDAsIF9tYXJrdXAucHJpbnRFbGVtZW50KShcbiAgICAgICAgb2JqZWN0LnR5cGUsXG4gICAgICAgIG9iamVjdC5wcm9wc1xuICAgICAgICAgID8gKDAsIF9tYXJrdXAucHJpbnRQcm9wcykoXG4gICAgICAgICAgICAgIGdldFByb3BLZXlzKG9iamVjdCksXG4gICAgICAgICAgICAgIG9iamVjdC5wcm9wcyxcbiAgICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgICBpbmRlbnRhdGlvbiArIGNvbmZpZy5pbmRlbnQsXG4gICAgICAgICAgICAgIGRlcHRoLFxuICAgICAgICAgICAgICByZWZzLFxuICAgICAgICAgICAgICBwcmludGVyXG4gICAgICAgICAgICApXG4gICAgICAgICAgOiAnJyxcbiAgICAgICAgb2JqZWN0LmNoaWxkcmVuXG4gICAgICAgICAgPyAoMCwgX21hcmt1cC5wcmludENoaWxkcmVuKShcbiAgICAgICAgICAgICAgb2JqZWN0LmNoaWxkcmVuLFxuICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgIGluZGVudGF0aW9uICsgY29uZmlnLmluZGVudCxcbiAgICAgICAgICAgICAgZGVwdGgsXG4gICAgICAgICAgICAgIHJlZnMsXG4gICAgICAgICAgICAgIHByaW50ZXJcbiAgICAgICAgICAgIClcbiAgICAgICAgICA6ICcnLFxuICAgICAgICBjb25maWcsXG4gICAgICAgIGluZGVudGF0aW9uXG4gICAgICApO1xuXG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcblxuY29uc3QgdGVzdCA9IHZhbCA9PiB2YWwgJiYgdmFsLiQkdHlwZW9mID09PSB0ZXN0U3ltYm9sO1xuXG5leHBvcnRzLnRlc3QgPSB0ZXN0O1xuY29uc3QgcGx1Z2luID0ge1xuICBzZXJpYWxpemUsXG4gIHRlc3Rcbn07XG52YXIgX2RlZmF1bHQgPSBwbHVnaW47XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/ReactTestComponent.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/lib/escapeHTML.js":
/*!********************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/lib/escapeHTML.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = escapeHTML;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction escapeHTML(str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL2xpYi9lc2NhcGVIVE1MLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHNCQUFzQjtBQUN0RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL2xpYi9lc2NhcGVIVE1MLmpzPzI4MTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGVzY2FwZUhUTUw7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUhUTUwoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvPC9nLCAnJmx0OycpLnJlcGxhY2UoLz4vZywgJyZndDsnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/lib/escapeHTML.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/build/plugins/lib/markup.js":
/*!****************************************************************!*\
  !*** ./node_modules/pretty-format/build/plugins/lib/markup.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.printText =\n  exports.printProps =\n  exports.printElementAsLeaf =\n  exports.printElement =\n  exports.printComment =\n  exports.printChildren =\n    void 0;\n\nvar _escapeHTML = _interopRequireDefault(__webpack_require__(/*! ./escapeHTML */ \"./node_modules/pretty-format/build/plugins/lib/escapeHTML.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Return empty string if keys is empty.\nconst printProps = (keys, props, config, indentation, depth, refs, printer) => {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys\n    .map(key => {\n      const value = props[key];\n      let printed = printer(value, config, indentationNext, depth, refs);\n\n      if (typeof value !== 'string') {\n        if (printed.indexOf('\\n') !== -1) {\n          printed =\n            config.spacingOuter +\n            indentationNext +\n            printed +\n            config.spacingOuter +\n            indentation;\n        }\n\n        printed = '{' + printed + '}';\n      }\n\n      return (\n        config.spacingInner +\n        indentation +\n        colors.prop.open +\n        key +\n        colors.prop.close +\n        '=' +\n        colors.value.open +\n        printed +\n        colors.value.close\n      );\n    })\n    .join('');\n}; // Return empty string if children is empty.\n\nexports.printProps = printProps;\n\nconst printChildren = (children, config, indentation, depth, refs, printer) =>\n  children\n    .map(\n      child =>\n        config.spacingOuter +\n        indentation +\n        (typeof child === 'string'\n          ? printText(child, config)\n          : printer(child, config, indentation, depth, refs))\n    )\n    .join('');\n\nexports.printChildren = printChildren;\n\nconst printText = (text, config) => {\n  const contentColor = config.colors.content;\n  return (\n    contentColor.open + (0, _escapeHTML.default)(text) + contentColor.close\n  );\n};\n\nexports.printText = printText;\n\nconst printComment = (comment, config) => {\n  const commentColor = config.colors.comment;\n  return (\n    commentColor.open +\n    '<!--' +\n    (0, _escapeHTML.default)(comment) +\n    '-->' +\n    commentColor.close\n  );\n}; // Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\n\nexports.printComment = printComment;\n\nconst printElement = (\n  type,\n  printedProps,\n  printedChildren,\n  config,\n  indentation\n) => {\n  const tagColor = config.colors.tag;\n  return (\n    tagColor.open +\n    '<' +\n    type +\n    (printedProps &&\n      tagColor.close +\n        printedProps +\n        config.spacingOuter +\n        indentation +\n        tagColor.open) +\n    (printedChildren\n      ? '>' +\n        tagColor.close +\n        printedChildren +\n        config.spacingOuter +\n        indentation +\n        tagColor.open +\n        '</' +\n        type\n      : (printedProps && !config.min ? '' : ' ') + '/') +\n    '>' +\n    tagColor.close\n  );\n};\n\nexports.printElement = printElement;\n\nconst printElementAsLeaf = (type, config) => {\n  const tagColor = config.colors.tag;\n  return (\n    tagColor.open +\n    '<' +\n    type +\n    tagColor.close +\n    ' …' +\n    tagColor.open +\n    ' />' +\n    tagColor.close\n  );\n};\n\nexports.printElementAsLeaf = printElementAsLeaf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9idWlsZC9wbHVnaW5zL2xpYi9tYXJrdXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsaUJBQWlCO0FBQ2pCLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsMEJBQTBCO0FBQzVCLEVBQUUsb0JBQW9CO0FBQ3RCLEVBQUUsb0JBQW9CO0FBQ3RCLEVBQUUscUJBQXFCO0FBQ3ZCOztBQUVBLHlDQUF5QyxtQkFBTyxDQUFDLGtGQUFjOztBQUUvRDtBQUNBLHdDQUF3QztBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVILGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQjs7QUFFcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcmV0dHktZm9ybWF0L2J1aWxkL3BsdWdpbnMvbGliL21hcmt1cC5qcz85MDRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnByaW50VGV4dCA9XG4gIGV4cG9ydHMucHJpbnRQcm9wcyA9XG4gIGV4cG9ydHMucHJpbnRFbGVtZW50QXNMZWFmID1cbiAgZXhwb3J0cy5wcmludEVsZW1lbnQgPVxuICBleHBvcnRzLnByaW50Q29tbWVudCA9XG4gIGV4cG9ydHMucHJpbnRDaGlsZHJlbiA9XG4gICAgdm9pZCAwO1xuXG52YXIgX2VzY2FwZUhUTUwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoJy4vZXNjYXBlSFRNTCcpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtkZWZhdWx0OiBvYmp9O1xufVxuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vLyBSZXR1cm4gZW1wdHkgc3RyaW5nIGlmIGtleXMgaXMgZW1wdHkuXG5jb25zdCBwcmludFByb3BzID0gKGtleXMsIHByb3BzLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT4ge1xuICBjb25zdCBpbmRlbnRhdGlvbk5leHQgPSBpbmRlbnRhdGlvbiArIGNvbmZpZy5pbmRlbnQ7XG4gIGNvbnN0IGNvbG9ycyA9IGNvbmZpZy5jb2xvcnM7XG4gIHJldHVybiBrZXlzXG4gICAgLm1hcChrZXkgPT4ge1xuICAgICAgY29uc3QgdmFsdWUgPSBwcm9wc1trZXldO1xuICAgICAgbGV0IHByaW50ZWQgPSBwcmludGVyKHZhbHVlLCBjb25maWcsIGluZGVudGF0aW9uTmV4dCwgZGVwdGgsIHJlZnMpO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAocHJpbnRlZC5pbmRleE9mKCdcXG4nKSAhPT0gLTEpIHtcbiAgICAgICAgICBwcmludGVkID1cbiAgICAgICAgICAgIGNvbmZpZy5zcGFjaW5nT3V0ZXIgK1xuICAgICAgICAgICAgaW5kZW50YXRpb25OZXh0ICtcbiAgICAgICAgICAgIHByaW50ZWQgK1xuICAgICAgICAgICAgY29uZmlnLnNwYWNpbmdPdXRlciArXG4gICAgICAgICAgICBpbmRlbnRhdGlvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaW50ZWQgPSAneycgKyBwcmludGVkICsgJ30nO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gKFxuICAgICAgICBjb25maWcuc3BhY2luZ0lubmVyICtcbiAgICAgICAgaW5kZW50YXRpb24gK1xuICAgICAgICBjb2xvcnMucHJvcC5vcGVuICtcbiAgICAgICAga2V5ICtcbiAgICAgICAgY29sb3JzLnByb3AuY2xvc2UgK1xuICAgICAgICAnPScgK1xuICAgICAgICBjb2xvcnMudmFsdWUub3BlbiArXG4gICAgICAgIHByaW50ZWQgK1xuICAgICAgICBjb2xvcnMudmFsdWUuY2xvc2VcbiAgICAgICk7XG4gICAgfSlcbiAgICAuam9pbignJyk7XG59OyAvLyBSZXR1cm4gZW1wdHkgc3RyaW5nIGlmIGNoaWxkcmVuIGlzIGVtcHR5LlxuXG5leHBvcnRzLnByaW50UHJvcHMgPSBwcmludFByb3BzO1xuXG5jb25zdCBwcmludENoaWxkcmVuID0gKGNoaWxkcmVuLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcywgcHJpbnRlcikgPT5cbiAgY2hpbGRyZW5cbiAgICAubWFwKFxuICAgICAgY2hpbGQgPT5cbiAgICAgICAgY29uZmlnLnNwYWNpbmdPdXRlciArXG4gICAgICAgIGluZGVudGF0aW9uICtcbiAgICAgICAgKHR5cGVvZiBjaGlsZCA9PT0gJ3N0cmluZydcbiAgICAgICAgICA/IHByaW50VGV4dChjaGlsZCwgY29uZmlnKVxuICAgICAgICAgIDogcHJpbnRlcihjaGlsZCwgY29uZmlnLCBpbmRlbnRhdGlvbiwgZGVwdGgsIHJlZnMpKVxuICAgIClcbiAgICAuam9pbignJyk7XG5cbmV4cG9ydHMucHJpbnRDaGlsZHJlbiA9IHByaW50Q2hpbGRyZW47XG5cbmNvbnN0IHByaW50VGV4dCA9ICh0ZXh0LCBjb25maWcpID0+IHtcbiAgY29uc3QgY29udGVudENvbG9yID0gY29uZmlnLmNvbG9ycy5jb250ZW50O1xuICByZXR1cm4gKFxuICAgIGNvbnRlbnRDb2xvci5vcGVuICsgKDAsIF9lc2NhcGVIVE1MLmRlZmF1bHQpKHRleHQpICsgY29udGVudENvbG9yLmNsb3NlXG4gICk7XG59O1xuXG5leHBvcnRzLnByaW50VGV4dCA9IHByaW50VGV4dDtcblxuY29uc3QgcHJpbnRDb21tZW50ID0gKGNvbW1lbnQsIGNvbmZpZykgPT4ge1xuICBjb25zdCBjb21tZW50Q29sb3IgPSBjb25maWcuY29sb3JzLmNvbW1lbnQ7XG4gIHJldHVybiAoXG4gICAgY29tbWVudENvbG9yLm9wZW4gK1xuICAgICc8IS0tJyArXG4gICAgKDAsIF9lc2NhcGVIVE1MLmRlZmF1bHQpKGNvbW1lbnQpICtcbiAgICAnLS0+JyArXG4gICAgY29tbWVudENvbG9yLmNsb3NlXG4gICk7XG59OyAvLyBTZXBhcmF0ZSB0aGUgZnVuY3Rpb25zIHRvIGZvcm1hdCBwcm9wcywgY2hpbGRyZW4sIGFuZCBlbGVtZW50LFxuLy8gc28gYSBwbHVnaW4gY291bGQgb3ZlcnJpZGUgYSBwYXJ0aWN1bGFyIGZ1bmN0aW9uLCBpZiBuZWVkZWQuXG4vLyBUb28gYmFkLCBzbyBzYWQ6IHRoZSB0cmFkaXRpb25hbCAoYnV0IHVubmVjZXNzYXJ5KSBzcGFjZVxuLy8gaW4gYSBzZWxmLWNsb3NpbmcgdGFnQ29sb3IgcmVxdWlyZXMgYSBzZWNvbmQgdGVzdCBvZiBwcmludGVkUHJvcHMuXG5cbmV4cG9ydHMucHJpbnRDb21tZW50ID0gcHJpbnRDb21tZW50O1xuXG5jb25zdCBwcmludEVsZW1lbnQgPSAoXG4gIHR5cGUsXG4gIHByaW50ZWRQcm9wcyxcbiAgcHJpbnRlZENoaWxkcmVuLFxuICBjb25maWcsXG4gIGluZGVudGF0aW9uXG4pID0+IHtcbiAgY29uc3QgdGFnQ29sb3IgPSBjb25maWcuY29sb3JzLnRhZztcbiAgcmV0dXJuIChcbiAgICB0YWdDb2xvci5vcGVuICtcbiAgICAnPCcgK1xuICAgIHR5cGUgK1xuICAgIChwcmludGVkUHJvcHMgJiZcbiAgICAgIHRhZ0NvbG9yLmNsb3NlICtcbiAgICAgICAgcHJpbnRlZFByb3BzICtcbiAgICAgICAgY29uZmlnLnNwYWNpbmdPdXRlciArXG4gICAgICAgIGluZGVudGF0aW9uICtcbiAgICAgICAgdGFnQ29sb3Iub3BlbikgK1xuICAgIChwcmludGVkQ2hpbGRyZW5cbiAgICAgID8gJz4nICtcbiAgICAgICAgdGFnQ29sb3IuY2xvc2UgK1xuICAgICAgICBwcmludGVkQ2hpbGRyZW4gK1xuICAgICAgICBjb25maWcuc3BhY2luZ091dGVyICtcbiAgICAgICAgaW5kZW50YXRpb24gK1xuICAgICAgICB0YWdDb2xvci5vcGVuICtcbiAgICAgICAgJzwvJyArXG4gICAgICAgIHR5cGVcbiAgICAgIDogKHByaW50ZWRQcm9wcyAmJiAhY29uZmlnLm1pbiA/ICcnIDogJyAnKSArICcvJykgK1xuICAgICc+JyArXG4gICAgdGFnQ29sb3IuY2xvc2VcbiAgKTtcbn07XG5cbmV4cG9ydHMucHJpbnRFbGVtZW50ID0gcHJpbnRFbGVtZW50O1xuXG5jb25zdCBwcmludEVsZW1lbnRBc0xlYWYgPSAodHlwZSwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IHRhZ0NvbG9yID0gY29uZmlnLmNvbG9ycy50YWc7XG4gIHJldHVybiAoXG4gICAgdGFnQ29sb3Iub3BlbiArXG4gICAgJzwnICtcbiAgICB0eXBlICtcbiAgICB0YWdDb2xvci5jbG9zZSArXG4gICAgJyDigKYnICtcbiAgICB0YWdDb2xvci5vcGVuICtcbiAgICAnIC8+JyArXG4gICAgdGFnQ29sb3IuY2xvc2VcbiAgKTtcbn07XG5cbmV4cG9ydHMucHJpbnRFbGVtZW50QXNMZWFmID0gcHJpbnRFbGVtZW50QXNMZWFmO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/build/plugins/lib/markup.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/node_modules/ansi-styles/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/pretty-format/node_modules/ansi-styles/index.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9ub2RlX21vZHVsZXMvYW5zaS1zdHlsZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViOztBQUVBLHNEQUFzRCxhQUFhLEVBQUUsRUFBRSxLQUFLOztBQUU1RSxvRUFBb0UsYUFBYSxFQUFFLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLOztBQUUxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QixxQkFBcUIsU0FBUztBQUM5Qjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLDRDQUE0QyxFQUFFLFNBQVMsRUFBRTtBQUN6RDtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxhQUFhOztBQUV0QjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvbm9kZV9tb2R1bGVzL2Fuc2ktc3R5bGVzL2luZGV4LmpzPzdlZDMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBTlNJX0JBQ0tHUk9VTkRfT0ZGU0VUID0gMTA7XG5cbmNvbnN0IHdyYXBBbnNpMjU2ID0gKG9mZnNldCA9IDApID0+IGNvZGUgPT4gYFxcdTAwMUJbJHszOCArIG9mZnNldH07NTske2NvZGV9bWA7XG5cbmNvbnN0IHdyYXBBbnNpMTZtID0gKG9mZnNldCA9IDApID0+IChyZWQsIGdyZWVuLCBibHVlKSA9PiBgXFx1MDAxQlskezM4ICsgb2Zmc2V0fTsyOyR7cmVkfTske2dyZWVufTske2JsdWV9bWA7XG5cbmZ1bmN0aW9uIGFzc2VtYmxlU3R5bGVzKCkge1xuXHRjb25zdCBjb2RlcyA9IG5ldyBNYXAoKTtcblx0Y29uc3Qgc3R5bGVzID0ge1xuXHRcdG1vZGlmaWVyOiB7XG5cdFx0XHRyZXNldDogWzAsIDBdLFxuXHRcdFx0Ly8gMjEgaXNuJ3Qgd2lkZWx5IHN1cHBvcnRlZCBhbmQgMjIgZG9lcyB0aGUgc2FtZSB0aGluZ1xuXHRcdFx0Ym9sZDogWzEsIDIyXSxcblx0XHRcdGRpbTogWzIsIDIyXSxcblx0XHRcdGl0YWxpYzogWzMsIDIzXSxcblx0XHRcdHVuZGVybGluZTogWzQsIDI0XSxcblx0XHRcdG92ZXJsaW5lOiBbNTMsIDU1XSxcblx0XHRcdGludmVyc2U6IFs3LCAyN10sXG5cdFx0XHRoaWRkZW46IFs4LCAyOF0sXG5cdFx0XHRzdHJpa2V0aHJvdWdoOiBbOSwgMjldXG5cdFx0fSxcblx0XHRjb2xvcjoge1xuXHRcdFx0YmxhY2s6IFszMCwgMzldLFxuXHRcdFx0cmVkOiBbMzEsIDM5XSxcblx0XHRcdGdyZWVuOiBbMzIsIDM5XSxcblx0XHRcdHllbGxvdzogWzMzLCAzOV0sXG5cdFx0XHRibHVlOiBbMzQsIDM5XSxcblx0XHRcdG1hZ2VudGE6IFszNSwgMzldLFxuXHRcdFx0Y3lhbjogWzM2LCAzOV0sXG5cdFx0XHR3aGl0ZTogWzM3LCAzOV0sXG5cblx0XHRcdC8vIEJyaWdodCBjb2xvclxuXHRcdFx0YmxhY2tCcmlnaHQ6IFs5MCwgMzldLFxuXHRcdFx0cmVkQnJpZ2h0OiBbOTEsIDM5XSxcblx0XHRcdGdyZWVuQnJpZ2h0OiBbOTIsIDM5XSxcblx0XHRcdHllbGxvd0JyaWdodDogWzkzLCAzOV0sXG5cdFx0XHRibHVlQnJpZ2h0OiBbOTQsIDM5XSxcblx0XHRcdG1hZ2VudGFCcmlnaHQ6IFs5NSwgMzldLFxuXHRcdFx0Y3lhbkJyaWdodDogWzk2LCAzOV0sXG5cdFx0XHR3aGl0ZUJyaWdodDogWzk3LCAzOV1cblx0XHR9LFxuXHRcdGJnQ29sb3I6IHtcblx0XHRcdGJnQmxhY2s6IFs0MCwgNDldLFxuXHRcdFx0YmdSZWQ6IFs0MSwgNDldLFxuXHRcdFx0YmdHcmVlbjogWzQyLCA0OV0sXG5cdFx0XHRiZ1llbGxvdzogWzQzLCA0OV0sXG5cdFx0XHRiZ0JsdWU6IFs0NCwgNDldLFxuXHRcdFx0YmdNYWdlbnRhOiBbNDUsIDQ5XSxcblx0XHRcdGJnQ3lhbjogWzQ2LCA0OV0sXG5cdFx0XHRiZ1doaXRlOiBbNDcsIDQ5XSxcblxuXHRcdFx0Ly8gQnJpZ2h0IGNvbG9yXG5cdFx0XHRiZ0JsYWNrQnJpZ2h0OiBbMTAwLCA0OV0sXG5cdFx0XHRiZ1JlZEJyaWdodDogWzEwMSwgNDldLFxuXHRcdFx0YmdHcmVlbkJyaWdodDogWzEwMiwgNDldLFxuXHRcdFx0YmdZZWxsb3dCcmlnaHQ6IFsxMDMsIDQ5XSxcblx0XHRcdGJnQmx1ZUJyaWdodDogWzEwNCwgNDldLFxuXHRcdFx0YmdNYWdlbnRhQnJpZ2h0OiBbMTA1LCA0OV0sXG5cdFx0XHRiZ0N5YW5CcmlnaHQ6IFsxMDYsIDQ5XSxcblx0XHRcdGJnV2hpdGVCcmlnaHQ6IFsxMDcsIDQ5XVxuXHRcdH1cblx0fTtcblxuXHQvLyBBbGlhcyBicmlnaHQgYmxhY2sgYXMgZ3JheSAoYW5kIGdyZXkpXG5cdHN0eWxlcy5jb2xvci5ncmF5ID0gc3R5bGVzLmNvbG9yLmJsYWNrQnJpZ2h0O1xuXHRzdHlsZXMuYmdDb2xvci5iZ0dyYXkgPSBzdHlsZXMuYmdDb2xvci5iZ0JsYWNrQnJpZ2h0O1xuXHRzdHlsZXMuY29sb3IuZ3JleSA9IHN0eWxlcy5jb2xvci5ibGFja0JyaWdodDtcblx0c3R5bGVzLmJnQ29sb3IuYmdHcmV5ID0gc3R5bGVzLmJnQ29sb3IuYmdCbGFja0JyaWdodDtcblxuXHRmb3IgKGNvbnN0IFtncm91cE5hbWUsIGdyb3VwXSBvZiBPYmplY3QuZW50cmllcyhzdHlsZXMpKSB7XG5cdFx0Zm9yIChjb25zdCBbc3R5bGVOYW1lLCBzdHlsZV0gb2YgT2JqZWN0LmVudHJpZXMoZ3JvdXApKSB7XG5cdFx0XHRzdHlsZXNbc3R5bGVOYW1lXSA9IHtcblx0XHRcdFx0b3BlbjogYFxcdTAwMUJbJHtzdHlsZVswXX1tYCxcblx0XHRcdFx0Y2xvc2U6IGBcXHUwMDFCWyR7c3R5bGVbMV19bWBcblx0XHRcdH07XG5cblx0XHRcdGdyb3VwW3N0eWxlTmFtZV0gPSBzdHlsZXNbc3R5bGVOYW1lXTtcblxuXHRcdFx0Y29kZXMuc2V0KHN0eWxlWzBdLCBzdHlsZVsxXSk7XG5cdFx0fVxuXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHN0eWxlcywgZ3JvdXBOYW1lLCB7XG5cdFx0XHR2YWx1ZTogZ3JvdXAsXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHRcdH0pO1xuXHR9XG5cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHN0eWxlcywgJ2NvZGVzJywge1xuXHRcdHZhbHVlOiBjb2Rlcyxcblx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHR9KTtcblxuXHRzdHlsZXMuY29sb3IuY2xvc2UgPSAnXFx1MDAxQlszOW0nO1xuXHRzdHlsZXMuYmdDb2xvci5jbG9zZSA9ICdcXHUwMDFCWzQ5bSc7XG5cblx0c3R5bGVzLmNvbG9yLmFuc2kyNTYgPSB3cmFwQW5zaTI1NigpO1xuXHRzdHlsZXMuY29sb3IuYW5zaTE2bSA9IHdyYXBBbnNpMTZtKCk7XG5cdHN0eWxlcy5iZ0NvbG9yLmFuc2kyNTYgPSB3cmFwQW5zaTI1NihBTlNJX0JBQ0tHUk9VTkRfT0ZGU0VUKTtcblx0c3R5bGVzLmJnQ29sb3IuYW5zaTE2bSA9IHdyYXBBbnNpMTZtKEFOU0lfQkFDS0dST1VORF9PRkZTRVQpO1xuXG5cdC8vIEZyb20gaHR0cHM6Ly9naXRodWIuY29tL1FpeC0vY29sb3ItY29udmVydC9ibG9iLzNmMGUwZDRlOTJlMjM1Nzk2Y2NiMTdmNmU4NWM3MjA5NGE2NTFmNDkvY29udmVyc2lvbnMuanNcblx0T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3R5bGVzLCB7XG5cdFx0cmdiVG9BbnNpMjU2OiB7XG5cdFx0XHR2YWx1ZTogKHJlZCwgZ3JlZW4sIGJsdWUpID0+IHtcblx0XHRcdFx0Ly8gV2UgdXNlIHRoZSBleHRlbmRlZCBncmV5c2NhbGUgcGFsZXR0ZSBoZXJlLCB3aXRoIHRoZSBleGNlcHRpb24gb2Zcblx0XHRcdFx0Ly8gYmxhY2sgYW5kIHdoaXRlLiBub3JtYWwgcGFsZXR0ZSBvbmx5IGhhcyA0IGdyZXlzY2FsZSBzaGFkZXMuXG5cdFx0XHRcdGlmIChyZWQgPT09IGdyZWVuICYmIGdyZWVuID09PSBibHVlKSB7XG5cdFx0XHRcdFx0aWYgKHJlZCA8IDgpIHtcblx0XHRcdFx0XHRcdHJldHVybiAxNjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAocmVkID4gMjQ4KSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gMjMxO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBNYXRoLnJvdW5kKCgocmVkIC0gOCkgLyAyNDcpICogMjQpICsgMjMyO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIDE2ICtcblx0XHRcdFx0XHQoMzYgKiBNYXRoLnJvdW5kKHJlZCAvIDI1NSAqIDUpKSArXG5cdFx0XHRcdFx0KDYgKiBNYXRoLnJvdW5kKGdyZWVuIC8gMjU1ICogNSkpICtcblx0XHRcdFx0XHRNYXRoLnJvdW5kKGJsdWUgLyAyNTUgKiA1KTtcblx0XHRcdH0sXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHRcdH0sXG5cdFx0aGV4VG9SZ2I6IHtcblx0XHRcdHZhbHVlOiBoZXggPT4ge1xuXHRcdFx0XHRjb25zdCBtYXRjaGVzID0gLyg/PGNvbG9yU3RyaW5nPlthLWZcXGRdezZ9fFthLWZcXGRdezN9KS9pLmV4ZWMoaGV4LnRvU3RyaW5nKDE2KSk7XG5cdFx0XHRcdGlmICghbWF0Y2hlcykge1xuXHRcdFx0XHRcdHJldHVybiBbMCwgMCwgMF07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRsZXQge2NvbG9yU3RyaW5nfSA9IG1hdGNoZXMuZ3JvdXBzO1xuXG5cdFx0XHRcdGlmIChjb2xvclN0cmluZy5sZW5ndGggPT09IDMpIHtcblx0XHRcdFx0XHRjb2xvclN0cmluZyA9IGNvbG9yU3RyaW5nLnNwbGl0KCcnKS5tYXAoY2hhcmFjdGVyID0+IGNoYXJhY3RlciArIGNoYXJhY3Rlcikuam9pbignJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjb25zdCBpbnRlZ2VyID0gTnVtYmVyLnBhcnNlSW50KGNvbG9yU3RyaW5nLCAxNik7XG5cblx0XHRcdFx0cmV0dXJuIFtcblx0XHRcdFx0XHQoaW50ZWdlciA+PiAxNikgJiAweEZGLFxuXHRcdFx0XHRcdChpbnRlZ2VyID4+IDgpICYgMHhGRixcblx0XHRcdFx0XHRpbnRlZ2VyICYgMHhGRlxuXHRcdFx0XHRdO1xuXHRcdFx0fSxcblx0XHRcdGVudW1lcmFibGU6IGZhbHNlXG5cdFx0fSxcblx0XHRoZXhUb0Fuc2kyNTY6IHtcblx0XHRcdHZhbHVlOiBoZXggPT4gc3R5bGVzLnJnYlRvQW5zaTI1NiguLi5zdHlsZXMuaGV4VG9SZ2IoaGV4KSksXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHRcdH1cblx0fSk7XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuLy8gTWFrZSB0aGUgZXhwb3J0IGltbXV0YWJsZVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgJ2V4cG9ydHMnLCB7XG5cdGVudW1lcmFibGU6IHRydWUsXG5cdGdldDogYXNzZW1ibGVTdHlsZXNcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/node_modules/ansi-styles/index.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/node_modules/react-is/cjs/react-is.development.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/pretty-format/node_modules/react-is/cjs/react-is.development.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nvar REACT_FRAGMENT_TYPE = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQSxJQUFJOzs7QUFHSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEOztBQUVsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDs7QUFFdkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCLHVCQUF1QjtBQUN2QixlQUFlO0FBQ2Ysa0JBQWtCO0FBQ2xCLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1osWUFBWTtBQUNaLGNBQWM7QUFDZCxnQkFBZ0I7QUFDaEIsa0JBQWtCO0FBQ2xCLGdCQUFnQjtBQUNoQixtQkFBbUI7QUFDbkIsd0JBQXdCO0FBQ3hCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsaUJBQWlCO0FBQ2pCLG9CQUFvQjtBQUNwQixrQkFBa0I7QUFDbEIsY0FBYztBQUNkLGNBQWM7QUFDZCxnQkFBZ0I7QUFDaEIsa0JBQWtCO0FBQ2xCLG9CQUFvQjtBQUNwQixrQkFBa0I7QUFDbEIsMEJBQTBCO0FBQzFCLGNBQWM7QUFDZCxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ByZXR0eS1mb3JtYXQvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcz80YjMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC1pcy5kZXZlbG9wbWVudC5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAoZnVuY3Rpb24oKSB7XG4ndXNlIHN0cmljdCc7XG5cbi8vIEFUVEVOVElPTlxuLy8gV2hlbiBhZGRpbmcgbmV3IHN5bWJvbHMgdG8gdGhpcyBmaWxlLFxuLy8gUGxlYXNlIGNvbnNpZGVyIGFsc28gYWRkaW5nIHRvICdyZWFjdC1kZXZ0b29scy1zaGFyZWQvc3JjL2JhY2tlbmQvUmVhY3RTeW1ib2xzJ1xuLy8gVGhlIFN5bWJvbCB1c2VkIHRvIHRhZyB0aGUgUmVhY3RFbGVtZW50LWxpa2UgdHlwZXMuIElmIHRoZXJlIGlzIG5vIG5hdGl2ZSBTeW1ib2xcbi8vIG5vciBwb2x5ZmlsbCwgdGhlbiBhIHBsYWluIG51bWJlciBpcyB1c2VkIGZvciBwZXJmb3JtYW5jZS5cbnZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAweGVhYzc7XG52YXIgUkVBQ1RfUE9SVEFMX1RZUEUgPSAweGVhY2E7XG52YXIgUkVBQ1RfRlJBR01FTlRfVFlQRSA9IDB4ZWFjYjtcbnZhciBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFID0gMHhlYWNjO1xudmFyIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSAweGVhZDI7XG52YXIgUkVBQ1RfUFJPVklERVJfVFlQRSA9IDB4ZWFjZDtcbnZhciBSRUFDVF9DT05URVhUX1RZUEUgPSAweGVhY2U7XG52YXIgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSA9IDB4ZWFkMDtcbnZhciBSRUFDVF9TVVNQRU5TRV9UWVBFID0gMHhlYWQxO1xudmFyIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSA9IDB4ZWFkODtcbnZhciBSRUFDVF9NRU1PX1RZUEUgPSAweGVhZDM7XG52YXIgUkVBQ1RfTEFaWV9UWVBFID0gMHhlYWQ0O1xudmFyIFJFQUNUX0JMT0NLX1RZUEUgPSAweGVhZDk7XG52YXIgUkVBQ1RfU0VSVkVSX0JMT0NLX1RZUEUgPSAweGVhZGE7XG52YXIgUkVBQ1RfRlVOREFNRU5UQUxfVFlQRSA9IDB4ZWFkNTtcbnZhciBSRUFDVF9TQ09QRV9UWVBFID0gMHhlYWQ3O1xudmFyIFJFQUNUX09QQVFVRV9JRF9UWVBFID0gMHhlYWUwO1xudmFyIFJFQUNUX0RFQlVHX1RSQUNJTkdfTU9ERV9UWVBFID0gMHhlYWUxO1xudmFyIFJFQUNUX09GRlNDUkVFTl9UWVBFID0gMHhlYWUyO1xudmFyIFJFQUNUX0xFR0FDWV9ISURERU5fVFlQRSA9IDB4ZWFlMztcblxuaWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLmZvcikge1xuICB2YXIgc3ltYm9sRm9yID0gU3ltYm9sLmZvcjtcbiAgUkVBQ1RfRUxFTUVOVF9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5lbGVtZW50Jyk7XG4gIFJFQUNUX1BPUlRBTF9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5wb3J0YWwnKTtcbiAgUkVBQ1RfRlJBR01FTlRfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuZnJhZ21lbnQnKTtcbiAgUkVBQ1RfU1RSSUNUX01PREVfVFlQRSA9IHN5bWJvbEZvcigncmVhY3Quc3RyaWN0X21vZGUnKTtcbiAgUkVBQ1RfUFJPRklMRVJfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QucHJvZmlsZXInKTtcbiAgUkVBQ1RfUFJPVklERVJfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QucHJvdmlkZXInKTtcbiAgUkVBQ1RfQ09OVEVYVF9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5jb250ZXh0Jyk7XG4gIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmZvcndhcmRfcmVmJyk7XG4gIFJFQUNUX1NVU1BFTlNFX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnN1c3BlbnNlJyk7XG4gIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSA9IHN5bWJvbEZvcigncmVhY3Quc3VzcGVuc2VfbGlzdCcpO1xuICBSRUFDVF9NRU1PX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0Lm1lbW8nKTtcbiAgUkVBQ1RfTEFaWV9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5sYXp5Jyk7XG4gIFJFQUNUX0JMT0NLX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmJsb2NrJyk7XG4gIFJFQUNUX1NFUlZFUl9CTE9DS19UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5zZXJ2ZXIuYmxvY2snKTtcbiAgUkVBQ1RfRlVOREFNRU5UQUxfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuZnVuZGFtZW50YWwnKTtcbiAgUkVBQ1RfU0NPUEVfVFlQRSA9IHN5bWJvbEZvcigncmVhY3Quc2NvcGUnKTtcbiAgUkVBQ1RfT1BBUVVFX0lEX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0Lm9wYXF1ZS5pZCcpO1xuICBSRUFDVF9ERUJVR19UUkFDSU5HX01PREVfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuZGVidWdfdHJhY2VfbW9kZScpO1xuICBSRUFDVF9PRkZTQ1JFRU5fVFlQRSA9IHN5bWJvbEZvcigncmVhY3Qub2Zmc2NyZWVuJyk7XG4gIFJFQUNUX0xFR0FDWV9ISURERU5fVFlQRSA9IHN5bWJvbEZvcigncmVhY3QubGVnYWN5X2hpZGRlbicpO1xufVxuXG4vLyBGaWx0ZXIgY2VydGFpbiBET00gYXR0cmlidXRlcyAoZS5nLiBzcmMsIGhyZWYpIGlmIHRoZWlyIHZhbHVlcyBhcmUgZW1wdHkgc3RyaW5ncy5cblxudmFyIGVuYWJsZVNjb3BlQVBJID0gZmFsc2U7IC8vIEV4cGVyaW1lbnRhbCBDcmVhdGUgRXZlbnQgSGFuZGxlIEFQSS5cblxuZnVuY3Rpb24gaXNWYWxpZEVsZW1lbnRUeXBlKHR5cGUpIHtcbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIE5vdGU6IHR5cGVvZiBtaWdodCBiZSBvdGhlciB0aGFuICdzeW1ib2wnIG9yICdudW1iZXInIChlLmcuIGlmIGl0J3MgYSBwb2x5ZmlsbCkuXG5cblxuICBpZiAodHlwZSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9QUk9GSUxFUl9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX0RFQlVHX1RSQUNJTkdfTU9ERV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1VTUEVOU0VfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfTEVHQUNZX0hJRERFTl9UWVBFIHx8IGVuYWJsZVNjb3BlQVBJICkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsKSB7XG4gICAgaWYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0JMT0NLX1RZUEUgfHwgdHlwZVswXSA9PT0gUkVBQ1RfU0VSVkVSX0JMT0NLX1RZUEUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gdHlwZU9mKG9iamVjdCkge1xuICBpZiAodHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgb2JqZWN0ICE9PSBudWxsKSB7XG4gICAgdmFyICQkdHlwZW9mID0gb2JqZWN0LiQkdHlwZW9mO1xuXG4gICAgc3dpdGNoICgkJHR5cGVvZikge1xuICAgICAgY2FzZSBSRUFDVF9FTEVNRU5UX1RZUEU6XG4gICAgICAgIHZhciB0eXBlID0gb2JqZWN0LnR5cGU7XG5cbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgY2FzZSBSRUFDVF9GUkFHTUVOVF9UWVBFOlxuICAgICAgICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcbiAgICAgICAgICBjYXNlIFJFQUNUX1NUUklDVF9NT0RFX1RZUEU6XG4gICAgICAgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOlxuICAgICAgICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFOlxuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdmFyICQkdHlwZW9mVHlwZSA9IHR5cGUgJiYgdHlwZS4kJHR5cGVvZjtcblxuICAgICAgICAgICAgc3dpdGNoICgkJHR5cGVvZlR5cGUpIHtcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9DT05URVhUX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTpcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9MQVpZX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfTUVNT19UWVBFOlxuICAgICAgICAgICAgICBjYXNlIFJFQUNUX1BST1ZJREVSX1RZUEU6XG4gICAgICAgICAgICAgICAgcmV0dXJuICQkdHlwZW9mVHlwZTtcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiAkJHR5cGVvZjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgIGNhc2UgUkVBQ1RfUE9SVEFMX1RZUEU6XG4gICAgICAgIHJldHVybiAkJHR5cGVvZjtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxudmFyIENvbnRleHRDb25zdW1lciA9IFJFQUNUX0NPTlRFWFRfVFlQRTtcbnZhciBDb250ZXh0UHJvdmlkZXIgPSBSRUFDVF9QUk9WSURFUl9UWVBFO1xudmFyIEVsZW1lbnQgPSBSRUFDVF9FTEVNRU5UX1RZUEU7XG52YXIgRm9yd2FyZFJlZiA9IFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU7XG52YXIgRnJhZ21lbnQgPSBSRUFDVF9GUkFHTUVOVF9UWVBFO1xudmFyIExhenkgPSBSRUFDVF9MQVpZX1RZUEU7XG52YXIgTWVtbyA9IFJFQUNUX01FTU9fVFlQRTtcbnZhciBQb3J0YWwgPSBSRUFDVF9QT1JUQUxfVFlQRTtcbnZhciBQcm9maWxlciA9IFJFQUNUX1BST0ZJTEVSX1RZUEU7XG52YXIgU3RyaWN0TW9kZSA9IFJFQUNUX1NUUklDVF9NT0RFX1RZUEU7XG52YXIgU3VzcGVuc2UgPSBSRUFDVF9TVVNQRU5TRV9UWVBFO1xudmFyIGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlID0gZmFsc2U7XG52YXIgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNDb25jdXJyZW50TW9kZSA9IGZhbHNlOyAvLyBBc3luY01vZGUgc2hvdWxkIGJlIGRlcHJlY2F0ZWRcblxuZnVuY3Rpb24gaXNBc3luY01vZGUob2JqZWN0KSB7XG4gIHtcbiAgICBpZiAoIWhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlKSB7XG4gICAgICBoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZSA9IHRydWU7IC8vIFVzaW5nIGNvbnNvbGVbJ3dhcm4nXSB0byBldmFkZSBCYWJlbCBhbmQgRVNMaW50XG5cbiAgICAgIGNvbnNvbGVbJ3dhcm4nXSgnVGhlIFJlYWN0SXMuaXNBc3luY01vZGUoKSBhbGlhcyBoYXMgYmVlbiBkZXByZWNhdGVkLCAnICsgJ2FuZCB3aWxsIGJlIHJlbW92ZWQgaW4gUmVhY3QgMTgrLicpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGlzQ29uY3VycmVudE1vZGUob2JqZWN0KSB7XG4gIHtcbiAgICBpZiAoIWhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQ29uY3VycmVudE1vZGUpIHtcbiAgICAgIGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQ29uY3VycmVudE1vZGUgPSB0cnVlOyAvLyBVc2luZyBjb25zb2xlWyd3YXJuJ10gdG8gZXZhZGUgQmFiZWwgYW5kIEVTTGludFxuXG4gICAgICBjb25zb2xlWyd3YXJuJ10oJ1RoZSBSZWFjdElzLmlzQ29uY3VycmVudE1vZGUoKSBhbGlhcyBoYXMgYmVlbiBkZXByZWNhdGVkLCAnICsgJ2FuZCB3aWxsIGJlIHJlbW92ZWQgaW4gUmVhY3QgMTgrLicpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGlzQ29udGV4dENvbnN1bWVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0NPTlRFWFRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzQ29udGV4dFByb3ZpZGVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST1ZJREVSX1RZUEU7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG59XG5mdW5jdGlvbiBpc0ZvcndhcmRSZWYob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzRnJhZ21lbnQob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzTGF6eShvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9MQVpZX1RZUEU7XG59XG5mdW5jdGlvbiBpc01lbW8ob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfTUVNT19UWVBFO1xufVxuZnVuY3Rpb24gaXNQb3J0YWwob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfUE9SVEFMX1RZUEU7XG59XG5mdW5jdGlvbiBpc1Byb2ZpbGVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEU7XG59XG5mdW5jdGlvbiBpc1N0cmljdE1vZGUob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzU3VzcGVuc2Uob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfU1VTUEVOU0VfVFlQRTtcbn1cblxuZXhwb3J0cy5Db250ZXh0Q29uc3VtZXIgPSBDb250ZXh0Q29uc3VtZXI7XG5leHBvcnRzLkNvbnRleHRQcm92aWRlciA9IENvbnRleHRQcm92aWRlcjtcbmV4cG9ydHMuRWxlbWVudCA9IEVsZW1lbnQ7XG5leHBvcnRzLkZvcndhcmRSZWYgPSBGb3J3YXJkUmVmO1xuZXhwb3J0cy5GcmFnbWVudCA9IEZyYWdtZW50O1xuZXhwb3J0cy5MYXp5ID0gTGF6eTtcbmV4cG9ydHMuTWVtbyA9IE1lbW87XG5leHBvcnRzLlBvcnRhbCA9IFBvcnRhbDtcbmV4cG9ydHMuUHJvZmlsZXIgPSBQcm9maWxlcjtcbmV4cG9ydHMuU3RyaWN0TW9kZSA9IFN0cmljdE1vZGU7XG5leHBvcnRzLlN1c3BlbnNlID0gU3VzcGVuc2U7XG5leHBvcnRzLmlzQXN5bmNNb2RlID0gaXNBc3luY01vZGU7XG5leHBvcnRzLmlzQ29uY3VycmVudE1vZGUgPSBpc0NvbmN1cnJlbnRNb2RlO1xuZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lciA9IGlzQ29udGV4dENvbnN1bWVyO1xuZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlciA9IGlzQ29udGV4dFByb3ZpZGVyO1xuZXhwb3J0cy5pc0VsZW1lbnQgPSBpc0VsZW1lbnQ7XG5leHBvcnRzLmlzRm9yd2FyZFJlZiA9IGlzRm9yd2FyZFJlZjtcbmV4cG9ydHMuaXNGcmFnbWVudCA9IGlzRnJhZ21lbnQ7XG5leHBvcnRzLmlzTGF6eSA9IGlzTGF6eTtcbmV4cG9ydHMuaXNNZW1vID0gaXNNZW1vO1xuZXhwb3J0cy5pc1BvcnRhbCA9IGlzUG9ydGFsO1xuZXhwb3J0cy5pc1Byb2ZpbGVyID0gaXNQcm9maWxlcjtcbmV4cG9ydHMuaXNTdHJpY3RNb2RlID0gaXNTdHJpY3RNb2RlO1xuZXhwb3J0cy5pc1N1c3BlbnNlID0gaXNTdXNwZW5zZTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlID0gaXNWYWxpZEVsZW1lbnRUeXBlO1xuZXhwb3J0cy50eXBlT2YgPSB0eXBlT2Y7XG4gIH0pKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "./node_modules/pretty-format/node_modules/react-is/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/pretty-format/node_modules/react-is/index.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/pretty-format/node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLDJKQUF5RDtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJldHR5LWZvcm1hdC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/MTZjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/pretty-format/node_modules/react-is/index.js\n"));

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom-test-utils.development.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom-test-utils.development.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-dom-test-utils.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostComponent = 5;\nvar HostText = 6;\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n/*                      */\n0;\n\nvar Placement =\n/*                    */\n2;\nvar Hydrating =\n/*                    */\n4096;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n\n  return null;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\"Return fibers should always be each others' alternates. \" + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n\n  return alternate;\n}\n\nvar assign = Object.assign;\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n\n\n  if (charCode === 10) {\n    charCode = 13;\n  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n\n\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n} // This is intentionally a factory so that we have different returned constructors.\n// If we had a single constructor, it would be megamorphic and engines would deopt.\n\n\nfunction createSyntheticEvent(Interface) {\n  /**\n   * Synthetic events are dispatched by event plugins, typically in response to a\n   * top-level event delegation handler.\n   *\n   * These systems should generally use pooling to reduce the frequency of garbage\n   * collection. The system should check `isPersistent` to determine whether the\n   * event should be released into the pool after being dispatched. Users that\n   * need a persisted event should invoke `persist`.\n   *\n   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n   * normalizing browser quirks. Subclasses do not necessarily have to implement a\n   * DOM interface; custom application-specific events can also subclass this.\n   */\n  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n\n    for (var _propName in Interface) {\n      if (!Interface.hasOwnProperty(_propName)) {\n        continue;\n      }\n\n      var normalize = Interface[_propName];\n\n      if (normalize) {\n        this[_propName] = normalize(nativeEvent);\n      } else {\n        this[_propName] = nativeEvent[_propName];\n      }\n    }\n\n    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n    if (defaultPrevented) {\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    } else {\n      this.isDefaultPrevented = functionThatReturnsFalse;\n    }\n\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = true;\n      var event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.returnValue !== 'unknown') {\n        event.returnValue = false;\n      }\n\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.stopPropagation) {\n        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.cancelBubble !== 'unknown') {\n        // The ChangeEventPlugin registers a \"propertychange\" event for\n        // IE. This event does not support bubbling or cancelling, and\n        // any references to cancelBubble throw \"Member not found\".  A\n        // typeof check of \"unknown\" circumvents this issue (and is also\n        // IE specific).\n        event.cancelBubble = true;\n      }\n\n      this.isPropagationStopped = functionThatReturnsTrue;\n    },\n\n    /**\n     * We release all dispatched `SyntheticEvent`s after each event loop, adding\n     * them back into the pool. This allows a way to hold onto a reference that\n     * won't be added back into the pool.\n     */\n    persist: function () {// Modern event system doesn't use pooling.\n    },\n\n    /**\n     * Checks if this event should be released back into the pool.\n     *\n     * @return {boolean} True if this should not be released, false otherwise.\n     */\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar EventInterface = {\n  eventPhase: 0,\n  bubbles: 0,\n  cancelable: 0,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: 0,\n  isTrusted: 0\n};\nvar SyntheticEvent = createSyntheticEvent(EventInterface);\n\nvar UIEventInterface = assign({}, EventInterface, {\n  view: 0,\n  detail: 0\n});\n\nvar SyntheticUIEvent = createSyntheticEvent(UIEventInterface);\nvar lastMovementX;\nvar lastMovementY;\nvar lastMouseEvent;\n\nfunction updateMouseMovementPolyfillState(event) {\n  if (event !== lastMouseEvent) {\n    if (lastMouseEvent && event.type === 'mousemove') {\n      lastMovementX = event.screenX - lastMouseEvent.screenX;\n      lastMovementY = event.screenY - lastMouseEvent.screenY;\n    } else {\n      lastMovementX = 0;\n      lastMovementY = 0;\n    }\n\n    lastMouseEvent = event;\n  }\n}\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar MouseEventInterface = assign({}, UIEventInterface, {\n  screenX: 0,\n  screenY: 0,\n  clientX: 0,\n  clientY: 0,\n  pageX: 0,\n  pageY: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  getModifierState: getEventModifierState,\n  button: 0,\n  buttons: 0,\n  relatedTarget: function (event) {\n    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;\n    return event.relatedTarget;\n  },\n  movementX: function (event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    updateMouseMovementPolyfillState(event);\n    return lastMovementX;\n  },\n  movementY: function (event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    } // Don't need to call updateMouseMovementPolyfillState() here\n    // because it's guaranteed to have already run when movementX\n    // was copied.\n\n\n    return lastMovementY;\n  }\n});\n\nvar SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar DragEventInterface = assign({}, MouseEventInterface, {\n  dataTransfer: 0\n});\n\nvar SyntheticDragEvent = createSyntheticEvent(DragEventInterface);\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar FocusEventInterface = assign({}, UIEventInterface, {\n  relatedTarget: 0\n});\n\nvar SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\n\nvar AnimationEventInterface = assign({}, EventInterface, {\n  animationName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n});\n\nvar SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\n\nvar ClipboardEventInterface = assign({}, EventInterface, {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n});\n\nvar SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\n\nvar CompositionEventInterface = assign({}, EventInterface, {\n  data: 0\n});\n\nvar SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\n\nvar normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified'\n};\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\n\nvar translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta'\n};\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\n\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  } // Browser does not implement `key`, polyfill as much of it as we can.\n\n\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n\n  return '';\n}\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\n\nvar modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\n\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n  key: getEventKey,\n  code: 0,\n  location: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  repeat: 0,\n  locale: 0,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  }\n});\n\nvar SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\n\nvar PointerEventInterface = assign({}, MouseEventInterface, {\n  pointerId: 0,\n  width: 0,\n  height: 0,\n  pressure: 0,\n  tangentialPressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  twist: 0,\n  pointerType: 0,\n  isPrimary: 0\n});\n\nvar SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\n\nvar TouchEventInterface = assign({}, UIEventInterface, {\n  touches: 0,\n  targetTouches: 0,\n  changedTouches: 0,\n  altKey: 0,\n  metaKey: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  getModifierState: getEventModifierState\n});\n\nvar SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\n\nvar TransitionEventInterface = assign({}, EventInterface, {\n  propertyName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n});\n\nvar SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar WheelEventInterface = assign({}, MouseEventInterface, {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: 0,\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: 0\n});\n\nvar SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);\n\n/**\n * HTML nodeType values that represent the type of the node\n */\nvar ELEMENT_NODE = 1;\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === 'undefined' || document === null) {\n        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');\n      }\n\n      var evt = document.createEvent('Event');\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {// Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n\n      var evtType = \"react-\" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers\n\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\n\nvar hasRethrowError = false;\nvar rethrowError = null;\nvar reporter = {\n  onError: function (error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n  invokeGuardedCallback.apply(this, arguments);\n\n  if (hasError) {\n    var error = clearCaughtError();\n\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\n\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    var error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar SecretInternals = ReactDOM.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nvar EventInternals = SecretInternals.Events;\nvar getInstanceFromNode = EventInternals[0];\nvar getNodeFromInstance = EventInternals[1];\nvar getFiberCurrentPropsFromNode = EventInternals[2];\nvar enqueueStateRestore = EventInternals[3];\nvar restoreStateIfNeeded = EventInternals[4];\nvar reactAct = React.unstable_act;\n\nfunction Event(suffix) {}\n\nvar hasWarnedAboutDeprecatedMockComponent = false;\n/**\n * @class ReactTestUtils\n */\n\nfunction findAllInRenderedFiberTreeInternal(fiber, test) {\n  if (!fiber) {\n    return [];\n  }\n\n  var currentParent = findCurrentFiberUsingSlowPath(fiber);\n\n  if (!currentParent) {\n    return [];\n  }\n\n  var node = currentParent;\n  var ret = [];\n\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText || node.tag === ClassComponent || node.tag === FunctionComponent) {\n      var publicInst = node.stateNode;\n\n      if (test(publicInst)) {\n        ret.push(publicInst);\n      }\n    }\n\n    if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === currentParent) {\n      return ret;\n    }\n\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return ret;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction validateClassInstance(inst, methodName) {\n  if (!inst) {\n    // This is probably too relaxed but it's existing behavior.\n    return;\n  }\n\n  if (get(inst)) {\n    // This is a public instance indeed.\n    return;\n  }\n\n  var received;\n  var stringified = String(inst);\n\n  if (isArray(inst)) {\n    received = 'an array';\n  } else if (inst && inst.nodeType === ELEMENT_NODE && inst.tagName) {\n    received = 'a DOM node';\n  } else if (stringified === '[object Object]') {\n    received = 'object with keys {' + Object.keys(inst).join(', ') + '}';\n  } else {\n    received = stringified;\n  }\n\n  throw new Error(methodName + \"(...): the first argument must be a React class instance. \" + (\"Instead received: \" + received + \".\"));\n}\n/**\n * Utilities for making it easy to test React components.\n *\n * See https://reactjs.org/docs/test-utils.html\n *\n * Todo: Support the entire DOM.scry query syntax. For now, these simple\n * utilities will suffice for testing purposes.\n * @lends ReactTestUtils\n */\n\n\nvar didWarnAboutReactTestUtilsDeprecation = false;\n\nfunction renderIntoDocument(element) {\n  {\n    if (!didWarnAboutReactTestUtilsDeprecation) {\n      didWarnAboutReactTestUtilsDeprecation = true;\n\n      error('ReactDOMTestUtils is deprecated and will be removed in a future ' + 'major release, because it exposes internal implementation details ' + 'that are highly likely to change between releases. Upgrade to a ' + 'modern testing library, such as @testing-library/react. See ' + 'https://react.dev/warnings/react-dom-test-utils for more info.');\n    }\n  }\n\n  var div = document.createElement('div'); // None of our tests actually require attaching the container to the\n  // DOM, and doing so creates a mess that we rely on test isolation to\n  // clean up, so we're going to stop honoring the name of this method\n  // (and probably rename it eventually) if no problems arise.\n  // document.documentElement.appendChild(div);\n\n  return ReactDOM.render(element, div);\n}\n\nfunction isElement(element) {\n  return React.isValidElement(element);\n}\n\nfunction isElementOfType(inst, convenienceConstructor) {\n  return React.isValidElement(inst) && inst.type === convenienceConstructor;\n}\n\nfunction isDOMComponent(inst) {\n  return !!(inst && inst.nodeType === ELEMENT_NODE && inst.tagName);\n}\n\nfunction isDOMComponentElement(inst) {\n  return !!(inst && React.isValidElement(inst) && !!inst.tagName);\n}\n\nfunction isCompositeComponent(inst) {\n  if (isDOMComponent(inst)) {\n    // Accessing inst.setState warns; just return false as that'll be what\n    // this returns when we have DOM nodes as refs directly\n    return false;\n  }\n\n  return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';\n}\n\nfunction isCompositeComponentWithType(inst, type) {\n  if (!isCompositeComponent(inst)) {\n    return false;\n  }\n\n  var internalInstance = get(inst);\n  var constructor = internalInstance.type;\n  return constructor === type;\n}\n\nfunction findAllInRenderedTree(inst, test) {\n  validateClassInstance(inst, 'findAllInRenderedTree');\n\n  if (!inst) {\n    return [];\n  }\n\n  var internalInstance = get(inst);\n  return findAllInRenderedFiberTreeInternal(internalInstance, test);\n}\n/**\n * Finds all instances of components in the rendered tree that are DOM\n * components with the class name matching `className`.\n * @return {array} an array of all the matches.\n */\n\n\nfunction scryRenderedDOMComponentsWithClass(root, classNames) {\n  validateClassInstance(root, 'scryRenderedDOMComponentsWithClass');\n  return findAllInRenderedTree(root, function (inst) {\n    if (isDOMComponent(inst)) {\n      var className = inst.className;\n\n      if (typeof className !== 'string') {\n        // SVG, probably.\n        className = inst.getAttribute('class') || '';\n      }\n\n      var classList = className.split(/\\s+/);\n\n      if (!isArray(classNames)) {\n        if (classNames === undefined) {\n          throw new Error('TestUtils.scryRenderedDOMComponentsWithClass expects a ' + 'className as a second argument.');\n        }\n\n        classNames = classNames.split(/\\s+/);\n      }\n\n      return classNames.every(function (name) {\n        return classList.indexOf(name) !== -1;\n      });\n    }\n\n    return false;\n  });\n}\n/**\n * Like scryRenderedDOMComponentsWithClass but expects there to be one result,\n * and returns that one result, or throws exception if there is any other\n * number of matches besides one.\n * @return {!ReactDOMComponent} The one match.\n */\n\n\nfunction findRenderedDOMComponentWithClass(root, className) {\n  validateClassInstance(root, 'findRenderedDOMComponentWithClass');\n  var all = scryRenderedDOMComponentsWithClass(root, className);\n\n  if (all.length !== 1) {\n    throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for class:' + className);\n  }\n\n  return all[0];\n}\n/**\n * Finds all instances of components in the rendered tree that are DOM\n * components with the tag name matching `tagName`.\n * @return {array} an array of all the matches.\n */\n\n\nfunction scryRenderedDOMComponentsWithTag(root, tagName) {\n  validateClassInstance(root, 'scryRenderedDOMComponentsWithTag');\n  return findAllInRenderedTree(root, function (inst) {\n    return isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();\n  });\n}\n/**\n * Like scryRenderedDOMComponentsWithTag but expects there to be one result,\n * and returns that one result, or throws exception if there is any other\n * number of matches besides one.\n * @return {!ReactDOMComponent} The one match.\n */\n\n\nfunction findRenderedDOMComponentWithTag(root, tagName) {\n  validateClassInstance(root, 'findRenderedDOMComponentWithTag');\n  var all = scryRenderedDOMComponentsWithTag(root, tagName);\n\n  if (all.length !== 1) {\n    throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for tag:' + tagName);\n  }\n\n  return all[0];\n}\n/**\n * Finds all instances of components with type equal to `componentType`.\n * @return {array} an array of all the matches.\n */\n\n\nfunction scryRenderedComponentsWithType(root, componentType) {\n  validateClassInstance(root, 'scryRenderedComponentsWithType');\n  return findAllInRenderedTree(root, function (inst) {\n    return isCompositeComponentWithType(inst, componentType);\n  });\n}\n/**\n * Same as `scryRenderedComponentsWithType` but expects there to be one result\n * and returns that one result, or throws exception if there is any other\n * number of matches besides one.\n * @return {!ReactComponent} The one match.\n */\n\n\nfunction findRenderedComponentWithType(root, componentType) {\n  validateClassInstance(root, 'findRenderedComponentWithType');\n  var all = scryRenderedComponentsWithType(root, componentType);\n\n  if (all.length !== 1) {\n    throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for componentType:' + componentType);\n  }\n\n  return all[0];\n}\n/**\n * Pass a mocked component module to this method to augment it with\n * useful methods that allow it to be used as a dummy React component.\n * Instead of rendering as usual, the component will become a simple\n * <div> containing any provided children.\n *\n * @param {object} module the mock function object exported from a\n *                        module that defines the component to be mocked\n * @param {?string} mockTagName optional dummy root tag name to return\n *                              from render method (overrides\n *                              module.mockTagName if provided)\n * @return {object} the ReactTestUtils object (for chaining)\n */\n\n\nfunction mockComponent(module, mockTagName) {\n  {\n    if (!hasWarnedAboutDeprecatedMockComponent) {\n      hasWarnedAboutDeprecatedMockComponent = true;\n\n      warn('ReactTestUtils.mockComponent() is deprecated. ' + 'Use shallow rendering or jest.mock() instead.\\n\\n' + 'See https://reactjs.org/link/test-utils-mock-component for more information.');\n    }\n  }\n\n  mockTagName = mockTagName || module.mockTagName || 'div';\n  module.prototype.render.mockImplementation(function () {\n    return React.createElement(mockTagName, null, this.props.children);\n  });\n  return this;\n}\n\nfunction nativeTouchData(x, y) {\n  return {\n    touches: [{\n      pageX: x,\n      pageY: y\n    }]\n  };\n} // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\n\n\nfunction executeDispatch(event, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\n\nfunction executeDispatchesInOrder(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\n\n\nvar executeDispatchesAndRelease = function (event) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\n\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n    case 'onMouseEnter':\n      return !!(props.disabled && isInteractive(type));\n\n    default:\n      return false;\n  }\n}\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\n\n\nfunction getListener(inst, registrationName) {\n  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n  // live here; needs to be moved to a better place soon\n  var stateNode = inst.stateNode;\n\n  if (!stateNode) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (!props) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n\n  if (listener && typeof listener !== 'function') {\n    throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n  }\n\n  return listener;\n}\n\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event._reactName;\n\n  if (propagationPhase === 'captured') {\n    registrationName += 'Capture';\n  }\n\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event._reactName) {\n    var registrationName = event._reactName;\n    var listener = getListener(inst, registrationName);\n\n    if (listener) {\n      if (event._dispatchListeners == null) {\n        event._dispatchListeners = [];\n      }\n\n      if (event._dispatchInstances == null) {\n        event._dispatchInstances = [];\n      }\n\n      event._dispatchListeners.push(listener);\n\n      event._dispatchInstances.push(inst);\n    }\n  }\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  {\n    if (!inst) {\n      error('Dispatching inst must not be null');\n    }\n  }\n\n  var listener = listenerAtPhase(inst, event, phase);\n\n  if (listener) {\n    if (event._dispatchListeners == null) {\n      event._dispatchListeners = [];\n    }\n\n    if (event._dispatchInstances == null) {\n      event._dispatchInstances = [];\n    }\n\n    event._dispatchListeners.push(listener);\n\n    event._dispatchInstances.push(inst);\n  }\n}\n\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event._reactName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event._reactName) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n} // End of inline\n\n\nvar Simulate = {};\nvar directDispatchEventTypes = new Set(['mouseEnter', 'mouseLeave', 'pointerEnter', 'pointerLeave']);\n/**\n * Exports:\n *\n * - `Simulate.click(Element)`\n * - `Simulate.mouseMove(Element)`\n * - `Simulate.change(Element)`\n * - ... (All keys from event plugin `eventTypes` objects)\n */\n\nfunction makeSimulator(eventType) {\n  return function (domNode, eventData) {\n    if (React.isValidElement(domNode)) {\n      throw new Error('TestUtils.Simulate expected a DOM node as the first argument but received ' + 'a React element. Pass the DOM node you wish to simulate the event on instead. ' + 'Note that TestUtils.Simulate will not work if you are using shallow rendering.');\n    }\n\n    if (isCompositeComponent(domNode)) {\n      throw new Error('TestUtils.Simulate expected a DOM node as the first argument but received ' + 'a component instance. Pass the DOM node you wish to simulate the event on instead.');\n    }\n\n    var reactName = 'on' + eventType[0].toUpperCase() + eventType.slice(1);\n    var fakeNativeEvent = new Event();\n    fakeNativeEvent.target = domNode;\n    fakeNativeEvent.type = eventType.toLowerCase();\n    var targetInst = getInstanceFromNode(domNode);\n    var event = new SyntheticEvent(reactName, fakeNativeEvent.type, targetInst, fakeNativeEvent, domNode); // Since we aren't using pooling, always persist the event. This will make\n    // sure it's marked and won't warn when setting additional properties.\n\n    event.persist();\n    assign(event, eventData);\n\n    if (directDispatchEventTypes.has(eventType)) {\n      accumulateDirectDispatchesSingle(event);\n    } else {\n      accumulateTwoPhaseDispatchesSingle(event);\n    }\n\n    ReactDOM.unstable_batchedUpdates(function () {\n      // Normally extractEvent enqueues a state restore, but we'll just always\n      // do that since we're by-passing it here.\n      enqueueStateRestore(domNode);\n      executeDispatchesAndRelease(event);\n      rethrowCaughtError();\n    });\n    restoreStateIfNeeded();\n  };\n} // A one-time snapshot with no plans to update. We'll probably want to deprecate Simulate API.\n\n\nvar simulatedEventTypes = ['blur', 'cancel', 'click', 'close', 'contextMenu', 'copy', 'cut', 'auxClick', 'doubleClick', 'dragEnd', 'dragStart', 'drop', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'mouseDown', 'mouseUp', 'paste', 'pause', 'play', 'pointerCancel', 'pointerDown', 'pointerUp', 'rateChange', 'reset', 'resize', 'seeked', 'submit', 'touchCancel', 'touchEnd', 'touchStart', 'volumeChange', 'drag', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'mouseMove', 'mouseOut', 'mouseOver', 'pointerMove', 'pointerOut', 'pointerOver', 'scroll', 'toggle', 'touchMove', 'wheel', 'abort', 'animationEnd', 'animationIteration', 'animationStart', 'canPlay', 'canPlayThrough', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'gotPointerCapture', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'lostPointerCapture', 'playing', 'progress', 'seeking', 'stalled', 'suspend', 'timeUpdate', 'transitionEnd', 'waiting', 'mouseEnter', 'mouseLeave', 'pointerEnter', 'pointerLeave', 'change', 'select', 'beforeInput', 'compositionEnd', 'compositionStart', 'compositionUpdate'];\n\nfunction buildSimulators() {\n  simulatedEventTypes.forEach(function (eventType) {\n    Simulate[eventType] = makeSimulator(eventType);\n  });\n}\n\nbuildSimulators();\nvar didWarnAboutUsingAct = false;\nvar act =  function actWithWarning(callback) {\n  {\n    if (!didWarnAboutUsingAct) {\n      didWarnAboutUsingAct = true;\n\n      error('`ReactDOMTestUtils.act` is deprecated in favor of `React.act`. ' + 'Import `act` from `react` instead of `react-dom/test-utils`. ' + 'See https://react.dev/warnings/react-dom-test-utils for more info.');\n    }\n  }\n\n  return reactAct(callback);\n} ;\n\nexports.Simulate = Simulate;\nexports.act = act;\nexports.findAllInRenderedTree = findAllInRenderedTree;\nexports.findRenderedComponentWithType = findRenderedComponentWithType;\nexports.findRenderedDOMComponentWithClass = findRenderedDOMComponentWithClass;\nexports.findRenderedDOMComponentWithTag = findRenderedDOMComponentWithTag;\nexports.isCompositeComponent = isCompositeComponent;\nexports.isCompositeComponentWithType = isCompositeComponentWithType;\nexports.isDOMComponent = isDOMComponent;\nexports.isDOMComponentElement = isDOMComponentElement;\nexports.isElement = isElement;\nexports.isElementOfType = isElementOfType;\nexports.mockComponent = mockComponent;\nexports.nativeTouchData = nativeTouchData;\nexports.renderIntoDocument = renderIntoDocument;\nexports.scryRenderedComponentsWithType = scryRenderedComponentsWithType;\nexports.scryRenderedDOMComponentsWithClass = scryRenderedDOMComponentsWithClass;\nexports.scryRenderedDOMComponentsWithTag = scryRenderedDOMComponentsWithTag;\nexports.traverseTwoPhase = traverseTwoPhase;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-dom/cjs/react-dom-test-utils.development.js\n"));

/***/ }),

/***/ "./node_modules/react-dom/test-utils.js":
/*!**********************************************!*\
  !*** ./node_modules/react-dom/test-utils.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-dom-test-utils.development.js */ \"./node_modules/react-dom/cjs/react-dom-test-utils.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL3Rlc3QtdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHlKQUFxRTtBQUN2RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL3Rlc3QtdXRpbHMuanM/N2Q2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLXRlc3QtdXRpbHMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLXRlc3QtdXRpbHMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-dom/test-utils.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/expect/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@vitest/expect/dist/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASYMMETRIC_MATCHERS_OBJECT: function() { return /* binding */ ASYMMETRIC_MATCHERS_OBJECT; },\n/* harmony export */   Any: function() { return /* binding */ Any; },\n/* harmony export */   Anything: function() { return /* binding */ Anything; },\n/* harmony export */   ArrayContaining: function() { return /* binding */ ArrayContaining; },\n/* harmony export */   AsymmetricMatcher: function() { return /* binding */ AsymmetricMatcher; },\n/* harmony export */   GLOBAL_EXPECT: function() { return /* binding */ GLOBAL_EXPECT; },\n/* harmony export */   JEST_MATCHERS_OBJECT: function() { return /* binding */ JEST_MATCHERS_OBJECT; },\n/* harmony export */   JestAsymmetricMatchers: function() { return /* binding */ JestAsymmetricMatchers; },\n/* harmony export */   JestChaiExpect: function() { return /* binding */ JestChaiExpect; },\n/* harmony export */   JestExtend: function() { return /* binding */ JestExtend; },\n/* harmony export */   MATCHERS_OBJECT: function() { return /* binding */ MATCHERS_OBJECT; },\n/* harmony export */   ObjectContaining: function() { return /* binding */ ObjectContaining; },\n/* harmony export */   StringContaining: function() { return /* binding */ StringContaining; },\n/* harmony export */   StringMatching: function() { return /* binding */ StringMatching; },\n/* harmony export */   addCustomEqualityTesters: function() { return /* binding */ addCustomEqualityTesters; },\n/* harmony export */   arrayBufferEquality: function() { return /* binding */ arrayBufferEquality; },\n/* harmony export */   equals: function() { return /* binding */ equals; },\n/* harmony export */   fnNameFor: function() { return /* binding */ fnNameFor; },\n/* harmony export */   generateToBeMessage: function() { return /* binding */ generateToBeMessage; },\n/* harmony export */   getObjectKeys: function() { return /* binding */ getObjectKeys; },\n/* harmony export */   getObjectSubset: function() { return /* binding */ getObjectSubset; },\n/* harmony export */   getState: function() { return /* binding */ getState; },\n/* harmony export */   hasAsymmetric: function() { return /* binding */ hasAsymmetric; },\n/* harmony export */   hasProperty: function() { return /* binding */ hasProperty; },\n/* harmony export */   isA: function() { return /* binding */ isA; },\n/* harmony export */   isAsymmetric: function() { return /* binding */ isAsymmetric; },\n/* harmony export */   isImmutableUnorderedKeyed: function() { return /* binding */ isImmutableUnorderedKeyed; },\n/* harmony export */   isImmutableUnorderedSet: function() { return /* binding */ isImmutableUnorderedSet; },\n/* harmony export */   iterableEquality: function() { return /* binding */ iterableEquality; },\n/* harmony export */   pluralize: function() { return /* binding */ pluralize; },\n/* harmony export */   setState: function() { return /* binding */ setState; },\n/* harmony export */   sparseArrayEquality: function() { return /* binding */ sparseArrayEquality; },\n/* harmony export */   subsetEquality: function() { return /* binding */ subsetEquality; },\n/* harmony export */   typeEquality: function() { return /* binding */ typeEquality; }\n/* harmony export */ });\n/* harmony import */ var _vitest_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vitest/utils */ \"./node_modules/@vitest/utils/dist/index.js\");\n/* harmony import */ var tinyrainbow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinyrainbow */ \"./node_modules/tinyrainbow/dist/browser.js\");\n/* harmony import */ var _vitest_utils_diff__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vitest/utils/diff */ \"./node_modules/@vitest/utils/dist/diff.js\");\n/* harmony import */ var _vitest_spy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vitest/spy */ \"./node_modules/@vitest/spy/dist/index.js\");\n/* harmony import */ var _vitest_utils_error__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vitest/utils/error */ \"./node_modules/@vitest/utils/dist/error.js\");\n/* harmony import */ var chai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chai */ \"./node_modules/chai/chai.js\");\n\n\n\n\n\n\n\nconst MATCHERS_OBJECT = Symbol.for(\"matchers-object\");\nconst JEST_MATCHERS_OBJECT = Symbol.for(\"$$jest-matchers-object\");\nconst GLOBAL_EXPECT = Symbol.for(\"expect-global\");\nconst ASYMMETRIC_MATCHERS_OBJECT = Symbol.for(\n  \"asymmetric-matchers-object\"\n);\n\nif (!Object.prototype.hasOwnProperty.call(globalThis, MATCHERS_OBJECT)) {\n  const globalState = /* @__PURE__ */ new WeakMap();\n  const matchers = /* @__PURE__ */ Object.create(null);\n  const customEqualityTesters = [];\n  const assymetricMatchers = /* @__PURE__ */ Object.create(null);\n  Object.defineProperty(globalThis, MATCHERS_OBJECT, {\n    get: () => globalState\n  });\n  Object.defineProperty(globalThis, JEST_MATCHERS_OBJECT, {\n    configurable: true,\n    get: () => ({\n      state: globalState.get(globalThis[GLOBAL_EXPECT]),\n      matchers,\n      customEqualityTesters\n    })\n  });\n  Object.defineProperty(globalThis, ASYMMETRIC_MATCHERS_OBJECT, {\n    get: () => assymetricMatchers\n  });\n}\nfunction getState(expect) {\n  return globalThis[MATCHERS_OBJECT].get(expect);\n}\nfunction setState(state, expect) {\n  const map = globalThis[MATCHERS_OBJECT];\n  const current = map.get(expect) || {};\n  Object.assign(current, state);\n  map.set(expect, current);\n}\n\nfunction getMatcherUtils() {\n  const EXPECTED_COLOR = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].green;\n  const RECEIVED_COLOR = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].red;\n  const INVERTED_COLOR = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inverse;\n  const BOLD_WEIGHT = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bold;\n  const DIM_COLOR = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim;\n  function matcherHint(matcherName, received = \"received\", expected = \"expected\", options = {}) {\n    const {\n      comment = \"\",\n      isDirectExpectCall = false,\n      // seems redundant with received === ''\n      isNot = false,\n      promise = \"\",\n      secondArgument = \"\",\n      expectedColor = EXPECTED_COLOR,\n      receivedColor = RECEIVED_COLOR,\n      secondArgumentColor = EXPECTED_COLOR\n    } = options;\n    let hint = \"\";\n    let dimString = \"expect\";\n    if (!isDirectExpectCall && received !== \"\") {\n      hint += DIM_COLOR(`${dimString}(`) + receivedColor(received);\n      dimString = \")\";\n    }\n    if (promise !== \"\") {\n      hint += DIM_COLOR(`${dimString}.`) + promise;\n      dimString = \"\";\n    }\n    if (isNot) {\n      hint += `${DIM_COLOR(`${dimString}.`)}not`;\n      dimString = \"\";\n    }\n    if (matcherName.includes(\".\")) {\n      dimString += matcherName;\n    } else {\n      hint += DIM_COLOR(`${dimString}.`) + matcherName;\n      dimString = \"\";\n    }\n    if (expected === \"\") {\n      dimString += \"()\";\n    } else {\n      hint += DIM_COLOR(`${dimString}(`) + expectedColor(expected);\n      if (secondArgument) {\n        hint += DIM_COLOR(\", \") + secondArgumentColor(secondArgument);\n      }\n      dimString = \")\";\n    }\n    if (comment !== \"\") {\n      dimString += ` // ${comment}`;\n    }\n    if (dimString !== \"\") {\n      hint += DIM_COLOR(dimString);\n    }\n    return hint;\n  }\n  const SPACE_SYMBOL = \"\\xB7\";\n  const replaceTrailingSpaces = (text) => text.replace(/\\s+$/gm, (spaces) => SPACE_SYMBOL.repeat(spaces.length));\n  const printReceived = (object) => RECEIVED_COLOR(replaceTrailingSpaces((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify)(object)));\n  const printExpected = (value) => EXPECTED_COLOR(replaceTrailingSpaces((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify)(value)));\n  return {\n    EXPECTED_COLOR,\n    RECEIVED_COLOR,\n    INVERTED_COLOR,\n    BOLD_WEIGHT,\n    DIM_COLOR,\n    matcherHint,\n    printReceived,\n    printExpected\n  };\n}\nfunction addCustomEqualityTesters(newTesters) {\n  if (!Array.isArray(newTesters)) {\n    throw new TypeError(\n      `expect.customEqualityTesters: Must be set to an array of Testers. Was given \"${(0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.getType)(\n        newTesters\n      )}\"`\n    );\n  }\n  globalThis[JEST_MATCHERS_OBJECT].customEqualityTesters.push(\n    ...newTesters\n  );\n}\nfunction getCustomEqualityTesters() {\n  return globalThis[JEST_MATCHERS_OBJECT].customEqualityTesters;\n}\n\nfunction equals(a, b, customTesters, strictCheck) {\n  customTesters = customTesters || [];\n  return eq(a, b, [], [], customTesters, strictCheck ? hasKey : hasDefinedKey);\n}\nconst functionToString = Function.prototype.toString;\nfunction isAsymmetric(obj) {\n  return !!obj && typeof obj === \"object\" && \"asymmetricMatch\" in obj && isA(\"Function\", obj.asymmetricMatch);\n}\nfunction hasAsymmetric(obj, seen = /* @__PURE__ */ new Set()) {\n  if (seen.has(obj)) {\n    return false;\n  }\n  seen.add(obj);\n  if (isAsymmetric(obj)) {\n    return true;\n  }\n  if (Array.isArray(obj)) {\n    return obj.some((i) => hasAsymmetric(i, seen));\n  }\n  if (obj instanceof Set) {\n    return Array.from(obj).some((i) => hasAsymmetric(i, seen));\n  }\n  if ((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(obj)) {\n    return Object.values(obj).some((v) => hasAsymmetric(v, seen));\n  }\n  return false;\n}\nfunction asymmetricMatch(a, b) {\n  const asymmetricA = isAsymmetric(a);\n  const asymmetricB = isAsymmetric(b);\n  if (asymmetricA && asymmetricB) {\n    return void 0;\n  }\n  if (asymmetricA) {\n    return a.asymmetricMatch(b);\n  }\n  if (asymmetricB) {\n    return b.asymmetricMatch(a);\n  }\n}\nfunction eq(a, b, aStack, bStack, customTesters, hasKey2) {\n  let result = true;\n  const asymmetricResult = asymmetricMatch(a, b);\n  if (asymmetricResult !== void 0) {\n    return asymmetricResult;\n  }\n  const testerContext = { equals };\n  for (let i = 0; i < customTesters.length; i++) {\n    const customTesterResult = customTesters[i].call(\n      testerContext,\n      a,\n      b,\n      customTesters\n    );\n    if (customTesterResult !== void 0) {\n      return customTesterResult;\n    }\n  }\n  if (a instanceof Error && b instanceof Error) {\n    return a.message === b.message;\n  }\n  if (typeof URL === \"function\" && a instanceof URL && b instanceof URL) {\n    return a.href === b.href;\n  }\n  if (Object.is(a, b)) {\n    return true;\n  }\n  if (a === null || b === null) {\n    return a === b;\n  }\n  const className = Object.prototype.toString.call(a);\n  if (className !== Object.prototype.toString.call(b)) {\n    return false;\n  }\n  switch (className) {\n    case \"[object Boolean]\":\n    case \"[object String]\":\n    case \"[object Number]\":\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (typeof a !== \"object\" && typeof b !== \"object\") {\n        return Object.is(a, b);\n      } else {\n        return Object.is(a.valueOf(), b.valueOf());\n      }\n    case \"[object Date]\": {\n      const numA = +a;\n      const numB = +b;\n      return numA === numB || Number.isNaN(numA) && Number.isNaN(numB);\n    }\n    case \"[object RegExp]\":\n      return a.source === b.source && a.flags === b.flags;\n  }\n  if (typeof a !== \"object\" || typeof b !== \"object\") {\n    return false;\n  }\n  if (isDomNode(a) && isDomNode(b)) {\n    return a.isEqualNode(b);\n  }\n  let length = aStack.length;\n  while (length--) {\n    if (aStack[length] === a) {\n      return bStack[length] === b;\n    } else if (bStack[length] === b) {\n      return false;\n    }\n  }\n  aStack.push(a);\n  bStack.push(b);\n  if (className === \"[object Array]\" && a.length !== b.length) {\n    return false;\n  }\n  const aKeys = keys(a, hasKey2);\n  let key;\n  let size = aKeys.length;\n  if (keys(b, hasKey2).length !== size) {\n    return false;\n  }\n  while (size--) {\n    key = aKeys[size];\n    result = hasKey2(b, key) && eq(a[key], b[key], aStack, bStack, customTesters, hasKey2);\n    if (!result) {\n      return false;\n    }\n  }\n  aStack.pop();\n  bStack.pop();\n  return result;\n}\nfunction keys(obj, hasKey2) {\n  const keys2 = [];\n  for (const key in obj) {\n    if (hasKey2(obj, key)) {\n      keys2.push(key);\n    }\n  }\n  return keys2.concat(\n    Object.getOwnPropertySymbols(obj).filter(\n      (symbol) => Object.getOwnPropertyDescriptor(obj, symbol).enumerable\n    )\n  );\n}\nfunction hasDefinedKey(obj, key) {\n  return hasKey(obj, key) && obj[key] !== void 0;\n}\nfunction hasKey(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction isA(typeName, value) {\n  return Object.prototype.toString.apply(value) === `[object ${typeName}]`;\n}\nfunction isDomNode(obj) {\n  return obj !== null && typeof obj === \"object\" && \"nodeType\" in obj && typeof obj.nodeType === \"number\" && \"nodeName\" in obj && typeof obj.nodeName === \"string\" && \"isEqualNode\" in obj && typeof obj.isEqualNode === \"function\";\n}\nfunction fnNameFor(func) {\n  if (func.name) {\n    return func.name;\n  }\n  const matches = functionToString.call(func).match(/^(?:async)?\\s*function\\s*(?:\\*\\s*)?([\\w$]+)\\s*\\(/);\n  return matches ? matches[1] : \"<anonymous>\";\n}\nfunction getPrototype(obj) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(obj);\n  }\n  if (obj.constructor.prototype === obj) {\n    return null;\n  }\n  return obj.constructor.prototype;\n}\nfunction hasProperty(obj, property) {\n  if (!obj) {\n    return false;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, property)) {\n    return true;\n  }\n  return hasProperty(getPrototype(obj), property);\n}\nconst IS_KEYED_SENTINEL = \"@@__IMMUTABLE_KEYED__@@\";\nconst IS_SET_SENTINEL = \"@@__IMMUTABLE_SET__@@\";\nconst IS_LIST_SENTINEL = \"@@__IMMUTABLE_LIST__@@\";\nconst IS_ORDERED_SENTINEL = \"@@__IMMUTABLE_ORDERED__@@\";\nconst IS_RECORD_SYMBOL = \"@@__IMMUTABLE_RECORD__@@\";\nfunction isImmutableUnorderedKeyed(maybeKeyed) {\n  return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL] && !maybeKeyed[IS_ORDERED_SENTINEL]);\n}\nfunction isImmutableUnorderedSet(maybeSet) {\n  return !!(maybeSet && maybeSet[IS_SET_SENTINEL] && !maybeSet[IS_ORDERED_SENTINEL]);\n}\nfunction isObjectLiteral(source) {\n  return source != null && typeof source === \"object\" && !Array.isArray(source);\n}\nfunction isImmutableList(source) {\n  return Boolean(source && isObjectLiteral(source) && source[IS_LIST_SENTINEL]);\n}\nfunction isImmutableOrderedKeyed(source) {\n  return Boolean(\n    source && isObjectLiteral(source) && source[IS_KEYED_SENTINEL] && source[IS_ORDERED_SENTINEL]\n  );\n}\nfunction isImmutableOrderedSet(source) {\n  return Boolean(\n    source && isObjectLiteral(source) && source[IS_SET_SENTINEL] && source[IS_ORDERED_SENTINEL]\n  );\n}\nfunction isImmutableRecord(source) {\n  return Boolean(source && isObjectLiteral(source) && source[IS_RECORD_SYMBOL]);\n}\nconst IteratorSymbol = Symbol.iterator;\nfunction hasIterator(object) {\n  return !!(object != null && object[IteratorSymbol]);\n}\nfunction iterableEquality(a, b, customTesters = [], aStack = [], bStack = []) {\n  if (typeof a !== \"object\" || typeof b !== \"object\" || Array.isArray(a) || Array.isArray(b) || !hasIterator(a) || !hasIterator(b)) {\n    return void 0;\n  }\n  if (a.constructor !== b.constructor) {\n    return false;\n  }\n  let length = aStack.length;\n  while (length--) {\n    if (aStack[length] === a) {\n      return bStack[length] === b;\n    }\n  }\n  aStack.push(a);\n  bStack.push(b);\n  const filteredCustomTesters = [\n    ...customTesters.filter((t) => t !== iterableEquality),\n    iterableEqualityWithStack\n  ];\n  function iterableEqualityWithStack(a2, b2) {\n    return iterableEquality(a2, b2, [...customTesters], [...aStack], [...bStack]);\n  }\n  if (a.size !== void 0) {\n    if (a.size !== b.size) {\n      return false;\n    } else if (isA(\"Set\", a) || isImmutableUnorderedSet(a)) {\n      let allFound = true;\n      for (const aValue of a) {\n        if (!b.has(aValue)) {\n          let has = false;\n          for (const bValue of b) {\n            const isEqual = equals(aValue, bValue, filteredCustomTesters);\n            if (isEqual === true) {\n              has = true;\n            }\n          }\n          if (has === false) {\n            allFound = false;\n            break;\n          }\n        }\n      }\n      aStack.pop();\n      bStack.pop();\n      return allFound;\n    } else if (isA(\"Map\", a) || isImmutableUnorderedKeyed(a)) {\n      let allFound = true;\n      for (const aEntry of a) {\n        if (!b.has(aEntry[0]) || !equals(aEntry[1], b.get(aEntry[0]), filteredCustomTesters)) {\n          let has = false;\n          for (const bEntry of b) {\n            const matchedKey = equals(\n              aEntry[0],\n              bEntry[0],\n              filteredCustomTesters\n            );\n            let matchedValue = false;\n            if (matchedKey === true) {\n              matchedValue = equals(\n                aEntry[1],\n                bEntry[1],\n                filteredCustomTesters\n              );\n            }\n            if (matchedValue === true) {\n              has = true;\n            }\n          }\n          if (has === false) {\n            allFound = false;\n            break;\n          }\n        }\n      }\n      aStack.pop();\n      bStack.pop();\n      return allFound;\n    }\n  }\n  const bIterator = b[IteratorSymbol]();\n  for (const aValue of a) {\n    const nextB = bIterator.next();\n    if (nextB.done || !equals(aValue, nextB.value, filteredCustomTesters)) {\n      return false;\n    }\n  }\n  if (!bIterator.next().done) {\n    return false;\n  }\n  if (!isImmutableList(a) && !isImmutableOrderedKeyed(a) && !isImmutableOrderedSet(a) && !isImmutableRecord(a)) {\n    const aEntries = Object.entries(a);\n    const bEntries = Object.entries(b);\n    if (!equals(aEntries, bEntries)) {\n      return false;\n    }\n  }\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\nfunction hasPropertyInObject(object, key) {\n  const shouldTerminate = !object || typeof object !== \"object\" || object === Object.prototype;\n  if (shouldTerminate) {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(object, key) || hasPropertyInObject(Object.getPrototypeOf(object), key);\n}\nfunction isObjectWithKeys(a) {\n  return (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(a) && !(a instanceof Error) && !Array.isArray(a) && !(a instanceof Date);\n}\nfunction subsetEquality(object, subset, customTesters = []) {\n  const filteredCustomTesters = customTesters.filter(\n    (t) => t !== subsetEquality\n  );\n  const subsetEqualityWithContext = (seenReferences = /* @__PURE__ */ new WeakMap()) => (object2, subset2) => {\n    if (!isObjectWithKeys(subset2)) {\n      return void 0;\n    }\n    return Object.keys(subset2).every((key) => {\n      if (subset2[key] != null && typeof subset2[key] === \"object\") {\n        if (seenReferences.has(subset2[key])) {\n          return equals(object2[key], subset2[key], filteredCustomTesters);\n        }\n        seenReferences.set(subset2[key], true);\n      }\n      const result = object2 != null && hasPropertyInObject(object2, key) && equals(object2[key], subset2[key], [\n        ...filteredCustomTesters,\n        subsetEqualityWithContext(seenReferences)\n      ]);\n      seenReferences.delete(subset2[key]);\n      return result;\n    });\n  };\n  return subsetEqualityWithContext()(object, subset);\n}\nfunction typeEquality(a, b) {\n  if (a == null || b == null || a.constructor === b.constructor) {\n    return void 0;\n  }\n  return false;\n}\nfunction arrayBufferEquality(a, b) {\n  let dataViewA = a;\n  let dataViewB = b;\n  if (!(a instanceof DataView && b instanceof DataView)) {\n    if (!(a instanceof ArrayBuffer) || !(b instanceof ArrayBuffer)) {\n      return void 0;\n    }\n    try {\n      dataViewA = new DataView(a);\n      dataViewB = new DataView(b);\n    } catch {\n      return void 0;\n    }\n  }\n  if (dataViewA.byteLength !== dataViewB.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < dataViewA.byteLength; i++) {\n    if (dataViewA.getUint8(i) !== dataViewB.getUint8(i)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction sparseArrayEquality(a, b, customTesters = []) {\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return void 0;\n  }\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  const filteredCustomTesters = customTesters.filter(\n    (t) => t !== sparseArrayEquality\n  );\n  return equals(a, b, filteredCustomTesters, true) && equals(aKeys, bKeys);\n}\nfunction generateToBeMessage(deepEqualityName, expected = \"#{this}\", actual = \"#{exp}\") {\n  const toBeMessage = `expected ${expected} to be ${actual} // Object.is equality`;\n  if ([\"toStrictEqual\", \"toEqual\"].includes(deepEqualityName)) {\n    return `${toBeMessage}\n\nIf it should pass with deep equality, replace \"toBe\" with \"${deepEqualityName}\"\n\nExpected: ${expected}\nReceived: serializes to the same string\n`;\n  }\n  return toBeMessage;\n}\nfunction pluralize(word, count) {\n  return `${count} ${word}${count === 1 ? \"\" : \"s\"}`;\n}\nfunction getObjectKeys(object) {\n  return [\n    ...Object.keys(object),\n    ...Object.getOwnPropertySymbols(object).filter(\n      (s) => {\n        var _a;\n        return (_a = Object.getOwnPropertyDescriptor(object, s)) == null ? void 0 : _a.enumerable;\n      }\n    )\n  ];\n}\nfunction getObjectSubset(object, subset, customTesters = []) {\n  let stripped = 0;\n  const getObjectSubsetWithContext = (seenReferences = /* @__PURE__ */ new WeakMap()) => (object2, subset2) => {\n    if (Array.isArray(object2)) {\n      if (Array.isArray(subset2) && subset2.length === object2.length) {\n        return subset2.map(\n          (sub, i) => getObjectSubsetWithContext(seenReferences)(object2[i], sub)\n        );\n      }\n    } else if (object2 instanceof Date) {\n      return object2;\n    } else if ((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(object2) && (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(subset2)) {\n      if (equals(object2, subset2, [\n        ...customTesters,\n        iterableEquality,\n        subsetEquality\n      ])) {\n        return subset2;\n      }\n      const trimmed = {};\n      seenReferences.set(object2, trimmed);\n      for (const key of getObjectKeys(object2)) {\n        if (hasPropertyInObject(subset2, key)) {\n          trimmed[key] = seenReferences.has(object2[key]) ? seenReferences.get(object2[key]) : getObjectSubsetWithContext(seenReferences)(\n            object2[key],\n            subset2[key]\n          );\n        } else {\n          if (!seenReferences.has(object2[key])) {\n            stripped += 1;\n            if ((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(object2[key])) {\n              stripped += getObjectKeys(object2[key]).length;\n            }\n            getObjectSubsetWithContext(seenReferences)(\n              object2[key],\n              subset2[key]\n            );\n          }\n        }\n      }\n      if (getObjectKeys(trimmed).length > 0) {\n        return trimmed;\n      }\n    }\n    return object2;\n  };\n  return { subset: getObjectSubsetWithContext()(object, subset), stripped };\n}\n\nclass AsymmetricMatcher {\n  constructor(sample, inverse = false) {\n    this.sample = sample;\n    this.inverse = inverse;\n  }\n  // should have \"jest\" to be compatible with its ecosystem\n  $$typeof = Symbol.for(\"jest.asymmetricMatcher\");\n  getMatcherContext(expect) {\n    return {\n      ...getState(expect || globalThis[GLOBAL_EXPECT]),\n      equals,\n      isNot: this.inverse,\n      customTesters: getCustomEqualityTesters(),\n      utils: {\n        ...getMatcherUtils(),\n        diff: _vitest_utils_diff__WEBPACK_IMPORTED_MODULE_3__.diff,\n        stringify: _vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify,\n        iterableEquality,\n        subsetEquality\n      }\n    };\n  }\n  // implement custom chai/loupe inspect for better AssertionError.message formatting\n  // https://github.com/chaijs/loupe/blob/9b8a6deabcd50adc056a64fb705896194710c5c6/src/index.ts#L29\n  [Symbol.for(\"chai/inspect\")](options) {\n    const result = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify)(this, options.depth, { min: true });\n    if (result.length <= options.truncate) {\n      return result;\n    }\n    return `${this.toString()}{\\u2026}`;\n  }\n}\nclass StringContaining extends AsymmetricMatcher {\n  constructor(sample, inverse = false) {\n    if (!isA(\"String\", sample)) {\n      throw new Error(\"Expected is not a string\");\n    }\n    super(sample, inverse);\n  }\n  asymmetricMatch(other) {\n    const result = isA(\"String\", other) && other.includes(this.sample);\n    return this.inverse ? !result : result;\n  }\n  toString() {\n    return `String${this.inverse ? \"Not\" : \"\"}Containing`;\n  }\n  getExpectedType() {\n    return \"string\";\n  }\n}\nclass Anything extends AsymmetricMatcher {\n  asymmetricMatch(other) {\n    return other != null;\n  }\n  toString() {\n    return \"Anything\";\n  }\n  toAsymmetricMatcher() {\n    return \"Anything\";\n  }\n}\nclass ObjectContaining extends AsymmetricMatcher {\n  constructor(sample, inverse = false) {\n    super(sample, inverse);\n  }\n  getPrototype(obj) {\n    if (Object.getPrototypeOf) {\n      return Object.getPrototypeOf(obj);\n    }\n    if (obj.constructor.prototype === obj) {\n      return null;\n    }\n    return obj.constructor.prototype;\n  }\n  hasProperty(obj, property) {\n    if (!obj) {\n      return false;\n    }\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      return true;\n    }\n    return this.hasProperty(this.getPrototype(obj), property);\n  }\n  asymmetricMatch(other) {\n    if (typeof this.sample !== \"object\") {\n      throw new TypeError(\n        `You must provide an object to ${this.toString()}, not '${typeof this.sample}'.`\n      );\n    }\n    let result = true;\n    const matcherContext = this.getMatcherContext();\n    for (const property in this.sample) {\n      if (!this.hasProperty(other, property) || !equals(\n        this.sample[property],\n        other[property],\n        matcherContext.customTesters\n      )) {\n        result = false;\n        break;\n      }\n    }\n    return this.inverse ? !result : result;\n  }\n  toString() {\n    return `Object${this.inverse ? \"Not\" : \"\"}Containing`;\n  }\n  getExpectedType() {\n    return \"object\";\n  }\n}\nclass ArrayContaining extends AsymmetricMatcher {\n  constructor(sample, inverse = false) {\n    super(sample, inverse);\n  }\n  asymmetricMatch(other) {\n    if (!Array.isArray(this.sample)) {\n      throw new TypeError(\n        `You must provide an array to ${this.toString()}, not '${typeof this.sample}'.`\n      );\n    }\n    const matcherContext = this.getMatcherContext();\n    const result = this.sample.length === 0 || Array.isArray(other) && this.sample.every(\n      (item) => other.some(\n        (another) => equals(item, another, matcherContext.customTesters)\n      )\n    );\n    return this.inverse ? !result : result;\n  }\n  toString() {\n    return `Array${this.inverse ? \"Not\" : \"\"}Containing`;\n  }\n  getExpectedType() {\n    return \"array\";\n  }\n}\nclass Any extends AsymmetricMatcher {\n  constructor(sample) {\n    if (typeof sample === \"undefined\") {\n      throw new TypeError(\n        \"any() expects to be passed a constructor function. Please pass one or use anything() to match any object.\"\n      );\n    }\n    super(sample);\n  }\n  fnNameFor(func) {\n    if (func.name) {\n      return func.name;\n    }\n    const functionToString = Function.prototype.toString;\n    const matches = functionToString.call(func).match(/^(?:async)?\\s*function\\s*(?:\\*\\s*)?([\\w$]+)\\s*\\(/);\n    return matches ? matches[1] : \"<anonymous>\";\n  }\n  asymmetricMatch(other) {\n    if (this.sample === String) {\n      return typeof other == \"string\" || other instanceof String;\n    }\n    if (this.sample === Number) {\n      return typeof other == \"number\" || other instanceof Number;\n    }\n    if (this.sample === Function) {\n      return typeof other == \"function\" || other instanceof Function;\n    }\n    if (this.sample === Boolean) {\n      return typeof other == \"boolean\" || other instanceof Boolean;\n    }\n    if (this.sample === BigInt) {\n      return typeof other == \"bigint\" || other instanceof BigInt;\n    }\n    if (this.sample === Symbol) {\n      return typeof other == \"symbol\" || other instanceof Symbol;\n    }\n    if (this.sample === Object) {\n      return typeof other == \"object\";\n    }\n    return other instanceof this.sample;\n  }\n  toString() {\n    return \"Any\";\n  }\n  getExpectedType() {\n    if (this.sample === String) {\n      return \"string\";\n    }\n    if (this.sample === Number) {\n      return \"number\";\n    }\n    if (this.sample === Function) {\n      return \"function\";\n    }\n    if (this.sample === Object) {\n      return \"object\";\n    }\n    if (this.sample === Boolean) {\n      return \"boolean\";\n    }\n    return this.fnNameFor(this.sample);\n  }\n  toAsymmetricMatcher() {\n    return `Any<${this.fnNameFor(this.sample)}>`;\n  }\n}\nclass StringMatching extends AsymmetricMatcher {\n  constructor(sample, inverse = false) {\n    if (!isA(\"String\", sample) && !isA(\"RegExp\", sample)) {\n      throw new Error(\"Expected is not a String or a RegExp\");\n    }\n    super(new RegExp(sample), inverse);\n  }\n  asymmetricMatch(other) {\n    const result = isA(\"String\", other) && this.sample.test(other);\n    return this.inverse ? !result : result;\n  }\n  toString() {\n    return `String${this.inverse ? \"Not\" : \"\"}Matching`;\n  }\n  getExpectedType() {\n    return \"string\";\n  }\n}\nclass CloseTo extends AsymmetricMatcher {\n  precision;\n  constructor(sample, precision = 2, inverse = false) {\n    if (!isA(\"Number\", sample)) {\n      throw new Error(\"Expected is not a Number\");\n    }\n    if (!isA(\"Number\", precision)) {\n      throw new Error(\"Precision is not a Number\");\n    }\n    super(sample);\n    this.inverse = inverse;\n    this.precision = precision;\n  }\n  asymmetricMatch(other) {\n    if (!isA(\"Number\", other)) {\n      return false;\n    }\n    let result = false;\n    if (other === Number.POSITIVE_INFINITY && this.sample === Number.POSITIVE_INFINITY) {\n      result = true;\n    } else if (other === Number.NEGATIVE_INFINITY && this.sample === Number.NEGATIVE_INFINITY) {\n      result = true;\n    } else {\n      result = Math.abs(this.sample - other) < 10 ** -this.precision / 2;\n    }\n    return this.inverse ? !result : result;\n  }\n  toString() {\n    return `Number${this.inverse ? \"Not\" : \"\"}CloseTo`;\n  }\n  getExpectedType() {\n    return \"number\";\n  }\n  toAsymmetricMatcher() {\n    return [\n      this.toString(),\n      this.sample,\n      `(${pluralize(\"digit\", this.precision)})`\n    ].join(\" \");\n  }\n}\nconst JestAsymmetricMatchers = (chai, utils) => {\n  utils.addMethod(chai.expect, \"anything\", () => new Anything());\n  utils.addMethod(chai.expect, \"any\", (expected) => new Any(expected));\n  utils.addMethod(\n    chai.expect,\n    \"stringContaining\",\n    (expected) => new StringContaining(expected)\n  );\n  utils.addMethod(\n    chai.expect,\n    \"objectContaining\",\n    (expected) => new ObjectContaining(expected)\n  );\n  utils.addMethod(\n    chai.expect,\n    \"arrayContaining\",\n    (expected) => new ArrayContaining(expected)\n  );\n  utils.addMethod(\n    chai.expect,\n    \"stringMatching\",\n    (expected) => new StringMatching(expected)\n  );\n  utils.addMethod(\n    chai.expect,\n    \"closeTo\",\n    (expected, precision) => new CloseTo(expected, precision)\n  );\n  chai.expect.not = {\n    stringContaining: (expected) => new StringContaining(expected, true),\n    objectContaining: (expected) => new ObjectContaining(expected, true),\n    arrayContaining: (expected) => new ArrayContaining(expected, true),\n    stringMatching: (expected) => new StringMatching(expected, true),\n    closeTo: (expected, precision) => new CloseTo(expected, precision, true)\n  };\n};\n\nfunction recordAsyncExpect(test, promise) {\n  if (test && promise instanceof Promise) {\n    promise = promise.finally(() => {\n      const index = test.promises.indexOf(promise);\n      if (index !== -1) {\n        test.promises.splice(index, 1);\n      }\n    });\n    if (!test.promises) {\n      test.promises = [];\n    }\n    test.promises.push(promise);\n  }\n  return promise;\n}\nfunction wrapSoft(utils, fn) {\n  return function(...args) {\n    var _a;\n    if (!utils.flag(this, \"soft\")) {\n      return fn.apply(this, args);\n    }\n    const test = utils.flag(this, \"vitest-test\");\n    if (!test) {\n      throw new Error(\"expect.soft() can only be used inside a test\");\n    }\n    try {\n      return fn.apply(this, args);\n    } catch (err) {\n      test.result || (test.result = { state: \"fail\" });\n      test.result.state = \"fail\";\n      (_a = test.result).errors || (_a.errors = []);\n      test.result.errors.push((0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_4__.processError)(err));\n    }\n  };\n}\n\nconst JestChaiExpect = (chai, utils) => {\n  const { AssertionError } = chai;\n  const customTesters = getCustomEqualityTesters();\n  function def(name, fn) {\n    const addMethod = (n) => {\n      const softWrapper = wrapSoft(utils, fn);\n      utils.addMethod(chai.Assertion.prototype, n, softWrapper);\n      utils.addMethod(\n        globalThis[JEST_MATCHERS_OBJECT].matchers,\n        n,\n        softWrapper\n      );\n    };\n    if (Array.isArray(name)) {\n      name.forEach((n) => addMethod(n));\n    } else {\n      addMethod(name);\n    }\n  }\n  [\"throw\", \"throws\", \"Throw\"].forEach((m) => {\n    utils.overwriteMethod(chai.Assertion.prototype, m, (_super) => {\n      return function(...args) {\n        const promise = utils.flag(this, \"promise\");\n        const object = utils.flag(this, \"object\");\n        const isNot = utils.flag(this, \"negate\");\n        if (promise === \"rejects\") {\n          utils.flag(this, \"object\", () => {\n            throw object;\n          });\n        } else if (promise === \"resolves\" && typeof object !== \"function\") {\n          if (!isNot) {\n            const message = utils.flag(this, \"message\") || \"expected promise to throw an error, but it didn't\";\n            const error = {\n              showDiff: false\n            };\n            throw new AssertionError(message, error, utils.flag(this, \"ssfi\"));\n          } else {\n            return;\n          }\n        }\n        _super.apply(this, args);\n      };\n    });\n  });\n  def(\"withTest\", function(test) {\n    utils.flag(this, \"vitest-test\", test);\n    return this;\n  });\n  def(\"toEqual\", function(expected) {\n    const actual = utils.flag(this, \"object\");\n    const equal = equals(actual, expected, [\n      ...customTesters,\n      iterableEquality\n    ]);\n    return this.assert(\n      equal,\n      \"expected #{this} to deeply equal #{exp}\",\n      \"expected #{this} to not deeply equal #{exp}\",\n      expected,\n      actual\n    );\n  });\n  def(\"toStrictEqual\", function(expected) {\n    const obj = utils.flag(this, \"object\");\n    const equal = equals(\n      obj,\n      expected,\n      [\n        ...customTesters,\n        iterableEquality,\n        typeEquality,\n        sparseArrayEquality,\n        arrayBufferEquality\n      ],\n      true\n    );\n    return this.assert(\n      equal,\n      \"expected #{this} to strictly equal #{exp}\",\n      \"expected #{this} to not strictly equal #{exp}\",\n      expected,\n      obj\n    );\n  });\n  def(\"toBe\", function(expected) {\n    const actual = this._obj;\n    const pass = Object.is(actual, expected);\n    let deepEqualityName = \"\";\n    if (!pass) {\n      const toStrictEqualPass = equals(\n        actual,\n        expected,\n        [\n          ...customTesters,\n          iterableEquality,\n          typeEquality,\n          sparseArrayEquality,\n          arrayBufferEquality\n        ],\n        true\n      );\n      if (toStrictEqualPass) {\n        deepEqualityName = \"toStrictEqual\";\n      } else {\n        const toEqualPass = equals(actual, expected, [\n          ...customTesters,\n          iterableEquality\n        ]);\n        if (toEqualPass) {\n          deepEqualityName = \"toEqual\";\n        }\n      }\n    }\n    return this.assert(\n      pass,\n      generateToBeMessage(deepEqualityName),\n      \"expected #{this} not to be #{exp} // Object.is equality\",\n      expected,\n      actual\n    );\n  });\n  def(\"toMatchObject\", function(expected) {\n    const actual = this._obj;\n    const pass = equals(actual, expected, [\n      ...customTesters,\n      iterableEquality,\n      subsetEquality\n    ]);\n    const isNot = utils.flag(this, \"negate\");\n    const { subset: actualSubset, stripped } = getObjectSubset(\n      actual,\n      expected\n    );\n    if (pass && isNot || !pass && !isNot) {\n      const msg = utils.getMessage(this, [\n        pass,\n        \"expected #{this} to match object #{exp}\",\n        \"expected #{this} to not match object #{exp}\",\n        expected,\n        actualSubset,\n        false\n      ]);\n      const message = stripped === 0 ? msg : `${msg}\n(${stripped} matching ${stripped === 1 ? \"property\" : \"properties\"} omitted from actual)`;\n      throw new AssertionError(message, {\n        showDiff: true,\n        expected,\n        actual: actualSubset\n      });\n    }\n  });\n  def(\"toMatch\", function(expected) {\n    const actual = this._obj;\n    if (typeof actual !== \"string\") {\n      throw new TypeError(\n        `.toMatch() expects to receive a string, but got ${typeof actual}`\n      );\n    }\n    return this.assert(\n      typeof expected === \"string\" ? actual.includes(expected) : actual.match(expected),\n      `expected #{this} to match #{exp}`,\n      `expected #{this} not to match #{exp}`,\n      expected,\n      actual\n    );\n  });\n  def(\"toContain\", function(item) {\n    const actual = this._obj;\n    if (typeof Node !== \"undefined\" && actual instanceof Node) {\n      if (!(item instanceof Node)) {\n        throw new TypeError(\n          `toContain() expected a DOM node as the argument, but got ${typeof item}`\n        );\n      }\n      return this.assert(\n        actual.contains(item),\n        \"expected #{this} to contain element #{exp}\",\n        \"expected #{this} not to contain element #{exp}\",\n        item,\n        actual\n      );\n    }\n    if (typeof DOMTokenList !== \"undefined\" && actual instanceof DOMTokenList) {\n      (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(item, \"class name\", [\"string\"]);\n      const isNot = utils.flag(this, \"negate\");\n      const expectedClassList = isNot ? actual.value.replace(item, \"\").trim() : `${actual.value} ${item}`;\n      return this.assert(\n        actual.contains(item),\n        `expected \"${actual.value}\" to contain \"${item}\"`,\n        `expected \"${actual.value}\" not to contain \"${item}\"`,\n        expectedClassList,\n        actual.value\n      );\n    }\n    if (typeof actual === \"string\" && typeof item === \"string\") {\n      return this.assert(\n        actual.includes(item),\n        `expected #{this} to contain #{exp}`,\n        `expected #{this} not to contain #{exp}`,\n        item,\n        actual\n      );\n    }\n    if (actual != null && typeof actual !== \"string\") {\n      utils.flag(this, \"object\", Array.from(actual));\n    }\n    return this.contain(item);\n  });\n  def(\"toContainEqual\", function(expected) {\n    const obj = utils.flag(this, \"object\");\n    const index = Array.from(obj).findIndex((item) => {\n      return equals(item, expected, customTesters);\n    });\n    this.assert(\n      index !== -1,\n      \"expected #{this} to deep equally contain #{exp}\",\n      \"expected #{this} to not deep equally contain #{exp}\",\n      expected\n    );\n  });\n  def(\"toBeTruthy\", function() {\n    const obj = utils.flag(this, \"object\");\n    this.assert(\n      Boolean(obj),\n      \"expected #{this} to be truthy\",\n      \"expected #{this} to not be truthy\",\n      obj,\n      false\n    );\n  });\n  def(\"toBeFalsy\", function() {\n    const obj = utils.flag(this, \"object\");\n    this.assert(\n      !obj,\n      \"expected #{this} to be falsy\",\n      \"expected #{this} to not be falsy\",\n      obj,\n      false\n    );\n  });\n  def(\"toBeGreaterThan\", function(expected) {\n    const actual = this._obj;\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(actual, \"actual\", [\"number\", \"bigint\"]);\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(expected, \"expected\", [\"number\", \"bigint\"]);\n    return this.assert(\n      actual > expected,\n      `expected ${actual} to be greater than ${expected}`,\n      `expected ${actual} to be not greater than ${expected}`,\n      actual,\n      expected,\n      false\n    );\n  });\n  def(\"toBeGreaterThanOrEqual\", function(expected) {\n    const actual = this._obj;\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(actual, \"actual\", [\"number\", \"bigint\"]);\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(expected, \"expected\", [\"number\", \"bigint\"]);\n    return this.assert(\n      actual >= expected,\n      `expected ${actual} to be greater than or equal to ${expected}`,\n      `expected ${actual} to be not greater than or equal to ${expected}`,\n      actual,\n      expected,\n      false\n    );\n  });\n  def(\"toBeLessThan\", function(expected) {\n    const actual = this._obj;\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(actual, \"actual\", [\"number\", \"bigint\"]);\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(expected, \"expected\", [\"number\", \"bigint\"]);\n    return this.assert(\n      actual < expected,\n      `expected ${actual} to be less than ${expected}`,\n      `expected ${actual} to be not less than ${expected}`,\n      actual,\n      expected,\n      false\n    );\n  });\n  def(\"toBeLessThanOrEqual\", function(expected) {\n    const actual = this._obj;\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(actual, \"actual\", [\"number\", \"bigint\"]);\n    (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.assertTypes)(expected, \"expected\", [\"number\", \"bigint\"]);\n    return this.assert(\n      actual <= expected,\n      `expected ${actual} to be less than or equal to ${expected}`,\n      `expected ${actual} to be not less than or equal to ${expected}`,\n      actual,\n      expected,\n      false\n    );\n  });\n  def(\"toBeNaN\", function() {\n    return this.be.NaN;\n  });\n  def(\"toBeUndefined\", function() {\n    return this.be.undefined;\n  });\n  def(\"toBeNull\", function() {\n    return this.be.null;\n  });\n  def(\"toBeDefined\", function() {\n    const negate = utils.flag(this, \"negate\");\n    utils.flag(this, \"negate\", false);\n    if (negate) {\n      return this.be.undefined;\n    }\n    return this.not.be.undefined;\n  });\n  def(\n    \"toBeTypeOf\",\n    function(expected) {\n      const actual = typeof this._obj;\n      const equal = expected === actual;\n      return this.assert(\n        equal,\n        \"expected #{this} to be type of #{exp}\",\n        \"expected #{this} not to be type of #{exp}\",\n        expected,\n        actual\n      );\n    }\n  );\n  def(\"toBeInstanceOf\", function(obj) {\n    return this.instanceOf(obj);\n  });\n  def(\"toHaveLength\", function(length) {\n    return this.have.length(length);\n  });\n  def(\n    \"toHaveProperty\",\n    function(...args) {\n      if (Array.isArray(args[0])) {\n        args[0] = args[0].map((key) => String(key).replace(/([.[\\]])/g, \"\\\\$1\")).join(\".\");\n      }\n      const actual = this._obj;\n      const [propertyName, expected] = args;\n      const getValue = () => {\n        const hasOwn = Object.prototype.hasOwnProperty.call(\n          actual,\n          propertyName\n        );\n        if (hasOwn) {\n          return { value: actual[propertyName], exists: true };\n        }\n        return utils.getPathInfo(actual, propertyName);\n      };\n      const { value, exists } = getValue();\n      const pass = exists && (args.length === 1 || equals(expected, value, customTesters));\n      const valueString = args.length === 1 ? \"\" : ` with value ${utils.objDisplay(expected)}`;\n      return this.assert(\n        pass,\n        `expected #{this} to have property \"${propertyName}\"${valueString}`,\n        `expected #{this} to not have property \"${propertyName}\"${valueString}`,\n        expected,\n        exists ? value : void 0\n      );\n    }\n  );\n  def(\"toBeCloseTo\", function(received, precision = 2) {\n    const expected = this._obj;\n    let pass = false;\n    let expectedDiff = 0;\n    let receivedDiff = 0;\n    if (received === Number.POSITIVE_INFINITY && expected === Number.POSITIVE_INFINITY) {\n      pass = true;\n    } else if (received === Number.NEGATIVE_INFINITY && expected === Number.NEGATIVE_INFINITY) {\n      pass = true;\n    } else {\n      expectedDiff = 10 ** -precision / 2;\n      receivedDiff = Math.abs(expected - received);\n      pass = receivedDiff < expectedDiff;\n    }\n    return this.assert(\n      pass,\n      `expected #{this} to be close to #{exp}, received difference is ${receivedDiff}, but expected ${expectedDiff}`,\n      `expected #{this} to not be close to #{exp}, received difference is ${receivedDiff}, but expected ${expectedDiff}`,\n      received,\n      expected,\n      false\n    );\n  });\n  const assertIsMock = (assertion) => {\n    if (!(0,_vitest_spy__WEBPACK_IMPORTED_MODULE_5__.isMockFunction)(assertion._obj)) {\n      throw new TypeError(\n        `${utils.inspect(assertion._obj)} is not a spy or a call to a spy!`\n      );\n    }\n  };\n  const getSpy = (assertion) => {\n    assertIsMock(assertion);\n    return assertion._obj;\n  };\n  const ordinalOf = (i) => {\n    const j = i % 10;\n    const k = i % 100;\n    if (j === 1 && k !== 11) {\n      return `${i}st`;\n    }\n    if (j === 2 && k !== 12) {\n      return `${i}nd`;\n    }\n    if (j === 3 && k !== 13) {\n      return `${i}rd`;\n    }\n    return `${i}th`;\n  };\n  const formatCalls = (spy, msg, showActualCall) => {\n    if (spy.mock.calls) {\n      msg += tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gray(\n        `\n\nReceived: \n\n${spy.mock.calls.map((callArg, i) => {\n          let methodCall = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bold(\n            `  ${ordinalOf(i + 1)} ${spy.getMockName()} call:\n\n`\n          );\n          if (showActualCall) {\n            methodCall += (0,_vitest_utils_diff__WEBPACK_IMPORTED_MODULE_3__.diff)(showActualCall, callArg, {\n              omitAnnotationLines: true\n            });\n          } else {\n            methodCall += (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify)(callArg).split(\"\\n\").map((line) => `    ${line}`).join(\"\\n\");\n          }\n          methodCall += \"\\n\";\n          return methodCall;\n        }).join(\"\\n\")}`\n      );\n    }\n    msg += tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gray(\n      `\n\nNumber of calls: ${tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bold(spy.mock.calls.length)}\n`\n    );\n    return msg;\n  };\n  const formatReturns = (spy, results, msg, showActualReturn) => {\n    msg += tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gray(\n      `\n\nReceived: \n\n${results.map((callReturn, i) => {\n        let methodCall = tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bold(\n          `  ${ordinalOf(i + 1)} ${spy.getMockName()} call return:\n\n`\n        );\n        if (showActualReturn) {\n          methodCall += (0,_vitest_utils_diff__WEBPACK_IMPORTED_MODULE_3__.diff)(showActualReturn, callReturn.value, {\n            omitAnnotationLines: true\n          });\n        } else {\n          methodCall += (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify)(callReturn).split(\"\\n\").map((line) => `    ${line}`).join(\"\\n\");\n        }\n        methodCall += \"\\n\";\n        return methodCall;\n      }).join(\"\\n\")}`\n    );\n    msg += tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gray(\n      `\n\nNumber of calls: ${tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bold(spy.mock.calls.length)}\n`\n    );\n    return msg;\n  };\n  def([\"toHaveBeenCalledTimes\", \"toBeCalledTimes\"], function(number) {\n    const spy = getSpy(this);\n    const spyName = spy.getMockName();\n    const callCount = spy.mock.calls.length;\n    return this.assert(\n      callCount === number,\n      `expected \"${spyName}\" to be called #{exp} times, but got ${callCount} times`,\n      `expected \"${spyName}\" to not be called #{exp} times`,\n      number,\n      callCount,\n      false\n    );\n  });\n  def(\"toHaveBeenCalledOnce\", function() {\n    const spy = getSpy(this);\n    const spyName = spy.getMockName();\n    const callCount = spy.mock.calls.length;\n    return this.assert(\n      callCount === 1,\n      `expected \"${spyName}\" to be called once, but got ${callCount} times`,\n      `expected \"${spyName}\" to not be called once`,\n      1,\n      callCount,\n      false\n    );\n  });\n  def([\"toHaveBeenCalled\", \"toBeCalled\"], function() {\n    const spy = getSpy(this);\n    const spyName = spy.getMockName();\n    const callCount = spy.mock.calls.length;\n    const called = callCount > 0;\n    const isNot = utils.flag(this, \"negate\");\n    let msg = utils.getMessage(this, [\n      called,\n      `expected \"${spyName}\" to be called at least once`,\n      `expected \"${spyName}\" to not be called at all, but actually been called ${callCount} times`,\n      true,\n      called\n    ]);\n    if (called && isNot) {\n      msg = formatCalls(spy, msg);\n    }\n    if (called && isNot || !called && !isNot) {\n      throw new AssertionError(msg);\n    }\n  });\n  def([\"toHaveBeenCalledWith\", \"toBeCalledWith\"], function(...args) {\n    const spy = getSpy(this);\n    const spyName = spy.getMockName();\n    const pass = spy.mock.calls.some(\n      (callArg) => equals(callArg, args, [...customTesters, iterableEquality])\n    );\n    const isNot = utils.flag(this, \"negate\");\n    const msg = utils.getMessage(this, [\n      pass,\n      `expected \"${spyName}\" to be called with arguments: #{exp}`,\n      `expected \"${spyName}\" to not be called with arguments: #{exp}`,\n      args\n    ]);\n    if (pass && isNot || !pass && !isNot) {\n      throw new AssertionError(formatCalls(spy, msg, args));\n    }\n  });\n  def(\n    [\"toHaveBeenNthCalledWith\", \"nthCalledWith\"],\n    function(times, ...args) {\n      const spy = getSpy(this);\n      const spyName = spy.getMockName();\n      const nthCall = spy.mock.calls[times - 1];\n      const callCount = spy.mock.calls.length;\n      const isCalled = times <= callCount;\n      this.assert(\n        equals(nthCall, args, [...customTesters, iterableEquality]),\n        `expected ${ordinalOf(\n          times\n        )} \"${spyName}\" call to have been called with #{exp}${isCalled ? `` : `, but called only ${callCount} times`}`,\n        `expected ${ordinalOf(\n          times\n        )} \"${spyName}\" call to not have been called with #{exp}`,\n        args,\n        nthCall,\n        isCalled\n      );\n    }\n  );\n  def(\n    [\"toHaveBeenLastCalledWith\", \"lastCalledWith\"],\n    function(...args) {\n      const spy = getSpy(this);\n      const spyName = spy.getMockName();\n      const lastCall = spy.mock.calls[spy.mock.calls.length - 1];\n      this.assert(\n        equals(lastCall, args, [...customTesters, iterableEquality]),\n        `expected last \"${spyName}\" call to have been called with #{exp}`,\n        `expected last \"${spyName}\" call to not have been called with #{exp}`,\n        args,\n        lastCall\n      );\n    }\n  );\n  def(\n    [\"toThrow\", \"toThrowError\"],\n    function(expected) {\n      if (typeof expected === \"string\" || typeof expected === \"undefined\" || expected instanceof RegExp) {\n        return this.throws(expected);\n      }\n      const obj = this._obj;\n      const promise = utils.flag(this, \"promise\");\n      const isNot = utils.flag(this, \"negate\");\n      let thrown = null;\n      if (promise === \"rejects\") {\n        thrown = obj;\n      } else if (promise === \"resolves\" && typeof obj !== \"function\") {\n        if (!isNot) {\n          const message = utils.flag(this, \"message\") || \"expected promise to throw an error, but it didn't\";\n          const error = {\n            showDiff: false\n          };\n          throw new AssertionError(message, error, utils.flag(this, \"ssfi\"));\n        } else {\n          return;\n        }\n      } else {\n        let isThrow = false;\n        try {\n          obj();\n        } catch (err) {\n          isThrow = true;\n          thrown = err;\n        }\n        if (!isThrow && !isNot) {\n          const message = utils.flag(this, \"message\") || \"expected function to throw an error, but it didn't\";\n          const error = {\n            showDiff: false\n          };\n          throw new AssertionError(message, error, utils.flag(this, \"ssfi\"));\n        }\n      }\n      if (typeof expected === \"function\") {\n        const name = expected.name || expected.prototype.constructor.name;\n        return this.assert(\n          thrown && thrown instanceof expected,\n          `expected error to be instance of ${name}`,\n          `expected error not to be instance of ${name}`,\n          expected,\n          thrown\n        );\n      }\n      if (expected instanceof Error) {\n        return this.assert(\n          thrown && expected.message === thrown.message,\n          `expected error to have message: ${expected.message}`,\n          `expected error not to have message: ${expected.message}`,\n          expected.message,\n          thrown && thrown.message\n        );\n      }\n      if (typeof expected === \"object\" && \"asymmetricMatch\" in expected && typeof expected.asymmetricMatch === \"function\") {\n        const matcher = expected;\n        return this.assert(\n          thrown && matcher.asymmetricMatch(thrown),\n          \"expected error to match asymmetric matcher\",\n          \"expected error not to match asymmetric matcher\",\n          matcher,\n          thrown\n        );\n      }\n      throw new Error(\n        `\"toThrow\" expects string, RegExp, function, Error instance or asymmetric matcher, got \"${typeof expected}\"`\n      );\n    }\n  );\n  [\n    {\n      name: \"toHaveResolved\",\n      condition: (spy) => spy.mock.settledResults.length > 0 && spy.mock.settledResults.some(({ type }) => type === \"fulfilled\"),\n      action: \"resolved\"\n    },\n    {\n      name: [\"toHaveReturned\", \"toReturn\"],\n      condition: (spy) => spy.mock.calls.length > 0 && spy.mock.results.some(({ type }) => type !== \"throw\"),\n      action: \"called\"\n    }\n  ].forEach(({ name, condition, action }) => {\n    def(name, function() {\n      const spy = getSpy(this);\n      const spyName = spy.getMockName();\n      const pass = condition(spy);\n      this.assert(\n        pass,\n        `expected \"${spyName}\" to be successfully ${action} at least once`,\n        `expected \"${spyName}\" to not be successfully ${action}`,\n        pass,\n        !pass,\n        false\n      );\n    });\n  });\n  [\n    {\n      name: \"toHaveResolvedTimes\",\n      condition: (spy, times) => spy.mock.settledResults.reduce(\n        (s, { type }) => type === \"fulfilled\" ? ++s : s,\n        0\n      ) === times,\n      action: \"resolved\"\n    },\n    {\n      name: [\"toHaveReturnedTimes\", \"toReturnTimes\"],\n      condition: (spy, times) => spy.mock.results.reduce(\n        (s, { type }) => type === \"throw\" ? s : ++s,\n        0\n      ) === times,\n      action: \"called\"\n    }\n  ].forEach(({ name, condition, action }) => {\n    def(name, function(times) {\n      const spy = getSpy(this);\n      const spyName = spy.getMockName();\n      const pass = condition(spy, times);\n      this.assert(\n        pass,\n        `expected \"${spyName}\" to be successfully ${action} ${times} times`,\n        `expected \"${spyName}\" to not be successfully ${action} ${times} times`,\n        `expected resolved times: ${times}`,\n        `received resolved times: ${pass}`,\n        false\n      );\n    });\n  });\n  [\n    {\n      name: \"toHaveResolvedWith\",\n      condition: (spy, value) => spy.mock.settledResults.some(\n        ({ type, value: result }) => type === \"fulfilled\" && equals(value, result)\n      ),\n      action: \"resolve\"\n    },\n    {\n      name: [\"toHaveReturnedWith\", \"toReturnWith\"],\n      condition: (spy, value) => spy.mock.results.some(\n        ({ type, value: result }) => type === \"return\" && equals(value, result)\n      ),\n      action: \"return\"\n    }\n  ].forEach(({ name, condition, action }) => {\n    def(name, function(value) {\n      const spy = getSpy(this);\n      const pass = condition(spy, value);\n      const isNot = utils.flag(this, \"negate\");\n      if (pass && isNot || !pass && !isNot) {\n        const spyName = spy.getMockName();\n        const msg = utils.getMessage(this, [\n          pass,\n          `expected \"${spyName}\" to ${action} with: #{exp} at least once`,\n          `expected \"${spyName}\" to not ${action} with: #{exp}`,\n          value\n        ]);\n        const results = action === \"return\" ? spy.mock.results : spy.mock.settledResults;\n        throw new AssertionError(formatReturns(spy, results, msg, value));\n      }\n    });\n  });\n  [\n    {\n      name: \"toHaveLastResolvedWith\",\n      condition: (spy, value) => {\n        const result = spy.mock.settledResults[spy.mock.settledResults.length - 1];\n        return result && result.type === \"fulfilled\" && equals(result.value, value);\n      },\n      action: \"resolve\"\n    },\n    {\n      name: [\"toHaveLastReturnedWith\", \"lastReturnedWith\"],\n      condition: (spy, value) => {\n        const result = spy.mock.results[spy.mock.results.length - 1];\n        return result && result.type === \"return\" && equals(result.value, value);\n      },\n      action: \"return\"\n    }\n  ].forEach(({ name, condition, action }) => {\n    def(name, function(value) {\n      const spy = getSpy(this);\n      const results = action === \"return\" ? spy.mock.results : spy.mock.settledResults;\n      const result = results[results.length - 1];\n      const spyName = spy.getMockName();\n      this.assert(\n        condition(spy, value),\n        `expected last \"${spyName}\" call to ${action} #{exp}`,\n        `expected last \"${spyName}\" call to not ${action} #{exp}`,\n        value,\n        result == null ? void 0 : result.value\n      );\n    });\n  });\n  [\n    {\n      name: \"toHaveNthResolvedWith\",\n      condition: (spy, index, value) => {\n        const result = spy.mock.settledResults[index - 1];\n        return result && result.type === \"fulfilled\" && equals(result.value, value);\n      },\n      action: \"resolve\"\n    },\n    {\n      name: [\"toHaveNthReturnedWith\", \"nthReturnedWith\"],\n      condition: (spy, index, value) => {\n        const result = spy.mock.results[index - 1];\n        return result && result.type === \"return\" && equals(result.value, value);\n      },\n      action: \"return\"\n    }\n  ].forEach(({ name, condition, action }) => {\n    def(name, function(nthCall, value) {\n      const spy = getSpy(this);\n      const spyName = spy.getMockName();\n      const results = action === \"return\" ? spy.mock.results : spy.mock.settledResults;\n      const result = results[nthCall - 1];\n      const ordinalCall = `${ordinalOf(nthCall)} call`;\n      this.assert(\n        condition(spy, nthCall, value),\n        `expected ${ordinalCall} \"${spyName}\" call to ${action} #{exp}`,\n        `expected ${ordinalCall} \"${spyName}\" call to not ${action} #{exp}`,\n        value,\n        result == null ? void 0 : result.value\n      );\n    });\n  });\n  def(\"toSatisfy\", function(matcher, message) {\n    return this.be.satisfy(matcher, message);\n  });\n  def(\"withContext\", function(context) {\n    for (const key in context) {\n      utils.flag(this, key, context[key]);\n    }\n    return this;\n  });\n  utils.addProperty(\n    chai.Assertion.prototype,\n    \"resolves\",\n    function __VITEST_RESOLVES__() {\n      const error = new Error(\"resolves\");\n      utils.flag(this, \"promise\", \"resolves\");\n      utils.flag(this, \"error\", error);\n      const test = utils.flag(this, \"vitest-test\");\n      const obj = utils.flag(this, \"object\");\n      if (utils.flag(this, \"poll\")) {\n        throw new SyntaxError(\n          `expect.poll() is not supported in combination with .resolves`\n        );\n      }\n      if (typeof (obj == null ? void 0 : obj.then) !== \"function\") {\n        throw new TypeError(\n          `You must provide a Promise to expect() when using .resolves, not '${typeof obj}'.`\n        );\n      }\n      const proxy = new Proxy(this, {\n        get: (target, key, receiver) => {\n          const result = Reflect.get(target, key, receiver);\n          if (typeof result !== \"function\") {\n            return result instanceof chai.Assertion ? proxy : result;\n          }\n          return async (...args) => {\n            const promise = obj.then(\n              (value) => {\n                utils.flag(this, \"object\", value);\n                return result.call(this, ...args);\n              },\n              (err) => {\n                const _error = new AssertionError(\n                  `promise rejected \"${utils.inspect(\n                    err\n                  )}\" instead of resolving`,\n                  { showDiff: false }\n                );\n                _error.cause = err;\n                _error.stack = error.stack.replace(\n                  error.message,\n                  _error.message\n                );\n                throw _error;\n              }\n            );\n            return recordAsyncExpect(test, promise);\n          };\n        }\n      });\n      return proxy;\n    }\n  );\n  utils.addProperty(\n    chai.Assertion.prototype,\n    \"rejects\",\n    function __VITEST_REJECTS__() {\n      const error = new Error(\"rejects\");\n      utils.flag(this, \"promise\", \"rejects\");\n      utils.flag(this, \"error\", error);\n      const test = utils.flag(this, \"vitest-test\");\n      const obj = utils.flag(this, \"object\");\n      const wrapper = typeof obj === \"function\" ? obj() : obj;\n      if (utils.flag(this, \"poll\")) {\n        throw new SyntaxError(\n          `expect.poll() is not supported in combination with .rejects`\n        );\n      }\n      if (typeof (wrapper == null ? void 0 : wrapper.then) !== \"function\") {\n        throw new TypeError(\n          `You must provide a Promise to expect() when using .rejects, not '${typeof wrapper}'.`\n        );\n      }\n      const proxy = new Proxy(this, {\n        get: (target, key, receiver) => {\n          const result = Reflect.get(target, key, receiver);\n          if (typeof result !== \"function\") {\n            return result instanceof chai.Assertion ? proxy : result;\n          }\n          return async (...args) => {\n            const promise = wrapper.then(\n              (value) => {\n                const _error = new AssertionError(\n                  `promise resolved \"${utils.inspect(\n                    value\n                  )}\" instead of rejecting`,\n                  {\n                    showDiff: true,\n                    expected: new Error(\"rejected promise\"),\n                    actual: value\n                  }\n                );\n                _error.stack = error.stack.replace(\n                  error.message,\n                  _error.message\n                );\n                throw _error;\n              },\n              (err) => {\n                utils.flag(this, \"object\", err);\n                return result.call(this, ...args);\n              }\n            );\n            return recordAsyncExpect(test, promise);\n          };\n        }\n      });\n      return proxy;\n    }\n  );\n};\n\nfunction getMatcherState(assertion, expect) {\n  const obj = assertion._obj;\n  const isNot = chai__WEBPACK_IMPORTED_MODULE_1__.util.flag(assertion, \"negate\");\n  const promise = chai__WEBPACK_IMPORTED_MODULE_1__.util.flag(assertion, \"promise\") || \"\";\n  const jestUtils = {\n    ...getMatcherUtils(),\n    diff: _vitest_utils_diff__WEBPACK_IMPORTED_MODULE_3__.diff,\n    stringify: _vitest_utils__WEBPACK_IMPORTED_MODULE_2__.stringify,\n    iterableEquality,\n    subsetEquality\n  };\n  const matcherState = {\n    ...getState(expect),\n    customTesters: getCustomEqualityTesters(),\n    isNot,\n    utils: jestUtils,\n    promise,\n    equals,\n    // needed for built-in jest-snapshots, but we don't use it\n    suppressedErrors: [],\n    soft: chai__WEBPACK_IMPORTED_MODULE_1__.util.flag(assertion, \"soft\"),\n    poll: chai__WEBPACK_IMPORTED_MODULE_1__.util.flag(assertion, \"poll\")\n  };\n  return {\n    state: matcherState,\n    isNot,\n    obj\n  };\n}\nclass JestExtendError extends Error {\n  constructor(message, actual, expected) {\n    super(message);\n    this.actual = actual;\n    this.expected = expected;\n  }\n}\nfunction JestExtendPlugin(c, expect, matchers) {\n  return (_, utils) => {\n    Object.entries(matchers).forEach(\n      ([expectAssertionName, expectAssertion]) => {\n        function expectWrapper(...args) {\n          const { state, isNot, obj } = getMatcherState(this, expect);\n          const result = expectAssertion.call(state, obj, ...args);\n          if (result && typeof result === \"object\" && result instanceof Promise) {\n            return result.then(({ pass: pass2, message: message2, actual: actual2, expected: expected2 }) => {\n              if (pass2 && isNot || !pass2 && !isNot) {\n                throw new JestExtendError(message2(), actual2, expected2);\n              }\n            });\n          }\n          const { pass, message, actual, expected } = result;\n          if (pass && isNot || !pass && !isNot) {\n            throw new JestExtendError(message(), actual, expected);\n          }\n        }\n        const softWrapper = wrapSoft(utils, expectWrapper);\n        utils.addMethod(\n          globalThis[JEST_MATCHERS_OBJECT].matchers,\n          expectAssertionName,\n          softWrapper\n        );\n        utils.addMethod(\n          c.Assertion.prototype,\n          expectAssertionName,\n          softWrapper\n        );\n        class CustomMatcher extends AsymmetricMatcher {\n          constructor(inverse = false, ...sample) {\n            super(sample, inverse);\n          }\n          asymmetricMatch(other) {\n            const { pass } = expectAssertion.call(\n              this.getMatcherContext(expect),\n              other,\n              ...this.sample\n            );\n            return this.inverse ? !pass : pass;\n          }\n          toString() {\n            return `${this.inverse ? \"not.\" : \"\"}${expectAssertionName}`;\n          }\n          getExpectedType() {\n            return \"any\";\n          }\n          toAsymmetricMatcher() {\n            return `${this.toString()}<${this.sample.map(String).join(\", \")}>`;\n          }\n        }\n        const customMatcher = (...sample) => new CustomMatcher(false, ...sample);\n        Object.defineProperty(expect, expectAssertionName, {\n          configurable: true,\n          enumerable: true,\n          value: customMatcher,\n          writable: true\n        });\n        Object.defineProperty(expect.not, expectAssertionName, {\n          configurable: true,\n          enumerable: true,\n          value: (...sample) => new CustomMatcher(true, ...sample),\n          writable: true\n        });\n        Object.defineProperty(\n          globalThis[ASYMMETRIC_MATCHERS_OBJECT],\n          expectAssertionName,\n          {\n            configurable: true,\n            enumerable: true,\n            value: customMatcher,\n            writable: true\n          }\n        );\n      }\n    );\n  };\n}\nconst JestExtend = (chai, utils) => {\n  utils.addMethod(\n    chai.expect,\n    \"extend\",\n    (expect, expects) => {\n      (0,chai__WEBPACK_IMPORTED_MODULE_1__.use)(JestExtendPlugin(chai, expect, expects));\n    }\n  );\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/expect/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/pretty-format/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vitest/pretty-format/dist/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_OPTIONS: function() { return /* binding */ DEFAULT_OPTIONS; },\n/* harmony export */   format: function() { return /* binding */ format; },\n/* harmony export */   plugins: function() { return /* binding */ plugins; }\n/* harmony export */ });\n/* harmony import */ var tinyrainbow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinyrainbow */ \"./node_modules/tinyrainbow/dist/browser.js\");\n\n\nfunction getKeysOfEnumerableProperties(object, compareKeys) {\n  const rawKeys = Object.keys(object);\n  const keys = compareKeys === null ? rawKeys : rawKeys.sort(compareKeys);\n  if (Object.getOwnPropertySymbols) {\n    for (const symbol of Object.getOwnPropertySymbols(object)) {\n      if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {\n        keys.push(symbol);\n      }\n    }\n  }\n  return keys;\n}\nfunction printIteratorEntries(iterator, config, indentation, depth, refs, printer, separator = \": \") {\n  let result = \"\";\n  let width = 0;\n  let current = iterator.next();\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    while (!current.done) {\n      result += indentationNext;\n      if (width++ === config.maxWidth) {\n        result += \"\\u2026\";\n        break;\n      }\n      const name = printer(\n        current.value[0],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      const value = printer(\n        current.value[1],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      result += name + separator + value;\n      current = iterator.next();\n      if (!current.done) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += \",\";\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\nfunction printIteratorValues(iterator, config, indentation, depth, refs, printer) {\n  let result = \"\";\n  let width = 0;\n  let current = iterator.next();\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    while (!current.done) {\n      result += indentationNext;\n      if (width++ === config.maxWidth) {\n        result += \"\\u2026\";\n        break;\n      }\n      result += printer(current.value, config, indentationNext, depth, refs);\n      current = iterator.next();\n      if (!current.done) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += \",\";\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\nfunction printListItems(list, config, indentation, depth, refs, printer) {\n  let result = \"\";\n  list = list instanceof ArrayBuffer ? new DataView(list) : list;\n  const isDataView = (l) => l instanceof DataView;\n  const length = isDataView(list) ? list.byteLength : list.length;\n  if (length > 0) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    for (let i = 0; i < length; i++) {\n      result += indentationNext;\n      if (i === config.maxWidth) {\n        result += \"\\u2026\";\n        break;\n      }\n      if (isDataView(list) || i in list) {\n        result += printer(\n          isDataView(list) ? list.getInt8(i) : list[i],\n          config,\n          indentationNext,\n          depth,\n          refs\n        );\n      }\n      if (i < length - 1) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += \",\";\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\nfunction printObjectProperties(val, config, indentation, depth, refs, printer) {\n  let result = \"\";\n  const keys = getKeysOfEnumerableProperties(val, config.compareKeys);\n  if (keys.length > 0) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = printer(key, config, indentationNext, depth, refs);\n      const value = printer(val[key], config, indentationNext, depth, refs);\n      result += `${indentationNext + name}: ${value}`;\n      if (i < keys.length - 1) {\n        result += `,${config.spacingInner}`;\n      } else if (!config.min) {\n        result += \",\";\n      }\n    }\n    result += config.spacingOuter + indentation;\n  }\n  return result;\n}\n\nconst asymmetricMatcher = typeof Symbol === \"function\" && Symbol.for ? Symbol.for(\"jest.asymmetricMatcher\") : 1267621;\nconst SPACE$2 = \" \";\nconst serialize$5 = (val, config, indentation, depth, refs, printer) => {\n  const stringedValue = val.toString();\n  if (stringedValue === \"ArrayContaining\" || stringedValue === \"ArrayNotContaining\") {\n    if (++depth > config.maxDepth) {\n      return `[${stringedValue}]`;\n    }\n    return `${stringedValue + SPACE$2}[${printListItems(\n      val.sample,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer\n    )}]`;\n  }\n  if (stringedValue === \"ObjectContaining\" || stringedValue === \"ObjectNotContaining\") {\n    if (++depth > config.maxDepth) {\n      return `[${stringedValue}]`;\n    }\n    return `${stringedValue + SPACE$2}{${printObjectProperties(\n      val.sample,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer\n    )}}`;\n  }\n  if (stringedValue === \"StringMatching\" || stringedValue === \"StringNotMatching\") {\n    return stringedValue + SPACE$2 + printer(val.sample, config, indentation, depth, refs);\n  }\n  if (stringedValue === \"StringContaining\" || stringedValue === \"StringNotContaining\") {\n    return stringedValue + SPACE$2 + printer(val.sample, config, indentation, depth, refs);\n  }\n  if (typeof val.toAsymmetricMatcher !== \"function\") {\n    throw new TypeError(\n      `Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`\n    );\n  }\n  return val.toAsymmetricMatcher();\n};\nconst test$5 = (val) => val && val.$$typeof === asymmetricMatcher;\nconst plugin$5 = { serialize: serialize$5, test: test$5 };\n\nconst SPACE$1 = \" \";\nconst OBJECT_NAMES = /* @__PURE__ */ new Set([\"DOMStringMap\", \"NamedNodeMap\"]);\nconst ARRAY_REGEXP = /^(?:HTML\\w*Collection|NodeList)$/;\nfunction testName(name) {\n  return OBJECT_NAMES.has(name) || ARRAY_REGEXP.test(name);\n}\nconst test$4 = (val) => val && val.constructor && !!val.constructor.name && testName(val.constructor.name);\nfunction isNamedNodeMap(collection) {\n  return collection.constructor.name === \"NamedNodeMap\";\n}\nconst serialize$4 = (collection, config, indentation, depth, refs, printer) => {\n  const name = collection.constructor.name;\n  if (++depth > config.maxDepth) {\n    return `[${name}]`;\n  }\n  return (config.min ? \"\" : name + SPACE$1) + (OBJECT_NAMES.has(name) ? `{${printObjectProperties(\n    isNamedNodeMap(collection) ? [...collection].reduce(\n      (props, attribute) => {\n        props[attribute.name] = attribute.value;\n        return props;\n      },\n      {}\n    ) : { ...collection },\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  )}}` : `[${printListItems(\n    [...collection],\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  )}]`);\n};\nconst plugin$4 = { serialize: serialize$4, test: test$4 };\n\nfunction escapeHTML(str) {\n  return str.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n}\n\nfunction printProps(keys, props, config, indentation, depth, refs, printer) {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys.map((key) => {\n    const value = props[key];\n    let printed = printer(value, config, indentationNext, depth, refs);\n    if (typeof value !== \"string\") {\n      if (printed.includes(\"\\n\")) {\n        printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;\n      }\n      printed = `{${printed}}`;\n    }\n    return `${config.spacingInner + indentation + colors.prop.open + key + colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`;\n  }).join(\"\");\n}\nfunction printChildren(children, config, indentation, depth, refs, printer) {\n  return children.map(\n    (child) => config.spacingOuter + indentation + (typeof child === \"string\" ? printText(child, config) : printer(child, config, indentation, depth, refs))\n  ).join(\"\");\n}\nfunction printText(text, config) {\n  const contentColor = config.colors.content;\n  return contentColor.open + escapeHTML(text) + contentColor.close;\n}\nfunction printComment(comment, config) {\n  const commentColor = config.colors.comment;\n  return `${commentColor.open}<!--${escapeHTML(comment)}-->${commentColor.close}`;\n}\nfunction printElement(type, printedProps, printedChildren, config, indentation) {\n  const tagColor = config.colors.tag;\n  return `${tagColor.open}<${type}${printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open}${printedChildren ? `>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}` : `${printedProps && !config.min ? \"\" : \" \"}/`}>${tagColor.close}`;\n}\nfunction printElementAsLeaf(type, config) {\n  const tagColor = config.colors.tag;\n  return `${tagColor.open}<${type}${tagColor.close} \\u2026${tagColor.open} />${tagColor.close}`;\n}\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^(?:(?:HTML|SVG)\\w*)?Element$/;\nfunction testHasAttribute(val) {\n  try {\n    return typeof val.hasAttribute === \"function\" && val.hasAttribute(\"is\");\n  } catch {\n    return false;\n  }\n}\nfunction testNode(val) {\n  const constructorName = val.constructor.name;\n  const { nodeType, tagName } = val;\n  const isCustomElement = typeof tagName === \"string\" && tagName.includes(\"-\") || testHasAttribute(val);\n  return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === \"Text\" || nodeType === COMMENT_NODE && constructorName === \"Comment\" || nodeType === FRAGMENT_NODE && constructorName === \"DocumentFragment\";\n}\nconst test$3 = (val) => {\n  var _a;\n  return ((_a = val == null ? void 0 : val.constructor) == null ? void 0 : _a.name) && testNode(val);\n};\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\nconst serialize$3 = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return printText(node.data, config);\n  }\n  if (nodeIsComment(node)) {\n    return printComment(node.data, config);\n  }\n  const type = nodeIsFragment(node) ? \"DocumentFragment\" : node.tagName.toLowerCase();\n  if (++depth > config.maxDepth) {\n    return printElementAsLeaf(type, config);\n  }\n  return printElement(\n    type,\n    printProps(\n      nodeIsFragment(node) ? [] : Array.from(node.attributes, (attr) => attr.name).sort(),\n      nodeIsFragment(node) ? {} : [...node.attributes].reduce(\n        (props, attribute) => {\n          props[attribute.name] = attribute.value;\n          return props;\n        },\n        {}\n      ),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    printChildren(\n      Array.prototype.slice.call(node.childNodes || node.children),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    config,\n    indentation\n  );\n};\nconst plugin$3 = { serialize: serialize$3, test: test$3 };\n\nconst IS_ITERABLE_SENTINEL = \"@@__IMMUTABLE_ITERABLE__@@\";\nconst IS_LIST_SENTINEL = \"@@__IMMUTABLE_LIST__@@\";\nconst IS_KEYED_SENTINEL = \"@@__IMMUTABLE_KEYED__@@\";\nconst IS_MAP_SENTINEL = \"@@__IMMUTABLE_MAP__@@\";\nconst IS_ORDERED_SENTINEL = \"@@__IMMUTABLE_ORDERED__@@\";\nconst IS_RECORD_SENTINEL = \"@@__IMMUTABLE_RECORD__@@\";\nconst IS_SEQ_SENTINEL = \"@@__IMMUTABLE_SEQ__@@\";\nconst IS_SET_SENTINEL = \"@@__IMMUTABLE_SET__@@\";\nconst IS_STACK_SENTINEL = \"@@__IMMUTABLE_STACK__@@\";\nconst getImmutableName = (name) => `Immutable.${name}`;\nconst printAsLeaf = (name) => `[${name}]`;\nconst SPACE = \" \";\nconst LAZY = \"\\u2026\";\nfunction printImmutableEntries(val, config, indentation, depth, refs, printer, type) {\n  return ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : `${getImmutableName(type) + SPACE}{${printIteratorEntries(\n    val.entries(),\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  )}}`;\n}\nfunction getRecordEntries(val) {\n  let i = 0;\n  return {\n    next() {\n      if (i < val._keys.length) {\n        const key = val._keys[i++];\n        return { done: false, value: [key, val.get(key)] };\n      }\n      return { done: true, value: void 0 };\n    }\n  };\n}\nfunction printImmutableRecord(val, config, indentation, depth, refs, printer) {\n  const name = getImmutableName(val._name || \"Record\");\n  return ++depth > config.maxDepth ? printAsLeaf(name) : `${name + SPACE}{${printIteratorEntries(\n    getRecordEntries(val),\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  )}}`;\n}\nfunction printImmutableSeq(val, config, indentation, depth, refs, printer) {\n  const name = getImmutableName(\"Seq\");\n  if (++depth > config.maxDepth) {\n    return printAsLeaf(name);\n  }\n  if (val[IS_KEYED_SENTINEL]) {\n    return `${name + SPACE}{${// from Immutable collection of entries or from ECMAScript object\n    val._iter || val._object ? printIteratorEntries(\n      val.entries(),\n      config,\n      indentation,\n      depth,\n      refs,\n      printer\n    ) : LAZY}}`;\n  }\n  return `${name + SPACE}[${val._iter || val._array || val._collection || val._iterable ? printIteratorValues(\n    val.values(),\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  ) : LAZY}]`;\n}\nfunction printImmutableValues(val, config, indentation, depth, refs, printer, type) {\n  return ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : `${getImmutableName(type) + SPACE}[${printIteratorValues(\n    val.values(),\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  )}]`;\n}\nconst serialize$2 = (val, config, indentation, depth, refs, printer) => {\n  if (val[IS_MAP_SENTINEL]) {\n    return printImmutableEntries(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? \"OrderedMap\" : \"Map\"\n    );\n  }\n  if (val[IS_LIST_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      \"List\"\n    );\n  }\n  if (val[IS_SET_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? \"OrderedSet\" : \"Set\"\n    );\n  }\n  if (val[IS_STACK_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      \"Stack\"\n    );\n  }\n  if (val[IS_SEQ_SENTINEL]) {\n    return printImmutableSeq(val, config, indentation, depth, refs, printer);\n  }\n  return printImmutableRecord(val, config, indentation, depth, refs, printer);\n};\nconst test$2 = (val) => val && (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\nconst plugin$2 = { serialize: serialize$2, test: test$2 };\n\nvar reactIs = {exports: {}};\n\nvar reactIs_production_min = {};\n\n/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredReactIs_production_min;\n\nfunction requireReactIs_production_min () {\n\tif (hasRequiredReactIs_production_min) return reactIs_production_min;\n\thasRequiredReactIs_production_min = 1;\nvar b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\n\tfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}reactIs_production_min.ContextConsumer=h;reactIs_production_min.ContextProvider=g;reactIs_production_min.Element=b;reactIs_production_min.ForwardRef=l;reactIs_production_min.Fragment=d;reactIs_production_min.Lazy=q;reactIs_production_min.Memo=p;reactIs_production_min.Portal=c;reactIs_production_min.Profiler=f;reactIs_production_min.StrictMode=e;reactIs_production_min.Suspense=m;\n\treactIs_production_min.SuspenseList=n;reactIs_production_min.isAsyncMode=function(){return !1};reactIs_production_min.isConcurrentMode=function(){return !1};reactIs_production_min.isContextConsumer=function(a){return v(a)===h};reactIs_production_min.isContextProvider=function(a){return v(a)===g};reactIs_production_min.isElement=function(a){return \"object\"===typeof a&&null!==a&&a.$$typeof===b};reactIs_production_min.isForwardRef=function(a){return v(a)===l};reactIs_production_min.isFragment=function(a){return v(a)===d};reactIs_production_min.isLazy=function(a){return v(a)===q};reactIs_production_min.isMemo=function(a){return v(a)===p};\n\treactIs_production_min.isPortal=function(a){return v(a)===c};reactIs_production_min.isProfiler=function(a){return v(a)===f};reactIs_production_min.isStrictMode=function(a){return v(a)===e};reactIs_production_min.isSuspense=function(a){return v(a)===m};reactIs_production_min.isSuspenseList=function(a){return v(a)===n};\n\treactIs_production_min.isValidElementType=function(a){return \"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};reactIs_production_min.typeOf=v;\n\treturn reactIs_production_min;\n}\n\nvar reactIs_development = {};\n\n/**\n * @license React\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredReactIs_development;\n\nfunction requireReactIs_development () {\n\tif (hasRequiredReactIs_development) return reactIs_development;\n\thasRequiredReactIs_development = 1;\n\n\tif (true) {\n\t  (function() {\n\n\t// ATTENTION\n\t// When adding new symbols to this file,\n\t// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\t// The Symbol used to tag the ReactElement-like types.\n\tvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\n\tvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\n\tvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n\tvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n\tvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n\tvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\n\tvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\n\tvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\n\tvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n\tvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n\tvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n\tvar REACT_MEMO_TYPE = Symbol.for('react.memo');\n\tvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\n\tvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n\n\t// -----------------------------------------------------------------------------\n\n\tvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\tvar enableCacheElement = false;\n\tvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n\tvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n\t// stuff. Intended to enable React core members to more easily debug scheduling\n\t// issues in DEV builds.\n\n\tvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n\tvar REACT_MODULE_REFERENCE;\n\n\t{\n\t  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n\t}\n\n\tfunction isValidElementType(type) {\n\t  if (typeof type === 'string' || typeof type === 'function') {\n\t    return true;\n\t  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n\t  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n\t    return true;\n\t  }\n\n\t  if (typeof type === 'object' && type !== null) {\n\t    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n\t    // types supported by any Flight configuration anywhere since\n\t    // we don't know which Flight build this will end up being used\n\t    // with.\n\t    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n\t      return true;\n\t    }\n\t  }\n\n\t  return false;\n\t}\n\n\tfunction typeOf(object) {\n\t  if (typeof object === 'object' && object !== null) {\n\t    var $$typeof = object.$$typeof;\n\n\t    switch ($$typeof) {\n\t      case REACT_ELEMENT_TYPE:\n\t        var type = object.type;\n\n\t        switch (type) {\n\t          case REACT_FRAGMENT_TYPE:\n\t          case REACT_PROFILER_TYPE:\n\t          case REACT_STRICT_MODE_TYPE:\n\t          case REACT_SUSPENSE_TYPE:\n\t          case REACT_SUSPENSE_LIST_TYPE:\n\t            return type;\n\n\t          default:\n\t            var $$typeofType = type && type.$$typeof;\n\n\t            switch ($$typeofType) {\n\t              case REACT_SERVER_CONTEXT_TYPE:\n\t              case REACT_CONTEXT_TYPE:\n\t              case REACT_FORWARD_REF_TYPE:\n\t              case REACT_LAZY_TYPE:\n\t              case REACT_MEMO_TYPE:\n\t              case REACT_PROVIDER_TYPE:\n\t                return $$typeofType;\n\n\t              default:\n\t                return $$typeof;\n\t            }\n\n\t        }\n\n\t      case REACT_PORTAL_TYPE:\n\t        return $$typeof;\n\t    }\n\t  }\n\n\t  return undefined;\n\t}\n\tvar ContextConsumer = REACT_CONTEXT_TYPE;\n\tvar ContextProvider = REACT_PROVIDER_TYPE;\n\tvar Element = REACT_ELEMENT_TYPE;\n\tvar ForwardRef = REACT_FORWARD_REF_TYPE;\n\tvar Fragment = REACT_FRAGMENT_TYPE;\n\tvar Lazy = REACT_LAZY_TYPE;\n\tvar Memo = REACT_MEMO_TYPE;\n\tvar Portal = REACT_PORTAL_TYPE;\n\tvar Profiler = REACT_PROFILER_TYPE;\n\tvar StrictMode = REACT_STRICT_MODE_TYPE;\n\tvar Suspense = REACT_SUSPENSE_TYPE;\n\tvar SuspenseList = REACT_SUSPENSE_LIST_TYPE;\n\tvar hasWarnedAboutDeprecatedIsAsyncMode = false;\n\tvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\n\tfunction isAsyncMode(object) {\n\t  {\n\t    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n\t      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n\t      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n\t    }\n\t  }\n\n\t  return false;\n\t}\n\tfunction isConcurrentMode(object) {\n\t  {\n\t    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n\t      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n\t      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n\t    }\n\t  }\n\n\t  return false;\n\t}\n\tfunction isContextConsumer(object) {\n\t  return typeOf(object) === REACT_CONTEXT_TYPE;\n\t}\n\tfunction isContextProvider(object) {\n\t  return typeOf(object) === REACT_PROVIDER_TYPE;\n\t}\n\tfunction isElement(object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t}\n\tfunction isForwardRef(object) {\n\t  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n\t}\n\tfunction isFragment(object) {\n\t  return typeOf(object) === REACT_FRAGMENT_TYPE;\n\t}\n\tfunction isLazy(object) {\n\t  return typeOf(object) === REACT_LAZY_TYPE;\n\t}\n\tfunction isMemo(object) {\n\t  return typeOf(object) === REACT_MEMO_TYPE;\n\t}\n\tfunction isPortal(object) {\n\t  return typeOf(object) === REACT_PORTAL_TYPE;\n\t}\n\tfunction isProfiler(object) {\n\t  return typeOf(object) === REACT_PROFILER_TYPE;\n\t}\n\tfunction isStrictMode(object) {\n\t  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n\t}\n\tfunction isSuspense(object) {\n\t  return typeOf(object) === REACT_SUSPENSE_TYPE;\n\t}\n\tfunction isSuspenseList(object) {\n\t  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n\t}\n\n\treactIs_development.ContextConsumer = ContextConsumer;\n\treactIs_development.ContextProvider = ContextProvider;\n\treactIs_development.Element = Element;\n\treactIs_development.ForwardRef = ForwardRef;\n\treactIs_development.Fragment = Fragment;\n\treactIs_development.Lazy = Lazy;\n\treactIs_development.Memo = Memo;\n\treactIs_development.Portal = Portal;\n\treactIs_development.Profiler = Profiler;\n\treactIs_development.StrictMode = StrictMode;\n\treactIs_development.Suspense = Suspense;\n\treactIs_development.SuspenseList = SuspenseList;\n\treactIs_development.isAsyncMode = isAsyncMode;\n\treactIs_development.isConcurrentMode = isConcurrentMode;\n\treactIs_development.isContextConsumer = isContextConsumer;\n\treactIs_development.isContextProvider = isContextProvider;\n\treactIs_development.isElement = isElement;\n\treactIs_development.isForwardRef = isForwardRef;\n\treactIs_development.isFragment = isFragment;\n\treactIs_development.isLazy = isLazy;\n\treactIs_development.isMemo = isMemo;\n\treactIs_development.isPortal = isPortal;\n\treactIs_development.isProfiler = isProfiler;\n\treactIs_development.isStrictMode = isStrictMode;\n\treactIs_development.isSuspense = isSuspense;\n\treactIs_development.isSuspenseList = isSuspenseList;\n\treactIs_development.isValidElementType = isValidElementType;\n\treactIs_development.typeOf = typeOf;\n\t  })();\n\t}\n\treturn reactIs_development;\n}\n\nif (false) {} else {\n  reactIs.exports = requireReactIs_development();\n}\n\nvar reactIsExports = reactIs.exports;\n\nfunction getChildren(arg, children = []) {\n  if (Array.isArray(arg)) {\n    for (const item of arg) {\n      getChildren(item, children);\n    }\n  } else if (arg != null && arg !== false && arg !== \"\") {\n    children.push(arg);\n  }\n  return children;\n}\nfunction getType(element) {\n  const type = element.type;\n  if (typeof type === \"string\") {\n    return type;\n  }\n  if (typeof type === \"function\") {\n    return type.displayName || type.name || \"Unknown\";\n  }\n  if (reactIsExports.isFragment(element)) {\n    return \"React.Fragment\";\n  }\n  if (reactIsExports.isSuspense(element)) {\n    return \"React.Suspense\";\n  }\n  if (typeof type === \"object\" && type !== null) {\n    if (reactIsExports.isContextProvider(element)) {\n      return \"Context.Provider\";\n    }\n    if (reactIsExports.isContextConsumer(element)) {\n      return \"Context.Consumer\";\n    }\n    if (reactIsExports.isForwardRef(element)) {\n      if (type.displayName) {\n        return type.displayName;\n      }\n      const functionName = type.render.displayName || type.render.name || \"\";\n      return functionName === \"\" ? \"ForwardRef\" : `ForwardRef(${functionName})`;\n    }\n    if (reactIsExports.isMemo(element)) {\n      const functionName = type.displayName || type.type.displayName || type.type.name || \"\";\n      return functionName === \"\" ? \"Memo\" : `Memo(${functionName})`;\n    }\n  }\n  return \"UNDEFINED\";\n}\nfunction getPropKeys$1(element) {\n  const { props } = element;\n  return Object.keys(props).filter((key) => key !== \"children\" && props[key] !== void 0).sort();\n}\nconst serialize$1 = (element, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? printElementAsLeaf(getType(element), config) : printElement(\n  getType(element),\n  printProps(\n    getPropKeys$1(element),\n    element.props,\n    config,\n    indentation + config.indent,\n    depth,\n    refs,\n    printer\n  ),\n  printChildren(\n    getChildren(element.props.children),\n    config,\n    indentation + config.indent,\n    depth,\n    refs,\n    printer\n  ),\n  config,\n  indentation\n);\nconst test$1 = (val) => val != null && reactIsExports.isElement(val);\nconst plugin$1 = { serialize: serialize$1, test: test$1 };\n\nconst testSymbol = typeof Symbol === \"function\" && Symbol.for ? Symbol.for(\"react.test.json\") : 245830487;\nfunction getPropKeys(object) {\n  const { props } = object;\n  return props ? Object.keys(props).filter((key) => props[key] !== void 0).sort() : [];\n}\nconst serialize = (object, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? printElementAsLeaf(object.type, config) : printElement(\n  object.type,\n  object.props ? printProps(\n    getPropKeys(object),\n    object.props,\n    config,\n    indentation + config.indent,\n    depth,\n    refs,\n    printer\n  ) : \"\",\n  object.children ? printChildren(\n    object.children,\n    config,\n    indentation + config.indent,\n    depth,\n    refs,\n    printer\n  ) : \"\",\n  config,\n  indentation\n);\nconst test = (val) => val && val.$$typeof === testSymbol;\nconst plugin = { serialize, test };\n\nconst toString = Object.prototype.toString;\nconst toISOString = Date.prototype.toISOString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nfunction getConstructorName(val) {\n  return typeof val.constructor === \"function\" && val.constructor.name || \"Object\";\n}\nfunction isWindow(val) {\n  return typeof window !== \"undefined\" && val === window;\n}\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nconst NEWLINE_REGEXP = /\\n/g;\nclass PrettyFormatPluginError extends Error {\n  constructor(message, stack) {\n    super(message);\n    this.stack = stack;\n    this.name = this.constructor.name;\n  }\n}\nfunction isToStringedArrayType(toStringed) {\n  return toStringed === \"[object Array]\" || toStringed === \"[object ArrayBuffer]\" || toStringed === \"[object DataView]\" || toStringed === \"[object Float32Array]\" || toStringed === \"[object Float64Array]\" || toStringed === \"[object Int8Array]\" || toStringed === \"[object Int16Array]\" || toStringed === \"[object Int32Array]\" || toStringed === \"[object Uint8Array]\" || toStringed === \"[object Uint8ClampedArray]\" || toStringed === \"[object Uint16Array]\" || toStringed === \"[object Uint32Array]\";\n}\nfunction printNumber(val) {\n  return Object.is(val, -0) ? \"-0\" : String(val);\n}\nfunction printBigInt(val) {\n  return String(`${val}n`);\n}\nfunction printFunction(val, printFunctionName) {\n  if (!printFunctionName) {\n    return \"[Function]\";\n  }\n  return `[Function ${val.name || \"anonymous\"}]`;\n}\nfunction printSymbol(val) {\n  return String(val).replace(SYMBOL_REGEXP, \"Symbol($1)\");\n}\nfunction printError(val) {\n  return `[${errorToString.call(val)}]`;\n}\nfunction printBasicValue(val, printFunctionName, escapeRegex, escapeString) {\n  if (val === true || val === false) {\n    return `${val}`;\n  }\n  if (val === void 0) {\n    return \"undefined\";\n  }\n  if (val === null) {\n    return \"null\";\n  }\n  const typeOf = typeof val;\n  if (typeOf === \"number\") {\n    return printNumber(val);\n  }\n  if (typeOf === \"bigint\") {\n    return printBigInt(val);\n  }\n  if (typeOf === \"string\") {\n    if (escapeString) {\n      return `\"${val.replaceAll(/\"|\\\\/g, \"\\\\$&\")}\"`;\n    }\n    return `\"${val}\"`;\n  }\n  if (typeOf === \"function\") {\n    return printFunction(val, printFunctionName);\n  }\n  if (typeOf === \"symbol\") {\n    return printSymbol(val);\n  }\n  const toStringed = toString.call(val);\n  if (toStringed === \"[object WeakMap]\") {\n    return \"WeakMap {}\";\n  }\n  if (toStringed === \"[object WeakSet]\") {\n    return \"WeakSet {}\";\n  }\n  if (toStringed === \"[object Function]\" || toStringed === \"[object GeneratorFunction]\") {\n    return printFunction(val, printFunctionName);\n  }\n  if (toStringed === \"[object Symbol]\") {\n    return printSymbol(val);\n  }\n  if (toStringed === \"[object Date]\") {\n    return Number.isNaN(+val) ? \"Date { NaN }\" : toISOString.call(val);\n  }\n  if (toStringed === \"[object Error]\") {\n    return printError(val);\n  }\n  if (toStringed === \"[object RegExp]\") {\n    if (escapeRegex) {\n      return regExpToString.call(val).replaceAll(/[$()*+.?[\\\\\\]^{|}]/g, \"\\\\$&\");\n    }\n    return regExpToString.call(val);\n  }\n  if (val instanceof Error) {\n    return printError(val);\n  }\n  return null;\n}\nfunction printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON) {\n  if (refs.includes(val)) {\n    return \"[Circular]\";\n  }\n  refs = [...refs];\n  refs.push(val);\n  const hitMaxDepth = ++depth > config.maxDepth;\n  const min = config.min;\n  if (config.callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === \"function\" && !hasCalledToJSON) {\n    return printer(val.toJSON(), config, indentation, depth, refs, true);\n  }\n  const toStringed = toString.call(val);\n  if (toStringed === \"[object Arguments]\") {\n    return hitMaxDepth ? \"[Arguments]\" : `${min ? \"\" : \"Arguments \"}[${printListItems(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer\n    )}]`;\n  }\n  if (isToStringedArrayType(toStringed)) {\n    return hitMaxDepth ? `[${val.constructor.name}]` : `${min ? \"\" : !config.printBasicPrototype && val.constructor.name === \"Array\" ? \"\" : `${val.constructor.name} `}[${printListItems(val, config, indentation, depth, refs, printer)}]`;\n  }\n  if (toStringed === \"[object Map]\") {\n    return hitMaxDepth ? \"[Map]\" : `Map {${printIteratorEntries(\n      val.entries(),\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      \" => \"\n    )}}`;\n  }\n  if (toStringed === \"[object Set]\") {\n    return hitMaxDepth ? \"[Set]\" : `Set {${printIteratorValues(\n      val.values(),\n      config,\n      indentation,\n      depth,\n      refs,\n      printer\n    )}}`;\n  }\n  return hitMaxDepth || isWindow(val) ? `[${getConstructorName(val)}]` : `${min ? \"\" : !config.printBasicPrototype && getConstructorName(val) === \"Object\" ? \"\" : `${getConstructorName(val)} `}{${printObjectProperties(\n    val,\n    config,\n    indentation,\n    depth,\n    refs,\n    printer\n  )}}`;\n}\nfunction isNewPlugin(plugin) {\n  return plugin.serialize != null;\n}\nfunction printPlugin(plugin, val, config, indentation, depth, refs) {\n  let printed;\n  try {\n    printed = isNewPlugin(plugin) ? plugin.serialize(val, config, indentation, depth, refs, printer) : plugin.print(\n      val,\n      (valChild) => printer(valChild, config, indentation, depth, refs),\n      (str) => {\n        const indentationNext = indentation + config.indent;\n        return indentationNext + str.replaceAll(NEWLINE_REGEXP, `\n${indentationNext}`);\n      },\n      {\n        edgeSpacing: config.spacingOuter,\n        min: config.min,\n        spacing: config.spacingInner\n      },\n      config.colors\n    );\n  } catch (error) {\n    throw new PrettyFormatPluginError(error.message, error.stack);\n  }\n  if (typeof printed !== \"string\") {\n    throw new TypeError(\n      `pretty-format: Plugin must return type \"string\" but instead returned \"${typeof printed}\".`\n    );\n  }\n  return printed;\n}\nfunction findPlugin(plugins2, val) {\n  for (const plugin of plugins2) {\n    try {\n      if (plugin.test(val)) {\n        return plugin;\n      }\n    } catch (error) {\n      throw new PrettyFormatPluginError(error.message, error.stack);\n    }\n  }\n  return null;\n}\nfunction printer(val, config, indentation, depth, refs, hasCalledToJSON) {\n  const plugin = findPlugin(config.plugins, val);\n  if (plugin !== null) {\n    return printPlugin(plugin, val, config, indentation, depth, refs);\n  }\n  const basicResult = printBasicValue(\n    val,\n    config.printFunctionName,\n    config.escapeRegex,\n    config.escapeString\n  );\n  if (basicResult !== null) {\n    return basicResult;\n  }\n  return printComplexValue(\n    val,\n    config,\n    indentation,\n    depth,\n    refs,\n    hasCalledToJSON\n  );\n}\nconst DEFAULT_THEME = {\n  comment: \"gray\",\n  content: \"reset\",\n  prop: \"yellow\",\n  tag: \"cyan\",\n  value: \"green\"\n};\nconst DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME);\nconst DEFAULT_OPTIONS = {\n  callToJSON: true,\n  compareKeys: void 0,\n  escapeRegex: false,\n  escapeString: true,\n  highlight: false,\n  indent: 2,\n  maxDepth: Number.POSITIVE_INFINITY,\n  maxWidth: Number.POSITIVE_INFINITY,\n  min: false,\n  plugins: [],\n  printBasicPrototype: true,\n  printFunctionName: true,\n  theme: DEFAULT_THEME\n};\nfunction validateOptions(options) {\n  for (const key of Object.keys(options)) {\n    if (!Object.prototype.hasOwnProperty.call(DEFAULT_OPTIONS, key)) {\n      throw new Error(`pretty-format: Unknown option \"${key}\".`);\n    }\n  }\n  if (options.min && options.indent !== void 0 && options.indent !== 0) {\n    throw new Error(\n      'pretty-format: Options \"min\" and \"indent\" cannot be used together.'\n    );\n  }\n}\nfunction getColorsHighlight() {\n  return DEFAULT_THEME_KEYS.reduce((colors, key) => {\n    const value = DEFAULT_THEME[key];\n    const color = value && tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"][value];\n    if (color && typeof color.close === \"string\" && typeof color.open === \"string\") {\n      colors[key] = color;\n    } else {\n      throw new Error(\n        `pretty-format: Option \"theme\" has a key \"${key}\" whose value \"${value}\" is undefined in ansi-styles.`\n      );\n    }\n    return colors;\n  }, /* @__PURE__ */ Object.create(null));\n}\nfunction getColorsEmpty() {\n  return DEFAULT_THEME_KEYS.reduce((colors, key) => {\n    colors[key] = { close: \"\", open: \"\" };\n    return colors;\n  }, /* @__PURE__ */ Object.create(null));\n}\nfunction getPrintFunctionName(options) {\n  return (options == null ? void 0 : options.printFunctionName) ?? DEFAULT_OPTIONS.printFunctionName;\n}\nfunction getEscapeRegex(options) {\n  return (options == null ? void 0 : options.escapeRegex) ?? DEFAULT_OPTIONS.escapeRegex;\n}\nfunction getEscapeString(options) {\n  return (options == null ? void 0 : options.escapeString) ?? DEFAULT_OPTIONS.escapeString;\n}\nfunction getConfig(options) {\n  return {\n    callToJSON: (options == null ? void 0 : options.callToJSON) ?? DEFAULT_OPTIONS.callToJSON,\n    colors: (options == null ? void 0 : options.highlight) ? getColorsHighlight() : getColorsEmpty(),\n    compareKeys: typeof (options == null ? void 0 : options.compareKeys) === \"function\" || (options == null ? void 0 : options.compareKeys) === null ? options.compareKeys : DEFAULT_OPTIONS.compareKeys,\n    escapeRegex: getEscapeRegex(options),\n    escapeString: getEscapeString(options),\n    indent: (options == null ? void 0 : options.min) ? \"\" : createIndent((options == null ? void 0 : options.indent) ?? DEFAULT_OPTIONS.indent),\n    maxDepth: (options == null ? void 0 : options.maxDepth) ?? DEFAULT_OPTIONS.maxDepth,\n    maxWidth: (options == null ? void 0 : options.maxWidth) ?? DEFAULT_OPTIONS.maxWidth,\n    min: (options == null ? void 0 : options.min) ?? DEFAULT_OPTIONS.min,\n    plugins: (options == null ? void 0 : options.plugins) ?? DEFAULT_OPTIONS.plugins,\n    printBasicPrototype: (options == null ? void 0 : options.printBasicPrototype) ?? true,\n    printFunctionName: getPrintFunctionName(options),\n    spacingInner: (options == null ? void 0 : options.min) ? \" \" : \"\\n\",\n    spacingOuter: (options == null ? void 0 : options.min) ? \"\" : \"\\n\"\n  };\n}\nfunction createIndent(indent) {\n  return Array.from({ length: indent + 1 }).join(\" \");\n}\nfunction format(val, options) {\n  if (options) {\n    validateOptions(options);\n    if (options.plugins) {\n      const plugin = findPlugin(options.plugins, val);\n      if (plugin !== null) {\n        return printPlugin(plugin, val, getConfig(options), \"\", 0, []);\n      }\n    }\n  }\n  const basicResult = printBasicValue(\n    val,\n    getPrintFunctionName(options),\n    getEscapeRegex(options),\n    getEscapeString(options)\n  );\n  if (basicResult !== null) {\n    return basicResult;\n  }\n  return printComplexValue(val, getConfig(options), \"\", 0, []);\n}\nconst plugins = {\n  AsymmetricMatcher: plugin$5,\n  DOMCollection: plugin$4,\n  DOMElement: plugin$3,\n  Immutable: plugin$2,\n  ReactElement: plugin$1,\n  ReactTestComponent: plugin\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/pretty-format/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/runner/dist/chunk-tasks.js":
/*!*********************************************************!*\
  !*** ./node_modules/@vitest/runner/dist/chunk-tasks.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ createFileTask; },\n/* harmony export */   b: function() { return /* binding */ isAtomTest; },\n/* harmony export */   c: function() { return /* binding */ calculateSuiteHash; },\n/* harmony export */   d: function() { return /* binding */ getTests; },\n/* harmony export */   e: function() { return /* binding */ getTasks; },\n/* harmony export */   f: function() { return /* binding */ getSuites; },\n/* harmony export */   g: function() { return /* binding */ generateHash; },\n/* harmony export */   h: function() { return /* binding */ hasTests; },\n/* harmony export */   i: function() { return /* binding */ interpretTaskModes; },\n/* harmony export */   j: function() { return /* binding */ hasFailed; },\n/* harmony export */   k: function() { return /* binding */ getNames; },\n/* harmony export */   l: function() { return /* binding */ createChainable; },\n/* harmony export */   m: function() { return /* binding */ limitConcurrency; },\n/* harmony export */   p: function() { return /* binding */ partitionSuiteChildren; },\n/* harmony export */   s: function() { return /* binding */ someTasksAreOnly; }\n/* harmony export */ });\n/* harmony import */ var _vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/utils/error */ \"./node_modules/@vitest/utils/dist/error.js\");\n/* harmony import */ var pathe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pathe */ \"./node_modules/pathe/dist/index.mjs\");\n/* harmony import */ var _vitest_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vitest/utils */ \"./node_modules/@vitest/utils/dist/index.js\");\n\n\n\n\nfunction partitionSuiteChildren(suite) {\n  let tasksGroup = [];\n  const tasksGroups = [];\n  for (const c of suite.tasks) {\n    if (tasksGroup.length === 0 || c.concurrent === tasksGroup[0].concurrent) {\n      tasksGroup.push(c);\n    } else {\n      tasksGroups.push(tasksGroup);\n      tasksGroup = [c];\n    }\n  }\n  if (tasksGroup.length > 0) {\n    tasksGroups.push(tasksGroup);\n  }\n  return tasksGroups;\n}\n\nfunction limitConcurrency(concurrency = Infinity) {\n  let count = 0;\n  let head;\n  let tail;\n  const finish = () => {\n    count--;\n    if (head) {\n      head[0]();\n      head = head[1];\n      tail = head && tail;\n    }\n  };\n  return (func, ...args) => {\n    return new Promise((resolve) => {\n      if (count++ < concurrency) {\n        resolve();\n      } else if (tail) {\n        tail = tail[1] = [resolve];\n      } else {\n        head = tail = [resolve];\n      }\n    }).then(() => {\n      return func(...args);\n    }).finally(finish);\n  };\n}\n\nfunction interpretTaskModes(suite, namePattern, onlyMode, parentIsOnly, allowOnly) {\n  const suiteIsOnly = parentIsOnly || suite.mode === \"only\";\n  suite.tasks.forEach((t) => {\n    const includeTask = suiteIsOnly || t.mode === \"only\";\n    if (onlyMode) {\n      if (t.type === \"suite\" && (includeTask || someTasksAreOnly(t))) {\n        if (t.mode === \"only\") {\n          checkAllowOnly(t, allowOnly);\n          t.mode = \"run\";\n        }\n      } else if (t.mode === \"run\" && !includeTask) {\n        t.mode = \"skip\";\n      } else if (t.mode === \"only\") {\n        checkAllowOnly(t, allowOnly);\n        t.mode = \"run\";\n      }\n    }\n    if (t.type === \"test\") {\n      if (namePattern && !getTaskFullName(t).match(namePattern)) {\n        t.mode = \"skip\";\n      }\n    } else if (t.type === \"suite\") {\n      if (t.mode === \"skip\") {\n        skipAllTasks(t);\n      } else {\n        interpretTaskModes(t, namePattern, onlyMode, includeTask, allowOnly);\n      }\n    }\n  });\n  if (suite.mode === \"run\") {\n    if (suite.tasks.length && suite.tasks.every((i) => i.mode !== \"run\")) {\n      suite.mode = \"skip\";\n    }\n  }\n}\nfunction getTaskFullName(task) {\n  return `${task.suite ? `${getTaskFullName(task.suite)} ` : \"\"}${task.name}`;\n}\nfunction someTasksAreOnly(suite) {\n  return suite.tasks.some(\n    (t) => t.mode === \"only\" || t.type === \"suite\" && someTasksAreOnly(t)\n  );\n}\nfunction skipAllTasks(suite) {\n  suite.tasks.forEach((t) => {\n    if (t.mode === \"run\") {\n      t.mode = \"skip\";\n      if (t.type === \"suite\") {\n        skipAllTasks(t);\n      }\n    }\n  });\n}\nfunction checkAllowOnly(task, allowOnly) {\n  if (allowOnly) {\n    return;\n  }\n  const error = (0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError)(\n    new Error(\n      \"[Vitest] Unexpected .only modifier. Remove it or pass --allowOnly argument to bypass this error\"\n    )\n  );\n  task.result = {\n    state: \"fail\",\n    errors: [error]\n  };\n}\nfunction generateHash(str) {\n  let hash = 0;\n  if (str.length === 0) {\n    return `${hash}`;\n  }\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return `${hash}`;\n}\nfunction calculateSuiteHash(parent) {\n  parent.tasks.forEach((t, idx) => {\n    t.id = `${parent.id}_${idx}`;\n    if (t.type === \"suite\") {\n      calculateSuiteHash(t);\n    }\n  });\n}\nfunction createFileTask(filepath, root, projectName, pool) {\n  const path = (0,pathe__WEBPACK_IMPORTED_MODULE_1__.relative)(root, filepath);\n  const file = {\n    id: generateHash(`${path}${projectName || \"\"}`),\n    name: path,\n    type: \"suite\",\n    mode: \"run\",\n    filepath,\n    tasks: [],\n    meta: /* @__PURE__ */ Object.create(null),\n    projectName,\n    file: void 0,\n    pool\n  };\n  file.file = file;\n  return file;\n}\n\nfunction createChainable(keys, fn) {\n  function create(context) {\n    const chain2 = function(...args) {\n      return fn.apply(context, args);\n    };\n    Object.assign(chain2, fn);\n    chain2.withContext = () => chain2.bind(context);\n    chain2.setContext = (key, value) => {\n      context[key] = value;\n    };\n    chain2.mergeContext = (ctx) => {\n      Object.assign(context, ctx);\n    };\n    for (const key of keys) {\n      Object.defineProperty(chain2, key, {\n        get() {\n          return create({ ...context, [key]: true });\n        }\n      });\n    }\n    return chain2;\n  }\n  const chain = create({});\n  chain.fn = fn;\n  return chain;\n}\n\nfunction isAtomTest(s) {\n  return s.type === \"test\" || s.type === \"custom\";\n}\nfunction getTests(suite) {\n  const tests = [];\n  const arraySuites = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(suite);\n  for (const s of arraySuites) {\n    if (isAtomTest(s)) {\n      tests.push(s);\n    } else {\n      for (const task of s.tasks) {\n        if (isAtomTest(task)) {\n          tests.push(task);\n        } else {\n          const taskTests = getTests(task);\n          for (const test of taskTests) {\n            tests.push(test);\n          }\n        }\n      }\n    }\n  }\n  return tests;\n}\nfunction getTasks(tasks = []) {\n  return (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(tasks).flatMap(\n    (s) => isAtomTest(s) ? [s] : [s, ...getTasks(s.tasks)]\n  );\n}\nfunction getSuites(suite) {\n  return (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(suite).flatMap(\n    (s) => s.type === \"suite\" ? [s, ...getSuites(s.tasks)] : []\n  );\n}\nfunction hasTests(suite) {\n  return (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(suite).some(\n    (s) => s.tasks.some((c) => isAtomTest(c) || hasTests(c))\n  );\n}\nfunction hasFailed(suite) {\n  return (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(suite).some(\n    (s) => {\n      var _a;\n      return ((_a = s.result) == null ? void 0 : _a.state) === \"fail\" || s.type === \"suite\" && hasFailed(s.tasks);\n    }\n  );\n}\nfunction getNames(task) {\n  const names = [task.name];\n  let current = task;\n  while (current == null ? void 0 : current.suite) {\n    current = current.suite;\n    if (current == null ? void 0 : current.name) {\n      names.unshift(current.name);\n    }\n  }\n  if (current !== task.file) {\n    names.unshift(task.file.name);\n  }\n  return names;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/runner/dist/chunk-tasks.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/runner/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@vitest/runner/dist/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   afterAll: function() { return /* binding */ afterAll; },\n/* harmony export */   afterEach: function() { return /* binding */ afterEach; },\n/* harmony export */   beforeAll: function() { return /* binding */ beforeAll; },\n/* harmony export */   beforeEach: function() { return /* binding */ beforeEach; },\n/* harmony export */   collectTests: function() { return /* binding */ publicCollect; },\n/* harmony export */   createTaskCollector: function() { return /* binding */ createTaskCollector; },\n/* harmony export */   describe: function() { return /* binding */ describe; },\n/* harmony export */   getCurrentSuite: function() { return /* binding */ getCurrentSuite; },\n/* harmony export */   getCurrentTest: function() { return /* binding */ getCurrentTest; },\n/* harmony export */   getFn: function() { return /* binding */ getFn; },\n/* harmony export */   getHooks: function() { return /* binding */ getHooks; },\n/* harmony export */   it: function() { return /* binding */ it; },\n/* harmony export */   onTestFailed: function() { return /* binding */ onTestFailed; },\n/* harmony export */   onTestFinished: function() { return /* binding */ onTestFinished; },\n/* harmony export */   processError: function() { return /* reexport safe */ _vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError; },\n/* harmony export */   setFn: function() { return /* binding */ setFn; },\n/* harmony export */   setHooks: function() { return /* binding */ setHooks; },\n/* harmony export */   startTests: function() { return /* binding */ startTests; },\n/* harmony export */   suite: function() { return /* binding */ suite; },\n/* harmony export */   test: function() { return /* binding */ test; },\n/* harmony export */   updateTask: function() { return /* binding */ updateTask; }\n/* harmony export */ });\n/* harmony import */ var _vitest_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vitest/utils */ \"./node_modules/@vitest/utils/dist/index.js\");\n/* harmony import */ var _vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/utils/error */ \"./node_modules/@vitest/utils/dist/error.js\");\n/* harmony import */ var _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-tasks.js */ \"./node_modules/@vitest/runner/dist/chunk-tasks.js\");\n/* harmony import */ var _vitest_utils_source_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vitest/utils/source-map */ \"./node_modules/@vitest/utils/dist/source-map.js\");\n\n\n\n\n\n\n\nconst fnMap = /* @__PURE__ */ new WeakMap();\nconst fixtureMap = /* @__PURE__ */ new WeakMap();\nconst hooksMap = /* @__PURE__ */ new WeakMap();\nfunction setFn(key, fn) {\n  fnMap.set(key, fn);\n}\nfunction getFn(key) {\n  return fnMap.get(key);\n}\nfunction setFixture(key, fixture) {\n  fixtureMap.set(key, fixture);\n}\nfunction getFixture(key) {\n  return fixtureMap.get(key);\n}\nfunction setHooks(key, hooks) {\n  hooksMap.set(key, hooks);\n}\nfunction getHooks(key) {\n  return hooksMap.get(key);\n}\n\nclass PendingError extends Error {\n  constructor(message, task) {\n    super(message);\n    this.message = message;\n    this.taskId = task.id;\n  }\n  code = \"VITEST_PENDING\";\n  taskId;\n}\n\nconst collectorContext = {\n  tasks: [],\n  currentSuite: null\n};\nfunction collectTask(task) {\n  var _a;\n  (_a = collectorContext.currentSuite) == null ? void 0 : _a.tasks.push(task);\n}\nasync function runWithSuite(suite, fn) {\n  const prev = collectorContext.currentSuite;\n  collectorContext.currentSuite = suite;\n  await fn();\n  collectorContext.currentSuite = prev;\n}\nfunction withTimeout(fn, timeout, isHook = false) {\n  if (timeout <= 0 || timeout === Number.POSITIVE_INFINITY) {\n    return fn;\n  }\n  const { setTimeout, clearTimeout } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.getSafeTimers)();\n  return (...args) => {\n    return Promise.race([\n      fn(...args),\n      new Promise((resolve, reject) => {\n        var _a;\n        const timer = setTimeout(() => {\n          clearTimeout(timer);\n          reject(new Error(makeTimeoutMsg(isHook, timeout)));\n        }, timeout);\n        (_a = timer.unref) == null ? void 0 : _a.call(timer);\n      })\n    ]);\n  };\n}\nfunction createTestContext(test, runner) {\n  var _a;\n  const context = function() {\n    throw new Error(\"done() callback is deprecated, use promise instead\");\n  };\n  context.task = test;\n  context.skip = () => {\n    test.pending = true;\n    throw new PendingError(\"test is skipped; abort execution\", test);\n  };\n  context.onTestFailed = (fn) => {\n    test.onFailed || (test.onFailed = []);\n    test.onFailed.push(fn);\n  };\n  context.onTestFinished = (fn) => {\n    test.onFinished || (test.onFinished = []);\n    test.onFinished.push(fn);\n  };\n  return ((_a = runner.extendTaskContext) == null ? void 0 : _a.call(runner, context)) || context;\n}\nfunction makeTimeoutMsg(isHook, timeout) {\n  return `${isHook ? \"Hook\" : \"Test\"} timed out in ${timeout}ms.\nIf this is a long-running ${isHook ? \"hook\" : \"test\"}, pass a timeout value as the last argument or configure it globally with \"${isHook ? \"hookTimeout\" : \"testTimeout\"}\".`;\n}\n\nfunction mergeContextFixtures(fixtures, context = {}) {\n  const fixtureOptionKeys = [\"auto\"];\n  const fixtureArray = Object.entries(fixtures).map(\n    ([prop, value]) => {\n      const fixtureItem = { value };\n      if (Array.isArray(value) && value.length >= 2 && (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(value[1]) && Object.keys(value[1]).some((key) => fixtureOptionKeys.includes(key))) {\n        Object.assign(fixtureItem, value[1]);\n        fixtureItem.value = value[0];\n      }\n      fixtureItem.prop = prop;\n      fixtureItem.isFn = typeof fixtureItem.value === \"function\";\n      return fixtureItem;\n    }\n  );\n  if (Array.isArray(context.fixtures)) {\n    context.fixtures = context.fixtures.concat(fixtureArray);\n  } else {\n    context.fixtures = fixtureArray;\n  }\n  fixtureArray.forEach((fixture) => {\n    if (fixture.isFn) {\n      const usedProps = getUsedProps(fixture.value);\n      if (usedProps.length) {\n        fixture.deps = context.fixtures.filter(\n          ({ prop }) => prop !== fixture.prop && usedProps.includes(prop)\n        );\n      }\n    }\n  });\n  return context;\n}\nconst fixtureValueMaps = /* @__PURE__ */ new Map();\nconst cleanupFnArrayMap = /* @__PURE__ */ new Map();\nasync function callFixtureCleanup(context) {\n  const cleanupFnArray = cleanupFnArrayMap.get(context) ?? [];\n  for (const cleanup of cleanupFnArray.reverse()) {\n    await cleanup();\n  }\n  cleanupFnArrayMap.delete(context);\n}\nfunction withFixtures(fn, testContext) {\n  return (hookContext) => {\n    const context = hookContext || testContext;\n    if (!context) {\n      return fn({});\n    }\n    const fixtures = getFixture(context);\n    if (!(fixtures == null ? void 0 : fixtures.length)) {\n      return fn(context);\n    }\n    const usedProps = getUsedProps(fn);\n    const hasAutoFixture = fixtures.some(({ auto }) => auto);\n    if (!usedProps.length && !hasAutoFixture) {\n      return fn(context);\n    }\n    if (!fixtureValueMaps.get(context)) {\n      fixtureValueMaps.set(context, /* @__PURE__ */ new Map());\n    }\n    const fixtureValueMap = fixtureValueMaps.get(context);\n    if (!cleanupFnArrayMap.has(context)) {\n      cleanupFnArrayMap.set(context, []);\n    }\n    const cleanupFnArray = cleanupFnArrayMap.get(context);\n    const usedFixtures = fixtures.filter(\n      ({ prop, auto }) => auto || usedProps.includes(prop)\n    );\n    const pendingFixtures = resolveDeps(usedFixtures);\n    if (!pendingFixtures.length) {\n      return fn(context);\n    }\n    async function resolveFixtures() {\n      for (const fixture of pendingFixtures) {\n        if (fixtureValueMap.has(fixture)) {\n          continue;\n        }\n        const resolvedValue = fixture.isFn ? await resolveFixtureFunction(fixture.value, context, cleanupFnArray) : fixture.value;\n        context[fixture.prop] = resolvedValue;\n        fixtureValueMap.set(fixture, resolvedValue);\n        cleanupFnArray.unshift(() => {\n          fixtureValueMap.delete(fixture);\n        });\n      }\n    }\n    return resolveFixtures().then(() => fn(context));\n  };\n}\nasync function resolveFixtureFunction(fixtureFn, context, cleanupFnArray) {\n  const useFnArgPromise = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.createDefer)();\n  let isUseFnArgResolved = false;\n  const fixtureReturn = fixtureFn(context, async (useFnArg) => {\n    isUseFnArgResolved = true;\n    useFnArgPromise.resolve(useFnArg);\n    const useReturnPromise = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.createDefer)();\n    cleanupFnArray.push(async () => {\n      useReturnPromise.resolve();\n      await fixtureReturn;\n    });\n    await useReturnPromise;\n  }).catch((e) => {\n    if (!isUseFnArgResolved) {\n      useFnArgPromise.reject(e);\n      return;\n    }\n    throw e;\n  });\n  return useFnArgPromise;\n}\nfunction resolveDeps(fixtures, depSet = /* @__PURE__ */ new Set(), pendingFixtures = []) {\n  fixtures.forEach((fixture) => {\n    if (pendingFixtures.includes(fixture)) {\n      return;\n    }\n    if (!fixture.isFn || !fixture.deps) {\n      pendingFixtures.push(fixture);\n      return;\n    }\n    if (depSet.has(fixture)) {\n      throw new Error(\n        `Circular fixture dependency detected: ${fixture.prop} <- ${[...depSet].reverse().map((d) => d.prop).join(\" <- \")}`\n      );\n    }\n    depSet.add(fixture);\n    resolveDeps(fixture.deps, depSet, pendingFixtures);\n    pendingFixtures.push(fixture);\n    depSet.clear();\n  });\n  return pendingFixtures;\n}\nfunction getUsedProps(fn) {\n  const match = fn.toString().match(/[^(]*\\(([^)]*)/);\n  if (!match) {\n    return [];\n  }\n  const args = splitByComma(match[1]);\n  if (!args.length) {\n    return [];\n  }\n  let first = args[0];\n  if (\"__VITEST_FIXTURE_INDEX__\" in fn) {\n    first = args[fn.__VITEST_FIXTURE_INDEX__];\n    if (!first) {\n      return [];\n    }\n  }\n  if (!(first.startsWith(\"{\") && first.endsWith(\"}\"))) {\n    throw new Error(\n      `The first argument inside a fixture must use object destructuring pattern, e.g. ({ test } => {}). Instead, received \"${first}\".`\n    );\n  }\n  const _first = first.slice(1, -1).replace(/\\s/g, \"\");\n  const props = splitByComma(_first).map((prop) => {\n    return prop.replace(/:.*|=.*/g, \"\");\n  });\n  const last = props.at(-1);\n  if (last && last.startsWith(\"...\")) {\n    throw new Error(\n      `Rest parameters are not supported in fixtures, received \"${last}\".`\n    );\n  }\n  return props;\n}\nfunction splitByComma(s) {\n  const result = [];\n  const stack = [];\n  let start = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"{\" || s[i] === \"[\") {\n      stack.push(s[i] === \"{\" ? \"}\" : \"]\");\n    } else if (s[i] === stack[stack.length - 1]) {\n      stack.pop();\n    } else if (!stack.length && s[i] === \",\") {\n      const token = s.substring(start, i).trim();\n      if (token) {\n        result.push(token);\n      }\n      start = i + 1;\n    }\n  }\n  const lastToken = s.substring(start).trim();\n  if (lastToken) {\n    result.push(lastToken);\n  }\n  return result;\n}\n\nlet _test;\nfunction setCurrentTest(test) {\n  _test = test;\n}\nfunction getCurrentTest() {\n  return _test;\n}\n\nconst suite = createSuite();\nconst test = createTest(function(name, optionsOrFn, optionsOrTest) {\n  if (getCurrentTest()) {\n    throw new Error(\n      'Calling the test function inside another test function is not allowed. Please put it inside \"describe\" or \"suite\" so it can be properly collected.'\n    );\n  }\n  getCurrentSuite().test.fn.call(\n    this,\n    formatName(name),\n    optionsOrFn,\n    optionsOrTest\n  );\n});\nconst describe = suite;\nconst it = test;\nlet runner;\nlet defaultSuite;\nlet currentTestFilepath;\nfunction getDefaultSuite() {\n  return defaultSuite;\n}\nfunction getTestFilepath() {\n  return currentTestFilepath;\n}\nfunction getRunner() {\n  return runner;\n}\nfunction createDefaultSuite(runner2) {\n  const config = runner2.config.sequence;\n  const api = config.shuffle ? suite.shuffle : suite;\n  return api(\"\", { concurrent: config.concurrent }, () => {\n  });\n}\nfunction clearCollectorContext(filepath, currentRunner) {\n  if (!defaultSuite) {\n    defaultSuite = createDefaultSuite(currentRunner);\n  }\n  runner = currentRunner;\n  currentTestFilepath = filepath;\n  collectorContext.tasks.length = 0;\n  defaultSuite.clear();\n  collectorContext.currentSuite = defaultSuite;\n}\nfunction getCurrentSuite() {\n  return collectorContext.currentSuite || defaultSuite;\n}\nfunction createSuiteHooks() {\n  return {\n    beforeAll: [],\n    afterAll: [],\n    beforeEach: [],\n    afterEach: []\n  };\n}\nfunction parseArguments(optionsOrFn, optionsOrTest) {\n  let options = {};\n  let fn = () => {\n  };\n  if (typeof optionsOrTest === \"object\") {\n    if (typeof optionsOrFn === \"object\") {\n      throw new TypeError(\n        \"Cannot use two objects as arguments. Please provide options and a function callback in that order.\"\n      );\n    }\n    options = optionsOrTest;\n  } else if (typeof optionsOrTest === \"number\") {\n    options = { timeout: optionsOrTest };\n  } else if (typeof optionsOrFn === \"object\") {\n    options = optionsOrFn;\n  }\n  if (typeof optionsOrFn === \"function\") {\n    if (typeof optionsOrTest === \"function\") {\n      throw new TypeError(\n        \"Cannot use two functions as arguments. Please use the second argument for options.\"\n      );\n    }\n    fn = optionsOrFn;\n  } else if (typeof optionsOrTest === \"function\") {\n    fn = optionsOrTest;\n  }\n  return {\n    options,\n    handler: fn\n  };\n}\nfunction createSuiteCollector(name, factory = () => {\n}, mode, shuffle, each, suiteOptions) {\n  const tasks = [];\n  const factoryQueue = [];\n  let suite2;\n  initSuite(true);\n  const task = function(name2 = \"\", options = {}) {\n    const task2 = {\n      id: \"\",\n      name: name2,\n      suite: void 0,\n      each: options.each,\n      fails: options.fails,\n      context: void 0,\n      type: \"custom\",\n      file: void 0,\n      retry: options.retry ?? runner.config.retry,\n      repeats: options.repeats,\n      mode: options.only ? \"only\" : options.skip ? \"skip\" : options.todo ? \"todo\" : \"run\",\n      meta: options.meta ?? /* @__PURE__ */ Object.create(null)\n    };\n    const handler = options.handler;\n    if (options.concurrent || !options.sequential && runner.config.sequence.concurrent) {\n      task2.concurrent = true;\n    }\n    if (shuffle) {\n      task2.shuffle = true;\n    }\n    const context = createTestContext(task2, runner);\n    Object.defineProperty(task2, \"context\", {\n      value: context,\n      enumerable: false\n    });\n    setFixture(context, options.fixtures);\n    if (handler) {\n      setFn(\n        task2,\n        withTimeout(\n          withFixtures(handler, context),\n          (options == null ? void 0 : options.timeout) ?? runner.config.testTimeout\n        )\n      );\n    }\n    if (runner.config.includeTaskLocation) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 15;\n      const error = new Error(\"stacktrace\").stack;\n      Error.stackTraceLimit = limit;\n      const stack = findTestFileStackTrace(error, task2.each ?? false);\n      if (stack) {\n        task2.location = stack;\n      }\n    }\n    tasks.push(task2);\n    return task2;\n  };\n  const test2 = createTest(function(name2, optionsOrFn, optionsOrTest) {\n    let { options, handler } = parseArguments(optionsOrFn, optionsOrTest);\n    if (typeof suiteOptions === \"object\") {\n      options = Object.assign({}, suiteOptions, options);\n    }\n    options.concurrent = this.concurrent || !this.sequential && (options == null ? void 0 : options.concurrent);\n    options.sequential = this.sequential || !this.concurrent && (options == null ? void 0 : options.sequential);\n    const test3 = task(formatName(name2), {\n      ...this,\n      ...options,\n      handler\n    });\n    test3.type = \"test\";\n  });\n  const collector = {\n    type: \"collector\",\n    name,\n    mode,\n    options: suiteOptions,\n    test: test2,\n    tasks,\n    collect,\n    task,\n    clear,\n    on: addHook\n  };\n  function addHook(name2, ...fn) {\n    getHooks(suite2)[name2].push(...fn);\n  }\n  function initSuite(includeLocation) {\n    if (typeof suiteOptions === \"number\") {\n      suiteOptions = { timeout: suiteOptions };\n    }\n    suite2 = {\n      id: \"\",\n      type: \"suite\",\n      name,\n      mode,\n      each,\n      file: void 0,\n      shuffle,\n      tasks: [],\n      meta: /* @__PURE__ */ Object.create(null),\n      concurrent: suiteOptions == null ? void 0 : suiteOptions.concurrent\n    };\n    if (runner && includeLocation && runner.config.includeTaskLocation) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 15;\n      const error = new Error(\"stacktrace\").stack;\n      Error.stackTraceLimit = limit;\n      const stack = findTestFileStackTrace(error, suite2.each ?? false);\n      if (stack) {\n        suite2.location = stack;\n      }\n    }\n    setHooks(suite2, createSuiteHooks());\n  }\n  function clear() {\n    tasks.length = 0;\n    factoryQueue.length = 0;\n    initSuite(false);\n  }\n  async function collect(file) {\n    if (!file) {\n      throw new TypeError(\"File is required to collect tasks.\");\n    }\n    factoryQueue.length = 0;\n    if (factory) {\n      await runWithSuite(collector, () => factory(test2));\n    }\n    const allChildren = [];\n    for (const i of [...factoryQueue, ...tasks]) {\n      allChildren.push(i.type === \"collector\" ? await i.collect(file) : i);\n    }\n    suite2.file = file;\n    suite2.tasks = allChildren;\n    allChildren.forEach((task2) => {\n      task2.suite = suite2;\n      task2.file = file;\n    });\n    return suite2;\n  }\n  collectTask(collector);\n  return collector;\n}\nfunction createSuite() {\n  function suiteFn(name, factoryOrOptions, optionsOrFactory = {}) {\n    const mode = this.only ? \"only\" : this.skip ? \"skip\" : this.todo ? \"todo\" : \"run\";\n    const currentSuite = getCurrentSuite();\n    let { options, handler: factory } = parseArguments(\n      factoryOrOptions,\n      optionsOrFactory\n    );\n    if (currentSuite == null ? void 0 : currentSuite.options) {\n      options = { ...currentSuite.options, ...options };\n    }\n    const isConcurrent = options.concurrent || this.concurrent && !this.sequential;\n    const isSequential = options.sequential || this.sequential && !this.concurrent;\n    options.concurrent = isConcurrent && !isSequential;\n    options.sequential = isSequential && !isConcurrent;\n    return createSuiteCollector(\n      formatName(name),\n      factory,\n      mode,\n      this.shuffle,\n      this.each,\n      options\n    );\n  }\n  suiteFn.each = function(cases, ...args) {\n    const suite2 = this.withContext();\n    this.setContext(\"each\", true);\n    if (Array.isArray(cases) && args.length) {\n      cases = formatTemplateString(cases, args);\n    }\n    return (name, optionsOrFn, fnOrOptions) => {\n      const _name = formatName(name);\n      const arrayOnlyCases = cases.every(Array.isArray);\n      const { options, handler } = parseArguments(optionsOrFn, fnOrOptions);\n      const fnFirst = typeof optionsOrFn === \"function\";\n      cases.forEach((i, idx) => {\n        const items = Array.isArray(i) ? i : [i];\n        if (fnFirst) {\n          arrayOnlyCases ? suite2(\n            formatTitle(_name, items, idx),\n            () => handler(...items),\n            options\n          ) : suite2(formatTitle(_name, items, idx), () => handler(i), options);\n        } else {\n          arrayOnlyCases ? suite2(formatTitle(_name, items, idx), options, () => handler(...items)) : suite2(formatTitle(_name, items, idx), options, () => handler(i));\n        }\n      });\n      this.setContext(\"each\", void 0);\n    };\n  };\n  suiteFn.skipIf = (condition) => condition ? suite.skip : suite;\n  suiteFn.runIf = (condition) => condition ? suite : suite.skip;\n  return (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.l)(\n    [\"concurrent\", \"sequential\", \"shuffle\", \"skip\", \"only\", \"todo\"],\n    suiteFn\n  );\n}\nfunction createTaskCollector(fn, context) {\n  const taskFn = fn;\n  taskFn.each = function(cases, ...args) {\n    const test2 = this.withContext();\n    this.setContext(\"each\", true);\n    if (Array.isArray(cases) && args.length) {\n      cases = formatTemplateString(cases, args);\n    }\n    return (name, optionsOrFn, fnOrOptions) => {\n      const _name = formatName(name);\n      const arrayOnlyCases = cases.every(Array.isArray);\n      const { options, handler } = parseArguments(optionsOrFn, fnOrOptions);\n      const fnFirst = typeof optionsOrFn === \"function\";\n      cases.forEach((i, idx) => {\n        const items = Array.isArray(i) ? i : [i];\n        if (fnFirst) {\n          arrayOnlyCases ? test2(\n            formatTitle(_name, items, idx),\n            () => handler(...items),\n            options\n          ) : test2(formatTitle(_name, items, idx), () => handler(i), options);\n        } else {\n          arrayOnlyCases ? test2(formatTitle(_name, items, idx), options, () => handler(...items)) : test2(formatTitle(_name, items, idx), options, () => handler(i));\n        }\n      });\n      this.setContext(\"each\", void 0);\n    };\n  };\n  taskFn.for = function(cases, ...args) {\n    const test2 = this.withContext();\n    if (Array.isArray(cases) && args.length) {\n      cases = formatTemplateString(cases, args);\n    }\n    return (name, optionsOrFn, fnOrOptions) => {\n      const _name = formatName(name);\n      const { options, handler } = parseArguments(optionsOrFn, fnOrOptions);\n      cases.forEach((item, idx) => {\n        const handlerWrapper = (ctx) => handler(item, ctx);\n        handlerWrapper.__VITEST_FIXTURE_INDEX__ = 1;\n        handlerWrapper.toString = () => handler.toString();\n        test2(formatTitle(_name, (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(item), idx), options, handlerWrapper);\n      });\n    };\n  };\n  taskFn.skipIf = function(condition) {\n    return condition ? this.skip : this;\n  };\n  taskFn.runIf = function(condition) {\n    return condition ? this : this.skip;\n  };\n  taskFn.extend = function(fixtures) {\n    const _context = mergeContextFixtures(fixtures, context);\n    return createTest(function fn2(name, optionsOrFn, optionsOrTest) {\n      getCurrentSuite().test.fn.call(\n        this,\n        formatName(name),\n        optionsOrFn,\n        optionsOrTest\n      );\n    }, _context);\n  };\n  const _test = (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.l)(\n    [\"concurrent\", \"sequential\", \"skip\", \"only\", \"todo\", \"fails\"],\n    taskFn\n  );\n  if (context) {\n    _test.mergeContext(context);\n  }\n  return _test;\n}\nfunction createTest(fn, context) {\n  return createTaskCollector(fn, context);\n}\nfunction formatName(name) {\n  return typeof name === \"string\" ? name : name instanceof Function ? name.name || \"<anonymous>\" : String(name);\n}\nfunction formatTitle(template, items, idx) {\n  if (template.includes(\"%#\")) {\n    template = template.replace(/%%/g, \"__vitest_escaped_%__\").replace(/%#/g, `${idx}`).replace(/__vitest_escaped_%__/g, \"%%\");\n  }\n  const count = template.split(\"%\").length - 1;\n  if (template.includes(\"%f\")) {\n    const placeholders = template.match(/%f/g) || [];\n    placeholders.forEach((_, i) => {\n      if ((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isNegativeNaN)(items[i]) || Object.is(items[i], -0)) {\n        let occurrence = 0;\n        template = template.replace(/%f/g, (match) => {\n          occurrence++;\n          return occurrence === i + 1 ? \"-%f\" : match;\n        });\n      }\n    });\n  }\n  let formatted = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.format)(template, ...items.slice(0, count));\n  if ((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.isObject)(items[0])) {\n    formatted = formatted.replace(\n      /\\$([$\\w.]+)/g,\n      // https://github.com/chaijs/chai/pull/1490\n      (_, key) => {\n        var _a, _b;\n        return (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.objDisplay)((0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.objectAttr)(items[0], key), {\n          truncate: (_b = (_a = runner == null ? void 0 : runner.config) == null ? void 0 : _a.chaiConfig) == null ? void 0 : _b.truncateThreshold\n        });\n      }\n    );\n  }\n  return formatted;\n}\nfunction formatTemplateString(cases, args) {\n  const header = cases.join(\"\").trim().replace(/ /g, \"\").split(\"\\n\").map((i) => i.split(\"|\"))[0];\n  const res = [];\n  for (let i = 0; i < Math.floor(args.length / header.length); i++) {\n    const oneCase = {};\n    for (let j = 0; j < header.length; j++) {\n      oneCase[header[j]] = args[i * header.length + j];\n    }\n    res.push(oneCase);\n  }\n  return res;\n}\nfunction findTestFileStackTrace(error, each) {\n  const lines = error.split(\"\\n\").slice(1);\n  for (const line of lines) {\n    const stack = (0,_vitest_utils_source_map__WEBPACK_IMPORTED_MODULE_3__.parseSingleStack)(line);\n    if (stack && stack.file === getTestFilepath()) {\n      return {\n        line: stack.line,\n        /**\n         * test.each([1, 2])('name')\n         *                 ^ leads here, but should\n         *                  ^ lead here\n         * in source maps it's the same boundary, so it just points to the start of it\n         */\n        column: each ? stack.column + 1 : stack.column\n      };\n    }\n  }\n}\n\nasync function runSetupFiles(config, runner) {\n  const files = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(config.setupFiles);\n  if (config.sequence.setupFiles === \"parallel\") {\n    await Promise.all(\n      files.map(async (fsPath) => {\n        await runner.importFile(fsPath, \"setup\");\n      })\n    );\n  } else {\n    for (const fsPath of files) {\n      await runner.importFile(fsPath, \"setup\");\n    }\n  }\n}\n\nconst now$1 = Date.now;\nasync function collectTests(paths, runner) {\n  var _a;\n  const files = [];\n  const config = runner.config;\n  for (const filepath of paths) {\n    const file = (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.a)(filepath, config.root, config.name, runner.pool);\n    (_a = runner.onCollectStart) == null ? void 0 : _a.call(runner, file);\n    clearCollectorContext(filepath, runner);\n    try {\n      const setupStart = now$1();\n      await runSetupFiles(config, runner);\n      const collectStart = now$1();\n      file.setupDuration = collectStart - setupStart;\n      await runner.importFile(filepath, \"collect\");\n      const defaultTasks = await getDefaultSuite().collect(file);\n      const fileHooks = createSuiteHooks();\n      mergeHooks(fileHooks, getHooks(defaultTasks));\n      for (const c of [...defaultTasks.tasks, ...collectorContext.tasks]) {\n        if (c.type === \"test\" || c.type === \"custom\" || c.type === \"suite\") {\n          file.tasks.push(c);\n        } else if (c.type === \"collector\") {\n          const suite = await c.collect(file);\n          if (suite.name || suite.tasks.length) {\n            mergeHooks(fileHooks, getHooks(suite));\n            file.tasks.push(suite);\n          }\n        } else {\n          c;\n        }\n      }\n      setHooks(file, fileHooks);\n      file.collectDuration = now$1() - collectStart;\n    } catch (e) {\n      const error = (0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError)(e);\n      file.result = {\n        state: \"fail\",\n        errors: [error]\n      };\n    }\n    (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.c)(file);\n    const hasOnlyTasks = (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.s)(file);\n    (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.i)(\n      file,\n      config.testNamePattern,\n      hasOnlyTasks,\n      false,\n      config.allowOnly\n    );\n    file.tasks.forEach((task) => {\n      var _a2;\n      if (((_a2 = task.suite) == null ? void 0 : _a2.id) === \"\") {\n        delete task.suite;\n      }\n    });\n    files.push(file);\n  }\n  return files;\n}\nfunction mergeHooks(baseHooks, hooks) {\n  for (const _key in hooks) {\n    const key = _key;\n    baseHooks[key].push(...hooks[key]);\n  }\n  return baseHooks;\n}\n\nconst now = Date.now;\nfunction updateSuiteHookState(suite, name, state, runner) {\n  var _a;\n  if (!suite.result) {\n    suite.result = { state: \"run\" };\n  }\n  if (!((_a = suite.result) == null ? void 0 : _a.hooks)) {\n    suite.result.hooks = {};\n  }\n  const suiteHooks = suite.result.hooks;\n  if (suiteHooks) {\n    suiteHooks[name] = state;\n    updateTask(suite, runner);\n  }\n}\nfunction getSuiteHooks(suite, name, sequence) {\n  const hooks = getHooks(suite)[name];\n  if (sequence === \"stack\" && (name === \"afterAll\" || name === \"afterEach\")) {\n    return hooks.slice().reverse();\n  }\n  return hooks;\n}\nasync function callTaskHooks(task, hooks, sequence) {\n  if (sequence === \"stack\") {\n    hooks = hooks.slice().reverse();\n  }\n  if (sequence === \"parallel\") {\n    await Promise.all(hooks.map((fn) => fn(task.result)));\n  } else {\n    for (const fn of hooks) {\n      await fn(task.result);\n    }\n  }\n}\nasync function callSuiteHook(suite, currentTask, name, runner, args) {\n  const sequence = runner.config.sequence.hooks;\n  const callbacks = [];\n  const parentSuite = \"filepath\" in suite ? null : suite.suite || suite.file;\n  if (name === \"beforeEach\" && parentSuite) {\n    callbacks.push(\n      ...await callSuiteHook(parentSuite, currentTask, name, runner, args)\n    );\n  }\n  updateSuiteHookState(currentTask, name, \"run\", runner);\n  const hooks = getSuiteHooks(suite, name, sequence);\n  if (sequence === \"parallel\") {\n    callbacks.push(\n      ...await Promise.all(hooks.map((fn) => fn(...args)))\n    );\n  } else {\n    for (const hook of hooks) {\n      callbacks.push(await hook(...args));\n    }\n  }\n  updateSuiteHookState(currentTask, name, \"pass\", runner);\n  if (name === \"afterEach\" && parentSuite) {\n    callbacks.push(\n      ...await callSuiteHook(parentSuite, currentTask, name, runner, args)\n    );\n  }\n  return callbacks;\n}\nconst packs = /* @__PURE__ */ new Map();\nlet updateTimer;\nlet previousUpdate;\nfunction updateTask(task, runner) {\n  packs.set(task.id, [task.result, task.meta]);\n  const { clearTimeout, setTimeout } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.getSafeTimers)();\n  clearTimeout(updateTimer);\n  updateTimer = setTimeout(() => {\n    previousUpdate = sendTasksUpdate(runner);\n  }, 10);\n}\nasync function sendTasksUpdate(runner) {\n  var _a;\n  const { clearTimeout } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.getSafeTimers)();\n  clearTimeout(updateTimer);\n  await previousUpdate;\n  if (packs.size) {\n    const taskPacks = Array.from(packs).map(([id, task]) => {\n      return [id, task[0], task[1]];\n    });\n    const p = (_a = runner.onTaskUpdate) == null ? void 0 : _a.call(runner, taskPacks);\n    packs.clear();\n    return p;\n  }\n}\nasync function callCleanupHooks(cleanups) {\n  await Promise.all(\n    cleanups.map(async (fn) => {\n      if (typeof fn !== \"function\") {\n        return;\n      }\n      await fn();\n    })\n  );\n}\nasync function runTest(test, runner) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  await ((_a = runner.onBeforeRunTask) == null ? void 0 : _a.call(runner, test));\n  if (test.mode !== \"run\") {\n    return;\n  }\n  if (((_b = test.result) == null ? void 0 : _b.state) === \"fail\") {\n    updateTask(test, runner);\n    return;\n  }\n  const start = now();\n  test.result = {\n    state: \"run\",\n    startTime: start,\n    retryCount: 0\n  };\n  updateTask(test, runner);\n  setCurrentTest(test);\n  const suite = test.suite || test.file;\n  const repeats = test.repeats ?? 0;\n  for (let repeatCount = 0; repeatCount <= repeats; repeatCount++) {\n    const retry = test.retry ?? 0;\n    for (let retryCount = 0; retryCount <= retry; retryCount++) {\n      let beforeEachCleanups = [];\n      try {\n        await ((_c = runner.onBeforeTryTask) == null ? void 0 : _c.call(runner, test, {\n          retry: retryCount,\n          repeats: repeatCount\n        }));\n        test.result.repeatCount = repeatCount;\n        beforeEachCleanups = await callSuiteHook(\n          suite,\n          test,\n          \"beforeEach\",\n          runner,\n          [test.context, suite]\n        );\n        if (runner.runTask) {\n          await runner.runTask(test);\n        } else {\n          const fn = getFn(test);\n          if (!fn) {\n            throw new Error(\n              \"Test function is not found. Did you add it using `setFn`?\"\n            );\n          }\n          await fn();\n        }\n        if (test.promises) {\n          const result = await Promise.allSettled(test.promises);\n          const errors = result.map((r) => r.status === \"rejected\" ? r.reason : void 0).filter(Boolean);\n          if (errors.length) {\n            throw errors;\n          }\n        }\n        await ((_d = runner.onAfterTryTask) == null ? void 0 : _d.call(runner, test, {\n          retry: retryCount,\n          repeats: repeatCount\n        }));\n        if (test.result.state !== \"fail\") {\n          if (!test.repeats) {\n            test.result.state = \"pass\";\n          } else if (test.repeats && retry === retryCount) {\n            test.result.state = \"pass\";\n          }\n        }\n      } catch (e) {\n        failTask(test.result, e, runner.config.diffOptions);\n      }\n      if (test.pending || ((_e = test.result) == null ? void 0 : _e.state) === \"skip\") {\n        test.mode = \"skip\";\n        test.result = { state: \"skip\" };\n        updateTask(test, runner);\n        setCurrentTest(void 0);\n        return;\n      }\n      try {\n        await ((_f = runner.onTaskFinished) == null ? void 0 : _f.call(runner, test));\n      } catch (e) {\n        failTask(test.result, e, runner.config.diffOptions);\n      }\n      try {\n        await callSuiteHook(suite, test, \"afterEach\", runner, [\n          test.context,\n          suite\n        ]);\n        await callCleanupHooks(beforeEachCleanups);\n        await callFixtureCleanup(test.context);\n      } catch (e) {\n        failTask(test.result, e, runner.config.diffOptions);\n      }\n      if (test.result.state === \"pass\") {\n        break;\n      }\n      if (retryCount < retry) {\n        test.result.state = \"run\";\n        test.result.retryCount = (test.result.retryCount ?? 0) + 1;\n      }\n      updateTask(test, runner);\n    }\n  }\n  try {\n    await callTaskHooks(test, test.onFinished || [], \"stack\");\n  } catch (e) {\n    failTask(test.result, e, runner.config.diffOptions);\n  }\n  if (test.result.state === \"fail\") {\n    try {\n      await callTaskHooks(\n        test,\n        test.onFailed || [],\n        runner.config.sequence.hooks\n      );\n    } catch (e) {\n      failTask(test.result, e, runner.config.diffOptions);\n    }\n  }\n  if (test.fails) {\n    if (test.result.state === \"pass\") {\n      const error = (0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError)(new Error(\"Expect test to fail\"));\n      test.result.state = \"fail\";\n      test.result.errors = [error];\n    } else {\n      test.result.state = \"pass\";\n      test.result.errors = void 0;\n    }\n  }\n  setCurrentTest(void 0);\n  test.result.duration = now() - start;\n  await ((_g = runner.onAfterRunTask) == null ? void 0 : _g.call(runner, test));\n  updateTask(test, runner);\n}\nfunction failTask(result, err, diffOptions) {\n  if (err instanceof PendingError) {\n    result.state = \"skip\";\n    return;\n  }\n  result.state = \"fail\";\n  const errors = Array.isArray(err) ? err : [err];\n  for (const e of errors) {\n    const error = (0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError)(e, diffOptions);\n    result.errors ?? (result.errors = []);\n    result.errors.push(error);\n  }\n}\nfunction markTasksAsSkipped(suite, runner) {\n  suite.tasks.forEach((t) => {\n    t.mode = \"skip\";\n    t.result = { ...t.result, state: \"skip\" };\n    updateTask(t, runner);\n    if (t.type === \"suite\") {\n      markTasksAsSkipped(t, runner);\n    }\n  });\n}\nasync function runSuite(suite, runner) {\n  var _a, _b, _c, _d;\n  await ((_a = runner.onBeforeRunSuite) == null ? void 0 : _a.call(runner, suite));\n  if (((_b = suite.result) == null ? void 0 : _b.state) === \"fail\") {\n    markTasksAsSkipped(suite, runner);\n    updateTask(suite, runner);\n    return;\n  }\n  const start = now();\n  suite.result = {\n    state: \"run\",\n    startTime: start\n  };\n  updateTask(suite, runner);\n  let beforeAllCleanups = [];\n  if (suite.mode === \"skip\") {\n    suite.result.state = \"skip\";\n  } else if (suite.mode === \"todo\") {\n    suite.result.state = \"todo\";\n  } else {\n    try {\n      beforeAllCleanups = await callSuiteHook(\n        suite,\n        suite,\n        \"beforeAll\",\n        runner,\n        [suite]\n      );\n      if (runner.runSuite) {\n        await runner.runSuite(suite);\n      } else {\n        for (let tasksGroup of (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.p)(suite)) {\n          if (tasksGroup[0].concurrent === true) {\n            await Promise.all(tasksGroup.map((c) => runSuiteChild(c, runner)));\n          } else {\n            const { sequence } = runner.config;\n            if (sequence.shuffle || suite.shuffle) {\n              const suites = tasksGroup.filter(\n                (group) => group.type === \"suite\"\n              );\n              const tests = tasksGroup.filter((group) => group.type === \"test\");\n              const groups = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.shuffle)([suites, tests], sequence.seed);\n              tasksGroup = groups.flatMap(\n                (group) => (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_2__.shuffle)(group, sequence.seed)\n              );\n            }\n            for (const c of tasksGroup) {\n              await runSuiteChild(c, runner);\n            }\n          }\n        }\n      }\n    } catch (e) {\n      failTask(suite.result, e, runner.config.diffOptions);\n    }\n    try {\n      await callSuiteHook(suite, suite, \"afterAll\", runner, [suite]);\n      await callCleanupHooks(beforeAllCleanups);\n    } catch (e) {\n      failTask(suite.result, e, runner.config.diffOptions);\n    }\n    if (suite.mode === \"run\") {\n      if (!runner.config.passWithNoTests && !(0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.h)(suite)) {\n        suite.result.state = \"fail\";\n        if (!((_c = suite.result.errors) == null ? void 0 : _c.length)) {\n          const error = (0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError)(\n            new Error(`No test found in suite ${suite.name}`)\n          );\n          suite.result.errors = [error];\n        }\n      } else if ((0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.j)(suite)) {\n        suite.result.state = \"fail\";\n      } else {\n        suite.result.state = \"pass\";\n      }\n    }\n    updateTask(suite, runner);\n    suite.result.duration = now() - start;\n    await ((_d = runner.onAfterRunSuite) == null ? void 0 : _d.call(runner, suite));\n  }\n}\nlet limitMaxConcurrency;\nasync function runSuiteChild(c, runner) {\n  if (c.type === \"test\" || c.type === \"custom\") {\n    return limitMaxConcurrency(() => runTest(c, runner));\n  } else if (c.type === \"suite\") {\n    return runSuite(c, runner);\n  }\n}\nasync function runFiles(files, runner) {\n  var _a, _b;\n  limitMaxConcurrency ?? (limitMaxConcurrency = (0,_chunk_tasks_js__WEBPACK_IMPORTED_MODULE_1__.m)(runner.config.maxConcurrency));\n  for (const file of files) {\n    if (!file.tasks.length && !runner.config.passWithNoTests) {\n      if (!((_b = (_a = file.result) == null ? void 0 : _a.errors) == null ? void 0 : _b.length)) {\n        const error = (0,_vitest_utils_error__WEBPACK_IMPORTED_MODULE_0__.processError)(\n          new Error(`No test suite found in file ${file.filepath}`)\n        );\n        file.result = {\n          state: \"fail\",\n          errors: [error]\n        };\n      }\n    }\n    await runSuite(file, runner);\n  }\n}\nasync function startTests(paths, runner) {\n  var _a, _b, _c, _d;\n  await ((_a = runner.onBeforeCollect) == null ? void 0 : _a.call(runner, paths));\n  const files = await collectTests(paths, runner);\n  await ((_b = runner.onCollected) == null ? void 0 : _b.call(runner, files));\n  await ((_c = runner.onBeforeRunFiles) == null ? void 0 : _c.call(runner, files));\n  await runFiles(files, runner);\n  await ((_d = runner.onAfterRunFiles) == null ? void 0 : _d.call(runner, files));\n  await sendTasksUpdate(runner);\n  return files;\n}\nasync function publicCollect(paths, runner) {\n  var _a, _b;\n  await ((_a = runner.onBeforeCollect) == null ? void 0 : _a.call(runner, paths));\n  const files = await collectTests(paths, runner);\n  await ((_b = runner.onCollected) == null ? void 0 : _b.call(runner, files));\n  return files;\n}\n\nfunction getDefaultHookTimeout() {\n  return getRunner().config.hookTimeout;\n}\nfunction beforeAll(fn, timeout) {\n  return getCurrentSuite().on(\n    \"beforeAll\",\n    withTimeout(fn, timeout ?? getDefaultHookTimeout(), true)\n  );\n}\nfunction afterAll(fn, timeout) {\n  return getCurrentSuite().on(\n    \"afterAll\",\n    withTimeout(fn, timeout ?? getDefaultHookTimeout(), true)\n  );\n}\nfunction beforeEach(fn, timeout) {\n  return getCurrentSuite().on(\n    \"beforeEach\",\n    withTimeout(withFixtures(fn), timeout ?? getDefaultHookTimeout(), true)\n  );\n}\nfunction afterEach(fn, timeout) {\n  return getCurrentSuite().on(\n    \"afterEach\",\n    withTimeout(withFixtures(fn), timeout ?? getDefaultHookTimeout(), true)\n  );\n}\nconst onTestFailed = createTestHook(\n  \"onTestFailed\",\n  (test, handler) => {\n    test.onFailed || (test.onFailed = []);\n    test.onFailed.push(handler);\n  }\n);\nconst onTestFinished = createTestHook(\n  \"onTestFinished\",\n  (test, handler) => {\n    test.onFinished || (test.onFinished = []);\n    test.onFinished.push(handler);\n  }\n);\nfunction createTestHook(name, handler) {\n  return (fn) => {\n    const current = getCurrentTest();\n    if (!current) {\n      throw new Error(`Hook ${name}() can only be called inside a test`);\n    }\n    return handler(current, fn);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/runner/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/runner/dist/utils.js":
/*!***************************************************!*\
  !*** ./node_modules/@vitest/runner/dist/utils.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateSuiteHash: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.c; },\n/* harmony export */   createChainable: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.l; },\n/* harmony export */   createFileTask: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.a; },\n/* harmony export */   generateHash: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.g; },\n/* harmony export */   getNames: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.k; },\n/* harmony export */   getSuites: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.f; },\n/* harmony export */   getTasks: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.e; },\n/* harmony export */   getTests: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.d; },\n/* harmony export */   hasFailed: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.j; },\n/* harmony export */   hasTests: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.h; },\n/* harmony export */   interpretTaskModes: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.i; },\n/* harmony export */   isAtomTest: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.b; },\n/* harmony export */   limitConcurrency: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.m; },\n/* harmony export */   partitionSuiteChildren: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.p; },\n/* harmony export */   someTasksAreOnly: function() { return /* reexport safe */ _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__.s; }\n/* harmony export */ });\n/* harmony import */ var _chunk_tasks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-tasks.js */ \"./node_modules/@vitest/runner/dist/chunk-tasks.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZpdGVzdC9ydW5uZXIvZGlzdC91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBVO0FBQzdTO0FBQ2Q7QUFDUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHZpdGVzdC9ydW5uZXIvZGlzdC91dGlscy5qcz9iNzQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGMgYXMgY2FsY3VsYXRlU3VpdGVIYXNoLCBsIGFzIGNyZWF0ZUNoYWluYWJsZSwgYSBhcyBjcmVhdGVGaWxlVGFzaywgZyBhcyBnZW5lcmF0ZUhhc2gsIGsgYXMgZ2V0TmFtZXMsIGYgYXMgZ2V0U3VpdGVzLCBlIGFzIGdldFRhc2tzLCBkIGFzIGdldFRlc3RzLCBqIGFzIGhhc0ZhaWxlZCwgaCBhcyBoYXNUZXN0cywgaSBhcyBpbnRlcnByZXRUYXNrTW9kZXMsIGIgYXMgaXNBdG9tVGVzdCwgbSBhcyBsaW1pdENvbmN1cnJlbmN5LCBwIGFzIHBhcnRpdGlvblN1aXRlQ2hpbGRyZW4sIHMgYXMgc29tZVRhc2tzQXJlT25seSB9IGZyb20gJy4vY2h1bmstdGFza3MuanMnO1xuaW1wb3J0ICdAdml0ZXN0L3V0aWxzL2Vycm9yJztcbmltcG9ydCAncGF0aGUnO1xuaW1wb3J0ICdAdml0ZXN0L3V0aWxzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vitest/runner/dist/utils.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/snapshot/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@vitest/snapshot/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapshotClient: function() { return /* binding */ SnapshotClient; },\n/* harmony export */   SnapshotState: function() { return /* binding */ SnapshotState; },\n/* harmony export */   addSerializer: function() { return /* binding */ addSerializer; },\n/* harmony export */   getSerializers: function() { return /* binding */ getSerializers; },\n/* harmony export */   stripSnapshotIndentation: function() { return /* binding */ stripSnapshotIndentation; }\n/* harmony export */ });\n/* harmony import */ var _vitest_pretty_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/pretty-format */ \"./node_modules/@vitest/pretty-format/dist/index.js\");\n/* harmony import */ var pathe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pathe */ \"./node_modules/pathe/dist/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar naturalCompare$2 = {exports: {}};\n\n/*\n * @version    1.4.0\n * @date       2015-10-26\n * @stability  3 - Stable\n * @author     Lauri Rooden (https://github.com/litejs/natural-compare-lite)\n * @license    MIT License\n */\n\n\nvar naturalCompare = function(a, b) {\n\tvar i, codeA\n\t, codeB = 1\n\t, posA = 0\n\t, posB = 0\n\t, alphabet = String.alphabet;\n\n\tfunction getCode(str, pos, code) {\n\t\tif (code) {\n\t\t\tfor (i = pos; code = getCode(str, i), code < 76 && code > 65;) ++i;\n\t\t\treturn +str.slice(pos - 1, i)\n\t\t}\n\t\tcode = alphabet && alphabet.indexOf(str.charAt(pos));\n\t\treturn code > -1 ? code + 76 : ((code = str.charCodeAt(pos) || 0), code < 45 || code > 127) ? code\n\t\t\t: code < 46 ? 65               // -\n\t\t\t: code < 48 ? code - 1\n\t\t\t: code < 58 ? code + 18        // 0-9\n\t\t\t: code < 65 ? code - 11\n\t\t\t: code < 91 ? code + 11        // A-Z\n\t\t\t: code < 97 ? code - 37\n\t\t\t: code < 123 ? code + 5        // a-z\n\t\t\t: code - 63\n\t}\n\n\n\tif ((a+=\"\") != (b+=\"\")) for (;codeB;) {\n\t\tcodeA = getCode(a, posA++);\n\t\tcodeB = getCode(b, posB++);\n\n\t\tif (codeA < 76 && codeB < 76 && codeA > 66 && codeB > 66) {\n\t\t\tcodeA = getCode(a, posA, posA);\n\t\t\tcodeB = getCode(b, posB, posA = i);\n\t\t\tposB = i;\n\t\t}\n\n\t\tif (codeA != codeB) return (codeA < codeB) ? -1 : 1\n\t}\n\treturn 0\n};\n\ntry {\n\tnaturalCompare$2.exports = naturalCompare;\n} catch (e) {\n\tString.naturalCompare = naturalCompare;\n}\n\nvar naturalCompareExports = naturalCompare$2.exports;\nvar naturalCompare$1 = /*@__PURE__*/getDefaultExportFromCjs(naturalCompareExports);\n\nfunction notNullish(v) {\n  return v != null;\n}\nfunction isPrimitive(value) {\n  return value === null || typeof value !== \"function\" && typeof value !== \"object\";\n}\nfunction isObject(item) {\n  return item != null && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction getCallLastIndex(code) {\n  let charIndex = -1;\n  let inString = null;\n  let startedBracers = 0;\n  let endedBracers = 0;\n  let beforeChar = null;\n  while (charIndex <= code.length) {\n    beforeChar = code[charIndex];\n    charIndex++;\n    const char = code[charIndex];\n    const isCharString = char === '\"' || char === \"'\" || char === \"`\";\n    if (isCharString && beforeChar !== \"\\\\\") {\n      if (inString === char) {\n        inString = null;\n      } else if (!inString) {\n        inString = char;\n      }\n    }\n    if (!inString) {\n      if (char === \"(\") {\n        startedBracers++;\n      }\n      if (char === \")\") {\n        endedBracers++;\n      }\n    }\n    if (startedBracers && endedBracers && startedBracers === endedBracers) {\n      return charIndex;\n    }\n  }\n  return null;\n}\n\nlet getPromiseValue = () => 'Promise{…}';\ntry {\n    // @ts-ignore\n    const { getPromiseDetails, kPending, kRejected } = process.binding('util');\n    if (Array.isArray(getPromiseDetails(Promise.resolve()))) {\n        getPromiseValue = (value, options) => {\n            const [state, innerValue] = getPromiseDetails(value);\n            if (state === kPending) {\n                return 'Promise{<pending>}';\n            }\n            return `Promise${state === kRejected ? '!' : ''}{${options.inspect(innerValue, options)}}`;\n        };\n    }\n}\ncatch (notNode) {\n    /* ignore */\n}\n\n/* !\n * loupe\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nlet nodeInspect = false;\ntry {\n    // eslint-disable-next-line global-require\n    // @ts-ignore\n    const nodeUtil = require('util');\n    nodeInspect = nodeUtil.inspect ? nodeUtil.inspect.custom : false;\n}\ncatch (noNodeInspect) {\n    nodeInspect = false;\n}\n\nconst lineSplitRE = /\\r?\\n/;\nfunction positionToOffset(source, lineNumber, columnNumber) {\n  const lines = source.split(lineSplitRE);\n  const nl = /\\r\\n/.test(source) ? 2 : 1;\n  let start = 0;\n  if (lineNumber > lines.length) {\n    return source.length;\n  }\n  for (let i = 0; i < lineNumber - 1; i++) {\n    start += lines[i].length + nl;\n  }\n  return start + columnNumber;\n}\nfunction offsetToLineNumber(source, offset) {\n  if (offset > source.length) {\n    throw new Error(\n      `offset is longer than source length! offset ${offset} > length ${source.length}`\n    );\n  }\n  const lines = source.split(lineSplitRE);\n  const nl = /\\r\\n/.test(source) ? 2 : 1;\n  let counted = 0;\n  let line = 0;\n  for (; line < lines.length; line++) {\n    const lineLength = lines[line].length + nl;\n    if (counted + lineLength >= offset) {\n      break;\n    }\n    counted += lineLength;\n  }\n  return line + 1;\n}\n\n// Copyright 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Simon Lydell\n// License: MIT.\nvar LineTerminatorSequence;\nLineTerminatorSequence = /\\r?\\n|[\\r\\u2028\\u2029]/y;\nRegExp(LineTerminatorSequence.source);\n\n// src/index.ts\nvar reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\"\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\"\n  ]\n}; new Set(reservedWords.keyword); new Set(reservedWords.strict);\n\n// src/index.ts\nvar f = {\n  reset: [0, 0],\n  bold: [1, 22, \"\\x1B[22m\\x1B[1m\"],\n  dim: [2, 22, \"\\x1B[22m\\x1B[2m\"],\n  italic: [3, 23],\n  underline: [4, 24],\n  inverse: [7, 27],\n  hidden: [8, 28],\n  strikethrough: [9, 29],\n  black: [30, 39],\n  red: [31, 39],\n  green: [32, 39],\n  yellow: [33, 39],\n  blue: [34, 39],\n  magenta: [35, 39],\n  cyan: [36, 39],\n  white: [37, 39],\n  gray: [90, 39],\n  bgBlack: [40, 49],\n  bgRed: [41, 49],\n  bgGreen: [42, 49],\n  bgYellow: [43, 49],\n  bgBlue: [44, 49],\n  bgMagenta: [45, 49],\n  bgCyan: [46, 49],\n  bgWhite: [47, 49],\n  blackBright: [90, 39],\n  redBright: [91, 39],\n  greenBright: [92, 39],\n  yellowBright: [93, 39],\n  blueBright: [94, 39],\n  magentaBright: [95, 39],\n  cyanBright: [96, 39],\n  whiteBright: [97, 39],\n  bgBlackBright: [100, 49],\n  bgRedBright: [101, 49],\n  bgGreenBright: [102, 49],\n  bgYellowBright: [103, 49],\n  bgBlueBright: [104, 49],\n  bgMagentaBright: [105, 49],\n  bgCyanBright: [106, 49],\n  bgWhiteBright: [107, 49]\n}, h = Object.entries(f);\nfunction a(n) {\n  return String(n);\n}\na.open = \"\";\na.close = \"\";\nfunction C(n = !1) {\n  let e = typeof process != \"undefined\" ? process : void 0, i = (e == null ? void 0 : e.env) || {}, g = (e == null ? void 0 : e.argv) || [];\n  return !(\"NO_COLOR\" in i || g.includes(\"--no-color\")) && (\"FORCE_COLOR\" in i || g.includes(\"--color\") || (e == null ? void 0 : e.platform) === \"win32\" || n && i.TERM !== \"dumb\" || \"CI\" in i) || typeof window != \"undefined\" && !!window.chrome;\n}\nfunction p(n = !1) {\n  let e = C(n), i = (r, t, c, o) => {\n    let l = \"\", s = 0;\n    do\n      l += r.substring(s, o) + c, s = o + t.length, o = r.indexOf(t, s);\n    while (~o);\n    return l + r.substring(s);\n  }, g = (r, t, c = r) => {\n    let o = (l) => {\n      let s = String(l), b = s.indexOf(t, r.length);\n      return ~b ? r + i(s, t, c, b) + t : r + s + t;\n    };\n    return o.open = r, o.close = t, o;\n  }, u = {\n    isColorSupported: e\n  }, d = (r) => `\\x1B[${r}m`;\n  for (let [r, t] of h)\n    u[r] = e ? g(\n      d(t[0]),\n      d(t[1]),\n      t[2]\n    ) : a;\n  return u;\n}\n\n// src/browser.ts\np(!1);\n\nconst serialize$1 = (val, config, indentation, depth, refs, printer) => {\n  const name = val.getMockName();\n  const nameString = name === \"vi.fn()\" ? \"\" : ` ${name}`;\n  let callsString = \"\";\n  if (val.mock.calls.length !== 0) {\n    const indentationNext = indentation + config.indent;\n    callsString = ` {${config.spacingOuter}${indentationNext}\"calls\": ${printer(\n      val.mock.calls,\n      config,\n      indentationNext,\n      depth,\n      refs\n    )}${config.min ? \", \" : \",\"}${config.spacingOuter}${indentationNext}\"results\": ${printer(\n      val.mock.results,\n      config,\n      indentationNext,\n      depth,\n      refs\n    )}${config.min ? \"\" : \",\"}${config.spacingOuter}${indentation}}`;\n  }\n  return `[MockFunction${nameString}]${callsString}`;\n};\nconst test = (val) => val && !!val._isMockFunction;\nconst plugin = { serialize: serialize$1, test };\n\nconst {\n  DOMCollection,\n  DOMElement,\n  Immutable,\n  ReactElement,\n  ReactTestComponent,\n  AsymmetricMatcher\n} = _vitest_pretty_format__WEBPACK_IMPORTED_MODULE_0__.plugins;\nlet PLUGINS = [\n  ReactTestComponent,\n  ReactElement,\n  DOMElement,\n  DOMCollection,\n  Immutable,\n  AsymmetricMatcher,\n  plugin\n];\nfunction addSerializer(plugin) {\n  PLUGINS = [plugin].concat(PLUGINS);\n}\nfunction getSerializers() {\n  return PLUGINS;\n}\n\nfunction testNameToKey(testName, count) {\n  return `${testName} ${count}`;\n}\nfunction keyToTestName(key) {\n  if (!/ \\d+$/.test(key)) {\n    throw new Error(\"Snapshot keys must end with a number.\");\n  }\n  return key.replace(/ \\d+$/, \"\");\n}\nfunction getSnapshotData(content, options) {\n  const update = options.updateSnapshot;\n  const data = /* @__PURE__ */ Object.create(null);\n  let snapshotContents = \"\";\n  let dirty = false;\n  if (content != null) {\n    try {\n      snapshotContents = content;\n      const populate = new Function(\"exports\", snapshotContents);\n      populate(data);\n    } catch {\n    }\n  }\n  const isInvalid = snapshotContents;\n  if ((update === \"all\" || update === \"new\") && isInvalid) {\n    dirty = true;\n  }\n  return { data, dirty };\n}\nfunction addExtraLineBreaks(string) {\n  return string.includes(\"\\n\") ? `\n${string}\n` : string;\n}\nfunction removeExtraLineBreaks(string) {\n  return string.length > 2 && string.startsWith(\"\\n\") && string.endsWith(\"\\n\") ? string.slice(1, -1) : string;\n}\nconst escapeRegex = true;\nconst printFunctionName = false;\nfunction serialize(val, indent = 2, formatOverrides = {}) {\n  return normalizeNewlines(\n    (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_0__.format)(val, {\n      escapeRegex,\n      indent,\n      plugins: getSerializers(),\n      printFunctionName,\n      ...formatOverrides\n    })\n  );\n}\nfunction escapeBacktickString(str) {\n  return str.replace(/`|\\\\|\\$\\{/g, \"\\\\$&\");\n}\nfunction printBacktickString(str) {\n  return `\\`${escapeBacktickString(str)}\\``;\n}\nfunction normalizeNewlines(string) {\n  return string.replace(/\\r\\n|\\r/g, \"\\n\");\n}\nasync function saveSnapshotFile(environment, snapshotData, snapshotPath) {\n  const snapshots = Object.keys(snapshotData).sort(naturalCompare$1).map(\n    (key) => `exports[${printBacktickString(key)}] = ${printBacktickString(\n      normalizeNewlines(snapshotData[key])\n    )};`\n  );\n  const content = `${environment.getHeader()}\n\n${snapshots.join(\"\\n\\n\")}\n`;\n  const oldContent = await environment.readSnapshotFile(snapshotPath);\n  const skipWriting = oldContent != null && oldContent === content;\n  if (skipWriting) {\n    return;\n  }\n  await environment.saveSnapshotFile(snapshotPath, content);\n}\nfunction prepareExpected(expected) {\n  function findStartIndent() {\n    var _a, _b;\n    const matchObject = /^( +)\\}\\s+$/m.exec(expected || \"\");\n    const objectIndent = (_a = matchObject == null ? void 0 : matchObject[1]) == null ? void 0 : _a.length;\n    if (objectIndent) {\n      return objectIndent;\n    }\n    const matchText = /^\\n( +)\"/.exec(expected || \"\");\n    return ((_b = matchText == null ? void 0 : matchText[1]) == null ? void 0 : _b.length) || 0;\n  }\n  const startIndent = findStartIndent();\n  let expectedTrimmed = expected == null ? void 0 : expected.trim();\n  if (startIndent) {\n    expectedTrimmed = expectedTrimmed == null ? void 0 : expectedTrimmed.replace(new RegExp(`^${\" \".repeat(startIndent)}`, \"gm\"), \"\").replace(/ +\\}$/, \"}\");\n  }\n  return expectedTrimmed;\n}\nfunction deepMergeArray(target = [], source = []) {\n  const mergedOutput = Array.from(target);\n  source.forEach((sourceElement, index) => {\n    const targetElement = mergedOutput[index];\n    if (Array.isArray(target[index])) {\n      mergedOutput[index] = deepMergeArray(target[index], sourceElement);\n    } else if (isObject(targetElement)) {\n      mergedOutput[index] = deepMergeSnapshot(target[index], sourceElement);\n    } else {\n      mergedOutput[index] = sourceElement;\n    }\n  });\n  return mergedOutput;\n}\nfunction deepMergeSnapshot(target, source) {\n  if (isObject(target) && isObject(source)) {\n    const mergedOutput = { ...target };\n    Object.keys(source).forEach((key) => {\n      if (isObject(source[key]) && !source[key].$$typeof) {\n        if (!(key in target)) {\n          Object.assign(mergedOutput, { [key]: source[key] });\n        } else {\n          mergedOutput[key] = deepMergeSnapshot(target[key], source[key]);\n        }\n      } else if (Array.isArray(source[key])) {\n        mergedOutput[key] = deepMergeArray(target[key], source[key]);\n      } else {\n        Object.assign(mergedOutput, { [key]: source[key] });\n      }\n    });\n    return mergedOutput;\n  } else if (Array.isArray(target) && Array.isArray(source)) {\n    return deepMergeArray(target, source);\n  }\n  return target;\n}\n\nconst comma = ','.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars.length; i++) {\n    const c = chars.charCodeAt(i);\n    intToChar[i] = c;\n    charToInt[c] = i;\n}\nfunction decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let index = 0;\n    do {\n        const semi = indexOf(mappings, index);\n        const line = [];\n        let sorted = true;\n        let lastCol = 0;\n        state[0] = 0;\n        for (let i = index; i < semi; i++) {\n            let seg;\n            i = decodeInteger(mappings, i, state, 0); // genColumn\n            const col = state[0];\n            if (col < lastCol)\n                sorted = false;\n            lastCol = col;\n            if (hasMoreVlq(mappings, i, semi)) {\n                i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n                i = decodeInteger(mappings, i, state, 2); // sourceLine\n                i = decodeInteger(mappings, i, state, 3); // sourceColumn\n                if (hasMoreVlq(mappings, i, semi)) {\n                    i = decodeInteger(mappings, i, state, 4); // namesIndex\n                    seg = [col, state[1], state[2], state[3], state[4]];\n                }\n                else {\n                    seg = [col, state[1], state[2], state[3]];\n                }\n            }\n            else {\n                seg = [col];\n            }\n            line.push(seg);\n        }\n        if (!sorted)\n            sort(line);\n        decoded.push(line);\n        index = semi + 1;\n    } while (index <= mappings.length);\n    return decoded;\n}\nfunction indexOf(mappings, index) {\n    const idx = mappings.indexOf(';', index);\n    return idx === -1 ? mappings.length : idx;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n    do {\n        const c = mappings.charCodeAt(pos++);\n        integer = charToInt[c];\n        value |= (integer & 31) << shift;\n        shift += 5;\n    } while (integer & 32);\n    const shouldNegate = value & 1;\n    value >>>= 1;\n    if (shouldNegate) {\n        value = -0x80000000 | -value;\n    }\n    state[j] += value;\n    return pos;\n}\nfunction hasMoreVlq(mappings, i, length) {\n    if (i >= length)\n        return false;\n    return mappings.charCodeAt(i) !== comma;\n}\nfunction sort(line) {\n    line.sort(sortComparator$1);\n}\nfunction sortComparator$1(a, b) {\n    return a[0] - b[0];\n}\n\n// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\nvar UrlType;\n(function (UrlType) {\n    UrlType[UrlType[\"Empty\"] = 1] = \"Empty\";\n    UrlType[UrlType[\"Hash\"] = 2] = \"Hash\";\n    UrlType[UrlType[\"Query\"] = 3] = \"Query\";\n    UrlType[UrlType[\"RelativePath\"] = 4] = \"RelativePath\";\n    UrlType[UrlType[\"AbsolutePath\"] = 5] = \"AbsolutePath\";\n    UrlType[UrlType[\"SchemeRelative\"] = 6] = \"SchemeRelative\";\n    UrlType[UrlType[\"Absolute\"] = 7] = \"Absolute\";\n})(UrlType || (UrlType = {}));\nfunction isAbsoluteUrl(input) {\n    return schemeRegex.test(input);\n}\nfunction isSchemeRelativeUrl(input) {\n    return input.startsWith('//');\n}\nfunction isAbsolutePath(input) {\n    return input.startsWith('/');\n}\nfunction isFileUrl(input) {\n    return input.startsWith('file:');\n}\nfunction isRelative(input) {\n    return /^[.?#]/.test(input);\n}\nfunction parseAbsoluteUrl(input) {\n    const match = urlRegex.exec(input);\n    return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');\n}\nfunction parseFileUrl(input) {\n    const match = fileRegex.exec(input);\n    const path = match[2];\n    return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');\n}\nfunction makeUrl(scheme, user, host, port, path, query, hash) {\n    return {\n        scheme,\n        user,\n        host,\n        port,\n        path,\n        query,\n        hash,\n        type: UrlType.Absolute,\n    };\n}\nfunction parseUrl(input) {\n    if (isSchemeRelativeUrl(input)) {\n        const url = parseAbsoluteUrl('http:' + input);\n        url.scheme = '';\n        url.type = UrlType.SchemeRelative;\n        return url;\n    }\n    if (isAbsolutePath(input)) {\n        const url = parseAbsoluteUrl('http://foo.com' + input);\n        url.scheme = '';\n        url.host = '';\n        url.type = UrlType.AbsolutePath;\n        return url;\n    }\n    if (isFileUrl(input))\n        return parseFileUrl(input);\n    if (isAbsoluteUrl(input))\n        return parseAbsoluteUrl(input);\n    const url = parseAbsoluteUrl('http://foo.com/' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = input\n        ? input.startsWith('?')\n            ? UrlType.Query\n            : input.startsWith('#')\n                ? UrlType.Hash\n                : UrlType.RelativePath\n        : UrlType.Empty;\n    return url;\n}\nfunction stripPathFilename(path) {\n    // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n    // paths. It's not a file, so we can't strip it.\n    if (path.endsWith('/..'))\n        return path;\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\nfunction mergePaths(url, base) {\n    normalizePath(base, base.type);\n    // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n    // path).\n    if (url.path === '/') {\n        url.path = base.path;\n    }\n    else {\n        // Resolution happens relative to the base path's directory, not the file.\n        url.path = stripPathFilename(base.path) + url.path;\n    }\n}\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url, type) {\n    const rel = type <= UrlType.RelativePath;\n    const pieces = url.path.split('/');\n    // We need to preserve the first piece always, so that we output a leading slash. The item at\n    // pieces[0] is an empty string.\n    let pointer = 1;\n    // Positive is the number of real directories we've output, used for popping a parent directory.\n    // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n    let positive = 0;\n    // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n    // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n    // real directory, we won't need to append, unless the other conditions happen again.\n    let addTrailingSlash = false;\n    for (let i = 1; i < pieces.length; i++) {\n        const piece = pieces[i];\n        // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n        if (!piece) {\n            addTrailingSlash = true;\n            continue;\n        }\n        // If we encounter a real directory, then we don't need to append anymore.\n        addTrailingSlash = false;\n        // A current directory, which we can always drop.\n        if (piece === '.')\n            continue;\n        // A parent directory, we need to see if there are any real directories we can pop. Else, we\n        // have an excess of parents, and we'll need to keep the \"..\".\n        if (piece === '..') {\n            if (positive) {\n                addTrailingSlash = true;\n                positive--;\n                pointer--;\n            }\n            else if (rel) {\n                // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                pieces[pointer++] = piece;\n            }\n            continue;\n        }\n        // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n        // any popped or dropped directories.\n        pieces[pointer++] = piece;\n        positive++;\n    }\n    let path = '';\n    for (let i = 1; i < pointer; i++) {\n        path += '/' + pieces[i];\n    }\n    if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n        path += '/';\n    }\n    url.path = path;\n}\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nfunction resolve$1(input, base) {\n    if (!input && !base)\n        return '';\n    const url = parseUrl(input);\n    let inputType = url.type;\n    if (base && inputType !== UrlType.Absolute) {\n        const baseUrl = parseUrl(base);\n        const baseType = baseUrl.type;\n        switch (inputType) {\n            case UrlType.Empty:\n                url.hash = baseUrl.hash;\n            // fall through\n            case UrlType.Hash:\n                url.query = baseUrl.query;\n            // fall through\n            case UrlType.Query:\n            case UrlType.RelativePath:\n                mergePaths(url, baseUrl);\n            // fall through\n            case UrlType.AbsolutePath:\n                // The host, user, and port are joined, you can't copy one without the others.\n                url.user = baseUrl.user;\n                url.host = baseUrl.host;\n                url.port = baseUrl.port;\n            // fall through\n            case UrlType.SchemeRelative:\n                // The input doesn't have a schema at least, so we need to copy at least that over.\n                url.scheme = baseUrl.scheme;\n        }\n        if (baseType > inputType)\n            inputType = baseType;\n    }\n    normalizePath(url, inputType);\n    const queryHash = url.query + url.hash;\n    switch (inputType) {\n        // This is impossible, because of the empty checks at the start of the function.\n        // case UrlType.Empty:\n        case UrlType.Hash:\n        case UrlType.Query:\n            return queryHash;\n        case UrlType.RelativePath: {\n            // The first char is always a \"/\", and we need it to be relative.\n            const path = url.path.slice(1);\n            if (!path)\n                return queryHash || '.';\n            if (isRelative(base || input) && !isRelative(path)) {\n                // If base started with a leading \".\", or there is no base and input started with a \".\",\n                // then we need to ensure that the relative path starts with a \".\". We don't know if\n                // relative starts with a \"..\", though, so check before prepending.\n                return './' + path + queryHash;\n            }\n            return path + queryHash;\n        }\n        case UrlType.AbsolutePath:\n            return url.path + queryHash;\n        default:\n            return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n    }\n}\n\nfunction resolve(input, base) {\n    // The base is always treated as a directory, if it's not empty.\n    // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n    // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n    if (base && !base.endsWith('/'))\n        base += '/';\n    return resolve$1(input, base);\n}\n\n/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nfunction stripFilename(path) {\n    if (!path)\n        return '';\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\n\nconst COLUMN = 0;\nconst SOURCES_INDEX = 1;\nconst SOURCE_LINE = 2;\nconst SOURCE_COLUMN = 3;\nconst NAMES_INDEX = 4;\n\nfunction maybeSort(mappings, owned) {\n    const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n    if (unsortedIndex === mappings.length)\n        return mappings;\n    // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n    // not, we do not want to modify the consumer's input array.\n    if (!owned)\n        mappings = mappings.slice();\n    for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n        mappings[i] = sortSegments(mappings[i], owned);\n    }\n    return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n    for (let i = start; i < mappings.length; i++) {\n        if (!isSorted(mappings[i]))\n            return i;\n    }\n    return mappings.length;\n}\nfunction isSorted(line) {\n    for (let j = 1; j < line.length; j++) {\n        if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction sortSegments(line, owned) {\n    if (!owned)\n        line = line.slice();\n    return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[COLUMN] - b[COLUMN];\n}\n\nlet found = false;\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nfunction binarySearch(haystack, needle, low, high) {\n    while (low <= high) {\n        const mid = low + ((high - low) >> 1);\n        const cmp = haystack[mid][COLUMN] - needle;\n        if (cmp === 0) {\n            found = true;\n            return mid;\n        }\n        if (cmp < 0) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    found = false;\n    return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n    for (let i = index + 1; i < haystack.length; index = i++) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction lowerBound(haystack, needle, index) {\n    for (let i = index - 1; i >= 0; index = i--) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction memoizedState() {\n    return {\n        lastKey: -1,\n        lastNeedle: -1,\n        lastIndex: -1,\n    };\n}\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n    const { lastKey, lastNeedle, lastIndex } = state;\n    let low = 0;\n    let high = haystack.length - 1;\n    if (key === lastKey) {\n        if (needle === lastNeedle) {\n            found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n            return lastIndex;\n        }\n        if (needle >= lastNeedle) {\n            // lastIndex may be -1 if the previous needle was not found.\n            low = lastIndex === -1 ? 0 : lastIndex;\n        }\n        else {\n            high = lastIndex;\n        }\n    }\n    state.lastKey = key;\n    state.lastNeedle = needle;\n    return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\nconst LEAST_UPPER_BOUND = -1;\nconst GREATEST_LOWER_BOUND = 1;\nclass TraceMap {\n    constructor(map, mapUrl) {\n        const isString = typeof map === 'string';\n        if (!isString && map._decodedMemo)\n            return map;\n        const parsed = (isString ? JSON.parse(map) : map);\n        const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n        this.version = version;\n        this.file = file;\n        this.names = names || [];\n        this.sourceRoot = sourceRoot;\n        this.sources = sources;\n        this.sourcesContent = sourcesContent;\n        this.ignoreList = parsed.ignoreList || parsed.x_google_ignoreList || undefined;\n        const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n        this.resolvedSources = sources.map((s) => resolve(s || '', from));\n        const { mappings } = parsed;\n        if (typeof mappings === 'string') {\n            this._encoded = mappings;\n            this._decoded = undefined;\n        }\n        else {\n            this._encoded = undefined;\n            this._decoded = maybeSort(mappings, isString);\n        }\n        this._decodedMemo = memoizedState();\n        this._bySources = undefined;\n        this._bySourceMemos = undefined;\n    }\n}\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map) {\n    return map;\n}\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nfunction decodedMappings(map) {\n    var _a;\n    return ((_a = cast(map))._decoded || (_a._decoded = decode(cast(map)._encoded)));\n}\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nfunction originalPositionFor(map, needle) {\n    let { line, column, bias } = needle;\n    line--;\n    if (line < 0)\n        throw new Error(LINE_GTR_ZERO);\n    if (column < 0)\n        throw new Error(COL_GTR_EQ_ZERO);\n    const decoded = decodedMappings(map);\n    // It's common for parent source maps to have pointers to lines that have no\n    // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n    if (line >= decoded.length)\n        return OMapping(null, null, null, null);\n    const segments = decoded[line];\n    const index = traceSegmentInternal(segments, cast(map)._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);\n    if (index === -1)\n        return OMapping(null, null, null, null);\n    const segment = segments[index];\n    if (segment.length === 1)\n        return OMapping(null, null, null, null);\n    const { names, resolvedSources } = map;\n    return OMapping(resolvedSources[segment[SOURCES_INDEX]], segment[SOURCE_LINE] + 1, segment[SOURCE_COLUMN], segment.length === 5 ? names[segment[NAMES_INDEX]] : null);\n}\nfunction OMapping(source, line, column, name) {\n    return { source, line, column, name };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n    let index = memoizedBinarySearch(segments, column, memo, line);\n    if (found) {\n        index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n    }\n    else if (bias === LEAST_UPPER_BOUND)\n        index++;\n    if (index === -1 || index === segments.length)\n        return -1;\n    return index;\n}\n\nconst CHROME_IE_STACK_REGEXP = /^\\s*at .*(?:\\S:\\d+|\\(native\\))/m;\nconst SAFARI_NATIVE_CODE_REGEXP = /^(?:eval@)?(?:\\[native code\\])?$/;\nconst stackIgnorePatterns = [\n  \"node:internal\",\n  /\\/packages\\/\\w+\\/dist\\//,\n  /\\/@vitest\\/\\w+\\/dist\\//,\n  \"/vitest/dist/\",\n  \"/vitest/src/\",\n  \"/vite-node/dist/\",\n  \"/vite-node/src/\",\n  \"/node_modules/chai/\",\n  \"/node_modules/tinypool/\",\n  \"/node_modules/tinyspy/\",\n  // browser related deps\n  \"/deps/chunk-\",\n  \"/deps/@vitest\",\n  \"/deps/loupe\",\n  \"/deps/chai\",\n  /node:\\w+/,\n  /__vitest_test__/,\n  /__vitest_browser__/,\n  /\\/deps\\/vitest_/\n];\nfunction extractLocation(urlLike) {\n  if (!urlLike.includes(\":\")) {\n    return [urlLike];\n  }\n  const regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n  const parts = regExp.exec(urlLike.replace(/^\\(|\\)$/g, \"\"));\n  if (!parts) {\n    return [urlLike];\n  }\n  let url = parts[1];\n  if (url.startsWith(\"async \")) {\n    url = url.slice(6);\n  }\n  if (url.startsWith(\"http:\") || url.startsWith(\"https:\")) {\n    const urlObj = new URL(url);\n    url = urlObj.pathname;\n  }\n  if (url.startsWith(\"/@fs/\")) {\n    const isWindows = /^\\/@fs\\/[a-zA-Z]:\\//.test(url);\n    url = url.slice(isWindows ? 5 : 4);\n  }\n  return [url, parts[2] || void 0, parts[3] || void 0];\n}\nfunction parseSingleFFOrSafariStack(raw) {\n  let line = raw.trim();\n  if (SAFARI_NATIVE_CODE_REGEXP.test(line)) {\n    return null;\n  }\n  if (line.includes(\" > eval\")) {\n    line = line.replace(\n      / line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g,\n      \":$1\"\n    );\n  }\n  if (!line.includes(\"@\") && !line.includes(\":\")) {\n    return null;\n  }\n  const functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(@)/;\n  const matches = line.match(functionNameRegex);\n  const functionName = matches && matches[1] ? matches[1] : void 0;\n  const [url, lineNumber, columnNumber] = extractLocation(\n    line.replace(functionNameRegex, \"\")\n  );\n  if (!url || !lineNumber || !columnNumber) {\n    return null;\n  }\n  return {\n    file: url,\n    method: functionName || \"\",\n    line: Number.parseInt(lineNumber),\n    column: Number.parseInt(columnNumber)\n  };\n}\nfunction parseSingleV8Stack(raw) {\n  let line = raw.trim();\n  if (!CHROME_IE_STACK_REGEXP.test(line)) {\n    return null;\n  }\n  if (line.includes(\"(eval \")) {\n    line = line.replace(/eval code/g, \"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g, \"\");\n  }\n  let sanitizedLine = line.replace(/^\\s+/, \"\").replace(/\\(eval code/g, \"(\").replace(/^.*?\\s+/, \"\");\n  const location = sanitizedLine.match(/ (\\(.+\\)$)/);\n  sanitizedLine = location ? sanitizedLine.replace(location[0], \"\") : sanitizedLine;\n  const [url, lineNumber, columnNumber] = extractLocation(\n    location ? location[1] : sanitizedLine\n  );\n  let method = location && sanitizedLine || \"\";\n  let file = url && [\"eval\", \"<anonymous>\"].includes(url) ? void 0 : url;\n  if (!file || !lineNumber || !columnNumber) {\n    return null;\n  }\n  if (method.startsWith(\"async \")) {\n    method = method.slice(6);\n  }\n  if (file.startsWith(\"file://\")) {\n    file = file.slice(7);\n  }\n  file = (0,pathe__WEBPACK_IMPORTED_MODULE_1__.resolve)(file);\n  if (method) {\n    method = method.replace(/__vite_ssr_import_\\d+__\\./g, \"\");\n  }\n  return {\n    method,\n    file,\n    line: Number.parseInt(lineNumber),\n    column: Number.parseInt(columnNumber)\n  };\n}\nfunction parseStacktrace(stack, options = {}) {\n  const { ignoreStackEntries = stackIgnorePatterns } = options;\n  let stacks = !CHROME_IE_STACK_REGEXP.test(stack) ? parseFFOrSafariStackTrace(stack) : parseV8Stacktrace(stack);\n  if (ignoreStackEntries.length) {\n    stacks = stacks.filter(\n      (stack2) => !ignoreStackEntries.some((p) => stack2.file.match(p))\n    );\n  }\n  return stacks.map((stack2) => {\n    var _a;\n    if (options.getFileName) {\n      stack2.file = options.getFileName(stack2.file);\n    }\n    const map = (_a = options.getSourceMap) == null ? void 0 : _a.call(options, stack2.file);\n    if (!map || typeof map !== \"object\" || !map.version) {\n      return stack2;\n    }\n    const traceMap = new TraceMap(map);\n    const { line, column } = originalPositionFor(traceMap, stack2);\n    if (line != null && column != null) {\n      return { ...stack2, line, column };\n    }\n    return stack2;\n  });\n}\nfunction parseFFOrSafariStackTrace(stack) {\n  return stack.split(\"\\n\").map((line) => parseSingleFFOrSafariStack(line)).filter(notNullish);\n}\nfunction parseV8Stacktrace(stack) {\n  return stack.split(\"\\n\").map((line) => parseSingleV8Stack(line)).filter(notNullish);\n}\nfunction parseErrorStacktrace(e, options = {}) {\n  if (!e || isPrimitive(e)) {\n    return [];\n  }\n  if (e.stacks) {\n    return e.stacks;\n  }\n  const stackStr = e.stack || e.stackStr || \"\";\n  let stackFrames = parseStacktrace(stackStr, options);\n  if (options.frameFilter) {\n    stackFrames = stackFrames.filter(\n      (f) => options.frameFilter(e, f) !== false\n    );\n  }\n  e.stacks = stackFrames;\n  return stackFrames;\n}\n\nasync function saveInlineSnapshots(environment, snapshots) {\n  const MagicString = (await __webpack_require__.e(/*! import() */ \"node_modules_magic-string_dist_magic-string_es_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! magic-string */ \"./node_modules/magic-string/dist/magic-string.es.mjs\"))).default;\n  const files = new Set(snapshots.map((i) => i.file));\n  await Promise.all(\n    Array.from(files).map(async (file) => {\n      const snaps = snapshots.filter((i) => i.file === file);\n      const code = await environment.readSnapshotFile(file);\n      const s = new MagicString(code);\n      for (const snap of snaps) {\n        const index = positionToOffset(code, snap.line, snap.column);\n        replaceInlineSnap(code, s, index, snap.snapshot);\n      }\n      const transformed = s.toString();\n      if (transformed !== code) {\n        await environment.saveSnapshotFile(file, transformed);\n      }\n    })\n  );\n}\nconst startObjectRegex = /(?:toMatchInlineSnapshot|toThrowErrorMatchingInlineSnapshot)\\s*\\(\\s*(?:\\/\\*[\\s\\S]*\\*\\/\\s*|\\/\\/.*(?:[\\n\\r\\u2028\\u2029]\\s*|[\\t\\v\\f \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000\\uFEFF]))*\\{/;\nfunction replaceObjectSnap(code, s, index, newSnap) {\n  let _code = code.slice(index);\n  const startMatch = startObjectRegex.exec(_code);\n  if (!startMatch) {\n    return false;\n  }\n  _code = _code.slice(startMatch.index);\n  let callEnd = getCallLastIndex(_code);\n  if (callEnd === null) {\n    return false;\n  }\n  callEnd += index + startMatch.index;\n  const shapeStart = index + startMatch.index + startMatch[0].length;\n  const shapeEnd = getObjectShapeEndIndex(code, shapeStart);\n  const snap = `, ${prepareSnapString(newSnap, code, index)}`;\n  if (shapeEnd === callEnd) {\n    s.appendLeft(callEnd, snap);\n  } else {\n    s.overwrite(shapeEnd, callEnd, snap);\n  }\n  return true;\n}\nfunction getObjectShapeEndIndex(code, index) {\n  let startBraces = 1;\n  let endBraces = 0;\n  while (startBraces !== endBraces && index < code.length) {\n    const s = code[index++];\n    if (s === \"{\") {\n      startBraces++;\n    } else if (s === \"}\") {\n      endBraces++;\n    }\n  }\n  return index;\n}\nfunction prepareSnapString(snap, source, index) {\n  const lineNumber = offsetToLineNumber(source, index);\n  const line = source.split(lineSplitRE)[lineNumber - 1];\n  const indent = line.match(/^\\s*/)[0] || \"\";\n  const indentNext = indent.includes(\"\t\") ? `${indent}\t` : `${indent}  `;\n  const lines = snap.trim().replace(/\\\\/g, \"\\\\\\\\\").split(/\\n/g);\n  const isOneline = lines.length <= 1;\n  const quote = \"`\";\n  if (isOneline) {\n    return `${quote}${lines.join(\"\\n\").replace(/`/g, \"\\\\`\").replace(/\\$\\{/g, \"\\\\${\")}${quote}`;\n  }\n  return `${quote}\n${lines.map((i) => i ? indentNext + i : \"\").join(\"\\n\").replace(/`/g, \"\\\\`\").replace(/\\$\\{/g, \"\\\\${\")}\n${indent}${quote}`;\n}\nconst toMatchInlineName = \"toMatchInlineSnapshot\";\nconst toThrowErrorMatchingInlineName = \"toThrowErrorMatchingInlineSnapshot\";\nfunction getCodeStartingAtIndex(code, index) {\n  const indexInline = index - toMatchInlineName.length;\n  if (code.slice(indexInline, index) === toMatchInlineName) {\n    return {\n      code: code.slice(indexInline),\n      index: indexInline\n    };\n  }\n  const indexThrowInline = index - toThrowErrorMatchingInlineName.length;\n  if (code.slice(index - indexThrowInline, index) === toThrowErrorMatchingInlineName) {\n    return {\n      code: code.slice(index - indexThrowInline),\n      index: index - indexThrowInline\n    };\n  }\n  return {\n    code: code.slice(index),\n    index\n  };\n}\nconst startRegex = /(?:toMatchInlineSnapshot|toThrowErrorMatchingInlineSnapshot)\\s*\\(\\s*(?:\\/\\*[\\s\\S]*\\*\\/\\s*|\\/\\/.*(?:[\\n\\r\\u2028\\u2029]\\s*|[\\t\\v\\f \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000\\uFEFF]))*[\\w$]*(['\"`)])/;\nfunction replaceInlineSnap(code, s, currentIndex, newSnap) {\n  const { code: codeStartingAtIndex, index } = getCodeStartingAtIndex(code, currentIndex);\n  const startMatch = startRegex.exec(codeStartingAtIndex);\n  const firstKeywordMatch = /toMatchInlineSnapshot|toThrowErrorMatchingInlineSnapshot/.exec(\n    codeStartingAtIndex\n  );\n  if (!startMatch || startMatch.index !== (firstKeywordMatch == null ? void 0 : firstKeywordMatch.index)) {\n    return replaceObjectSnap(code, s, index, newSnap);\n  }\n  const quote = startMatch[1];\n  const startIndex = index + startMatch.index + startMatch[0].length;\n  const snapString = prepareSnapString(newSnap, code, index);\n  if (quote === \")\") {\n    s.appendRight(startIndex - 1, snapString);\n    return true;\n  }\n  const quoteEndRE = new RegExp(`(?:^|[^\\\\\\\\])${quote}`);\n  const endMatch = quoteEndRE.exec(code.slice(startIndex));\n  if (!endMatch) {\n    return false;\n  }\n  const endIndex = startIndex + endMatch.index + endMatch[0].length;\n  s.overwrite(startIndex - 1, endIndex, snapString);\n  return true;\n}\nconst INDENTATION_REGEX = /^([^\\S\\n]*)\\S/m;\nfunction stripSnapshotIndentation(inlineSnapshot) {\n  const match = inlineSnapshot.match(INDENTATION_REGEX);\n  if (!match || !match[1]) {\n    return inlineSnapshot;\n  }\n  const indentation = match[1];\n  const lines = inlineSnapshot.split(/\\n/g);\n  if (lines.length <= 2) {\n    return inlineSnapshot;\n  }\n  if (lines[0].trim() !== \"\" || lines[lines.length - 1].trim() !== \"\") {\n    return inlineSnapshot;\n  }\n  for (let i = 1; i < lines.length - 1; i++) {\n    if (lines[i] !== \"\") {\n      if (lines[i].indexOf(indentation) !== 0) {\n        return inlineSnapshot;\n      }\n      lines[i] = lines[i].substring(indentation.length);\n    }\n  }\n  lines[lines.length - 1] = \"\";\n  inlineSnapshot = lines.join(\"\\n\");\n  return inlineSnapshot;\n}\n\nasync function saveRawSnapshots(environment, snapshots) {\n  await Promise.all(\n    snapshots.map(async (snap) => {\n      if (!snap.readonly) {\n        await environment.saveSnapshotFile(snap.file, snap.snapshot);\n      }\n    })\n  );\n}\n\nclass SnapshotState {\n  constructor(testFilePath, snapshotPath, snapshotContent, options) {\n    this.testFilePath = testFilePath;\n    this.snapshotPath = snapshotPath;\n    const { data, dirty } = getSnapshotData(snapshotContent, options);\n    this._fileExists = snapshotContent != null;\n    this._initialData = data;\n    this._snapshotData = data;\n    this._dirty = dirty;\n    this._inlineSnapshots = [];\n    this._rawSnapshots = [];\n    this._uncheckedKeys = new Set(Object.keys(this._snapshotData));\n    this._counters = /* @__PURE__ */ new Map();\n    this.expand = options.expand || false;\n    this.added = 0;\n    this.matched = 0;\n    this.unmatched = 0;\n    this._updateSnapshot = options.updateSnapshot;\n    this.updated = 0;\n    this._snapshotFormat = {\n      printBasicPrototype: false,\n      escapeString: false,\n      ...options.snapshotFormat\n    };\n    this._environment = options.snapshotEnvironment;\n  }\n  _counters;\n  _dirty;\n  _updateSnapshot;\n  _snapshotData;\n  _initialData;\n  _inlineSnapshots;\n  _rawSnapshots;\n  _uncheckedKeys;\n  _snapshotFormat;\n  _environment;\n  _fileExists;\n  added;\n  expand;\n  matched;\n  unmatched;\n  updated;\n  static async create(testFilePath, options) {\n    const snapshotPath = await options.snapshotEnvironment.resolvePath(\n      testFilePath\n    );\n    const content = await options.snapshotEnvironment.readSnapshotFile(\n      snapshotPath\n    );\n    return new SnapshotState(testFilePath, snapshotPath, content, options);\n  }\n  get environment() {\n    return this._environment;\n  }\n  markSnapshotsAsCheckedForTest(testName) {\n    this._uncheckedKeys.forEach((uncheckedKey) => {\n      if (keyToTestName(uncheckedKey) === testName) {\n        this._uncheckedKeys.delete(uncheckedKey);\n      }\n    });\n  }\n  _inferInlineSnapshotStack(stacks) {\n    const promiseIndex = stacks.findIndex(\n      (i) => i.method.match(/__VITEST_(RESOLVES|REJECTS)__/)\n    );\n    if (promiseIndex !== -1) {\n      return stacks[promiseIndex + 3];\n    }\n    const stackIndex = stacks.findIndex(\n      (i) => i.method.includes(\"__INLINE_SNAPSHOT__\")\n    );\n    return stackIndex !== -1 ? stacks[stackIndex + 2] : null;\n  }\n  _addSnapshot(key, receivedSerialized, options) {\n    var _a, _b;\n    this._dirty = true;\n    if (options.isInline) {\n      const error = options.error || new Error(\"snapshot\");\n      const stacks = parseErrorStacktrace(\n        error,\n        { ignoreStackEntries: [] }\n      );\n      const _stack = this._inferInlineSnapshotStack(stacks);\n      if (!_stack) {\n        throw new Error(\n          `@vitest/snapshot: Couldn't infer stack frame for inline snapshot.\n${JSON.stringify(\n            stacks\n          )}`\n        );\n      }\n      const stack = ((_b = (_a = this.environment).processStackTrace) == null ? void 0 : _b.call(_a, _stack)) || _stack;\n      stack.column--;\n      this._inlineSnapshots.push({\n        snapshot: receivedSerialized,\n        ...stack\n      });\n    } else if (options.rawSnapshot) {\n      this._rawSnapshots.push({\n        ...options.rawSnapshot,\n        snapshot: receivedSerialized\n      });\n    } else {\n      this._snapshotData[key] = receivedSerialized;\n    }\n  }\n  clear() {\n    this._snapshotData = this._initialData;\n    this._counters = /* @__PURE__ */ new Map();\n    this.added = 0;\n    this.matched = 0;\n    this.unmatched = 0;\n    this.updated = 0;\n    this._dirty = false;\n  }\n  async save() {\n    const hasExternalSnapshots = Object.keys(this._snapshotData).length;\n    const hasInlineSnapshots = this._inlineSnapshots.length;\n    const hasRawSnapshots = this._rawSnapshots.length;\n    const isEmpty = !hasExternalSnapshots && !hasInlineSnapshots && !hasRawSnapshots;\n    const status = {\n      deleted: false,\n      saved: false\n    };\n    if ((this._dirty || this._uncheckedKeys.size) && !isEmpty) {\n      if (hasExternalSnapshots) {\n        await saveSnapshotFile(\n          this._environment,\n          this._snapshotData,\n          this.snapshotPath\n        );\n        this._fileExists = true;\n      }\n      if (hasInlineSnapshots) {\n        await saveInlineSnapshots(this._environment, this._inlineSnapshots);\n      }\n      if (hasRawSnapshots) {\n        await saveRawSnapshots(this._environment, this._rawSnapshots);\n      }\n      status.saved = true;\n    } else if (!hasExternalSnapshots && this._fileExists) {\n      if (this._updateSnapshot === \"all\") {\n        await this._environment.removeSnapshotFile(this.snapshotPath);\n        this._fileExists = false;\n      }\n      status.deleted = true;\n    }\n    return status;\n  }\n  getUncheckedCount() {\n    return this._uncheckedKeys.size || 0;\n  }\n  getUncheckedKeys() {\n    return Array.from(this._uncheckedKeys);\n  }\n  removeUncheckedKeys() {\n    if (this._updateSnapshot === \"all\" && this._uncheckedKeys.size) {\n      this._dirty = true;\n      this._uncheckedKeys.forEach((key) => delete this._snapshotData[key]);\n      this._uncheckedKeys.clear();\n    }\n  }\n  match({\n    testName,\n    received,\n    key,\n    inlineSnapshot,\n    isInline,\n    error,\n    rawSnapshot\n  }) {\n    this._counters.set(testName, (this._counters.get(testName) || 0) + 1);\n    const count = Number(this._counters.get(testName));\n    if (!key) {\n      key = testNameToKey(testName, count);\n    }\n    if (!(isInline && this._snapshotData[key] !== void 0)) {\n      this._uncheckedKeys.delete(key);\n    }\n    let receivedSerialized = rawSnapshot && typeof received === \"string\" ? received : serialize(received, void 0, this._snapshotFormat);\n    if (!rawSnapshot) {\n      receivedSerialized = addExtraLineBreaks(receivedSerialized);\n    }\n    if (rawSnapshot) {\n      if (rawSnapshot.content && rawSnapshot.content.match(/\\r\\n/) && !receivedSerialized.match(/\\r\\n/)) {\n        rawSnapshot.content = normalizeNewlines(rawSnapshot.content);\n      }\n    }\n    const expected = isInline ? inlineSnapshot : rawSnapshot ? rawSnapshot.content : this._snapshotData[key];\n    const expectedTrimmed = prepareExpected(expected);\n    const pass = expectedTrimmed === prepareExpected(receivedSerialized);\n    const hasSnapshot = expected !== void 0;\n    const snapshotIsPersisted = isInline || this._fileExists || rawSnapshot && rawSnapshot.content != null;\n    if (pass && !isInline && !rawSnapshot) {\n      this._snapshotData[key] = receivedSerialized;\n    }\n    if (hasSnapshot && this._updateSnapshot === \"all\" || (!hasSnapshot || !snapshotIsPersisted) && (this._updateSnapshot === \"new\" || this._updateSnapshot === \"all\")) {\n      if (this._updateSnapshot === \"all\") {\n        if (!pass) {\n          if (hasSnapshot) {\n            this.updated++;\n          } else {\n            this.added++;\n          }\n          this._addSnapshot(key, receivedSerialized, {\n            error,\n            isInline,\n            rawSnapshot\n          });\n        } else {\n          this.matched++;\n        }\n      } else {\n        this._addSnapshot(key, receivedSerialized, {\n          error,\n          isInline,\n          rawSnapshot\n        });\n        this.added++;\n      }\n      return {\n        actual: \"\",\n        count,\n        expected: \"\",\n        key,\n        pass: true\n      };\n    } else {\n      if (!pass) {\n        this.unmatched++;\n        return {\n          actual: removeExtraLineBreaks(receivedSerialized),\n          count,\n          expected: expectedTrimmed !== void 0 ? removeExtraLineBreaks(expectedTrimmed) : void 0,\n          key,\n          pass: false\n        };\n      } else {\n        this.matched++;\n        return {\n          actual: \"\",\n          count,\n          expected: \"\",\n          key,\n          pass: true\n        };\n      }\n    }\n  }\n  async pack() {\n    const snapshot = {\n      filepath: this.testFilePath,\n      added: 0,\n      fileDeleted: false,\n      matched: 0,\n      unchecked: 0,\n      uncheckedKeys: [],\n      unmatched: 0,\n      updated: 0\n    };\n    const uncheckedCount = this.getUncheckedCount();\n    const uncheckedKeys = this.getUncheckedKeys();\n    if (uncheckedCount) {\n      this.removeUncheckedKeys();\n    }\n    const status = await this.save();\n    snapshot.fileDeleted = status.deleted;\n    snapshot.added = this.added;\n    snapshot.matched = this.matched;\n    snapshot.unmatched = this.unmatched;\n    snapshot.updated = this.updated;\n    snapshot.unchecked = !status.deleted ? uncheckedCount : 0;\n    snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n    return snapshot;\n  }\n}\n\nfunction createMismatchError(message, expand, actual, expected) {\n  const error = new Error(message);\n  Object.defineProperty(error, \"actual\", {\n    value: actual,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  });\n  Object.defineProperty(error, \"expected\", {\n    value: expected,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  });\n  Object.defineProperty(error, \"diffOptions\", { value: { expand } });\n  return error;\n}\nclass SnapshotClient {\n  constructor(options = {}) {\n    this.options = options;\n  }\n  filepath;\n  name;\n  snapshotState;\n  snapshotStateMap = /* @__PURE__ */ new Map();\n  async startCurrentRun(filepath, name, options) {\n    var _a;\n    this.filepath = filepath;\n    this.name = name;\n    if (((_a = this.snapshotState) == null ? void 0 : _a.testFilePath) !== filepath) {\n      await this.finishCurrentRun();\n      if (!this.getSnapshotState(filepath)) {\n        this.snapshotStateMap.set(\n          filepath,\n          await SnapshotState.create(filepath, options)\n        );\n      }\n      this.snapshotState = this.getSnapshotState(filepath);\n    }\n  }\n  getSnapshotState(filepath) {\n    return this.snapshotStateMap.get(filepath);\n  }\n  clearTest() {\n    this.filepath = void 0;\n    this.name = void 0;\n  }\n  skipTestSnapshots(name) {\n    var _a;\n    (_a = this.snapshotState) == null ? void 0 : _a.markSnapshotsAsCheckedForTest(name);\n  }\n  assert(options) {\n    var _a, _b, _c, _d;\n    const {\n      filepath = this.filepath,\n      name = this.name,\n      message,\n      isInline = false,\n      properties,\n      inlineSnapshot,\n      error,\n      errorMessage,\n      rawSnapshot\n    } = options;\n    let { received } = options;\n    if (!filepath) {\n      throw new Error(\"Snapshot cannot be used outside of test\");\n    }\n    if (typeof properties === \"object\") {\n      if (typeof received !== \"object\" || !received) {\n        throw new Error(\n          \"Received value must be an object when the matcher has properties\"\n        );\n      }\n      try {\n        const pass2 = ((_b = (_a = this.options).isEqual) == null ? void 0 : _b.call(_a, received, properties)) ?? false;\n        if (!pass2) {\n          throw createMismatchError(\n            \"Snapshot properties mismatched\",\n            (_c = this.snapshotState) == null ? void 0 : _c.expand,\n            received,\n            properties\n          );\n        } else {\n          received = deepMergeSnapshot(received, properties);\n        }\n      } catch (err) {\n        err.message = errorMessage || \"Snapshot mismatched\";\n        throw err;\n      }\n    }\n    const testName = [name, ...message ? [message] : []].join(\" > \");\n    const snapshotState = this.getSnapshotState(filepath);\n    const { actual, expected, key, pass } = snapshotState.match({\n      testName,\n      received,\n      isInline,\n      error,\n      inlineSnapshot,\n      rawSnapshot\n    });\n    if (!pass) {\n      throw createMismatchError(\n        `Snapshot \\`${key || \"unknown\"}\\` mismatched`,\n        (_d = this.snapshotState) == null ? void 0 : _d.expand,\n        actual == null ? void 0 : actual.trim(),\n        expected == null ? void 0 : expected.trim()\n      );\n    }\n  }\n  async assertRaw(options) {\n    if (!options.rawSnapshot) {\n      throw new Error(\"Raw snapshot is required\");\n    }\n    const { filepath = this.filepath, rawSnapshot } = options;\n    if (rawSnapshot.content == null) {\n      if (!filepath) {\n        throw new Error(\"Snapshot cannot be used outside of test\");\n      }\n      const snapshotState = this.getSnapshotState(filepath);\n      options.filepath || (options.filepath = filepath);\n      rawSnapshot.file = await snapshotState.environment.resolveRawPath(\n        filepath,\n        rawSnapshot.file\n      );\n      rawSnapshot.content = await snapshotState.environment.readSnapshotFile(rawSnapshot.file) ?? void 0;\n    }\n    return this.assert(options);\n  }\n  async finishCurrentRun() {\n    if (!this.snapshotState) {\n      return null;\n    }\n    const result = await this.snapshotState.pack();\n    this.snapshotState = void 0;\n    return result;\n  }\n  clear() {\n    this.snapshotStateMap.clear();\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/snapshot/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/spy/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/@vitest/spy/dist/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fn: function() { return /* binding */ fn; },\n/* harmony export */   isMockFunction: function() { return /* binding */ isMockFunction; },\n/* harmony export */   mocks: function() { return /* binding */ mocks; },\n/* harmony export */   spyOn: function() { return /* binding */ spyOn; }\n/* harmony export */ });\n/* harmony import */ var tinyspy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinyspy */ \"./node_modules/tinyspy/dist/index.js\");\n\n\nconst mocks = /* @__PURE__ */ new Set();\nfunction isMockFunction(fn2) {\n  return typeof fn2 === \"function\" && \"_isMockFunction\" in fn2 && fn2._isMockFunction;\n}\nfunction spyOn(obj, method, accessType) {\n  const dictionary = {\n    get: \"getter\",\n    set: \"setter\"\n  };\n  const objMethod = accessType ? { [dictionary[accessType]]: method } : method;\n  const stub = tinyspy__WEBPACK_IMPORTED_MODULE_0__.internalSpyOn(obj, objMethod);\n  return enhanceSpy(stub);\n}\nlet callOrder = 0;\nfunction enhanceSpy(spy) {\n  const stub = spy;\n  let implementation;\n  let instances = [];\n  let contexts = [];\n  let invocations = [];\n  const state = tinyspy__WEBPACK_IMPORTED_MODULE_0__.getInternalState(spy);\n  const mockContext = {\n    get calls() {\n      return state.calls;\n    },\n    get contexts() {\n      return contexts;\n    },\n    get instances() {\n      return instances;\n    },\n    get invocationCallOrder() {\n      return invocations;\n    },\n    get results() {\n      return state.results.map(([callType, value]) => {\n        const type = callType === \"error\" ? \"throw\" : \"return\";\n        return { type, value };\n      });\n    },\n    get settledResults() {\n      return state.resolves.map(([callType, value]) => {\n        const type = callType === \"error\" ? \"rejected\" : \"fulfilled\";\n        return { type, value };\n      });\n    },\n    get lastCall() {\n      return state.calls[state.calls.length - 1];\n    }\n  };\n  let onceImplementations = [];\n  let implementationChangedTemporarily = false;\n  function mockCall(...args) {\n    instances.push(this);\n    contexts.push(this);\n    invocations.push(++callOrder);\n    const impl = implementationChangedTemporarily ? implementation : onceImplementations.shift() || implementation || state.getOriginal() || (() => {\n    });\n    return impl.apply(this, args);\n  }\n  let name = stub.name;\n  stub.getMockName = () => name || \"vi.fn()\";\n  stub.mockName = (n) => {\n    name = n;\n    return stub;\n  };\n  stub.mockClear = () => {\n    state.reset();\n    instances = [];\n    contexts = [];\n    invocations = [];\n    return stub;\n  };\n  stub.mockReset = () => {\n    stub.mockClear();\n    implementation = () => void 0;\n    onceImplementations = [];\n    return stub;\n  };\n  stub.mockRestore = () => {\n    stub.mockReset();\n    state.restore();\n    implementation = void 0;\n    return stub;\n  };\n  stub.getMockImplementation = () => implementation;\n  stub.mockImplementation = (fn2) => {\n    implementation = fn2;\n    state.willCall(mockCall);\n    return stub;\n  };\n  stub.mockImplementationOnce = (fn2) => {\n    onceImplementations.push(fn2);\n    return stub;\n  };\n  function withImplementation(fn2, cb) {\n    const originalImplementation = implementation;\n    implementation = fn2;\n    state.willCall(mockCall);\n    implementationChangedTemporarily = true;\n    const reset = () => {\n      implementation = originalImplementation;\n      implementationChangedTemporarily = false;\n    };\n    const result = cb();\n    if (result instanceof Promise) {\n      return result.then(() => {\n        reset();\n        return stub;\n      });\n    }\n    reset();\n    return stub;\n  }\n  stub.withImplementation = withImplementation;\n  stub.mockReturnThis = () => stub.mockImplementation(function() {\n    return this;\n  });\n  stub.mockReturnValue = (val) => stub.mockImplementation(() => val);\n  stub.mockReturnValueOnce = (val) => stub.mockImplementationOnce(() => val);\n  stub.mockResolvedValue = (val) => stub.mockImplementation(() => Promise.resolve(val));\n  stub.mockResolvedValueOnce = (val) => stub.mockImplementationOnce(() => Promise.resolve(val));\n  stub.mockRejectedValue = (val) => stub.mockImplementation(() => Promise.reject(val));\n  stub.mockRejectedValueOnce = (val) => stub.mockImplementationOnce(() => Promise.reject(val));\n  Object.defineProperty(stub, \"mock\", {\n    get: () => mockContext\n  });\n  state.willCall(mockCall);\n  mocks.add(stub);\n  return stub;\n}\nfunction fn(implementation) {\n  const enhancedSpy = enhanceSpy(tinyspy__WEBPACK_IMPORTED_MODULE_0__.internalSpyOn({\n    spy: implementation || function() {\n    }\n  }, \"spy\"));\n  if (implementation) {\n    enhancedSpy.mockImplementation(implementation);\n  }\n  return enhancedSpy;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZpdGVzdC9zcHkvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG1DQUFtQztBQUN0RSxlQUFlLGtEQUFxQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQXdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0RBQXFCO0FBQ3REO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2aXRlc3Qvc3B5L2Rpc3QvaW5kZXguanM/OTQ0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0aW55c3B5IGZyb20gJ3RpbnlzcHknO1xuXG5jb25zdCBtb2NrcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG5mdW5jdGlvbiBpc01vY2tGdW5jdGlvbihmbjIpIHtcbiAgcmV0dXJuIHR5cGVvZiBmbjIgPT09IFwiZnVuY3Rpb25cIiAmJiBcIl9pc01vY2tGdW5jdGlvblwiIGluIGZuMiAmJiBmbjIuX2lzTW9ja0Z1bmN0aW9uO1xufVxuZnVuY3Rpb24gc3B5T24ob2JqLCBtZXRob2QsIGFjY2Vzc1R5cGUpIHtcbiAgY29uc3QgZGljdGlvbmFyeSA9IHtcbiAgICBnZXQ6IFwiZ2V0dGVyXCIsXG4gICAgc2V0OiBcInNldHRlclwiXG4gIH07XG4gIGNvbnN0IG9iak1ldGhvZCA9IGFjY2Vzc1R5cGUgPyB7IFtkaWN0aW9uYXJ5W2FjY2Vzc1R5cGVdXTogbWV0aG9kIH0gOiBtZXRob2Q7XG4gIGNvbnN0IHN0dWIgPSB0aW55c3B5LmludGVybmFsU3B5T24ob2JqLCBvYmpNZXRob2QpO1xuICByZXR1cm4gZW5oYW5jZVNweShzdHViKTtcbn1cbmxldCBjYWxsT3JkZXIgPSAwO1xuZnVuY3Rpb24gZW5oYW5jZVNweShzcHkpIHtcbiAgY29uc3Qgc3R1YiA9IHNweTtcbiAgbGV0IGltcGxlbWVudGF0aW9uO1xuICBsZXQgaW5zdGFuY2VzID0gW107XG4gIGxldCBjb250ZXh0cyA9IFtdO1xuICBsZXQgaW52b2NhdGlvbnMgPSBbXTtcbiAgY29uc3Qgc3RhdGUgPSB0aW55c3B5LmdldEludGVybmFsU3RhdGUoc3B5KTtcbiAgY29uc3QgbW9ja0NvbnRleHQgPSB7XG4gICAgZ2V0IGNhbGxzKCkge1xuICAgICAgcmV0dXJuIHN0YXRlLmNhbGxzO1xuICAgIH0sXG4gICAgZ2V0IGNvbnRleHRzKCkge1xuICAgICAgcmV0dXJuIGNvbnRleHRzO1xuICAgIH0sXG4gICAgZ2V0IGluc3RhbmNlcygpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZXM7XG4gICAgfSxcbiAgICBnZXQgaW52b2NhdGlvbkNhbGxPcmRlcigpIHtcbiAgICAgIHJldHVybiBpbnZvY2F0aW9ucztcbiAgICB9LFxuICAgIGdldCByZXN1bHRzKCkge1xuICAgICAgcmV0dXJuIHN0YXRlLnJlc3VsdHMubWFwKChbY2FsbFR5cGUsIHZhbHVlXSkgPT4ge1xuICAgICAgICBjb25zdCB0eXBlID0gY2FsbFR5cGUgPT09IFwiZXJyb3JcIiA/IFwidGhyb3dcIiA6IFwicmV0dXJuXCI7XG4gICAgICAgIHJldHVybiB7IHR5cGUsIHZhbHVlIH07XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldCBzZXR0bGVkUmVzdWx0cygpIHtcbiAgICAgIHJldHVybiBzdGF0ZS5yZXNvbHZlcy5tYXAoKFtjYWxsVHlwZSwgdmFsdWVdKSA9PiB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSBjYWxsVHlwZSA9PT0gXCJlcnJvclwiID8gXCJyZWplY3RlZFwiIDogXCJmdWxmaWxsZWRcIjtcbiAgICAgICAgcmV0dXJuIHsgdHlwZSwgdmFsdWUgfTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0IGxhc3RDYWxsKCkge1xuICAgICAgcmV0dXJuIHN0YXRlLmNhbGxzW3N0YXRlLmNhbGxzLmxlbmd0aCAtIDFdO1xuICAgIH1cbiAgfTtcbiAgbGV0IG9uY2VJbXBsZW1lbnRhdGlvbnMgPSBbXTtcbiAgbGV0IGltcGxlbWVudGF0aW9uQ2hhbmdlZFRlbXBvcmFyaWx5ID0gZmFsc2U7XG4gIGZ1bmN0aW9uIG1vY2tDYWxsKC4uLmFyZ3MpIHtcbiAgICBpbnN0YW5jZXMucHVzaCh0aGlzKTtcbiAgICBjb250ZXh0cy5wdXNoKHRoaXMpO1xuICAgIGludm9jYXRpb25zLnB1c2goKytjYWxsT3JkZXIpO1xuICAgIGNvbnN0IGltcGwgPSBpbXBsZW1lbnRhdGlvbkNoYW5nZWRUZW1wb3JhcmlseSA/IGltcGxlbWVudGF0aW9uIDogb25jZUltcGxlbWVudGF0aW9ucy5zaGlmdCgpIHx8IGltcGxlbWVudGF0aW9uIHx8IHN0YXRlLmdldE9yaWdpbmFsKCkgfHwgKCgpID0+IHtcbiAgICB9KTtcbiAgICByZXR1cm4gaW1wbC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfVxuICBsZXQgbmFtZSA9IHN0dWIubmFtZTtcbiAgc3R1Yi5nZXRNb2NrTmFtZSA9ICgpID0+IG5hbWUgfHwgXCJ2aS5mbigpXCI7XG4gIHN0dWIubW9ja05hbWUgPSAobikgPT4ge1xuICAgIG5hbWUgPSBuO1xuICAgIHJldHVybiBzdHViO1xuICB9O1xuICBzdHViLm1vY2tDbGVhciA9ICgpID0+IHtcbiAgICBzdGF0ZS5yZXNldCgpO1xuICAgIGluc3RhbmNlcyA9IFtdO1xuICAgIGNvbnRleHRzID0gW107XG4gICAgaW52b2NhdGlvbnMgPSBbXTtcbiAgICByZXR1cm4gc3R1YjtcbiAgfTtcbiAgc3R1Yi5tb2NrUmVzZXQgPSAoKSA9PiB7XG4gICAgc3R1Yi5tb2NrQ2xlYXIoKTtcbiAgICBpbXBsZW1lbnRhdGlvbiA9ICgpID0+IHZvaWQgMDtcbiAgICBvbmNlSW1wbGVtZW50YXRpb25zID0gW107XG4gICAgcmV0dXJuIHN0dWI7XG4gIH07XG4gIHN0dWIubW9ja1Jlc3RvcmUgPSAoKSA9PiB7XG4gICAgc3R1Yi5tb2NrUmVzZXQoKTtcbiAgICBzdGF0ZS5yZXN0b3JlKCk7XG4gICAgaW1wbGVtZW50YXRpb24gPSB2b2lkIDA7XG4gICAgcmV0dXJuIHN0dWI7XG4gIH07XG4gIHN0dWIuZ2V0TW9ja0ltcGxlbWVudGF0aW9uID0gKCkgPT4gaW1wbGVtZW50YXRpb247XG4gIHN0dWIubW9ja0ltcGxlbWVudGF0aW9uID0gKGZuMikgPT4ge1xuICAgIGltcGxlbWVudGF0aW9uID0gZm4yO1xuICAgIHN0YXRlLndpbGxDYWxsKG1vY2tDYWxsKTtcbiAgICByZXR1cm4gc3R1YjtcbiAgfTtcbiAgc3R1Yi5tb2NrSW1wbGVtZW50YXRpb25PbmNlID0gKGZuMikgPT4ge1xuICAgIG9uY2VJbXBsZW1lbnRhdGlvbnMucHVzaChmbjIpO1xuICAgIHJldHVybiBzdHViO1xuICB9O1xuICBmdW5jdGlvbiB3aXRoSW1wbGVtZW50YXRpb24oZm4yLCBjYikge1xuICAgIGNvbnN0IG9yaWdpbmFsSW1wbGVtZW50YXRpb24gPSBpbXBsZW1lbnRhdGlvbjtcbiAgICBpbXBsZW1lbnRhdGlvbiA9IGZuMjtcbiAgICBzdGF0ZS53aWxsQ2FsbChtb2NrQ2FsbCk7XG4gICAgaW1wbGVtZW50YXRpb25DaGFuZ2VkVGVtcG9yYXJpbHkgPSB0cnVlO1xuICAgIGNvbnN0IHJlc2V0ID0gKCkgPT4ge1xuICAgICAgaW1wbGVtZW50YXRpb24gPSBvcmlnaW5hbEltcGxlbWVudGF0aW9uO1xuICAgICAgaW1wbGVtZW50YXRpb25DaGFuZ2VkVGVtcG9yYXJpbHkgPSBmYWxzZTtcbiAgICB9O1xuICAgIGNvbnN0IHJlc3VsdCA9IGNiKCk7XG4gICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgIHJldHVybiByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgIHJlc2V0KCk7XG4gICAgICAgIHJldHVybiBzdHViO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJlc2V0KCk7XG4gICAgcmV0dXJuIHN0dWI7XG4gIH1cbiAgc3R1Yi53aXRoSW1wbGVtZW50YXRpb24gPSB3aXRoSW1wbGVtZW50YXRpb247XG4gIHN0dWIubW9ja1JldHVyblRoaXMgPSAoKSA9PiBzdHViLm1vY2tJbXBsZW1lbnRhdGlvbihmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG4gIHN0dWIubW9ja1JldHVyblZhbHVlID0gKHZhbCkgPT4gc3R1Yi5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4gdmFsKTtcbiAgc3R1Yi5tb2NrUmV0dXJuVmFsdWVPbmNlID0gKHZhbCkgPT4gc3R1Yi5tb2NrSW1wbGVtZW50YXRpb25PbmNlKCgpID0+IHZhbCk7XG4gIHN0dWIubW9ja1Jlc29sdmVkVmFsdWUgPSAodmFsKSA9PiBzdHViLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiBQcm9taXNlLnJlc29sdmUodmFsKSk7XG4gIHN0dWIubW9ja1Jlc29sdmVkVmFsdWVPbmNlID0gKHZhbCkgPT4gc3R1Yi5tb2NrSW1wbGVtZW50YXRpb25PbmNlKCgpID0+IFByb21pc2UucmVzb2x2ZSh2YWwpKTtcbiAgc3R1Yi5tb2NrUmVqZWN0ZWRWYWx1ZSA9ICh2YWwpID0+IHN0dWIubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+IFByb21pc2UucmVqZWN0KHZhbCkpO1xuICBzdHViLm1vY2tSZWplY3RlZFZhbHVlT25jZSA9ICh2YWwpID0+IHN0dWIubW9ja0ltcGxlbWVudGF0aW9uT25jZSgoKSA9PiBQcm9taXNlLnJlamVjdCh2YWwpKTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHN0dWIsIFwibW9ja1wiLCB7XG4gICAgZ2V0OiAoKSA9PiBtb2NrQ29udGV4dFxuICB9KTtcbiAgc3RhdGUud2lsbENhbGwobW9ja0NhbGwpO1xuICBtb2Nrcy5hZGQoc3R1Yik7XG4gIHJldHVybiBzdHViO1xufVxuZnVuY3Rpb24gZm4oaW1wbGVtZW50YXRpb24pIHtcbiAgY29uc3QgZW5oYW5jZWRTcHkgPSBlbmhhbmNlU3B5KHRpbnlzcHkuaW50ZXJuYWxTcHlPbih7XG4gICAgc3B5OiBpbXBsZW1lbnRhdGlvbiB8fCBmdW5jdGlvbigpIHtcbiAgICB9XG4gIH0sIFwic3B5XCIpKTtcbiAgaWYgKGltcGxlbWVudGF0aW9uKSB7XG4gICAgZW5oYW5jZWRTcHkubW9ja0ltcGxlbWVudGF0aW9uKGltcGxlbWVudGF0aW9uKTtcbiAgfVxuICByZXR1cm4gZW5oYW5jZWRTcHk7XG59XG5cbmV4cG9ydCB7IGZuLCBpc01vY2tGdW5jdGlvbiwgbW9ja3MsIHNweU9uIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vitest/spy/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/utils/dist/chunk-display.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vitest/utils/dist/chunk-display.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   f: function() { return /* binding */ format; },\n/* harmony export */   i: function() { return /* binding */ inspect; },\n/* harmony export */   o: function() { return /* binding */ objDisplay; },\n/* harmony export */   s: function() { return /* binding */ stringify; }\n/* harmony export */ });\n/* harmony import */ var _vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vitest/pretty-format */ \"./node_modules/@vitest/pretty-format/dist/index.js\");\n/* harmony import */ var loupe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! loupe */ \"./node_modules/loupe/lib/index.js\");\n\n\n\nconst {\n  AsymmetricMatcher,\n  DOMCollection,\n  DOMElement,\n  Immutable,\n  ReactElement,\n  ReactTestComponent\n} = _vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.plugins;\nconst PLUGINS = [\n  ReactTestComponent,\n  ReactElement,\n  DOMElement,\n  DOMCollection,\n  Immutable,\n  AsymmetricMatcher\n];\nfunction stringify(object, maxDepth = 10, { maxLength, ...options } = {}) {\n  const MAX_LENGTH = maxLength ?? 1e4;\n  let result;\n  try {\n    result = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(object, {\n      maxDepth,\n      escapeString: false,\n      // min: true,\n      plugins: PLUGINS,\n      ...options\n    });\n  } catch {\n    result = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(object, {\n      callToJSON: false,\n      maxDepth,\n      escapeString: false,\n      // min: true,\n      plugins: PLUGINS,\n      ...options\n    });\n  }\n  return result.length >= MAX_LENGTH && maxDepth > 1 ? stringify(object, Math.floor(maxDepth / 2)) : result;\n}\n\nconst formatRegExp = /%[sdjifoOc%]/g;\nfunction format(...args) {\n  if (typeof args[0] !== \"string\") {\n    const objects = [];\n    for (let i2 = 0; i2 < args.length; i2++) {\n      objects.push(inspect(args[i2], { depth: 0, colors: false }));\n    }\n    return objects.join(\" \");\n  }\n  const len = args.length;\n  let i = 1;\n  const template = args[0];\n  let str = String(template).replace(formatRegExp, (x) => {\n    if (x === \"%%\") {\n      return \"%\";\n    }\n    if (i >= len) {\n      return x;\n    }\n    switch (x) {\n      case \"%s\": {\n        const value = args[i++];\n        if (typeof value === \"bigint\") {\n          return `${value.toString()}n`;\n        }\n        if (typeof value === \"number\" && value === 0 && 1 / value < 0) {\n          return \"-0\";\n        }\n        if (typeof value === \"object\" && value !== null) {\n          return inspect(value, { depth: 0, colors: false });\n        }\n        return String(value);\n      }\n      case \"%d\": {\n        const value = args[i++];\n        if (typeof value === \"bigint\") {\n          return `${value.toString()}n`;\n        }\n        return Number(value).toString();\n      }\n      case \"%i\": {\n        const value = args[i++];\n        if (typeof value === \"bigint\") {\n          return `${value.toString()}n`;\n        }\n        return Number.parseInt(String(value)).toString();\n      }\n      case \"%f\":\n        return Number.parseFloat(String(args[i++])).toString();\n      case \"%o\":\n        return inspect(args[i++], { showHidden: true, showProxy: true });\n      case \"%O\":\n        return inspect(args[i++]);\n      case \"%c\": {\n        i++;\n        return \"\";\n      }\n      case \"%j\":\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (err) {\n          const m = err.message;\n          if (\n            // chromium\n            m.includes(\"circular structure\") || m.includes(\"cyclic structures\") || m.includes(\"cyclic object\")\n          ) {\n            return \"[Circular]\";\n          }\n          throw err;\n        }\n      default:\n        return x;\n    }\n  });\n  for (let x = args[i]; i < len; x = args[++i]) {\n    if (x === null || typeof x !== \"object\") {\n      str += ` ${x}`;\n    } else {\n      str += ` ${inspect(x)}`;\n    }\n  }\n  return str;\n}\nfunction inspect(obj, options = {}) {\n  if (options.truncate === 0) {\n    options.truncate = Number.POSITIVE_INFINITY;\n  }\n  return loupe__WEBPACK_IMPORTED_MODULE_0__.inspect(obj, options);\n}\nfunction objDisplay(obj, options = {}) {\n  if (typeof options.truncate === \"undefined\") {\n    options.truncate = 40;\n  }\n  const str = inspect(obj, options);\n  const type = Object.prototype.toString.call(obj);\n  if (options.truncate && str.length >= options.truncate) {\n    if (type === \"[object Function]\") {\n      const fn = obj;\n      return !fn.name ? \"[Function]\" : `[Function: ${fn.name}]`;\n    } else if (type === \"[object Array]\") {\n      return `[ Array(${obj.length}) ]`;\n    } else if (type === \"[object Object]\") {\n      const keys = Object.keys(obj);\n      const kstr = keys.length > 2 ? `${keys.splice(0, 2).join(\", \")}, ...` : keys.join(\", \");\n      return `{ Object (${kstr}) }`;\n    } else {\n      return str;\n    }\n  }\n  return str;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZpdGVzdC91dGlscy9kaXN0L2NodW5rLWRpc3BsYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9FO0FBQ3JDOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsRUFBRSwwREFBTztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsd0JBQXdCLElBQUk7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsYUFBYSw2REFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSixhQUFhLDZEQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsa0JBQWtCO0FBQ3ZDLHVDQUF1Qyx5QkFBeUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx5QkFBeUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxtQ0FBbUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCx3QkFBd0IsU0FBUztBQUNqQztBQUNBLGlCQUFpQixFQUFFO0FBQ25CLE1BQU07QUFDTixpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSxTQUFTLDBDQUFhO0FBQ3RCO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsUUFBUTtBQUM3RCxNQUFNO0FBQ04sd0JBQXdCLFdBQVc7QUFDbkMsTUFBTTtBQUNOO0FBQ0Esd0NBQXdDLDZCQUE2QjtBQUNyRSxnQkFBZ0IsVUFBVSxLQUFLLEdBQUc7QUFDbEMsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Adml0ZXN0L3V0aWxzL2Rpc3QvY2h1bmstZGlzcGxheS5qcz9hYmExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdCBhcyBmb3JtYXQkMSwgcGx1Z2lucyB9IGZyb20gJ0B2aXRlc3QvcHJldHR5LWZvcm1hdCc7XG5pbXBvcnQgKiBhcyBsb3VwZSBmcm9tICdsb3VwZSc7XG5cbmNvbnN0IHtcbiAgQXN5bW1ldHJpY01hdGNoZXIsXG4gIERPTUNvbGxlY3Rpb24sXG4gIERPTUVsZW1lbnQsXG4gIEltbXV0YWJsZSxcbiAgUmVhY3RFbGVtZW50LFxuICBSZWFjdFRlc3RDb21wb25lbnRcbn0gPSBwbHVnaW5zO1xuY29uc3QgUExVR0lOUyA9IFtcbiAgUmVhY3RUZXN0Q29tcG9uZW50LFxuICBSZWFjdEVsZW1lbnQsXG4gIERPTUVsZW1lbnQsXG4gIERPTUNvbGxlY3Rpb24sXG4gIEltbXV0YWJsZSxcbiAgQXN5bW1ldHJpY01hdGNoZXJcbl07XG5mdW5jdGlvbiBzdHJpbmdpZnkob2JqZWN0LCBtYXhEZXB0aCA9IDEwLCB7IG1heExlbmd0aCwgLi4ub3B0aW9ucyB9ID0ge30pIHtcbiAgY29uc3QgTUFYX0xFTkdUSCA9IG1heExlbmd0aCA/PyAxZTQ7XG4gIGxldCByZXN1bHQ7XG4gIHRyeSB7XG4gICAgcmVzdWx0ID0gZm9ybWF0JDEob2JqZWN0LCB7XG4gICAgICBtYXhEZXB0aCxcbiAgICAgIGVzY2FwZVN0cmluZzogZmFsc2UsXG4gICAgICAvLyBtaW46IHRydWUsXG4gICAgICBwbHVnaW5zOiBQTFVHSU5TLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH0pO1xuICB9IGNhdGNoIHtcbiAgICByZXN1bHQgPSBmb3JtYXQkMShvYmplY3QsIHtcbiAgICAgIGNhbGxUb0pTT046IGZhbHNlLFxuICAgICAgbWF4RGVwdGgsXG4gICAgICBlc2NhcGVTdHJpbmc6IGZhbHNlLFxuICAgICAgLy8gbWluOiB0cnVlLFxuICAgICAgcGx1Z2luczogUExVR0lOUyxcbiAgICAgIC4uLm9wdGlvbnNcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA+PSBNQVhfTEVOR1RIICYmIG1heERlcHRoID4gMSA/IHN0cmluZ2lmeShvYmplY3QsIE1hdGguZmxvb3IobWF4RGVwdGggLyAyKSkgOiByZXN1bHQ7XG59XG5cbmNvbnN0IGZvcm1hdFJlZ0V4cCA9IC8lW3Nkamlmb09jJV0vZztcbmZ1bmN0aW9uIGZvcm1hdCguLi5hcmdzKSB7XG4gIGlmICh0eXBlb2YgYXJnc1swXSAhPT0gXCJzdHJpbmdcIikge1xuICAgIGNvbnN0IG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgYXJncy5sZW5ndGg7IGkyKyspIHtcbiAgICAgIG9iamVjdHMucHVzaChpbnNwZWN0KGFyZ3NbaTJdLCB7IGRlcHRoOiAwLCBjb2xvcnM6IGZhbHNlIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdHMuam9pbihcIiBcIik7XG4gIH1cbiAgY29uc3QgbGVuID0gYXJncy5sZW5ndGg7XG4gIGxldCBpID0gMTtcbiAgY29uc3QgdGVtcGxhdGUgPSBhcmdzWzBdO1xuICBsZXQgc3RyID0gU3RyaW5nKHRlbXBsYXRlKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgKHgpID0+IHtcbiAgICBpZiAoeCA9PT0gXCIlJVwiKSB7XG4gICAgICByZXR1cm4gXCIlXCI7XG4gICAgfVxuICAgIGlmIChpID49IGxlbikge1xuICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICAgIHN3aXRjaCAoeCkge1xuICAgICAgY2FzZSBcIiVzXCI6IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhcmdzW2krK107XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiYmlnaW50XCIpIHtcbiAgICAgICAgICByZXR1cm4gYCR7dmFsdWUudG9TdHJpbmcoKX1uYDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiICYmIHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApIHtcbiAgICAgICAgICByZXR1cm4gXCItMFwiO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gaW5zcGVjdCh2YWx1ZSwgeyBkZXB0aDogMCwgY29sb3JzOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNhc2UgXCIlZFwiOiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gYXJnc1tpKytdO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImJpZ2ludFwiKSB7XG4gICAgICAgICAgcmV0dXJuIGAke3ZhbHVlLnRvU3RyaW5nKCl9bmA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSkudG9TdHJpbmcoKTtcbiAgICAgIH1cbiAgICAgIGNhc2UgXCIlaVwiOiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gYXJnc1tpKytdO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImJpZ2ludFwiKSB7XG4gICAgICAgICAgcmV0dXJuIGAke3ZhbHVlLnRvU3RyaW5nKCl9bmA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE51bWJlci5wYXJzZUludChTdHJpbmcodmFsdWUpKS50b1N0cmluZygpO1xuICAgICAgfVxuICAgICAgY2FzZSBcIiVmXCI6XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChTdHJpbmcoYXJnc1tpKytdKSkudG9TdHJpbmcoKTtcbiAgICAgIGNhc2UgXCIlb1wiOlxuICAgICAgICByZXR1cm4gaW5zcGVjdChhcmdzW2krK10sIHsgc2hvd0hpZGRlbjogdHJ1ZSwgc2hvd1Byb3h5OiB0cnVlIH0pO1xuICAgICAgY2FzZSBcIiVPXCI6XG4gICAgICAgIHJldHVybiBpbnNwZWN0KGFyZ3NbaSsrXSk7XG4gICAgICBjYXNlIFwiJWNcIjoge1xuICAgICAgICBpKys7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgfVxuICAgICAgY2FzZSBcIiVqXCI6XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGFyZ3NbaSsrXSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnN0IG0gPSBlcnIubWVzc2FnZTtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAvLyBjaHJvbWl1bVxuICAgICAgICAgICAgbS5pbmNsdWRlcyhcImNpcmN1bGFyIHN0cnVjdHVyZVwiKSB8fCBtLmluY2x1ZGVzKFwiY3ljbGljIHN0cnVjdHVyZXNcIikgfHwgbS5pbmNsdWRlcyhcImN5Y2xpYyBvYmplY3RcIilcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBcIltDaXJjdWxhcl1cIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4geDtcbiAgICB9XG4gIH0pO1xuICBmb3IgKGxldCB4ID0gYXJnc1tpXTsgaSA8IGxlbjsgeCA9IGFyZ3NbKytpXSkge1xuICAgIGlmICh4ID09PSBudWxsIHx8IHR5cGVvZiB4ICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICBzdHIgKz0gYCAke3h9YDtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyICs9IGAgJHtpbnNwZWN0KHgpfWA7XG4gICAgfVxuICB9XG4gIHJldHVybiBzdHI7XG59XG5mdW5jdGlvbiBpbnNwZWN0KG9iaiwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmIChvcHRpb25zLnRydW5jYXRlID09PSAwKSB7XG4gICAgb3B0aW9ucy50cnVuY2F0ZSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgfVxuICByZXR1cm4gbG91cGUuaW5zcGVjdChvYmosIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gb2JqRGlzcGxheShvYmosIG9wdGlvbnMgPSB7fSkge1xuICBpZiAodHlwZW9mIG9wdGlvbnMudHJ1bmNhdGUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBvcHRpb25zLnRydW5jYXRlID0gNDA7XG4gIH1cbiAgY29uc3Qgc3RyID0gaW5zcGVjdChvYmosIG9wdGlvbnMpO1xuICBjb25zdCB0eXBlID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaik7XG4gIGlmIChvcHRpb25zLnRydW5jYXRlICYmIHN0ci5sZW5ndGggPj0gb3B0aW9ucy50cnVuY2F0ZSkge1xuICAgIGlmICh0eXBlID09PSBcIltvYmplY3QgRnVuY3Rpb25dXCIpIHtcbiAgICAgIGNvbnN0IGZuID0gb2JqO1xuICAgICAgcmV0dXJuICFmbi5uYW1lID8gXCJbRnVuY3Rpb25dXCIgOiBgW0Z1bmN0aW9uOiAke2ZuLm5hbWV9XWA7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBcIltvYmplY3QgQXJyYXldXCIpIHtcbiAgICAgIHJldHVybiBgWyBBcnJheSgke29iai5sZW5ndGh9KSBdYDtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwiW29iamVjdCBPYmplY3RdXCIpIHtcbiAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgICAgY29uc3Qga3N0ciA9IGtleXMubGVuZ3RoID4gMiA/IGAke2tleXMuc3BsaWNlKDAsIDIpLmpvaW4oXCIsIFwiKX0sIC4uLmAgOiBrZXlzLmpvaW4oXCIsIFwiKTtcbiAgICAgIHJldHVybiBgeyBPYmplY3QgKCR7a3N0cn0pIH1gO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufVxuXG5leHBvcnQgeyBmb3JtYXQgYXMgZiwgaW5zcGVjdCBhcyBpLCBvYmpEaXNwbGF5IGFzIG8sIHN0cmluZ2lmeSBhcyBzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vitest/utils/dist/chunk-display.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/utils/dist/diff.js":
/*!*************************************************!*\
  !*** ./node_modules/@vitest/utils/dist/diff.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIFF_DELETE: function() { return /* binding */ DIFF_DELETE; },\n/* harmony export */   DIFF_EQUAL: function() { return /* binding */ DIFF_EQUAL; },\n/* harmony export */   DIFF_INSERT: function() { return /* binding */ DIFF_INSERT; },\n/* harmony export */   Diff: function() { return /* binding */ Diff; },\n/* harmony export */   diff: function() { return /* binding */ diff; },\n/* harmony export */   diffLinesRaw: function() { return /* binding */ diffLinesRaw; },\n/* harmony export */   diffLinesUnified: function() { return /* binding */ diffLinesUnified; },\n/* harmony export */   diffLinesUnified2: function() { return /* binding */ diffLinesUnified2; },\n/* harmony export */   diffStringsRaw: function() { return /* binding */ diffStringsRaw; },\n/* harmony export */   diffStringsUnified: function() { return /* binding */ diffStringsUnified; }\n/* harmony export */ });\n/* harmony import */ var _vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vitest/pretty-format */ \"./node_modules/@vitest/pretty-format/dist/index.js\");\n/* harmony import */ var tinyrainbow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinyrainbow */ \"./node_modules/tinyrainbow/dist/browser.js\");\n\n\n\nfunction getType(value) {\n  if (value === void 0) {\n    return \"undefined\";\n  } else if (value === null) {\n    return \"null\";\n  } else if (Array.isArray(value)) {\n    return \"array\";\n  } else if (typeof value === \"boolean\") {\n    return \"boolean\";\n  } else if (typeof value === \"function\") {\n    return \"function\";\n  } else if (typeof value === \"number\") {\n    return \"number\";\n  } else if (typeof value === \"string\") {\n    return \"string\";\n  } else if (typeof value === \"bigint\") {\n    return \"bigint\";\n  } else if (typeof value === \"object\") {\n    if (value != null) {\n      if (value.constructor === RegExp) {\n        return \"regexp\";\n      } else if (value.constructor === Map) {\n        return \"map\";\n      } else if (value.constructor === Set) {\n        return \"set\";\n      } else if (value.constructor === Date) {\n        return \"date\";\n      }\n    }\n    return \"object\";\n  } else if (typeof value === \"symbol\") {\n    return \"symbol\";\n  }\n  throw new Error(`value of unknown type: ${value}`);\n}\n\nconst DIFF_DELETE = -1;\nconst DIFF_INSERT = 1;\nconst DIFF_EQUAL = 0;\nclass Diff {\n  0;\n  1;\n  constructor(op, text) {\n    this[0] = op;\n    this[1] = text;\n  }\n}\nconst diff_commonPrefix = function(text1, text2) {\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  let pointermin = 0;\n  let pointermax = Math.min(text1.length, text2.length);\n  let pointermid = pointermax;\n  let pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) === text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\nconst diff_commonSuffix = function(text1, text2) {\n  if (!text1 || !text2 || text1.charAt(text1.length - 1) !== text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  let pointermin = 0;\n  let pointermax = Math.min(text1.length, text2.length);\n  let pointermid = pointermax;\n  let pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) === text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\nconst diff_commonOverlap_ = function(text1, text2) {\n  const text1_length = text1.length;\n  const text2_length = text2.length;\n  if (text1_length === 0 || text2_length === 0) {\n    return 0;\n  }\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  const text_length = Math.min(text1_length, text2_length);\n  if (text1 === text2) {\n    return text_length;\n  }\n  let best = 0;\n  let length = 1;\n  while (true) {\n    const pattern = text1.substring(text_length - length);\n    const found = text2.indexOf(pattern);\n    if (found === -1) {\n      return best;\n    }\n    length += found;\n    if (found === 0 || text1.substring(text_length - length) === text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\nconst diff_cleanupSemantic = function(diffs) {\n  let changes = false;\n  const equalities = [];\n  let equalitiesLength = 0;\n  let lastEquality = null;\n  let pointer = 0;\n  let length_insertions1 = 0;\n  let length_deletions1 = 0;\n  let length_insertions2 = 0;\n  let length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] === DIFF_EQUAL) {\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {\n      if (diffs[pointer][0] === DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      if (lastEquality && lastEquality.length <= Math.max(length_insertions1, length_deletions1) && lastEquality.length <= Math.max(length_insertions2, length_deletions2)) {\n        diffs.splice(\n          equalities[equalitiesLength - 1],\n          0,\n          new Diff(DIFF_DELETE, lastEquality)\n        );\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1];\n      const insertion = diffs[pointer][1];\n      const overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      const overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 || overlap_length1 >= insertion.length / 2) {\n          diffs.splice(\n            pointer,\n            0,\n            new Diff(DIFF_EQUAL, insertion.substring(0, overlap_length1))\n          );\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 || overlap_length2 >= insertion.length / 2) {\n          diffs.splice(\n            pointer,\n            0,\n            new Diff(DIFF_EQUAL, deletion.substring(0, overlap_length2))\n          );\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\nconst nonAlphaNumericRegex_ = /[^a-z0-9]/i;\nconst whitespaceRegex_ = /\\s/;\nconst linebreakRegex_ = /[\\r\\n]/;\nconst blanklineEndRegex_ = /\\n\\r?\\n$/;\nconst blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\nfunction diff_cleanupSemanticLossless(diffs) {\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      return 6;\n    }\n    const char1 = one.charAt(one.length - 1);\n    const char2 = two.charAt(0);\n    const nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    const nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    const whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    const whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    const lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    const lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    const blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    const blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n    if (blankLine1 || blankLine2) {\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      return 1;\n    }\n    return 0;\n  }\n  let pointer = 1;\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      let equality1 = diffs[pointer - 1][1];\n      let edit = diffs[pointer][1];\n      let equality2 = diffs[pointer + 1][1];\n      const commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n      let bestEquality1 = equality1;\n      let bestEdit = edit;\n      let bestEquality2 = equality2;\n      let bestScore = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        const score = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n      if (diffs[pointer - 1][1] !== bestEquality1) {\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\nfunction diff_cleanupMerge(diffs) {\n  diffs.push(new Diff(DIFF_EQUAL, \"\"));\n  let pointer = 0;\n  let count_delete = 0;\n  let count_insert = 0;\n  let text_delete = \"\";\n  let text_insert = \"\";\n  let commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] === DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(\n                  0,\n                  0,\n                  new Diff(DIFF_EQUAL, text_insert.substring(0, commonlength))\n                );\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0, new Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0, new Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop();\n  }\n  let changes = false;\n  pointer = 1;\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      if (diffs[pointer][1].substring(\n        diffs[pointer][1].length - diffs[pointer - 1][1].length\n      ) === diffs[pointer - 1][1]) {\n        diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(\n          0,\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n}\n\nconst NO_DIFF_MESSAGE = \"Compared values have no visual difference.\";\nconst SIMILAR_MESSAGE = \"Compared values serialize to the same structure.\\nPrinting internal object structure without calling `toJSON` instead.\";\n\nvar build = {};\n\nObject.defineProperty(build, '__esModule', {\n  value: true\n});\nvar _default = build.default = diffSequence;\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// This diff-sequences package implements the linear space variation in\n// An O(ND) Difference Algorithm and Its Variations by Eugene W. Myers\n\n// Relationship in notation between Myers paper and this package:\n// A is a\n// N is aLength, aEnd - aStart, and so on\n// x is aIndex, aFirst, aLast, and so on\n// B is b\n// M is bLength, bEnd - bStart, and so on\n// y is bIndex, bFirst, bLast, and so on\n// Δ = N - M is negative of baDeltaLength = bLength - aLength\n// D is d\n// k is kF\n// k + Δ is kF = kR - baDeltaLength\n// V is aIndexesF or aIndexesR (see comment below about Indexes type)\n// index intervals [1, N] and [1, M] are [0, aLength) and [0, bLength)\n// starting point in forward direction (0, 0) is (-1, -1)\n// starting point in reverse direction (N + 1, M + 1) is (aLength, bLength)\n\n// The “edit graph” for sequences a and b corresponds to items:\n// in a on the horizontal axis\n// in b on the vertical axis\n//\n// Given a-coordinate of a point in a diagonal, you can compute b-coordinate.\n//\n// Forward diagonals kF:\n// zero diagonal intersects top left corner\n// positive diagonals intersect top edge\n// negative diagonals insersect left edge\n//\n// Reverse diagonals kR:\n// zero diagonal intersects bottom right corner\n// positive diagonals intersect right edge\n// negative diagonals intersect bottom edge\n\n// The graph contains a directed acyclic graph of edges:\n// horizontal: delete an item from a\n// vertical: insert an item from b\n// diagonal: common item in a and b\n//\n// The algorithm solves dual problems in the graph analogy:\n// Find longest common subsequence: path with maximum number of diagonal edges\n// Find shortest edit script: path with minimum number of non-diagonal edges\n\n// Input callback function compares items at indexes in the sequences.\n\n// Output callback function receives the number of adjacent items\n// and starting indexes of each common subsequence.\n// Either original functions or wrapped to swap indexes if graph is transposed.\n// Indexes in sequence a of last point of forward or reverse paths in graph.\n// Myers algorithm indexes by diagonal k which for negative is bad deopt in V8.\n// This package indexes by iF and iR which are greater than or equal to zero.\n// and also updates the index arrays in place to cut memory in half.\n// kF = 2 * iF - d\n// kR = d - 2 * iR\n// Division of index intervals in sequences a and b at the middle change.\n// Invariant: intervals do not have common items at the start or end.\nconst pkg = 'diff-sequences'; // for error messages\nconst NOT_YET_SET = 0; // small int instead of undefined to avoid deopt in V8\n\n// Return the number of common items that follow in forward direction.\n// The length of what Myers paper calls a “snake” in a forward path.\nconst countCommonItemsF = (aIndex, aEnd, bIndex, bEnd, isCommon) => {\n  let nCommon = 0;\n  while (aIndex < aEnd && bIndex < bEnd && isCommon(aIndex, bIndex)) {\n    aIndex += 1;\n    bIndex += 1;\n    nCommon += 1;\n  }\n  return nCommon;\n};\n\n// Return the number of common items that precede in reverse direction.\n// The length of what Myers paper calls a “snake” in a reverse path.\nconst countCommonItemsR = (aStart, aIndex, bStart, bIndex, isCommon) => {\n  let nCommon = 0;\n  while (aStart <= aIndex && bStart <= bIndex && isCommon(aIndex, bIndex)) {\n    aIndex -= 1;\n    bIndex -= 1;\n    nCommon += 1;\n  }\n  return nCommon;\n};\n\n// A simple function to extend forward paths from (d - 1) to d changes\n// when forward and reverse paths cannot yet overlap.\nconst extendPathsF = (\n  d,\n  aEnd,\n  bEnd,\n  bF,\n  isCommon,\n  aIndexesF,\n  iMaxF // return the value because optimization might decrease it\n) => {\n  // Unroll the first iteration.\n  let iF = 0;\n  let kF = -d; // kF = 2 * iF - d\n  let aFirst = aIndexesF[iF]; // in first iteration always insert\n  let aIndexPrev1 = aFirst; // prev value of [iF - 1] in next iteration\n  aIndexesF[iF] += countCommonItemsF(\n    aFirst + 1,\n    aEnd,\n    bF + aFirst - kF + 1,\n    bEnd,\n    isCommon\n  );\n\n  // Optimization: skip diagonals in which paths cannot ever overlap.\n  const nF = d < iMaxF ? d : iMaxF;\n\n  // The diagonals kF are odd when d is odd and even when d is even.\n  for (iF += 1, kF += 2; iF <= nF; iF += 1, kF += 2) {\n    // To get first point of path segment, move one change in forward direction\n    // from last point of previous path segment in an adjacent diagonal.\n    // In last possible iteration when iF === d and kF === d always delete.\n    if (iF !== d && aIndexPrev1 < aIndexesF[iF]) {\n      aFirst = aIndexesF[iF]; // vertical to insert from b\n    } else {\n      aFirst = aIndexPrev1 + 1; // horizontal to delete from a\n\n      if (aEnd <= aFirst) {\n        // Optimization: delete moved past right of graph.\n        return iF - 1;\n      }\n    }\n\n    // To get last point of path segment, move along diagonal of common items.\n    aIndexPrev1 = aIndexesF[iF];\n    aIndexesF[iF] =\n      aFirst +\n      countCommonItemsF(aFirst + 1, aEnd, bF + aFirst - kF + 1, bEnd, isCommon);\n  }\n  return iMaxF;\n};\n\n// A simple function to extend reverse paths from (d - 1) to d changes\n// when reverse and forward paths cannot yet overlap.\nconst extendPathsR = (\n  d,\n  aStart,\n  bStart,\n  bR,\n  isCommon,\n  aIndexesR,\n  iMaxR // return the value because optimization might decrease it\n) => {\n  // Unroll the first iteration.\n  let iR = 0;\n  let kR = d; // kR = d - 2 * iR\n  let aFirst = aIndexesR[iR]; // in first iteration always insert\n  let aIndexPrev1 = aFirst; // prev value of [iR - 1] in next iteration\n  aIndexesR[iR] -= countCommonItemsR(\n    aStart,\n    aFirst - 1,\n    bStart,\n    bR + aFirst - kR - 1,\n    isCommon\n  );\n\n  // Optimization: skip diagonals in which paths cannot ever overlap.\n  const nR = d < iMaxR ? d : iMaxR;\n\n  // The diagonals kR are odd when d is odd and even when d is even.\n  for (iR += 1, kR -= 2; iR <= nR; iR += 1, kR -= 2) {\n    // To get first point of path segment, move one change in reverse direction\n    // from last point of previous path segment in an adjacent diagonal.\n    // In last possible iteration when iR === d and kR === -d always delete.\n    if (iR !== d && aIndexesR[iR] < aIndexPrev1) {\n      aFirst = aIndexesR[iR]; // vertical to insert from b\n    } else {\n      aFirst = aIndexPrev1 - 1; // horizontal to delete from a\n\n      if (aFirst < aStart) {\n        // Optimization: delete moved past left of graph.\n        return iR - 1;\n      }\n    }\n\n    // To get last point of path segment, move along diagonal of common items.\n    aIndexPrev1 = aIndexesR[iR];\n    aIndexesR[iR] =\n      aFirst -\n      countCommonItemsR(\n        aStart,\n        aFirst - 1,\n        bStart,\n        bR + aFirst - kR - 1,\n        isCommon\n      );\n  }\n  return iMaxR;\n};\n\n// A complete function to extend forward paths from (d - 1) to d changes.\n// Return true if a path overlaps reverse path of (d - 1) changes in its diagonal.\nconst extendOverlappablePathsF = (\n  d,\n  aStart,\n  aEnd,\n  bStart,\n  bEnd,\n  isCommon,\n  aIndexesF,\n  iMaxF,\n  aIndexesR,\n  iMaxR,\n  division // update prop values if return true\n) => {\n  const bF = bStart - aStart; // bIndex = bF + aIndex - kF\n  const aLength = aEnd - aStart;\n  const bLength = bEnd - bStart;\n  const baDeltaLength = bLength - aLength; // kF = kR - baDeltaLength\n\n  // Range of diagonals in which forward and reverse paths might overlap.\n  const kMinOverlapF = -baDeltaLength - (d - 1); // -(d - 1) <= kR\n  const kMaxOverlapF = -baDeltaLength + (d - 1); // kR <= (d - 1)\n\n  let aIndexPrev1 = NOT_YET_SET; // prev value of [iF - 1] in next iteration\n\n  // Optimization: skip diagonals in which paths cannot ever overlap.\n  const nF = d < iMaxF ? d : iMaxF;\n\n  // The diagonals kF = 2 * iF - d are odd when d is odd and even when d is even.\n  for (let iF = 0, kF = -d; iF <= nF; iF += 1, kF += 2) {\n    // To get first point of path segment, move one change in forward direction\n    // from last point of previous path segment in an adjacent diagonal.\n    // In first iteration when iF === 0 and kF === -d always insert.\n    // In last possible iteration when iF === d and kF === d always delete.\n    const insert = iF === 0 || (iF !== d && aIndexPrev1 < aIndexesF[iF]);\n    const aLastPrev = insert ? aIndexesF[iF] : aIndexPrev1;\n    const aFirst = insert\n      ? aLastPrev // vertical to insert from b\n      : aLastPrev + 1; // horizontal to delete from a\n\n    // To get last point of path segment, move along diagonal of common items.\n    const bFirst = bF + aFirst - kF;\n    const nCommonF = countCommonItemsF(\n      aFirst + 1,\n      aEnd,\n      bFirst + 1,\n      bEnd,\n      isCommon\n    );\n    const aLast = aFirst + nCommonF;\n    aIndexPrev1 = aIndexesF[iF];\n    aIndexesF[iF] = aLast;\n    if (kMinOverlapF <= kF && kF <= kMaxOverlapF) {\n      // Solve for iR of reverse path with (d - 1) changes in diagonal kF:\n      // kR = kF + baDeltaLength\n      // kR = (d - 1) - 2 * iR\n      const iR = (d - 1 - (kF + baDeltaLength)) / 2;\n\n      // If this forward path overlaps the reverse path in this diagonal,\n      // then this is the middle change of the index intervals.\n      if (iR <= iMaxR && aIndexesR[iR] - 1 <= aLast) {\n        // Unlike the Myers algorithm which finds only the middle “snake”\n        // this package can find two common subsequences per division.\n        // Last point of previous path segment is on an adjacent diagonal.\n        const bLastPrev = bF + aLastPrev - (insert ? kF + 1 : kF - 1);\n\n        // Because of invariant that intervals preceding the middle change\n        // cannot have common items at the end,\n        // move in reverse direction along a diagonal of common items.\n        const nCommonR = countCommonItemsR(\n          aStart,\n          aLastPrev,\n          bStart,\n          bLastPrev,\n          isCommon\n        );\n        const aIndexPrevFirst = aLastPrev - nCommonR;\n        const bIndexPrevFirst = bLastPrev - nCommonR;\n        const aEndPreceding = aIndexPrevFirst + 1;\n        const bEndPreceding = bIndexPrevFirst + 1;\n        division.nChangePreceding = d - 1;\n        if (d - 1 === aEndPreceding + bEndPreceding - aStart - bStart) {\n          // Optimization: number of preceding changes in forward direction\n          // is equal to number of items in preceding interval,\n          // therefore it cannot contain any common items.\n          division.aEndPreceding = aStart;\n          division.bEndPreceding = bStart;\n        } else {\n          division.aEndPreceding = aEndPreceding;\n          division.bEndPreceding = bEndPreceding;\n        }\n        division.nCommonPreceding = nCommonR;\n        if (nCommonR !== 0) {\n          division.aCommonPreceding = aEndPreceding;\n          division.bCommonPreceding = bEndPreceding;\n        }\n        division.nCommonFollowing = nCommonF;\n        if (nCommonF !== 0) {\n          division.aCommonFollowing = aFirst + 1;\n          division.bCommonFollowing = bFirst + 1;\n        }\n        const aStartFollowing = aLast + 1;\n        const bStartFollowing = bFirst + nCommonF + 1;\n        division.nChangeFollowing = d - 1;\n        if (d - 1 === aEnd + bEnd - aStartFollowing - bStartFollowing) {\n          // Optimization: number of changes in reverse direction\n          // is equal to number of items in following interval,\n          // therefore it cannot contain any common items.\n          division.aStartFollowing = aEnd;\n          division.bStartFollowing = bEnd;\n        } else {\n          division.aStartFollowing = aStartFollowing;\n          division.bStartFollowing = bStartFollowing;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n// A complete function to extend reverse paths from (d - 1) to d changes.\n// Return true if a path overlaps forward path of d changes in its diagonal.\nconst extendOverlappablePathsR = (\n  d,\n  aStart,\n  aEnd,\n  bStart,\n  bEnd,\n  isCommon,\n  aIndexesF,\n  iMaxF,\n  aIndexesR,\n  iMaxR,\n  division // update prop values if return true\n) => {\n  const bR = bEnd - aEnd; // bIndex = bR + aIndex - kR\n  const aLength = aEnd - aStart;\n  const bLength = bEnd - bStart;\n  const baDeltaLength = bLength - aLength; // kR = kF + baDeltaLength\n\n  // Range of diagonals in which forward and reverse paths might overlap.\n  const kMinOverlapR = baDeltaLength - d; // -d <= kF\n  const kMaxOverlapR = baDeltaLength + d; // kF <= d\n\n  let aIndexPrev1 = NOT_YET_SET; // prev value of [iR - 1] in next iteration\n\n  // Optimization: skip diagonals in which paths cannot ever overlap.\n  const nR = d < iMaxR ? d : iMaxR;\n\n  // The diagonals kR = d - 2 * iR are odd when d is odd and even when d is even.\n  for (let iR = 0, kR = d; iR <= nR; iR += 1, kR -= 2) {\n    // To get first point of path segment, move one change in reverse direction\n    // from last point of previous path segment in an adjacent diagonal.\n    // In first iteration when iR === 0 and kR === d always insert.\n    // In last possible iteration when iR === d and kR === -d always delete.\n    const insert = iR === 0 || (iR !== d && aIndexesR[iR] < aIndexPrev1);\n    const aLastPrev = insert ? aIndexesR[iR] : aIndexPrev1;\n    const aFirst = insert\n      ? aLastPrev // vertical to insert from b\n      : aLastPrev - 1; // horizontal to delete from a\n\n    // To get last point of path segment, move along diagonal of common items.\n    const bFirst = bR + aFirst - kR;\n    const nCommonR = countCommonItemsR(\n      aStart,\n      aFirst - 1,\n      bStart,\n      bFirst - 1,\n      isCommon\n    );\n    const aLast = aFirst - nCommonR;\n    aIndexPrev1 = aIndexesR[iR];\n    aIndexesR[iR] = aLast;\n    if (kMinOverlapR <= kR && kR <= kMaxOverlapR) {\n      // Solve for iF of forward path with d changes in diagonal kR:\n      // kF = kR - baDeltaLength\n      // kF = 2 * iF - d\n      const iF = (d + (kR - baDeltaLength)) / 2;\n\n      // If this reverse path overlaps the forward path in this diagonal,\n      // then this is a middle change of the index intervals.\n      if (iF <= iMaxF && aLast - 1 <= aIndexesF[iF]) {\n        const bLast = bFirst - nCommonR;\n        division.nChangePreceding = d;\n        if (d === aLast + bLast - aStart - bStart) {\n          // Optimization: number of changes in reverse direction\n          // is equal to number of items in preceding interval,\n          // therefore it cannot contain any common items.\n          division.aEndPreceding = aStart;\n          division.bEndPreceding = bStart;\n        } else {\n          division.aEndPreceding = aLast;\n          division.bEndPreceding = bLast;\n        }\n        division.nCommonPreceding = nCommonR;\n        if (nCommonR !== 0) {\n          // The last point of reverse path segment is start of common subsequence.\n          division.aCommonPreceding = aLast;\n          division.bCommonPreceding = bLast;\n        }\n        division.nChangeFollowing = d - 1;\n        if (d === 1) {\n          // There is no previous path segment.\n          division.nCommonFollowing = 0;\n          division.aStartFollowing = aEnd;\n          division.bStartFollowing = bEnd;\n        } else {\n          // Unlike the Myers algorithm which finds only the middle “snake”\n          // this package can find two common subsequences per division.\n          // Last point of previous path segment is on an adjacent diagonal.\n          const bLastPrev = bR + aLastPrev - (insert ? kR - 1 : kR + 1);\n\n          // Because of invariant that intervals following the middle change\n          // cannot have common items at the start,\n          // move in forward direction along a diagonal of common items.\n          const nCommonF = countCommonItemsF(\n            aLastPrev,\n            aEnd,\n            bLastPrev,\n            bEnd,\n            isCommon\n          );\n          division.nCommonFollowing = nCommonF;\n          if (nCommonF !== 0) {\n            // The last point of reverse path segment is start of common subsequence.\n            division.aCommonFollowing = aLastPrev;\n            division.bCommonFollowing = bLastPrev;\n          }\n          const aStartFollowing = aLastPrev + nCommonF; // aFirstPrev\n          const bStartFollowing = bLastPrev + nCommonF; // bFirstPrev\n\n          if (d - 1 === aEnd + bEnd - aStartFollowing - bStartFollowing) {\n            // Optimization: number of changes in forward direction\n            // is equal to number of items in following interval,\n            // therefore it cannot contain any common items.\n            division.aStartFollowing = aEnd;\n            division.bStartFollowing = bEnd;\n          } else {\n            division.aStartFollowing = aStartFollowing;\n            division.bStartFollowing = bStartFollowing;\n          }\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n// Given index intervals and input function to compare items at indexes,\n// divide at the middle change.\n//\n// DO NOT CALL if start === end, because interval cannot contain common items\n// and because this function will throw the “no overlap” error.\nconst divide = (\n  nChange,\n  aStart,\n  aEnd,\n  bStart,\n  bEnd,\n  isCommon,\n  aIndexesF,\n  aIndexesR,\n  division // output\n) => {\n  const bF = bStart - aStart; // bIndex = bF + aIndex - kF\n  const bR = bEnd - aEnd; // bIndex = bR + aIndex - kR\n  const aLength = aEnd - aStart;\n  const bLength = bEnd - bStart;\n\n  // Because graph has square or portrait orientation,\n  // length difference is minimum number of items to insert from b.\n  // Corresponding forward and reverse diagonals in graph\n  // depend on length difference of the sequences:\n  // kF = kR - baDeltaLength\n  // kR = kF + baDeltaLength\n  const baDeltaLength = bLength - aLength;\n\n  // Optimization: max diagonal in graph intersects corner of shorter side.\n  let iMaxF = aLength;\n  let iMaxR = aLength;\n\n  // Initialize no changes yet in forward or reverse direction:\n  aIndexesF[0] = aStart - 1; // at open start of interval, outside closed start\n  aIndexesR[0] = aEnd; // at open end of interval\n\n  if (baDeltaLength % 2 === 0) {\n    // The number of changes in paths is 2 * d if length difference is even.\n    const dMin = (nChange || baDeltaLength) / 2;\n    const dMax = (aLength + bLength) / 2;\n    for (let d = 1; d <= dMax; d += 1) {\n      iMaxF = extendPathsF(d, aEnd, bEnd, bF, isCommon, aIndexesF, iMaxF);\n      if (d < dMin) {\n        iMaxR = extendPathsR(d, aStart, bStart, bR, isCommon, aIndexesR, iMaxR);\n      } else if (\n        // If a reverse path overlaps a forward path in the same diagonal,\n        // return a division of the index intervals at the middle change.\n        extendOverlappablePathsR(\n          d,\n          aStart,\n          aEnd,\n          bStart,\n          bEnd,\n          isCommon,\n          aIndexesF,\n          iMaxF,\n          aIndexesR,\n          iMaxR,\n          division\n        )\n      ) {\n        return;\n      }\n    }\n  } else {\n    // The number of changes in paths is 2 * d - 1 if length difference is odd.\n    const dMin = ((nChange || baDeltaLength) + 1) / 2;\n    const dMax = (aLength + bLength + 1) / 2;\n\n    // Unroll first half iteration so loop extends the relevant pairs of paths.\n    // Because of invariant that intervals have no common items at start or end,\n    // and limitation not to call divide with empty intervals,\n    // therefore it cannot be called if a forward path with one change\n    // would overlap a reverse path with no changes, even if dMin === 1.\n    let d = 1;\n    iMaxF = extendPathsF(d, aEnd, bEnd, bF, isCommon, aIndexesF, iMaxF);\n    for (d += 1; d <= dMax; d += 1) {\n      iMaxR = extendPathsR(\n        d - 1,\n        aStart,\n        bStart,\n        bR,\n        isCommon,\n        aIndexesR,\n        iMaxR\n      );\n      if (d < dMin) {\n        iMaxF = extendPathsF(d, aEnd, bEnd, bF, isCommon, aIndexesF, iMaxF);\n      } else if (\n        // If a forward path overlaps a reverse path in the same diagonal,\n        // return a division of the index intervals at the middle change.\n        extendOverlappablePathsF(\n          d,\n          aStart,\n          aEnd,\n          bStart,\n          bEnd,\n          isCommon,\n          aIndexesF,\n          iMaxF,\n          aIndexesR,\n          iMaxR,\n          division\n        )\n      ) {\n        return;\n      }\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error(\n    `${pkg}: no overlap aStart=${aStart} aEnd=${aEnd} bStart=${bStart} bEnd=${bEnd}`\n  );\n};\n\n// Given index intervals and input function to compare items at indexes,\n// return by output function the number of adjacent items and starting indexes\n// of each common subsequence. Divide and conquer with only linear space.\n//\n// The index intervals are half open [start, end) like array slice method.\n// DO NOT CALL if start === end, because interval cannot contain common items\n// and because divide function will throw the “no overlap” error.\nconst findSubsequences = (\n  nChange,\n  aStart,\n  aEnd,\n  bStart,\n  bEnd,\n  transposed,\n  callbacks,\n  aIndexesF,\n  aIndexesR,\n  division // temporary memory, not input nor output\n) => {\n  if (bEnd - bStart < aEnd - aStart) {\n    // Transpose graph so it has portrait instead of landscape orientation.\n    // Always compare shorter to longer sequence for consistency and optimization.\n    transposed = !transposed;\n    if (transposed && callbacks.length === 1) {\n      // Lazily wrap callback functions to swap args if graph is transposed.\n      const {foundSubsequence, isCommon} = callbacks[0];\n      callbacks[1] = {\n        foundSubsequence: (nCommon, bCommon, aCommon) => {\n          foundSubsequence(nCommon, aCommon, bCommon);\n        },\n        isCommon: (bIndex, aIndex) => isCommon(aIndex, bIndex)\n      };\n    }\n    const tStart = aStart;\n    const tEnd = aEnd;\n    aStart = bStart;\n    aEnd = bEnd;\n    bStart = tStart;\n    bEnd = tEnd;\n  }\n  const {foundSubsequence, isCommon} = callbacks[transposed ? 1 : 0];\n\n  // Divide the index intervals at the middle change.\n  divide(\n    nChange,\n    aStart,\n    aEnd,\n    bStart,\n    bEnd,\n    isCommon,\n    aIndexesF,\n    aIndexesR,\n    division\n  );\n  const {\n    nChangePreceding,\n    aEndPreceding,\n    bEndPreceding,\n    nCommonPreceding,\n    aCommonPreceding,\n    bCommonPreceding,\n    nCommonFollowing,\n    aCommonFollowing,\n    bCommonFollowing,\n    nChangeFollowing,\n    aStartFollowing,\n    bStartFollowing\n  } = division;\n\n  // Unless either index interval is empty, they might contain common items.\n  if (aStart < aEndPreceding && bStart < bEndPreceding) {\n    // Recursely find and return common subsequences preceding the division.\n    findSubsequences(\n      nChangePreceding,\n      aStart,\n      aEndPreceding,\n      bStart,\n      bEndPreceding,\n      transposed,\n      callbacks,\n      aIndexesF,\n      aIndexesR,\n      division\n    );\n  }\n\n  // Return common subsequences that are adjacent to the middle change.\n  if (nCommonPreceding !== 0) {\n    foundSubsequence(nCommonPreceding, aCommonPreceding, bCommonPreceding);\n  }\n  if (nCommonFollowing !== 0) {\n    foundSubsequence(nCommonFollowing, aCommonFollowing, bCommonFollowing);\n  }\n\n  // Unless either index interval is empty, they might contain common items.\n  if (aStartFollowing < aEnd && bStartFollowing < bEnd) {\n    // Recursely find and return common subsequences following the division.\n    findSubsequences(\n      nChangeFollowing,\n      aStartFollowing,\n      aEnd,\n      bStartFollowing,\n      bEnd,\n      transposed,\n      callbacks,\n      aIndexesF,\n      aIndexesR,\n      division\n    );\n  }\n};\nconst validateLength = (name, arg) => {\n  if (typeof arg !== 'number') {\n    throw new TypeError(`${pkg}: ${name} typeof ${typeof arg} is not a number`);\n  }\n  if (!Number.isSafeInteger(arg)) {\n    throw new RangeError(`${pkg}: ${name} value ${arg} is not a safe integer`);\n  }\n  if (arg < 0) {\n    throw new RangeError(`${pkg}: ${name} value ${arg} is a negative integer`);\n  }\n};\nconst validateCallback = (name, arg) => {\n  const type = typeof arg;\n  if (type !== 'function') {\n    throw new TypeError(`${pkg}: ${name} typeof ${type} is not a function`);\n  }\n};\n\n// Compare items in two sequences to find a longest common subsequence.\n// Given lengths of sequences and input function to compare items at indexes,\n// return by output function the number of adjacent items and starting indexes\n// of each common subsequence.\nfunction diffSequence(aLength, bLength, isCommon, foundSubsequence) {\n  validateLength('aLength', aLength);\n  validateLength('bLength', bLength);\n  validateCallback('isCommon', isCommon);\n  validateCallback('foundSubsequence', foundSubsequence);\n\n  // Count common items from the start in the forward direction.\n  const nCommonF = countCommonItemsF(0, aLength, 0, bLength, isCommon);\n  if (nCommonF !== 0) {\n    foundSubsequence(nCommonF, 0, 0);\n  }\n\n  // Unless both sequences consist of common items only,\n  // find common items in the half-trimmed index intervals.\n  if (aLength !== nCommonF || bLength !== nCommonF) {\n    // Invariant: intervals do not have common items at the start.\n    // The start of an index interval is closed like array slice method.\n    const aStart = nCommonF;\n    const bStart = nCommonF;\n\n    // Count common items from the end in the reverse direction.\n    const nCommonR = countCommonItemsR(\n      aStart,\n      aLength - 1,\n      bStart,\n      bLength - 1,\n      isCommon\n    );\n\n    // Invariant: intervals do not have common items at the end.\n    // The end of an index interval is open like array slice method.\n    const aEnd = aLength - nCommonR;\n    const bEnd = bLength - nCommonR;\n\n    // Unless one sequence consists of common items only,\n    // therefore the other trimmed index interval consists of changes only,\n    // find common items in the trimmed index intervals.\n    const nCommonFR = nCommonF + nCommonR;\n    if (aLength !== nCommonFR && bLength !== nCommonFR) {\n      const nChange = 0; // number of change items is not yet known\n      const transposed = false; // call the original unwrapped functions\n      const callbacks = [\n        {\n          foundSubsequence,\n          isCommon\n        }\n      ];\n\n      // Indexes in sequence a of last points in furthest reaching paths\n      // from outside the start at top left in the forward direction:\n      const aIndexesF = [NOT_YET_SET];\n      // from the end at bottom right in the reverse direction:\n      const aIndexesR = [NOT_YET_SET];\n\n      // Initialize one object as output of all calls to divide function.\n      const division = {\n        aCommonFollowing: NOT_YET_SET,\n        aCommonPreceding: NOT_YET_SET,\n        aEndPreceding: NOT_YET_SET,\n        aStartFollowing: NOT_YET_SET,\n        bCommonFollowing: NOT_YET_SET,\n        bCommonPreceding: NOT_YET_SET,\n        bEndPreceding: NOT_YET_SET,\n        bStartFollowing: NOT_YET_SET,\n        nChangeFollowing: NOT_YET_SET,\n        nChangePreceding: NOT_YET_SET,\n        nCommonFollowing: NOT_YET_SET,\n        nCommonPreceding: NOT_YET_SET\n      };\n\n      // Find and return common subsequences in the trimmed index intervals.\n      findSubsequences(\n        nChange,\n        aStart,\n        aEnd,\n        bStart,\n        bEnd,\n        transposed,\n        callbacks,\n        aIndexesF,\n        aIndexesR,\n        division\n      );\n    }\n    if (nCommonR !== 0) {\n      foundSubsequence(nCommonR, aEnd, bEnd);\n    }\n  }\n}\n\nfunction formatTrailingSpaces(line, trailingSpaceFormatter) {\n  return line.replace(/\\s+$/, (match) => trailingSpaceFormatter(match));\n}\nfunction printDiffLine(line, isFirstOrLast, color, indicator, trailingSpaceFormatter, emptyFirstOrLastLinePlaceholder) {\n  return line.length !== 0 ? color(\n    `${indicator} ${formatTrailingSpaces(line, trailingSpaceFormatter)}`\n  ) : indicator !== \" \" ? color(indicator) : isFirstOrLast && emptyFirstOrLastLinePlaceholder.length !== 0 ? color(`${indicator} ${emptyFirstOrLastLinePlaceholder}`) : \"\";\n}\nfunction printDeleteLine(line, isFirstOrLast, {\n  aColor,\n  aIndicator,\n  changeLineTrailingSpaceColor,\n  emptyFirstOrLastLinePlaceholder\n}) {\n  return printDiffLine(\n    line,\n    isFirstOrLast,\n    aColor,\n    aIndicator,\n    changeLineTrailingSpaceColor,\n    emptyFirstOrLastLinePlaceholder\n  );\n}\nfunction printInsertLine(line, isFirstOrLast, {\n  bColor,\n  bIndicator,\n  changeLineTrailingSpaceColor,\n  emptyFirstOrLastLinePlaceholder\n}) {\n  return printDiffLine(\n    line,\n    isFirstOrLast,\n    bColor,\n    bIndicator,\n    changeLineTrailingSpaceColor,\n    emptyFirstOrLastLinePlaceholder\n  );\n}\nfunction printCommonLine(line, isFirstOrLast, {\n  commonColor,\n  commonIndicator,\n  commonLineTrailingSpaceColor,\n  emptyFirstOrLastLinePlaceholder\n}) {\n  return printDiffLine(\n    line,\n    isFirstOrLast,\n    commonColor,\n    commonIndicator,\n    commonLineTrailingSpaceColor,\n    emptyFirstOrLastLinePlaceholder\n  );\n}\nfunction createPatchMark(aStart, aEnd, bStart, bEnd, { patchColor }) {\n  return patchColor(\n    `@@ -${aStart + 1},${aEnd - aStart} +${bStart + 1},${bEnd - bStart} @@`\n  );\n}\nfunction joinAlignedDiffsNoExpand(diffs, options) {\n  const iLength = diffs.length;\n  const nContextLines = options.contextLines;\n  const nContextLines2 = nContextLines + nContextLines;\n  let jLength = iLength;\n  let hasExcessAtStartOrEnd = false;\n  let nExcessesBetweenChanges = 0;\n  let i = 0;\n  while (i !== iLength) {\n    const iStart = i;\n    while (i !== iLength && diffs[i][0] === DIFF_EQUAL) {\n      i += 1;\n    }\n    if (iStart !== i) {\n      if (iStart === 0) {\n        if (i > nContextLines) {\n          jLength -= i - nContextLines;\n          hasExcessAtStartOrEnd = true;\n        }\n      } else if (i === iLength) {\n        const n = i - iStart;\n        if (n > nContextLines) {\n          jLength -= n - nContextLines;\n          hasExcessAtStartOrEnd = true;\n        }\n      } else {\n        const n = i - iStart;\n        if (n > nContextLines2) {\n          jLength -= n - nContextLines2;\n          nExcessesBetweenChanges += 1;\n        }\n      }\n    }\n    while (i !== iLength && diffs[i][0] !== DIFF_EQUAL) {\n      i += 1;\n    }\n  }\n  const hasPatch = nExcessesBetweenChanges !== 0 || hasExcessAtStartOrEnd;\n  if (nExcessesBetweenChanges !== 0) {\n    jLength += nExcessesBetweenChanges + 1;\n  } else if (hasExcessAtStartOrEnd) {\n    jLength += 1;\n  }\n  const jLast = jLength - 1;\n  const lines = [];\n  let jPatchMark = 0;\n  if (hasPatch) {\n    lines.push(\"\");\n  }\n  let aStart = 0;\n  let bStart = 0;\n  let aEnd = 0;\n  let bEnd = 0;\n  const pushCommonLine = (line) => {\n    const j = lines.length;\n    lines.push(printCommonLine(line, j === 0 || j === jLast, options));\n    aEnd += 1;\n    bEnd += 1;\n  };\n  const pushDeleteLine = (line) => {\n    const j = lines.length;\n    lines.push(printDeleteLine(line, j === 0 || j === jLast, options));\n    aEnd += 1;\n  };\n  const pushInsertLine = (line) => {\n    const j = lines.length;\n    lines.push(printInsertLine(line, j === 0 || j === jLast, options));\n    bEnd += 1;\n  };\n  i = 0;\n  while (i !== iLength) {\n    let iStart = i;\n    while (i !== iLength && diffs[i][0] === DIFF_EQUAL) {\n      i += 1;\n    }\n    if (iStart !== i) {\n      if (iStart === 0) {\n        if (i > nContextLines) {\n          iStart = i - nContextLines;\n          aStart = iStart;\n          bStart = iStart;\n          aEnd = aStart;\n          bEnd = bStart;\n        }\n        for (let iCommon = iStart; iCommon !== i; iCommon += 1) {\n          pushCommonLine(diffs[iCommon][1]);\n        }\n      } else if (i === iLength) {\n        const iEnd = i - iStart > nContextLines ? iStart + nContextLines : i;\n        for (let iCommon = iStart; iCommon !== iEnd; iCommon += 1) {\n          pushCommonLine(diffs[iCommon][1]);\n        }\n      } else {\n        const nCommon = i - iStart;\n        if (nCommon > nContextLines2) {\n          const iEnd = iStart + nContextLines;\n          for (let iCommon = iStart; iCommon !== iEnd; iCommon += 1) {\n            pushCommonLine(diffs[iCommon][1]);\n          }\n          lines[jPatchMark] = createPatchMark(\n            aStart,\n            aEnd,\n            bStart,\n            bEnd,\n            options\n          );\n          jPatchMark = lines.length;\n          lines.push(\"\");\n          const nOmit = nCommon - nContextLines2;\n          aStart = aEnd + nOmit;\n          bStart = bEnd + nOmit;\n          aEnd = aStart;\n          bEnd = bStart;\n          for (let iCommon = i - nContextLines; iCommon !== i; iCommon += 1) {\n            pushCommonLine(diffs[iCommon][1]);\n          }\n        } else {\n          for (let iCommon = iStart; iCommon !== i; iCommon += 1) {\n            pushCommonLine(diffs[iCommon][1]);\n          }\n        }\n      }\n    }\n    while (i !== iLength && diffs[i][0] === DIFF_DELETE) {\n      pushDeleteLine(diffs[i][1]);\n      i += 1;\n    }\n    while (i !== iLength && diffs[i][0] === DIFF_INSERT) {\n      pushInsertLine(diffs[i][1]);\n      i += 1;\n    }\n  }\n  if (hasPatch) {\n    lines[jPatchMark] = createPatchMark(aStart, aEnd, bStart, bEnd, options);\n  }\n  return lines.join(\"\\n\");\n}\nfunction joinAlignedDiffsExpand(diffs, options) {\n  return diffs.map((diff, i, diffs2) => {\n    const line = diff[1];\n    const isFirstOrLast = i === 0 || i === diffs2.length - 1;\n    switch (diff[0]) {\n      case DIFF_DELETE:\n        return printDeleteLine(line, isFirstOrLast, options);\n      case DIFF_INSERT:\n        return printInsertLine(line, isFirstOrLast, options);\n      default:\n        return printCommonLine(line, isFirstOrLast, options);\n    }\n  }).join(\"\\n\");\n}\n\nconst noColor = (string) => string;\nconst DIFF_CONTEXT_DEFAULT = 5;\nconst DIFF_TRUNCATE_THRESHOLD_DEFAULT = 0;\nfunction getDefaultOptions() {\n  return {\n    aAnnotation: \"Expected\",\n    aColor: tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].green,\n    aIndicator: \"-\",\n    bAnnotation: \"Received\",\n    bColor: tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].red,\n    bIndicator: \"+\",\n    changeColor: tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inverse,\n    changeLineTrailingSpaceColor: noColor,\n    commonColor: tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dim,\n    commonIndicator: \" \",\n    commonLineTrailingSpaceColor: noColor,\n    compareKeys: void 0,\n    contextLines: DIFF_CONTEXT_DEFAULT,\n    emptyFirstOrLastLinePlaceholder: \"\",\n    expand: true,\n    includeChangeCounts: false,\n    omitAnnotationLines: false,\n    patchColor: tinyrainbow__WEBPACK_IMPORTED_MODULE_0__[\"default\"].yellow,\n    truncateThreshold: DIFF_TRUNCATE_THRESHOLD_DEFAULT,\n    truncateAnnotation: \"... Diff result is truncated\",\n    truncateAnnotationColor: noColor\n  };\n}\nfunction getCompareKeys(compareKeys) {\n  return compareKeys && typeof compareKeys === \"function\" ? compareKeys : void 0;\n}\nfunction getContextLines(contextLines) {\n  return typeof contextLines === \"number\" && Number.isSafeInteger(contextLines) && contextLines >= 0 ? contextLines : DIFF_CONTEXT_DEFAULT;\n}\nfunction normalizeDiffOptions(options = {}) {\n  return {\n    ...getDefaultOptions(),\n    ...options,\n    compareKeys: getCompareKeys(options.compareKeys),\n    contextLines: getContextLines(options.contextLines)\n  };\n}\n\nfunction isEmptyString(lines) {\n  return lines.length === 1 && lines[0].length === 0;\n}\nfunction countChanges(diffs) {\n  let a = 0;\n  let b = 0;\n  diffs.forEach((diff) => {\n    switch (diff[0]) {\n      case DIFF_DELETE:\n        a += 1;\n        break;\n      case DIFF_INSERT:\n        b += 1;\n        break;\n    }\n  });\n  return { a, b };\n}\nfunction printAnnotation({\n  aAnnotation,\n  aColor,\n  aIndicator,\n  bAnnotation,\n  bColor,\n  bIndicator,\n  includeChangeCounts,\n  omitAnnotationLines\n}, changeCounts) {\n  if (omitAnnotationLines) {\n    return \"\";\n  }\n  let aRest = \"\";\n  let bRest = \"\";\n  if (includeChangeCounts) {\n    const aCount = String(changeCounts.a);\n    const bCount = String(changeCounts.b);\n    const baAnnotationLengthDiff = bAnnotation.length - aAnnotation.length;\n    const aAnnotationPadding = \" \".repeat(Math.max(0, baAnnotationLengthDiff));\n    const bAnnotationPadding = \" \".repeat(Math.max(0, -baAnnotationLengthDiff));\n    const baCountLengthDiff = bCount.length - aCount.length;\n    const aCountPadding = \" \".repeat(Math.max(0, baCountLengthDiff));\n    const bCountPadding = \" \".repeat(Math.max(0, -baCountLengthDiff));\n    aRest = `${aAnnotationPadding}  ${aIndicator} ${aCountPadding}${aCount}`;\n    bRest = `${bAnnotationPadding}  ${bIndicator} ${bCountPadding}${bCount}`;\n  }\n  const a = `${aIndicator} ${aAnnotation}${aRest}`;\n  const b = `${bIndicator} ${bAnnotation}${bRest}`;\n  return `${aColor(a)}\n${bColor(b)}\n\n`;\n}\nfunction printDiffLines(diffs, truncated, options) {\n  return printAnnotation(options, countChanges(diffs)) + (options.expand ? joinAlignedDiffsExpand(diffs, options) : joinAlignedDiffsNoExpand(diffs, options)) + (truncated ? options.truncateAnnotationColor(`\n${options.truncateAnnotation}`) : \"\");\n}\nfunction diffLinesUnified(aLines, bLines, options) {\n  const normalizedOptions = normalizeDiffOptions(options);\n  const [diffs, truncated] = diffLinesRaw(\n    isEmptyString(aLines) ? [] : aLines,\n    isEmptyString(bLines) ? [] : bLines,\n    normalizedOptions\n  );\n  return printDiffLines(diffs, truncated, normalizedOptions);\n}\nfunction diffLinesUnified2(aLinesDisplay, bLinesDisplay, aLinesCompare, bLinesCompare, options) {\n  if (isEmptyString(aLinesDisplay) && isEmptyString(aLinesCompare)) {\n    aLinesDisplay = [];\n    aLinesCompare = [];\n  }\n  if (isEmptyString(bLinesDisplay) && isEmptyString(bLinesCompare)) {\n    bLinesDisplay = [];\n    bLinesCompare = [];\n  }\n  if (aLinesDisplay.length !== aLinesCompare.length || bLinesDisplay.length !== bLinesCompare.length) {\n    return diffLinesUnified(aLinesDisplay, bLinesDisplay, options);\n  }\n  const [diffs, truncated] = diffLinesRaw(\n    aLinesCompare,\n    bLinesCompare,\n    options\n  );\n  let aIndex = 0;\n  let bIndex = 0;\n  diffs.forEach((diff) => {\n    switch (diff[0]) {\n      case DIFF_DELETE:\n        diff[1] = aLinesDisplay[aIndex];\n        aIndex += 1;\n        break;\n      case DIFF_INSERT:\n        diff[1] = bLinesDisplay[bIndex];\n        bIndex += 1;\n        break;\n      default:\n        diff[1] = bLinesDisplay[bIndex];\n        aIndex += 1;\n        bIndex += 1;\n    }\n  });\n  return printDiffLines(diffs, truncated, normalizeDiffOptions(options));\n}\nfunction diffLinesRaw(aLines, bLines, options) {\n  const truncate = (options == null ? void 0 : options.truncateThreshold) ?? false;\n  const truncateThreshold = Math.max(\n    Math.floor((options == null ? void 0 : options.truncateThreshold) ?? 0),\n    0\n  );\n  const aLength = truncate ? Math.min(aLines.length, truncateThreshold) : aLines.length;\n  const bLength = truncate ? Math.min(bLines.length, truncateThreshold) : bLines.length;\n  const truncated = aLength !== aLines.length || bLength !== bLines.length;\n  const isCommon = (aIndex2, bIndex2) => aLines[aIndex2] === bLines[bIndex2];\n  const diffs = [];\n  let aIndex = 0;\n  let bIndex = 0;\n  const foundSubsequence = (nCommon, aCommon, bCommon) => {\n    for (; aIndex !== aCommon; aIndex += 1) {\n      diffs.push(new Diff(DIFF_DELETE, aLines[aIndex]));\n    }\n    for (; bIndex !== bCommon; bIndex += 1) {\n      diffs.push(new Diff(DIFF_INSERT, bLines[bIndex]));\n    }\n    for (; nCommon !== 0; nCommon -= 1, aIndex += 1, bIndex += 1) {\n      diffs.push(new Diff(DIFF_EQUAL, bLines[bIndex]));\n    }\n  };\n  _default(aLength, bLength, isCommon, foundSubsequence);\n  for (; aIndex !== aLength; aIndex += 1) {\n    diffs.push(new Diff(DIFF_DELETE, aLines[aIndex]));\n  }\n  for (; bIndex !== bLength; bIndex += 1) {\n    diffs.push(new Diff(DIFF_INSERT, bLines[bIndex]));\n  }\n  return [diffs, truncated];\n}\n\nfunction getNewLineSymbol(string) {\n  return string.includes(\"\\r\\n\") ? \"\\r\\n\" : \"\\n\";\n}\nfunction diffStrings(a, b, options) {\n  const truncate = (options == null ? void 0 : options.truncateThreshold) ?? false;\n  const truncateThreshold = Math.max(\n    Math.floor((options == null ? void 0 : options.truncateThreshold) ?? 0),\n    0\n  );\n  let aLength = a.length;\n  let bLength = b.length;\n  if (truncate) {\n    const aMultipleLines = a.includes(\"\\n\");\n    const bMultipleLines = b.includes(\"\\n\");\n    const aNewLineSymbol = getNewLineSymbol(a);\n    const bNewLineSymbol = getNewLineSymbol(b);\n    const _a = aMultipleLines ? `${a.split(aNewLineSymbol, truncateThreshold).join(aNewLineSymbol)}\n` : a;\n    const _b = bMultipleLines ? `${b.split(bNewLineSymbol, truncateThreshold).join(bNewLineSymbol)}\n` : b;\n    aLength = _a.length;\n    bLength = _b.length;\n  }\n  const truncated = aLength !== a.length || bLength !== b.length;\n  const isCommon = (aIndex2, bIndex2) => a[aIndex2] === b[bIndex2];\n  let aIndex = 0;\n  let bIndex = 0;\n  const diffs = [];\n  const foundSubsequence = (nCommon, aCommon, bCommon) => {\n    if (aIndex !== aCommon) {\n      diffs.push(new Diff(DIFF_DELETE, a.slice(aIndex, aCommon)));\n    }\n    if (bIndex !== bCommon) {\n      diffs.push(new Diff(DIFF_INSERT, b.slice(bIndex, bCommon)));\n    }\n    aIndex = aCommon + nCommon;\n    bIndex = bCommon + nCommon;\n    diffs.push(new Diff(DIFF_EQUAL, b.slice(bCommon, bIndex)));\n  };\n  _default(aLength, bLength, isCommon, foundSubsequence);\n  if (aIndex !== aLength) {\n    diffs.push(new Diff(DIFF_DELETE, a.slice(aIndex)));\n  }\n  if (bIndex !== bLength) {\n    diffs.push(new Diff(DIFF_INSERT, b.slice(bIndex)));\n  }\n  return [diffs, truncated];\n}\n\nfunction concatenateRelevantDiffs(op, diffs, changeColor) {\n  return diffs.reduce(\n    (reduced, diff) => reduced + (diff[0] === DIFF_EQUAL ? diff[1] : diff[0] === op && diff[1].length !== 0 ? changeColor(diff[1]) : \"\"),\n    \"\"\n  );\n}\nclass ChangeBuffer {\n  op;\n  line;\n  // incomplete line\n  lines;\n  // complete lines\n  changeColor;\n  constructor(op, changeColor) {\n    this.op = op;\n    this.line = [];\n    this.lines = [];\n    this.changeColor = changeColor;\n  }\n  pushSubstring(substring) {\n    this.pushDiff(new Diff(this.op, substring));\n  }\n  pushLine() {\n    this.lines.push(\n      this.line.length !== 1 ? new Diff(\n        this.op,\n        concatenateRelevantDiffs(this.op, this.line, this.changeColor)\n      ) : this.line[0][0] === this.op ? this.line[0] : new Diff(this.op, this.line[0][1])\n      // was common diff\n    );\n    this.line.length = 0;\n  }\n  isLineEmpty() {\n    return this.line.length === 0;\n  }\n  // Minor input to buffer.\n  pushDiff(diff) {\n    this.line.push(diff);\n  }\n  // Main input to buffer.\n  align(diff) {\n    const string = diff[1];\n    if (string.includes(\"\\n\")) {\n      const substrings = string.split(\"\\n\");\n      const iLast = substrings.length - 1;\n      substrings.forEach((substring, i) => {\n        if (i < iLast) {\n          this.pushSubstring(substring);\n          this.pushLine();\n        } else if (substring.length !== 0) {\n          this.pushSubstring(substring);\n        }\n      });\n    } else {\n      this.pushDiff(diff);\n    }\n  }\n  // Output from buffer.\n  moveLinesTo(lines) {\n    if (!this.isLineEmpty()) {\n      this.pushLine();\n    }\n    lines.push(...this.lines);\n    this.lines.length = 0;\n  }\n}\nclass CommonBuffer {\n  deleteBuffer;\n  insertBuffer;\n  lines;\n  constructor(deleteBuffer, insertBuffer) {\n    this.deleteBuffer = deleteBuffer;\n    this.insertBuffer = insertBuffer;\n    this.lines = [];\n  }\n  pushDiffCommonLine(diff) {\n    this.lines.push(diff);\n  }\n  pushDiffChangeLines(diff) {\n    const isDiffEmpty = diff[1].length === 0;\n    if (!isDiffEmpty || this.deleteBuffer.isLineEmpty()) {\n      this.deleteBuffer.pushDiff(diff);\n    }\n    if (!isDiffEmpty || this.insertBuffer.isLineEmpty()) {\n      this.insertBuffer.pushDiff(diff);\n    }\n  }\n  flushChangeLines() {\n    this.deleteBuffer.moveLinesTo(this.lines);\n    this.insertBuffer.moveLinesTo(this.lines);\n  }\n  // Input to buffer.\n  align(diff) {\n    const op = diff[0];\n    const string = diff[1];\n    if (string.includes(\"\\n\")) {\n      const substrings = string.split(\"\\n\");\n      const iLast = substrings.length - 1;\n      substrings.forEach((substring, i) => {\n        if (i === 0) {\n          const subdiff = new Diff(op, substring);\n          if (this.deleteBuffer.isLineEmpty() && this.insertBuffer.isLineEmpty()) {\n            this.flushChangeLines();\n            this.pushDiffCommonLine(subdiff);\n          } else {\n            this.pushDiffChangeLines(subdiff);\n            this.flushChangeLines();\n          }\n        } else if (i < iLast) {\n          this.pushDiffCommonLine(new Diff(op, substring));\n        } else if (substring.length !== 0) {\n          this.pushDiffChangeLines(new Diff(op, substring));\n        }\n      });\n    } else {\n      this.pushDiffChangeLines(diff);\n    }\n  }\n  // Output from buffer.\n  getLines() {\n    this.flushChangeLines();\n    return this.lines;\n  }\n}\nfunction getAlignedDiffs(diffs, changeColor) {\n  const deleteBuffer = new ChangeBuffer(DIFF_DELETE, changeColor);\n  const insertBuffer = new ChangeBuffer(DIFF_INSERT, changeColor);\n  const commonBuffer = new CommonBuffer(deleteBuffer, insertBuffer);\n  diffs.forEach((diff) => {\n    switch (diff[0]) {\n      case DIFF_DELETE:\n        deleteBuffer.align(diff);\n        break;\n      case DIFF_INSERT:\n        insertBuffer.align(diff);\n        break;\n      default:\n        commonBuffer.align(diff);\n    }\n  });\n  return commonBuffer.getLines();\n}\n\nfunction hasCommonDiff(diffs, isMultiline) {\n  if (isMultiline) {\n    const iLast = diffs.length - 1;\n    return diffs.some(\n      (diff, i) => diff[0] === DIFF_EQUAL && (i !== iLast || diff[1] !== \"\\n\")\n    );\n  }\n  return diffs.some((diff) => diff[0] === DIFF_EQUAL);\n}\nfunction diffStringsUnified(a, b, options) {\n  if (a !== b && a.length !== 0 && b.length !== 0) {\n    const isMultiline = a.includes(\"\\n\") || b.includes(\"\\n\");\n    const [diffs, truncated] = diffStringsRaw(\n      isMultiline ? `${a}\n` : a,\n      isMultiline ? `${b}\n` : b,\n      true,\n      // cleanupSemantic\n      options\n    );\n    if (hasCommonDiff(diffs, isMultiline)) {\n      const optionsNormalized = normalizeDiffOptions(options);\n      const lines = getAlignedDiffs(diffs, optionsNormalized.changeColor);\n      return printDiffLines(lines, truncated, optionsNormalized);\n    }\n  }\n  return diffLinesUnified(a.split(\"\\n\"), b.split(\"\\n\"), options);\n}\nfunction diffStringsRaw(a, b, cleanup, options) {\n  const [diffs, truncated] = diffStrings(a, b, options);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return [diffs, truncated];\n}\n\nfunction getCommonMessage(message, options) {\n  const { commonColor } = normalizeDiffOptions(options);\n  return commonColor(message);\n}\nconst {\n  AsymmetricMatcher,\n  DOMCollection,\n  DOMElement,\n  Immutable,\n  ReactElement,\n  ReactTestComponent\n} = _vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.plugins;\nconst PLUGINS = [\n  ReactTestComponent,\n  ReactElement,\n  DOMElement,\n  DOMCollection,\n  Immutable,\n  AsymmetricMatcher\n];\nconst FORMAT_OPTIONS = {\n  plugins: PLUGINS\n};\nconst FALLBACK_FORMAT_OPTIONS = {\n  callToJSON: false,\n  maxDepth: 10,\n  plugins: PLUGINS\n};\nfunction diff(a, b, options) {\n  if (Object.is(a, b)) {\n    return \"\";\n  }\n  const aType = getType(a);\n  let expectedType = aType;\n  let omitDifference = false;\n  if (aType === \"object\" && typeof a.asymmetricMatch === \"function\") {\n    if (a.$$typeof !== Symbol.for(\"jest.asymmetricMatcher\")) {\n      return null;\n    }\n    if (typeof a.getExpectedType !== \"function\") {\n      return null;\n    }\n    expectedType = a.getExpectedType();\n    omitDifference = expectedType === \"string\";\n  }\n  if (expectedType !== getType(b)) {\n    const { aAnnotation, aColor, aIndicator, bAnnotation, bColor, bIndicator } = normalizeDiffOptions(options);\n    const formatOptions = getFormatOptions(FALLBACK_FORMAT_OPTIONS, options);\n    const aDisplay = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(a, formatOptions);\n    const bDisplay = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(b, formatOptions);\n    const aDiff = `${aColor(`${aIndicator} ${aAnnotation}:`)} \n${aDisplay}`;\n    const bDiff = `${bColor(`${bIndicator} ${bAnnotation}:`)} \n${bDisplay}`;\n    return `${aDiff}\n\n${bDiff}`;\n  }\n  if (omitDifference) {\n    return null;\n  }\n  switch (aType) {\n    case \"string\":\n      return diffLinesUnified(a.split(\"\\n\"), b.split(\"\\n\"), options);\n    case \"boolean\":\n    case \"number\":\n      return comparePrimitive(a, b, options);\n    case \"map\":\n      return compareObjects(sortMap(a), sortMap(b), options);\n    case \"set\":\n      return compareObjects(sortSet(a), sortSet(b), options);\n    default:\n      return compareObjects(a, b, options);\n  }\n}\nfunction comparePrimitive(a, b, options) {\n  const aFormat = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(a, FORMAT_OPTIONS);\n  const bFormat = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(b, FORMAT_OPTIONS);\n  return aFormat === bFormat ? \"\" : diffLinesUnified(aFormat.split(\"\\n\"), bFormat.split(\"\\n\"), options);\n}\nfunction sortMap(map) {\n  return new Map(Array.from(map.entries()).sort());\n}\nfunction sortSet(set) {\n  return new Set(Array.from(set.values()).sort());\n}\nfunction compareObjects(a, b, options) {\n  let difference;\n  let hasThrown = false;\n  try {\n    const formatOptions = getFormatOptions(FORMAT_OPTIONS, options);\n    difference = getObjectsDifference(a, b, formatOptions, options);\n  } catch {\n    hasThrown = true;\n  }\n  const noDiffMessage = getCommonMessage(NO_DIFF_MESSAGE, options);\n  if (difference === void 0 || difference === noDiffMessage) {\n    const formatOptions = getFormatOptions(FALLBACK_FORMAT_OPTIONS, options);\n    difference = getObjectsDifference(a, b, formatOptions, options);\n    if (difference !== noDiffMessage && !hasThrown) {\n      difference = `${getCommonMessage(\n        SIMILAR_MESSAGE,\n        options\n      )}\n\n${difference}`;\n    }\n  }\n  return difference;\n}\nfunction getFormatOptions(formatOptions, options) {\n  const { compareKeys } = normalizeDiffOptions(options);\n  return {\n    ...formatOptions,\n    compareKeys\n  };\n}\nfunction getObjectsDifference(a, b, formatOptions, options) {\n  const formatOptionsZeroIndent = { ...formatOptions, indent: 0 };\n  const aCompare = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(a, formatOptionsZeroIndent);\n  const bCompare = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(b, formatOptionsZeroIndent);\n  if (aCompare === bCompare) {\n    return getCommonMessage(NO_DIFF_MESSAGE, options);\n  } else {\n    const aDisplay = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(a, formatOptions);\n    const bDisplay = (0,_vitest_pretty_format__WEBPACK_IMPORTED_MODULE_1__.format)(b, formatOptions);\n    return diffLinesUnified2(\n      aDisplay.split(\"\\n\"),\n      bDisplay.split(\"\\n\"),\n      aCompare.split(\"\\n\"),\n      bCompare.split(\"\\n\"),\n      options\n    );\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/utils/dist/diff.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/utils/dist/error.js":
/*!**************************************************!*\
  !*** ./node_modules/@vitest/utils/dist/error.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processError: function() { return /* binding */ processError; },\n/* harmony export */   replaceAsymmetricMatcher: function() { return /* binding */ replaceAsymmetricMatcher; },\n/* harmony export */   serializeError: function() { return /* binding */ serializeError; }\n/* harmony export */ });\n/* harmony import */ var _diff_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./diff.js */ \"./node_modules/@vitest/utils/dist/diff.js\");\n/* harmony import */ var _chunk_display_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-display.js */ \"./node_modules/@vitest/utils/dist/chunk-display.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@vitest/utils/dist/helpers.js\");\n/* harmony import */ var tinyrainbow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinyrainbow */ \"./node_modules/tinyrainbow/dist/browser.js\");\n/* harmony import */ var loupe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! loupe */ \"./node_modules/loupe/lib/index.js\");\n\n\n\n\n\n\n\nconst IS_RECORD_SYMBOL = \"@@__IMMUTABLE_RECORD__@@\";\nconst IS_COLLECTION_SYMBOL = \"@@__IMMUTABLE_ITERABLE__@@\";\nfunction isImmutable(v) {\n  return v && (v[IS_COLLECTION_SYMBOL] || v[IS_RECORD_SYMBOL]);\n}\nconst OBJECT_PROTO = Object.getPrototypeOf({});\nfunction getUnserializableMessage(err) {\n  if (err instanceof Error) {\n    return `<unserializable>: ${err.message}`;\n  }\n  if (typeof err === \"string\") {\n    return `<unserializable>: ${err}`;\n  }\n  return \"<unserializable>\";\n}\nfunction serializeError(val, seen = /* @__PURE__ */ new WeakMap()) {\n  if (!val || typeof val === \"string\") {\n    return val;\n  }\n  if (typeof val === \"function\") {\n    return `Function<${val.name || \"anonymous\"}>`;\n  }\n  if (typeof val === \"symbol\") {\n    return val.toString();\n  }\n  if (typeof val !== \"object\") {\n    return val;\n  }\n  if (isImmutable(val)) {\n    return serializeError(val.toJSON(), seen);\n  }\n  if (val instanceof Promise || val.constructor && val.constructor.prototype === \"AsyncFunction\") {\n    return \"Promise\";\n  }\n  if (typeof Element !== \"undefined\" && val instanceof Element) {\n    return val.tagName;\n  }\n  if (typeof val.asymmetricMatch === \"function\") {\n    return `${val.toString()} ${(0,_chunk_display_js__WEBPACK_IMPORTED_MODULE_2__.f)(val.sample)}`;\n  }\n  if (typeof val.toJSON === \"function\") {\n    return serializeError(val.toJSON(), seen);\n  }\n  if (seen.has(val)) {\n    return seen.get(val);\n  }\n  if (Array.isArray(val)) {\n    const clone = new Array(val.length);\n    seen.set(val, clone);\n    val.forEach((e, i) => {\n      try {\n        clone[i] = serializeError(e, seen);\n      } catch (err) {\n        clone[i] = getUnserializableMessage(err);\n      }\n    });\n    return clone;\n  } else {\n    const clone = /* @__PURE__ */ Object.create(null);\n    seen.set(val, clone);\n    let obj = val;\n    while (obj && obj !== OBJECT_PROTO) {\n      Object.getOwnPropertyNames(obj).forEach((key) => {\n        if (key in clone) {\n          return;\n        }\n        try {\n          clone[key] = serializeError(val[key], seen);\n        } catch (err) {\n          delete clone[key];\n          clone[key] = getUnserializableMessage(err);\n        }\n      });\n      obj = Object.getPrototypeOf(obj);\n    }\n    return clone;\n  }\n}\nfunction normalizeErrorMessage(message) {\n  return message.replace(/__(vite_ssr_import|vi_import)_\\d+__\\./g, \"\");\n}\nfunction processError(err, diffOptions, seen = /* @__PURE__ */ new WeakSet()) {\n  if (!err || typeof err !== \"object\") {\n    return { message: err };\n  }\n  if (err.stack) {\n    err.stackStr = String(err.stack);\n  }\n  if (err.name) {\n    err.nameStr = String(err.name);\n  }\n  if (err.showDiff || err.showDiff === void 0 && err.expected !== void 0 && err.actual !== void 0) {\n    const clonedActual = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.deepClone)(err.actual, { forceWritable: true });\n    const clonedExpected = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.deepClone)(err.expected, { forceWritable: true });\n    const { replacedActual, replacedExpected } = replaceAsymmetricMatcher(\n      clonedActual,\n      clonedExpected\n    );\n    err.diff = (0,_diff_js__WEBPACK_IMPORTED_MODULE_4__.diff)(replacedExpected, replacedActual, {\n      ...diffOptions,\n      ...err.diffOptions\n    });\n  }\n  if (typeof err.expected !== \"string\") {\n    err.expected = (0,_chunk_display_js__WEBPACK_IMPORTED_MODULE_2__.s)(err.expected, 10);\n  }\n  if (typeof err.actual !== \"string\") {\n    err.actual = (0,_chunk_display_js__WEBPACK_IMPORTED_MODULE_2__.s)(err.actual, 10);\n  }\n  try {\n    if (typeof err.message === \"string\") {\n      err.message = normalizeErrorMessage(err.message);\n    }\n  } catch {\n  }\n  try {\n    if (!seen.has(err) && typeof err.cause === \"object\") {\n      seen.add(err);\n      err.cause = processError(err.cause, diffOptions, seen);\n    }\n  } catch {\n  }\n  try {\n    return serializeError(err);\n  } catch (e) {\n    return serializeError(\n      new Error(\n        `Failed to fully serialize error: ${e == null ? void 0 : e.message}\nInner error message: ${err == null ? void 0 : err.message}`\n      )\n    );\n  }\n}\nfunction isAsymmetricMatcher(data) {\n  const type = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getType)(data);\n  return type === \"Object\" && typeof data.asymmetricMatch === \"function\";\n}\nfunction isReplaceable(obj1, obj2) {\n  const obj1Type = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getType)(obj1);\n  const obj2Type = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getType)(obj2);\n  return obj1Type === obj2Type && (obj1Type === \"Object\" || obj1Type === \"Array\");\n}\nfunction replaceAsymmetricMatcher(actual, expected, actualReplaced = /* @__PURE__ */ new WeakSet(), expectedReplaced = /* @__PURE__ */ new WeakSet()) {\n  if (!isReplaceable(actual, expected)) {\n    return { replacedActual: actual, replacedExpected: expected };\n  }\n  if (actualReplaced.has(actual) || expectedReplaced.has(expected)) {\n    return { replacedActual: actual, replacedExpected: expected };\n  }\n  actualReplaced.add(actual);\n  expectedReplaced.add(expected);\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getOwnProperties)(expected).forEach((key) => {\n    const expectedValue = expected[key];\n    const actualValue = actual[key];\n    if (isAsymmetricMatcher(expectedValue)) {\n      if (expectedValue.asymmetricMatch(actualValue)) {\n        actual[key] = expectedValue;\n      }\n    } else if (isAsymmetricMatcher(actualValue)) {\n      if (actualValue.asymmetricMatch(expectedValue)) {\n        expected[key] = actualValue;\n      }\n    } else if (isReplaceable(actualValue, expectedValue)) {\n      const replaced = replaceAsymmetricMatcher(\n        actualValue,\n        expectedValue,\n        actualReplaced,\n        expectedReplaced\n      );\n      actual[key] = replaced.replacedActual;\n      expected[key] = replaced.replacedExpected;\n    }\n  });\n  return {\n    replacedActual: actual,\n    replacedExpected: expected\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/utils/dist/error.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/utils/dist/helpers.js":
/*!****************************************************!*\
  !*** ./node_modules/@vitest/utils/dist/helpers.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertTypes: function() { return /* binding */ assertTypes; },\n/* harmony export */   clone: function() { return /* binding */ clone; },\n/* harmony export */   createDefer: function() { return /* binding */ createDefer; },\n/* harmony export */   deepClone: function() { return /* binding */ deepClone; },\n/* harmony export */   getCallLastIndex: function() { return /* binding */ getCallLastIndex; },\n/* harmony export */   getOwnProperties: function() { return /* binding */ getOwnProperties; },\n/* harmony export */   getType: function() { return /* binding */ getType; },\n/* harmony export */   isNegativeNaN: function() { return /* binding */ isNegativeNaN; },\n/* harmony export */   isObject: function() { return /* binding */ isObject; },\n/* harmony export */   isPrimitive: function() { return /* binding */ isPrimitive; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   notNullish: function() { return /* binding */ notNullish; },\n/* harmony export */   objectAttr: function() { return /* binding */ objectAttr; },\n/* harmony export */   parseRegexp: function() { return /* binding */ parseRegexp; },\n/* harmony export */   slash: function() { return /* binding */ slash; },\n/* harmony export */   toArray: function() { return /* binding */ toArray; }\n/* harmony export */ });\nfunction notNullish(v) {\n  return v != null;\n}\nfunction assertTypes(value, name, types) {\n  const receivedType = typeof value;\n  const pass = types.includes(receivedType);\n  if (!pass) {\n    throw new TypeError(\n      `${name} value must be ${types.join(\" or \")}, received \"${receivedType}\"`\n    );\n  }\n}\nfunction isPrimitive(value) {\n  return value === null || typeof value !== \"function\" && typeof value !== \"object\";\n}\nfunction slash(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\nfunction parseRegexp(input) {\n  const m = input.match(/(\\/?)(.+)\\1([a-z]*)/i);\n  if (!m) {\n    return /$^/;\n  }\n  if (m[3] && !/^(?!.*?(.).*?\\1)[gmixXsuUAJ]+$/.test(m[3])) {\n    return RegExp(input);\n  }\n  return new RegExp(m[2], m[3]);\n}\nfunction toArray(array) {\n  if (array === null || array === void 0) {\n    array = [];\n  }\n  if (Array.isArray(array)) {\n    return array;\n  }\n  return [array];\n}\nfunction isObject(item) {\n  return item != null && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction isFinalObj(obj) {\n  return obj === Object.prototype || obj === Function.prototype || obj === RegExp.prototype;\n}\nfunction getType(value) {\n  return Object.prototype.toString.apply(value).slice(8, -1);\n}\nfunction collectOwnProperties(obj, collector) {\n  const collect = typeof collector === \"function\" ? collector : (key) => collector.add(key);\n  Object.getOwnPropertyNames(obj).forEach(collect);\n  Object.getOwnPropertySymbols(obj).forEach(collect);\n}\nfunction getOwnProperties(obj) {\n  const ownProps = /* @__PURE__ */ new Set();\n  if (isFinalObj(obj)) {\n    return [];\n  }\n  collectOwnProperties(obj, ownProps);\n  return Array.from(ownProps);\n}\nconst defaultCloneOptions = { forceWritable: false };\nfunction deepClone(val, options = defaultCloneOptions) {\n  const seen = /* @__PURE__ */ new WeakMap();\n  return clone(val, seen, options);\n}\nfunction clone(val, seen, options = defaultCloneOptions) {\n  let k, out;\n  if (seen.has(val)) {\n    return seen.get(val);\n  }\n  if (Array.isArray(val)) {\n    out = Array(k = val.length);\n    seen.set(val, out);\n    while (k--) {\n      out[k] = clone(val[k], seen, options);\n    }\n    return out;\n  }\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    out = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, out);\n    const props = getOwnProperties(val);\n    for (const k2 of props) {\n      const descriptor = Object.getOwnPropertyDescriptor(val, k2);\n      if (!descriptor) {\n        continue;\n      }\n      const cloned = clone(val[k2], seen, options);\n      if (options.forceWritable) {\n        Object.defineProperty(out, k2, {\n          enumerable: descriptor.enumerable,\n          configurable: true,\n          writable: true,\n          value: cloned\n        });\n      } else if (\"get\" in descriptor) {\n        Object.defineProperty(out, k2, {\n          ...descriptor,\n          get() {\n            return cloned;\n          }\n        });\n      } else {\n        Object.defineProperty(out, k2, {\n          ...descriptor,\n          value: cloned\n        });\n      }\n    }\n    return out;\n  }\n  return val;\n}\nfunction noop() {\n}\nfunction objectAttr(source, path, defaultValue = void 0) {\n  const paths = path.replace(/\\[(\\d+)\\]/g, \".$1\").split(\".\");\n  let result = source;\n  for (const p of paths) {\n    result = Object(result)[p];\n    if (result === void 0) {\n      return defaultValue;\n    }\n  }\n  return result;\n}\nfunction createDefer() {\n  let resolve = null;\n  let reject = null;\n  const p = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  p.resolve = resolve;\n  p.reject = reject;\n  return p;\n}\nfunction getCallLastIndex(code) {\n  let charIndex = -1;\n  let inString = null;\n  let startedBracers = 0;\n  let endedBracers = 0;\n  let beforeChar = null;\n  while (charIndex <= code.length) {\n    beforeChar = code[charIndex];\n    charIndex++;\n    const char = code[charIndex];\n    const isCharString = char === '\"' || char === \"'\" || char === \"`\";\n    if (isCharString && beforeChar !== \"\\\\\") {\n      if (inString === char) {\n        inString = null;\n      } else if (!inString) {\n        inString = char;\n      }\n    }\n    if (!inString) {\n      if (char === \"(\") {\n        startedBracers++;\n      }\n      if (char === \")\") {\n        endedBracers++;\n      }\n    }\n    if (startedBracers && endedBracers && startedBracers === endedBracers) {\n      return charIndex;\n    }\n  }\n  return null;\n}\nfunction isNegativeNaN(val) {\n  if (!Number.isNaN(val)) {\n    return false;\n  }\n  const f64 = new Float64Array(1);\n  f64[0] = val;\n  const u32 = new Uint32Array(f64.buffer);\n  const isNegative = u32[1] >>> 31 === 1;\n  return isNegative;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/utils/dist/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/utils/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@vitest/utils/dist/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SAFE_COLORS_SYMBOL: function() { return /* binding */ SAFE_COLORS_SYMBOL; },\n/* harmony export */   SAFE_TIMERS_SYMBOL: function() { return /* binding */ SAFE_TIMERS_SYMBOL; },\n/* harmony export */   assertTypes: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.assertTypes; },\n/* harmony export */   clone: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.clone; },\n/* harmony export */   createDefer: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.createDefer; },\n/* harmony export */   createSimpleStackTrace: function() { return /* binding */ createSimpleStackTrace; },\n/* harmony export */   deepClone: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.deepClone; },\n/* harmony export */   format: function() { return /* reexport safe */ _chunk_display_js__WEBPACK_IMPORTED_MODULE_1__.f; },\n/* harmony export */   getCallLastIndex: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.getCallLastIndex; },\n/* harmony export */   getOwnProperties: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.getOwnProperties; },\n/* harmony export */   getSafeTimers: function() { return /* binding */ getSafeTimers; },\n/* harmony export */   getType: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.getType; },\n/* harmony export */   highlight: function() { return /* binding */ highlight; },\n/* harmony export */   inspect: function() { return /* reexport safe */ _chunk_display_js__WEBPACK_IMPORTED_MODULE_1__.i; },\n/* harmony export */   isNegativeNaN: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeNaN; },\n/* harmony export */   isObject: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.isObject; },\n/* harmony export */   isPrimitive: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.isPrimitive; },\n/* harmony export */   lineSplitRE: function() { return /* binding */ lineSplitRE; },\n/* harmony export */   noop: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.noop; },\n/* harmony export */   notNullish: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.notNullish; },\n/* harmony export */   objDisplay: function() { return /* reexport safe */ _chunk_display_js__WEBPACK_IMPORTED_MODULE_1__.o; },\n/* harmony export */   objectAttr: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.objectAttr; },\n/* harmony export */   offsetToLineNumber: function() { return /* binding */ offsetToLineNumber; },\n/* harmony export */   parseRegexp: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseRegexp; },\n/* harmony export */   positionToOffset: function() { return /* binding */ positionToOffset; },\n/* harmony export */   setSafeTimers: function() { return /* binding */ setSafeTimers; },\n/* harmony export */   shuffle: function() { return /* binding */ shuffle; },\n/* harmony export */   slash: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.slash; },\n/* harmony export */   stringify: function() { return /* reexport safe */ _chunk_display_js__WEBPACK_IMPORTED_MODULE_1__.s; },\n/* harmony export */   toArray: function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_0__.toArray; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@vitest/utils/dist/helpers.js\");\n/* harmony import */ var _chunk_display_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-display.js */ \"./node_modules/@vitest/utils/dist/chunk-display.js\");\n/* harmony import */ var tinyrainbow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tinyrainbow */ \"./node_modules/tinyrainbow/dist/browser.js\");\n/* harmony import */ var loupe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! loupe */ \"./node_modules/loupe/lib/index.js\");\n\n\n\n\n\n\nconst SAFE_TIMERS_SYMBOL = Symbol(\"vitest:SAFE_TIMERS\");\nconst SAFE_COLORS_SYMBOL = Symbol(\"vitest:SAFE_COLORS\");\n\nfunction getSafeTimers() {\n  const {\n    setTimeout: safeSetTimeout,\n    setInterval: safeSetInterval,\n    clearInterval: safeClearInterval,\n    clearTimeout: safeClearTimeout,\n    setImmediate: safeSetImmediate,\n    clearImmediate: safeClearImmediate\n  } = globalThis[SAFE_TIMERS_SYMBOL] || globalThis;\n  const { nextTick: safeNextTick } = globalThis[SAFE_TIMERS_SYMBOL] || globalThis.process || { nextTick: (cb) => cb() };\n  return {\n    nextTick: safeNextTick,\n    setTimeout: safeSetTimeout,\n    setInterval: safeSetInterval,\n    clearInterval: safeClearInterval,\n    clearTimeout: safeClearTimeout,\n    setImmediate: safeSetImmediate,\n    clearImmediate: safeClearImmediate\n  };\n}\nfunction setSafeTimers() {\n  const {\n    setTimeout: safeSetTimeout,\n    setInterval: safeSetInterval,\n    clearInterval: safeClearInterval,\n    clearTimeout: safeClearTimeout,\n    setImmediate: safeSetImmediate,\n    clearImmediate: safeClearImmediate\n  } = globalThis;\n  const { nextTick: safeNextTick } = globalThis.process || {\n    nextTick: (cb) => cb()\n  };\n  const timers = {\n    nextTick: safeNextTick,\n    setTimeout: safeSetTimeout,\n    setInterval: safeSetInterval,\n    clearInterval: safeClearInterval,\n    clearTimeout: safeClearTimeout,\n    setImmediate: safeSetImmediate,\n    clearImmediate: safeClearImmediate\n  };\n  globalThis[SAFE_TIMERS_SYMBOL] = timers;\n}\n\nconst RealDate = Date;\nfunction random(seed) {\n  const x = Math.sin(seed++) * 1e4;\n  return x - Math.floor(x);\n}\nfunction shuffle(array, seed = RealDate.now()) {\n  let length = array.length;\n  while (length) {\n    const index = Math.floor(random(seed) * length--);\n    const previous = array[length];\n    array[length] = array[index];\n    array[index] = previous;\n    ++seed;\n  }\n  return array;\n}\n\nfunction createSimpleStackTrace(options) {\n  const { message = \"$$stack trace error\", stackTraceLimit = 1 } = options || {};\n  const limit = Error.stackTraceLimit;\n  const prepareStackTrace = Error.prepareStackTrace;\n  Error.stackTraceLimit = stackTraceLimit;\n  Error.prepareStackTrace = (e) => e.stack;\n  const err = new Error(message);\n  const stackTrace = err.stack || \"\";\n  Error.prepareStackTrace = prepareStackTrace;\n  Error.stackTraceLimit = limit;\n  return stackTrace;\n}\n\nconst lineSplitRE = /\\r?\\n/;\nfunction positionToOffset(source, lineNumber, columnNumber) {\n  const lines = source.split(lineSplitRE);\n  const nl = /\\r\\n/.test(source) ? 2 : 1;\n  let start = 0;\n  if (lineNumber > lines.length) {\n    return source.length;\n  }\n  for (let i = 0; i < lineNumber - 1; i++) {\n    start += lines[i].length + nl;\n  }\n  return start + columnNumber;\n}\nfunction offsetToLineNumber(source, offset) {\n  if (offset > source.length) {\n    throw new Error(\n      `offset is longer than source length! offset ${offset} > length ${source.length}`\n    );\n  }\n  const lines = source.split(lineSplitRE);\n  const nl = /\\r\\n/.test(source) ? 2 : 1;\n  let counted = 0;\n  let line = 0;\n  for (; line < lines.length; line++) {\n    const lineLength = lines[line].length + nl;\n    if (counted + lineLength >= offset) {\n      break;\n    }\n    counted += lineLength;\n  }\n  return line + 1;\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n// Copyright 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Simon Lydell\n// License: MIT.\nvar Identifier, JSXIdentifier, JSXPunctuator, JSXString, JSXText, KeywordsWithExpressionAfter, KeywordsWithNoLineTerminatorAfter, LineTerminatorSequence, MultiLineComment, Newline, NumericLiteral, Punctuator, RegularExpressionLiteral, SingleLineComment, StringLiteral, Template, TokensNotPrecedingObjectLiteral, TokensPrecedingExpression, WhiteSpace;\nRegularExpressionLiteral = /\\/(?![*\\/])(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\\\]).|\\\\.)*(\\/[$_\\u200C\\u200D\\p{ID_Continue}]*|\\\\)?/yu;\nPunctuator = /--|\\+\\+|=>|\\.{3}|\\??\\.(?!\\d)|(?:&&|\\|\\||\\?\\?|[+\\-%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\\/(?![\\/*]))=?|[?~,:;[\\](){}]/y;\nIdentifier = /(\\x23?)(?=[$_\\p{ID_Start}\\\\])(?:[$_\\u200C\\u200D\\p{ID_Continue}]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+/yu;\nStringLiteral = /(['\"])(?:(?!\\1)[^\\\\\\n\\r]|\\\\(?:\\r\\n|[^]))*(\\1)?/y;\nNumericLiteral = /(?:0[xX][\\da-fA-F](?:_?[\\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\\d)*n|(?:(?:0(?!\\d)|0\\d*[89]\\d*|[1-9](?:_?\\d)*)(?:\\.(?:\\d(?:_?\\d)*)?)?|\\.\\d(?:_?\\d)*)(?:[eE][+-]?\\d(?:_?\\d)*)?|0[0-7]+/y;\nTemplate = /[`}](?:[^`\\\\$]|\\\\[^]|\\$(?!\\{))*(`|\\$\\{)?/y;\nWhiteSpace = /[\\t\\v\\f\\ufeff\\p{Zs}]+/yu;\nLineTerminatorSequence = /\\r?\\n|[\\r\\u2028\\u2029]/y;\nMultiLineComment = /\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?/y;\nSingleLineComment = /\\/\\/.*/y;\nJSXPunctuator = /[<>.:={}]|\\/(?![\\/*])/y;\nJSXIdentifier = /[$_\\p{ID_Start}][$_\\u200C\\u200D\\p{ID_Continue}-]*/yu;\nJSXString = /(['\"])(?:(?!\\1)[^])*(\\1)?/y;\nJSXText = /[^<>{}]+/y;\nTokensPrecedingExpression = /^(?:[\\/+-]|\\.{3}|\\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/;\nTokensNotPrecedingObjectLiteral = /^(?:=>|[;\\]){}]|else|\\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/;\nKeywordsWithExpressionAfter = /^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/;\nKeywordsWithNoLineTerminatorAfter = /^(?:return|throw|yield)$/;\nNewline = RegExp(LineTerminatorSequence.source);\nvar jsTokens_1 = function*(input, {jsx = false} = {}) {\n\tvar braces, firstCodePoint, isExpression, lastIndex, lastSignificantToken, length, match, mode, nextLastIndex, nextLastSignificantToken, parenNesting, postfixIncDec, punctuator, stack;\n\t({length} = input);\n\tlastIndex = 0;\n\tlastSignificantToken = \"\";\n\tstack = [\n\t\t{tag: \"JS\"}\n\t];\n\tbraces = [];\n\tparenNesting = 0;\n\tpostfixIncDec = false;\n\twhile (lastIndex < length) {\n\t\tmode = stack[stack.length - 1];\n\t\tswitch (mode.tag) {\n\t\t\tcase \"JS\":\n\t\t\tcase \"JSNonExpressionParen\":\n\t\t\tcase \"InterpolationInTemplate\":\n\t\t\tcase \"InterpolationInJSX\":\n\t\t\t\tif (input[lastIndex] === \"/\" && (TokensPrecedingExpression.test(lastSignificantToken) || KeywordsWithExpressionAfter.test(lastSignificantToken))) {\n\t\t\t\t\tRegularExpressionLiteral.lastIndex = lastIndex;\n\t\t\t\t\tif (match = RegularExpressionLiteral.exec(input)) {\n\t\t\t\t\t\tlastIndex = RegularExpressionLiteral.lastIndex;\n\t\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"RegularExpressionLiteral\",\n\t\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\t\tclosed: match[1] !== void 0 && match[1] !== \"\\\\\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tPunctuator.lastIndex = lastIndex;\n\t\t\t\tif (match = Punctuator.exec(input)) {\n\t\t\t\t\tpunctuator = match[0];\n\t\t\t\t\tnextLastIndex = Punctuator.lastIndex;\n\t\t\t\t\tnextLastSignificantToken = punctuator;\n\t\t\t\t\tswitch (punctuator) {\n\t\t\t\t\t\tcase \"(\":\n\t\t\t\t\t\t\tif (lastSignificantToken === \"?NonExpressionParenKeyword\") {\n\t\t\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\t\t\ttag: \"JSNonExpressionParen\",\n\t\t\t\t\t\t\t\t\tnesting: parenNesting\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparenNesting++;\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \")\":\n\t\t\t\t\t\t\tparenNesting--;\n\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\tif (mode.tag === \"JSNonExpressionParen\" && parenNesting === mode.nesting) {\n\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\tnextLastSignificantToken = \"?NonExpressionParenEnd\";\n\t\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"{\":\n\t\t\t\t\t\t\tPunctuator.lastIndex = 0;\n\t\t\t\t\t\t\tisExpression = !TokensNotPrecedingObjectLiteral.test(lastSignificantToken) && (TokensPrecedingExpression.test(lastSignificantToken) || KeywordsWithExpressionAfter.test(lastSignificantToken));\n\t\t\t\t\t\t\tbraces.push(isExpression);\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"}\":\n\t\t\t\t\t\t\tswitch (mode.tag) {\n\t\t\t\t\t\t\t\tcase \"InterpolationInTemplate\":\n\t\t\t\t\t\t\t\t\tif (braces.length === mode.nesting) {\n\t\t\t\t\t\t\t\t\t\tTemplate.lastIndex = lastIndex;\n\t\t\t\t\t\t\t\t\t\tmatch = Template.exec(input);\n\t\t\t\t\t\t\t\t\t\tlastIndex = Template.lastIndex;\n\t\t\t\t\t\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\t\t\t\t\t\tif (match[1] === \"${\") {\n\t\t\t\t\t\t\t\t\t\t\tlastSignificantToken = \"?InterpolationInTemplate\";\n\t\t\t\t\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"TemplateMiddle\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"TemplateTail\",\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\t\t\t\t\t\t\tclosed: match[1] === \"`\"\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"InterpolationInJSX\":\n\t\t\t\t\t\t\t\t\tif (braces.length === mode.nesting) {\n\t\t\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\t\t\tlastIndex += 1;\n\t\t\t\t\t\t\t\t\t\tlastSignificantToken = \"}\";\n\t\t\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"}\"\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostfixIncDec = braces.pop();\n\t\t\t\t\t\t\tnextLastSignificantToken = postfixIncDec ? \"?ExpressionBraceEnd\" : \"}\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"]\":\n\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"++\":\n\t\t\t\t\t\tcase \"--\":\n\t\t\t\t\t\t\tnextLastSignificantToken = postfixIncDec ? \"?PostfixIncDec\" : \"?UnaryIncDec\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\t\tif (jsx && (TokensPrecedingExpression.test(lastSignificantToken) || KeywordsWithExpressionAfter.test(lastSignificantToken))) {\n\t\t\t\t\t\t\t\tstack.push({tag: \"JSXTag\"});\n\t\t\t\t\t\t\t\tlastIndex += 1;\n\t\t\t\t\t\t\t\tlastSignificantToken = \"<\";\n\t\t\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\t\t\tvalue: punctuator\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t}\n\t\t\t\t\tlastIndex = nextLastIndex;\n\t\t\t\t\tlastSignificantToken = nextLastSignificantToken;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"Punctuator\",\n\t\t\t\t\t\tvalue: punctuator\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tIdentifier.lastIndex = lastIndex;\n\t\t\t\tif (match = Identifier.exec(input)) {\n\t\t\t\t\tlastIndex = Identifier.lastIndex;\n\t\t\t\t\tnextLastSignificantToken = match[0];\n\t\t\t\t\tswitch (match[0]) {\n\t\t\t\t\t\tcase \"for\":\n\t\t\t\t\t\tcase \"if\":\n\t\t\t\t\t\tcase \"while\":\n\t\t\t\t\t\tcase \"with\":\n\t\t\t\t\t\t\tif (lastSignificantToken !== \".\" && lastSignificantToken !== \"?.\") {\n\t\t\t\t\t\t\t\tnextLastSignificantToken = \"?NonExpressionParenKeyword\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastSignificantToken = nextLastSignificantToken;\n\t\t\t\t\tpostfixIncDec = !KeywordsWithExpressionAfter.test(match[0]);\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: match[1] === \"#\" ? \"PrivateIdentifier\" : \"IdentifierName\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tStringLiteral.lastIndex = lastIndex;\n\t\t\t\tif (match = StringLiteral.exec(input)) {\n\t\t\t\t\tlastIndex = StringLiteral.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"StringLiteral\",\n\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\tclosed: match[2] !== void 0\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tNumericLiteral.lastIndex = lastIndex;\n\t\t\t\tif (match = NumericLiteral.exec(input)) {\n\t\t\t\t\tlastIndex = NumericLiteral.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"NumericLiteral\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tTemplate.lastIndex = lastIndex;\n\t\t\t\tif (match = Template.exec(input)) {\n\t\t\t\t\tlastIndex = Template.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tif (match[1] === \"${\") {\n\t\t\t\t\t\tlastSignificantToken = \"?InterpolationInTemplate\";\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\ttag: \"InterpolationInTemplate\",\n\t\t\t\t\t\t\tnesting: braces.length\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"TemplateHead\",\n\t\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"NoSubstitutionTemplate\",\n\t\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\t\tclosed: match[1] === \"`\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"JSXTag\":\n\t\t\tcase \"JSXTagEnd\":\n\t\t\t\tJSXPunctuator.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXPunctuator.exec(input)) {\n\t\t\t\t\tlastIndex = JSXPunctuator.lastIndex;\n\t\t\t\t\tnextLastSignificantToken = match[0];\n\t\t\t\t\tswitch (match[0]) {\n\t\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\t\tstack.push({tag: \"JSXTag\"});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \">\":\n\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\tif (lastSignificantToken === \"/\" || mode.tag === \"JSXTagEnd\") {\n\t\t\t\t\t\t\t\tnextLastSignificantToken = \"?JSX\";\n\t\t\t\t\t\t\t\tpostfixIncDec = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstack.push({tag: \"JSXChildren\"});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"{\":\n\t\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\t\ttag: \"InterpolationInJSX\",\n\t\t\t\t\t\t\t\tnesting: braces.length\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tnextLastSignificantToken = \"?InterpolationInJSX\";\n\t\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\t\tif (lastSignificantToken === \"<\") {\n\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\tif (stack[stack.length - 1].tag === \"JSXChildren\") {\n\t\t\t\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstack.push({tag: \"JSXTagEnd\"});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastSignificantToken = nextLastSignificantToken;\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tJSXIdentifier.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXIdentifier.exec(input)) {\n\t\t\t\t\tlastIndex = JSXIdentifier.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXIdentifier\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tJSXString.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXString.exec(input)) {\n\t\t\t\t\tlastIndex = JSXString.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXString\",\n\t\t\t\t\t\tvalue: match[0],\n\t\t\t\t\t\tclosed: match[2] !== void 0\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"JSXChildren\":\n\t\t\t\tJSXText.lastIndex = lastIndex;\n\t\t\t\tif (match = JSXText.exec(input)) {\n\t\t\t\t\tlastIndex = JSXText.lastIndex;\n\t\t\t\t\tlastSignificantToken = match[0];\n\t\t\t\t\tyield ({\n\t\t\t\t\t\ttype: \"JSXText\",\n\t\t\t\t\t\tvalue: match[0]\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tswitch (input[lastIndex]) {\n\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\tstack.push({tag: \"JSXTag\"});\n\t\t\t\t\t\tlastIndex++;\n\t\t\t\t\t\tlastSignificantToken = \"<\";\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\tvalue: \"<\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tcase \"{\":\n\t\t\t\t\t\tstack.push({\n\t\t\t\t\t\t\ttag: \"InterpolationInJSX\",\n\t\t\t\t\t\t\tnesting: braces.length\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlastIndex++;\n\t\t\t\t\t\tlastSignificantToken = \"?InterpolationInJSX\";\n\t\t\t\t\t\tpostfixIncDec = false;\n\t\t\t\t\t\tyield ({\n\t\t\t\t\t\t\ttype: \"JSXPunctuator\",\n\t\t\t\t\t\t\tvalue: \"{\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t}\n\t\tWhiteSpace.lastIndex = lastIndex;\n\t\tif (match = WhiteSpace.exec(input)) {\n\t\t\tlastIndex = WhiteSpace.lastIndex;\n\t\t\tyield ({\n\t\t\t\ttype: \"WhiteSpace\",\n\t\t\t\tvalue: match[0]\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tLineTerminatorSequence.lastIndex = lastIndex;\n\t\tif (match = LineTerminatorSequence.exec(input)) {\n\t\t\tlastIndex = LineTerminatorSequence.lastIndex;\n\t\t\tpostfixIncDec = false;\n\t\t\tif (KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)) {\n\t\t\t\tlastSignificantToken = \"?NoLineTerminatorHere\";\n\t\t\t}\n\t\t\tyield ({\n\t\t\t\ttype: \"LineTerminatorSequence\",\n\t\t\t\tvalue: match[0]\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tMultiLineComment.lastIndex = lastIndex;\n\t\tif (match = MultiLineComment.exec(input)) {\n\t\t\tlastIndex = MultiLineComment.lastIndex;\n\t\t\tif (Newline.test(match[0])) {\n\t\t\t\tpostfixIncDec = false;\n\t\t\t\tif (KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)) {\n\t\t\t\t\tlastSignificantToken = \"?NoLineTerminatorHere\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tyield ({\n\t\t\t\ttype: \"MultiLineComment\",\n\t\t\t\tvalue: match[0],\n\t\t\t\tclosed: match[1] !== void 0\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tSingleLineComment.lastIndex = lastIndex;\n\t\tif (match = SingleLineComment.exec(input)) {\n\t\t\tlastIndex = SingleLineComment.lastIndex;\n\t\t\tpostfixIncDec = false;\n\t\t\tyield ({\n\t\t\t\ttype: \"SingleLineComment\",\n\t\t\t\tvalue: match[0]\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tfirstCodePoint = String.fromCodePoint(input.codePointAt(lastIndex));\n\t\tlastIndex += firstCodePoint.length;\n\t\tlastSignificantToken = firstCodePoint;\n\t\tpostfixIncDec = false;\n\t\tyield ({\n\t\t\ttype: mode.tag.startsWith(\"JSX\") ? \"JSXInvalid\" : \"Invalid\",\n\t\t\tvalue: firstCodePoint\n\t\t});\n\t}\n\treturn void 0;\n};\n\nvar jsTokens = /*@__PURE__*/getDefaultExportFromCjs(jsTokens_1);\n\n// src/index.ts\nvar reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\"\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\"\n  ]\n}, keywords = new Set(reservedWords.keyword), reservedWordsStrictSet = new Set(reservedWords.strict), sometimesKeywords = /* @__PURE__ */ new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\nfunction isReservedWord(word) {\n  return word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word) {\n  return isReservedWord(word) || reservedWordsStrictSet.has(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\nvar BRACKET = /^[()[\\]{}]$/, getTokenType = function(token) {\n  if (token.type === \"IdentifierName\") {\n    if (isKeyword(token.value) || isStrictReservedWord(token.value) || sometimesKeywords.has(token.value))\n      return \"Keyword\";\n    if (token.value[0] && token.value[0] !== token.value[0].toLowerCase())\n      return \"IdentifierCapitalized\";\n  }\n  return token.type === \"Punctuator\" && BRACKET.test(token.value) ? \"Bracket\" : token.type === \"Invalid\" && (token.value === \"@\" || token.value === \"#\") ? \"Punctuator\" : token.type;\n};\nfunction getCallableType(token) {\n  if (token.type === \"IdentifierName\")\n    return \"IdentifierCallable\";\n  if (token.type === \"PrivateIdentifier\")\n    return \"PrivateIdentifierCallable\";\n  throw new Error(\"Not a callable token\");\n}\nvar colorize = (defs, type, value) => {\n  let colorize2 = defs[type];\n  return colorize2 ? colorize2(value) : value;\n}, highlightTokens = (defs, text, jsx) => {\n  let highlighted = \"\", lastPotentialCallable = null, stackedHighlight = \"\";\n  for (let token of jsTokens(text, { jsx })) {\n    let type = getTokenType(token);\n    if (type === \"IdentifierName\" || type === \"PrivateIdentifier\") {\n      lastPotentialCallable && (highlighted += colorize(defs, getTokenType(lastPotentialCallable), lastPotentialCallable.value) + stackedHighlight, stackedHighlight = \"\"), lastPotentialCallable = token;\n      continue;\n    }\n    if (lastPotentialCallable && (token.type === \"WhiteSpace\" || token.type === \"LineTerminatorSequence\" || token.type === \"Punctuator\" && (token.value === \"?.\" || token.value === \"!\"))) {\n      stackedHighlight += colorize(defs, type, token.value);\n      continue;\n    }\n    if (stackedHighlight && !lastPotentialCallable && (highlighted += stackedHighlight, stackedHighlight = \"\"), lastPotentialCallable) {\n      let type2 = token.type === \"Punctuator\" && token.value === \"(\" ? getCallableType(lastPotentialCallable) : getTokenType(lastPotentialCallable);\n      highlighted += colorize(defs, type2, lastPotentialCallable.value) + stackedHighlight, stackedHighlight = \"\", lastPotentialCallable = null;\n    }\n    highlighted += colorize(defs, type, token.value);\n  }\n  return highlighted;\n};\nfunction highlight$1(code, options = { jsx: !1, colors: {} }) {\n  return code && highlightTokens(options.colors || {}, code, options.jsx);\n}\n\nfunction getDefs(c2) {\n  const Invalid = (text) => c2.white(c2.bgRed(c2.bold(text)));\n  return {\n    Keyword: c2.magenta,\n    IdentifierCapitalized: c2.yellow,\n    Punctuator: c2.yellow,\n    StringLiteral: c2.green,\n    NoSubstitutionTemplate: c2.green,\n    MultiLineComment: c2.gray,\n    SingleLineComment: c2.gray,\n    RegularExpressionLiteral: c2.cyan,\n    NumericLiteral: c2.blue,\n    TemplateHead: (text) => c2.green(text.slice(0, text.length - 2)) + c2.cyan(text.slice(-2)),\n    TemplateTail: (text) => c2.cyan(text.slice(0, 1)) + c2.green(text.slice(1)),\n    TemplateMiddle: (text) => c2.cyan(text.slice(0, 1)) + c2.green(text.slice(1, text.length - 2)) + c2.cyan(text.slice(-2)),\n    IdentifierCallable: c2.blue,\n    PrivateIdentifierCallable: (text) => `#${c2.blue(text.slice(1))}`,\n    Invalid,\n    JSXString: c2.green,\n    JSXIdentifier: c2.yellow,\n    JSXInvalid: Invalid,\n    JSXPunctuator: c2.yellow\n  };\n}\nfunction highlight(code, options = { jsx: false }) {\n  return highlight$1(code, {\n    jsx: options.jsx,\n    colors: getDefs(options.colors || tinyrainbow__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/utils/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@vitest/utils/dist/source-map.js":
/*!*******************************************************!*\
  !*** ./node_modules/@vitest/utils/dist/source-map.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TraceMap: function() { return /* binding */ TraceMap; },\n/* harmony export */   generatedPositionFor: function() { return /* binding */ generatedPositionFor; },\n/* harmony export */   originalPositionFor: function() { return /* binding */ originalPositionFor; },\n/* harmony export */   parseErrorStacktrace: function() { return /* binding */ parseErrorStacktrace; },\n/* harmony export */   parseSingleFFOrSafariStack: function() { return /* binding */ parseSingleFFOrSafariStack; },\n/* harmony export */   parseSingleStack: function() { return /* binding */ parseSingleStack; },\n/* harmony export */   parseSingleV8Stack: function() { return /* binding */ parseSingleV8Stack; },\n/* harmony export */   parseStacktrace: function() { return /* binding */ parseStacktrace; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@vitest/utils/dist/helpers.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nconst _DRIVE_LETTER_START_RE = /^[A-Za-z]:\\//;\nfunction normalizeWindowsPath(input = \"\") {\n  if (!input) {\n    return input;\n  }\n  return input.replace(/\\\\/g, \"/\").replace(_DRIVE_LETTER_START_RE, (r) => r.toUpperCase());\n}\nconst _IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;\nfunction cwd() {\n  if (typeof process !== \"undefined\" && typeof process.cwd === \"function\") {\n    return process.cwd().replace(/\\\\/g, \"/\");\n  }\n  return \"/\";\n}\nconst resolve$2 = function(...arguments_) {\n  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));\n  let resolvedPath = \"\";\n  let resolvedAbsolute = false;\n  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {\n    const path = index >= 0 ? arguments_[index] : cwd();\n    if (!path || path.length === 0) {\n      continue;\n    }\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = isAbsolute(path);\n  }\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);\n  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {\n    return `/${resolvedPath}`;\n  }\n  return resolvedPath.length > 0 ? resolvedPath : \".\";\n};\nfunction normalizeString(path, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let char = null;\n  for (let index = 0; index <= path.length; ++index) {\n    if (index < path.length) {\n      char = path[index];\n    } else if (char === \"/\") {\n      break;\n    } else {\n      char = \"/\";\n    }\n    if (char === \"/\") {\n      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== \".\" || res[res.length - 2] !== \".\") {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex === -1) {\n              res = \"\";\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n            }\n            lastSlash = index;\n            dots = 0;\n            continue;\n          } else if (res.length > 0) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path.slice(lastSlash + 1, index)}`;\n        } else {\n          res = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (char === \".\" && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst isAbsolute = function(p) {\n  return _IS_ABSOLUTE_RE.test(p);\n};\n\nconst comma = ','.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars.length; i++) {\n    const c = chars.charCodeAt(i);\n    intToChar[i] = c;\n    charToInt[c] = i;\n}\nfunction decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let index = 0;\n    do {\n        const semi = indexOf(mappings, index);\n        const line = [];\n        let sorted = true;\n        let lastCol = 0;\n        state[0] = 0;\n        for (let i = index; i < semi; i++) {\n            let seg;\n            i = decodeInteger(mappings, i, state, 0); // genColumn\n            const col = state[0];\n            if (col < lastCol)\n                sorted = false;\n            lastCol = col;\n            if (hasMoreVlq(mappings, i, semi)) {\n                i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n                i = decodeInteger(mappings, i, state, 2); // sourceLine\n                i = decodeInteger(mappings, i, state, 3); // sourceColumn\n                if (hasMoreVlq(mappings, i, semi)) {\n                    i = decodeInteger(mappings, i, state, 4); // namesIndex\n                    seg = [col, state[1], state[2], state[3], state[4]];\n                }\n                else {\n                    seg = [col, state[1], state[2], state[3]];\n                }\n            }\n            else {\n                seg = [col];\n            }\n            line.push(seg);\n        }\n        if (!sorted)\n            sort(line);\n        decoded.push(line);\n        index = semi + 1;\n    } while (index <= mappings.length);\n    return decoded;\n}\nfunction indexOf(mappings, index) {\n    const idx = mappings.indexOf(';', index);\n    return idx === -1 ? mappings.length : idx;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n    do {\n        const c = mappings.charCodeAt(pos++);\n        integer = charToInt[c];\n        value |= (integer & 31) << shift;\n        shift += 5;\n    } while (integer & 32);\n    const shouldNegate = value & 1;\n    value >>>= 1;\n    if (shouldNegate) {\n        value = -0x80000000 | -value;\n    }\n    state[j] += value;\n    return pos;\n}\nfunction hasMoreVlq(mappings, i, length) {\n    if (i >= length)\n        return false;\n    return mappings.charCodeAt(i) !== comma;\n}\nfunction sort(line) {\n    line.sort(sortComparator$1);\n}\nfunction sortComparator$1(a, b) {\n    return a[0] - b[0];\n}\n\n// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\nvar UrlType;\n(function (UrlType) {\n    UrlType[UrlType[\"Empty\"] = 1] = \"Empty\";\n    UrlType[UrlType[\"Hash\"] = 2] = \"Hash\";\n    UrlType[UrlType[\"Query\"] = 3] = \"Query\";\n    UrlType[UrlType[\"RelativePath\"] = 4] = \"RelativePath\";\n    UrlType[UrlType[\"AbsolutePath\"] = 5] = \"AbsolutePath\";\n    UrlType[UrlType[\"SchemeRelative\"] = 6] = \"SchemeRelative\";\n    UrlType[UrlType[\"Absolute\"] = 7] = \"Absolute\";\n})(UrlType || (UrlType = {}));\nfunction isAbsoluteUrl(input) {\n    return schemeRegex.test(input);\n}\nfunction isSchemeRelativeUrl(input) {\n    return input.startsWith('//');\n}\nfunction isAbsolutePath(input) {\n    return input.startsWith('/');\n}\nfunction isFileUrl(input) {\n    return input.startsWith('file:');\n}\nfunction isRelative(input) {\n    return /^[.?#]/.test(input);\n}\nfunction parseAbsoluteUrl(input) {\n    const match = urlRegex.exec(input);\n    return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');\n}\nfunction parseFileUrl(input) {\n    const match = fileRegex.exec(input);\n    const path = match[2];\n    return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');\n}\nfunction makeUrl(scheme, user, host, port, path, query, hash) {\n    return {\n        scheme,\n        user,\n        host,\n        port,\n        path,\n        query,\n        hash,\n        type: UrlType.Absolute,\n    };\n}\nfunction parseUrl(input) {\n    if (isSchemeRelativeUrl(input)) {\n        const url = parseAbsoluteUrl('http:' + input);\n        url.scheme = '';\n        url.type = UrlType.SchemeRelative;\n        return url;\n    }\n    if (isAbsolutePath(input)) {\n        const url = parseAbsoluteUrl('http://foo.com' + input);\n        url.scheme = '';\n        url.host = '';\n        url.type = UrlType.AbsolutePath;\n        return url;\n    }\n    if (isFileUrl(input))\n        return parseFileUrl(input);\n    if (isAbsoluteUrl(input))\n        return parseAbsoluteUrl(input);\n    const url = parseAbsoluteUrl('http://foo.com/' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = input\n        ? input.startsWith('?')\n            ? UrlType.Query\n            : input.startsWith('#')\n                ? UrlType.Hash\n                : UrlType.RelativePath\n        : UrlType.Empty;\n    return url;\n}\nfunction stripPathFilename(path) {\n    // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n    // paths. It's not a file, so we can't strip it.\n    if (path.endsWith('/..'))\n        return path;\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\nfunction mergePaths(url, base) {\n    normalizePath(base, base.type);\n    // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n    // path).\n    if (url.path === '/') {\n        url.path = base.path;\n    }\n    else {\n        // Resolution happens relative to the base path's directory, not the file.\n        url.path = stripPathFilename(base.path) + url.path;\n    }\n}\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url, type) {\n    const rel = type <= UrlType.RelativePath;\n    const pieces = url.path.split('/');\n    // We need to preserve the first piece always, so that we output a leading slash. The item at\n    // pieces[0] is an empty string.\n    let pointer = 1;\n    // Positive is the number of real directories we've output, used for popping a parent directory.\n    // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n    let positive = 0;\n    // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n    // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n    // real directory, we won't need to append, unless the other conditions happen again.\n    let addTrailingSlash = false;\n    for (let i = 1; i < pieces.length; i++) {\n        const piece = pieces[i];\n        // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n        if (!piece) {\n            addTrailingSlash = true;\n            continue;\n        }\n        // If we encounter a real directory, then we don't need to append anymore.\n        addTrailingSlash = false;\n        // A current directory, which we can always drop.\n        if (piece === '.')\n            continue;\n        // A parent directory, we need to see if there are any real directories we can pop. Else, we\n        // have an excess of parents, and we'll need to keep the \"..\".\n        if (piece === '..') {\n            if (positive) {\n                addTrailingSlash = true;\n                positive--;\n                pointer--;\n            }\n            else if (rel) {\n                // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                pieces[pointer++] = piece;\n            }\n            continue;\n        }\n        // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n        // any popped or dropped directories.\n        pieces[pointer++] = piece;\n        positive++;\n    }\n    let path = '';\n    for (let i = 1; i < pointer; i++) {\n        path += '/' + pieces[i];\n    }\n    if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n        path += '/';\n    }\n    url.path = path;\n}\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nfunction resolve$1(input, base) {\n    if (!input && !base)\n        return '';\n    const url = parseUrl(input);\n    let inputType = url.type;\n    if (base && inputType !== UrlType.Absolute) {\n        const baseUrl = parseUrl(base);\n        const baseType = baseUrl.type;\n        switch (inputType) {\n            case UrlType.Empty:\n                url.hash = baseUrl.hash;\n            // fall through\n            case UrlType.Hash:\n                url.query = baseUrl.query;\n            // fall through\n            case UrlType.Query:\n            case UrlType.RelativePath:\n                mergePaths(url, baseUrl);\n            // fall through\n            case UrlType.AbsolutePath:\n                // The host, user, and port are joined, you can't copy one without the others.\n                url.user = baseUrl.user;\n                url.host = baseUrl.host;\n                url.port = baseUrl.port;\n            // fall through\n            case UrlType.SchemeRelative:\n                // The input doesn't have a schema at least, so we need to copy at least that over.\n                url.scheme = baseUrl.scheme;\n        }\n        if (baseType > inputType)\n            inputType = baseType;\n    }\n    normalizePath(url, inputType);\n    const queryHash = url.query + url.hash;\n    switch (inputType) {\n        // This is impossible, because of the empty checks at the start of the function.\n        // case UrlType.Empty:\n        case UrlType.Hash:\n        case UrlType.Query:\n            return queryHash;\n        case UrlType.RelativePath: {\n            // The first char is always a \"/\", and we need it to be relative.\n            const path = url.path.slice(1);\n            if (!path)\n                return queryHash || '.';\n            if (isRelative(base || input) && !isRelative(path)) {\n                // If base started with a leading \".\", or there is no base and input started with a \".\",\n                // then we need to ensure that the relative path starts with a \".\". We don't know if\n                // relative starts with a \"..\", though, so check before prepending.\n                return './' + path + queryHash;\n            }\n            return path + queryHash;\n        }\n        case UrlType.AbsolutePath:\n            return url.path + queryHash;\n        default:\n            return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n    }\n}\n\nfunction resolve(input, base) {\n    // The base is always treated as a directory, if it's not empty.\n    // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n    // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n    if (base && !base.endsWith('/'))\n        base += '/';\n    return resolve$1(input, base);\n}\n\n/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nfunction stripFilename(path) {\n    if (!path)\n        return '';\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\n\nconst COLUMN = 0;\nconst SOURCES_INDEX = 1;\nconst SOURCE_LINE = 2;\nconst SOURCE_COLUMN = 3;\nconst NAMES_INDEX = 4;\nconst REV_GENERATED_LINE = 1;\nconst REV_GENERATED_COLUMN = 2;\n\nfunction maybeSort(mappings, owned) {\n    const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n    if (unsortedIndex === mappings.length)\n        return mappings;\n    // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n    // not, we do not want to modify the consumer's input array.\n    if (!owned)\n        mappings = mappings.slice();\n    for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n        mappings[i] = sortSegments(mappings[i], owned);\n    }\n    return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n    for (let i = start; i < mappings.length; i++) {\n        if (!isSorted(mappings[i]))\n            return i;\n    }\n    return mappings.length;\n}\nfunction isSorted(line) {\n    for (let j = 1; j < line.length; j++) {\n        if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction sortSegments(line, owned) {\n    if (!owned)\n        line = line.slice();\n    return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[COLUMN] - b[COLUMN];\n}\n\nlet found = false;\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nfunction binarySearch(haystack, needle, low, high) {\n    while (low <= high) {\n        const mid = low + ((high - low) >> 1);\n        const cmp = haystack[mid][COLUMN] - needle;\n        if (cmp === 0) {\n            found = true;\n            return mid;\n        }\n        if (cmp < 0) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    found = false;\n    return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n    for (let i = index + 1; i < haystack.length; index = i++) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction lowerBound(haystack, needle, index) {\n    for (let i = index - 1; i >= 0; index = i--) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction memoizedState() {\n    return {\n        lastKey: -1,\n        lastNeedle: -1,\n        lastIndex: -1,\n    };\n}\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n    const { lastKey, lastNeedle, lastIndex } = state;\n    let low = 0;\n    let high = haystack.length - 1;\n    if (key === lastKey) {\n        if (needle === lastNeedle) {\n            found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n            return lastIndex;\n        }\n        if (needle >= lastNeedle) {\n            // lastIndex may be -1 if the previous needle was not found.\n            low = lastIndex === -1 ? 0 : lastIndex;\n        }\n        else {\n            high = lastIndex;\n        }\n    }\n    state.lastKey = key;\n    state.lastNeedle = needle;\n    return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n\n// Rebuilds the original source files, with mappings that are ordered by source line/column instead\n// of generated line/column.\nfunction buildBySources(decoded, memos) {\n    const sources = memos.map(buildNullArray);\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        for (let j = 0; j < line.length; j++) {\n            const seg = line[j];\n            if (seg.length === 1)\n                continue;\n            const sourceIndex = seg[SOURCES_INDEX];\n            const sourceLine = seg[SOURCE_LINE];\n            const sourceColumn = seg[SOURCE_COLUMN];\n            const originalSource = sources[sourceIndex];\n            const originalLine = (originalSource[sourceLine] || (originalSource[sourceLine] = []));\n            const memo = memos[sourceIndex];\n            // The binary search either found a match, or it found the left-index just before where the\n            // segment should go. Either way, we want to insert after that. And there may be multiple\n            // generated segments associated with an original location, so there may need to move several\n            // indexes before we find where we need to insert.\n            let index = upperBound(originalLine, sourceColumn, memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine));\n            memo.lastIndex = ++index;\n            insert(originalLine, index, [sourceColumn, i, seg[COLUMN]]);\n        }\n    }\n    return sources;\n}\nfunction insert(array, index, value) {\n    for (let i = array.length; i > index; i--) {\n        array[i] = array[i - 1];\n    }\n    array[index] = value;\n}\n// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\n// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\n// Numeric properties on objects are magically sorted in ascending order by the engine regardless of\n// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\n// order when iterating with for-in.\nfunction buildNullArray() {\n    return { __proto__: null };\n}\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\nconst LEAST_UPPER_BOUND = -1;\nconst GREATEST_LOWER_BOUND = 1;\nclass TraceMap {\n    constructor(map, mapUrl) {\n        const isString = typeof map === 'string';\n        if (!isString && map._decodedMemo)\n            return map;\n        const parsed = (isString ? JSON.parse(map) : map);\n        const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n        this.version = version;\n        this.file = file;\n        this.names = names || [];\n        this.sourceRoot = sourceRoot;\n        this.sources = sources;\n        this.sourcesContent = sourcesContent;\n        this.ignoreList = parsed.ignoreList || parsed.x_google_ignoreList || undefined;\n        const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n        this.resolvedSources = sources.map((s) => resolve(s || '', from));\n        const { mappings } = parsed;\n        if (typeof mappings === 'string') {\n            this._encoded = mappings;\n            this._decoded = undefined;\n        }\n        else {\n            this._encoded = undefined;\n            this._decoded = maybeSort(mappings, isString);\n        }\n        this._decodedMemo = memoizedState();\n        this._bySources = undefined;\n        this._bySourceMemos = undefined;\n    }\n}\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map) {\n    return map;\n}\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nfunction decodedMappings(map) {\n    var _a;\n    return ((_a = cast(map))._decoded || (_a._decoded = decode(cast(map)._encoded)));\n}\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nfunction originalPositionFor(map, needle) {\n    let { line, column, bias } = needle;\n    line--;\n    if (line < 0)\n        throw new Error(LINE_GTR_ZERO);\n    if (column < 0)\n        throw new Error(COL_GTR_EQ_ZERO);\n    const decoded = decodedMappings(map);\n    // It's common for parent source maps to have pointers to lines that have no\n    // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n    if (line >= decoded.length)\n        return OMapping(null, null, null, null);\n    const segments = decoded[line];\n    const index = traceSegmentInternal(segments, cast(map)._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);\n    if (index === -1)\n        return OMapping(null, null, null, null);\n    const segment = segments[index];\n    if (segment.length === 1)\n        return OMapping(null, null, null, null);\n    const { names, resolvedSources } = map;\n    return OMapping(resolvedSources[segment[SOURCES_INDEX]], segment[SOURCE_LINE] + 1, segment[SOURCE_COLUMN], segment.length === 5 ? names[segment[NAMES_INDEX]] : null);\n}\n/**\n * Finds the generated line/column position of the provided source/line/column source position.\n */\nfunction generatedPositionFor(map, needle) {\n    const { source, line, column, bias } = needle;\n    return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\nfunction OMapping(source, line, column, name) {\n    return { source, line, column, name };\n}\nfunction GMapping(line, column) {\n    return { line, column };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n    let index = memoizedBinarySearch(segments, column, memo, line);\n    if (found) {\n        index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n    }\n    else if (bias === LEAST_UPPER_BOUND)\n        index++;\n    if (index === -1 || index === segments.length)\n        return -1;\n    return index;\n}\nfunction sliceGeneratedPositions(segments, memo, line, column, bias) {\n    let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n    // We ignored the bias when tracing the segment so that we're guarnateed to find the first (in\n    // insertion order) segment that matched. Even if we did respect the bias when tracing, we would\n    // still need to call `lowerBound()` to find the first segment, which is slower than just looking\n    // for the GREATEST_LOWER_BOUND to begin with. The only difference that matters for us is when the\n    // binary search didn't match, in which case GREATEST_LOWER_BOUND just needs to increment to\n    // match LEAST_UPPER_BOUND.\n    if (!found && bias === LEAST_UPPER_BOUND)\n        min++;\n    if (min === -1 || min === segments.length)\n        return [];\n    // We may have found the segment that started at an earlier column. If this is the case, then we\n    // need to slice all generated segments that match _that_ column, because all such segments span\n    // to our desired column.\n    const matchedColumn = found ? column : segments[min][COLUMN];\n    // The binary search is not guaranteed to find the lower bound when a match wasn't found.\n    if (!found)\n        min = lowerBound(segments, matchedColumn, min);\n    const max = upperBound(segments, matchedColumn, min);\n    const result = [];\n    for (; min <= max; min++) {\n        const segment = segments[min];\n        result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n    }\n    return result;\n}\nfunction generatedPosition(map, source, line, column, bias, all) {\n    var _a;\n    line--;\n    if (line < 0)\n        throw new Error(LINE_GTR_ZERO);\n    if (column < 0)\n        throw new Error(COL_GTR_EQ_ZERO);\n    const { sources, resolvedSources } = map;\n    let sourceIndex = sources.indexOf(source);\n    if (sourceIndex === -1)\n        sourceIndex = resolvedSources.indexOf(source);\n    if (sourceIndex === -1)\n        return all ? [] : GMapping(null, null);\n    const generated = ((_a = cast(map))._bySources || (_a._bySources = buildBySources(decodedMappings(map), (cast(map)._bySourceMemos = sources.map(memoizedState)))));\n    const segments = generated[sourceIndex][line];\n    if (segments == null)\n        return all ? [] : GMapping(null, null);\n    const memo = cast(map)._bySourceMemos[sourceIndex];\n    if (all)\n        return sliceGeneratedPositions(segments, memo, line, column, bias);\n    const index = traceSegmentInternal(segments, memo, line, column, bias);\n    if (index === -1)\n        return GMapping(null, null);\n    const segment = segments[index];\n    return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\n\nconst CHROME_IE_STACK_REGEXP = /^\\s*at .*(?:\\S:\\d+|\\(native\\))/m;\nconst SAFARI_NATIVE_CODE_REGEXP = /^(?:eval@)?(?:\\[native code\\])?$/;\nconst stackIgnorePatterns = [\n  \"node:internal\",\n  /\\/packages\\/\\w+\\/dist\\//,\n  /\\/@vitest\\/\\w+\\/dist\\//,\n  \"/vitest/dist/\",\n  \"/vitest/src/\",\n  \"/vite-node/dist/\",\n  \"/vite-node/src/\",\n  \"/node_modules/chai/\",\n  \"/node_modules/tinypool/\",\n  \"/node_modules/tinyspy/\",\n  // browser related deps\n  \"/deps/chunk-\",\n  \"/deps/@vitest\",\n  \"/deps/loupe\",\n  \"/deps/chai\",\n  /node:\\w+/,\n  /__vitest_test__/,\n  /__vitest_browser__/,\n  /\\/deps\\/vitest_/\n];\nfunction extractLocation(urlLike) {\n  if (!urlLike.includes(\":\")) {\n    return [urlLike];\n  }\n  const regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n  const parts = regExp.exec(urlLike.replace(/^\\(|\\)$/g, \"\"));\n  if (!parts) {\n    return [urlLike];\n  }\n  let url = parts[1];\n  if (url.startsWith(\"async \")) {\n    url = url.slice(6);\n  }\n  if (url.startsWith(\"http:\") || url.startsWith(\"https:\")) {\n    const urlObj = new URL(url);\n    url = urlObj.pathname;\n  }\n  if (url.startsWith(\"/@fs/\")) {\n    const isWindows = /^\\/@fs\\/[a-zA-Z]:\\//.test(url);\n    url = url.slice(isWindows ? 5 : 4);\n  }\n  return [url, parts[2] || void 0, parts[3] || void 0];\n}\nfunction parseSingleFFOrSafariStack(raw) {\n  let line = raw.trim();\n  if (SAFARI_NATIVE_CODE_REGEXP.test(line)) {\n    return null;\n  }\n  if (line.includes(\" > eval\")) {\n    line = line.replace(\n      / line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g,\n      \":$1\"\n    );\n  }\n  if (!line.includes(\"@\") && !line.includes(\":\")) {\n    return null;\n  }\n  const functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(@)/;\n  const matches = line.match(functionNameRegex);\n  const functionName = matches && matches[1] ? matches[1] : void 0;\n  const [url, lineNumber, columnNumber] = extractLocation(\n    line.replace(functionNameRegex, \"\")\n  );\n  if (!url || !lineNumber || !columnNumber) {\n    return null;\n  }\n  return {\n    file: url,\n    method: functionName || \"\",\n    line: Number.parseInt(lineNumber),\n    column: Number.parseInt(columnNumber)\n  };\n}\nfunction parseSingleStack(raw) {\n  const line = raw.trim();\n  if (!CHROME_IE_STACK_REGEXP.test(line)) {\n    return parseSingleFFOrSafariStack(line);\n  }\n  return parseSingleV8Stack(line);\n}\nfunction parseSingleV8Stack(raw) {\n  let line = raw.trim();\n  if (!CHROME_IE_STACK_REGEXP.test(line)) {\n    return null;\n  }\n  if (line.includes(\"(eval \")) {\n    line = line.replace(/eval code/g, \"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g, \"\");\n  }\n  let sanitizedLine = line.replace(/^\\s+/, \"\").replace(/\\(eval code/g, \"(\").replace(/^.*?\\s+/, \"\");\n  const location = sanitizedLine.match(/ (\\(.+\\)$)/);\n  sanitizedLine = location ? sanitizedLine.replace(location[0], \"\") : sanitizedLine;\n  const [url, lineNumber, columnNumber] = extractLocation(\n    location ? location[1] : sanitizedLine\n  );\n  let method = location && sanitizedLine || \"\";\n  let file = url && [\"eval\", \"<anonymous>\"].includes(url) ? void 0 : url;\n  if (!file || !lineNumber || !columnNumber) {\n    return null;\n  }\n  if (method.startsWith(\"async \")) {\n    method = method.slice(6);\n  }\n  if (file.startsWith(\"file://\")) {\n    file = file.slice(7);\n  }\n  file = resolve$2(file);\n  if (method) {\n    method = method.replace(/__vite_ssr_import_\\d+__\\./g, \"\");\n  }\n  return {\n    method,\n    file,\n    line: Number.parseInt(lineNumber),\n    column: Number.parseInt(columnNumber)\n  };\n}\nfunction parseStacktrace(stack, options = {}) {\n  const { ignoreStackEntries = stackIgnorePatterns } = options;\n  let stacks = !CHROME_IE_STACK_REGEXP.test(stack) ? parseFFOrSafariStackTrace(stack) : parseV8Stacktrace(stack);\n  if (ignoreStackEntries.length) {\n    stacks = stacks.filter(\n      (stack2) => !ignoreStackEntries.some((p) => stack2.file.match(p))\n    );\n  }\n  return stacks.map((stack2) => {\n    var _a;\n    if (options.getFileName) {\n      stack2.file = options.getFileName(stack2.file);\n    }\n    const map = (_a = options.getSourceMap) == null ? void 0 : _a.call(options, stack2.file);\n    if (!map || typeof map !== \"object\" || !map.version) {\n      return stack2;\n    }\n    const traceMap = new TraceMap(map);\n    const { line, column } = originalPositionFor(traceMap, stack2);\n    if (line != null && column != null) {\n      return { ...stack2, line, column };\n    }\n    return stack2;\n  });\n}\nfunction parseFFOrSafariStackTrace(stack) {\n  return stack.split(\"\\n\").map((line) => parseSingleFFOrSafariStack(line)).filter(_helpers_js__WEBPACK_IMPORTED_MODULE_0__.notNullish);\n}\nfunction parseV8Stacktrace(stack) {\n  return stack.split(\"\\n\").map((line) => parseSingleV8Stack(line)).filter(_helpers_js__WEBPACK_IMPORTED_MODULE_0__.notNullish);\n}\nfunction parseErrorStacktrace(e, options = {}) {\n  if (!e || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isPrimitive)(e)) {\n    return [];\n  }\n  if (e.stacks) {\n    return e.stacks;\n  }\n  const stackStr = e.stack || e.stackStr || \"\";\n  let stackFrames = parseStacktrace(stackStr, options);\n  if (options.frameFilter) {\n    stackFrames = stackFrames.filter(\n      (f) => options.frameFilter(e, f) !== false\n    );\n  }\n  e.stacks = stackFrames;\n  return stackFrames;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vitest/utils/dist/source-map.js\n"));

/***/ }),

/***/ "./node_modules/chai/chai.js":
/*!***********************************!*\
  !*** ./node_modules/chai/chai.js ***!
  \***********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Assertion: function() { return /* binding */ Assertion; },\n/* harmony export */   AssertionError: function() { return /* binding */ AssertionError; },\n/* harmony export */   Should: function() { return /* binding */ Should; },\n/* harmony export */   assert: function() { return /* binding */ assert; },\n/* harmony export */   config: function() { return /* binding */ config; },\n/* harmony export */   expect: function() { return /* binding */ expect; },\n/* harmony export */   should: function() { return /* binding */ should; },\n/* harmony export */   use: function() { return /* binding */ use; },\n/* harmony export */   util: function() { return /* binding */ utils_exports; }\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// (disabled):util\nvar require_util = __commonJS({\n  \"(disabled):util\"() {\n  }\n});\n\n// lib/chai/utils/index.js\nvar utils_exports = {};\n__export(utils_exports, {\n  addChainableMethod: () => addChainableMethod,\n  addLengthGuard: () => addLengthGuard,\n  addMethod: () => addMethod,\n  addProperty: () => addProperty,\n  checkError: () => check_error_exports,\n  compareByInspect: () => compareByInspect,\n  eql: () => deep_eql_default,\n  expectTypes: () => expectTypes,\n  flag: () => flag,\n  getActual: () => getActual,\n  getMessage: () => getMessage2,\n  getName: () => getName,\n  getOperator: () => getOperator,\n  getOwnEnumerableProperties: () => getOwnEnumerableProperties,\n  getOwnEnumerablePropertySymbols: () => getOwnEnumerablePropertySymbols,\n  getPathInfo: () => getPathInfo,\n  hasProperty: () => hasProperty,\n  inspect: () => inspect2,\n  isNaN: () => isNaN2,\n  isProxyEnabled: () => isProxyEnabled,\n  isRegExp: () => isRegExp2,\n  objDisplay: () => objDisplay,\n  overwriteChainableMethod: () => overwriteChainableMethod,\n  overwriteMethod: () => overwriteMethod,\n  overwriteProperty: () => overwriteProperty,\n  proxify: () => proxify,\n  test: () => test,\n  transferFlags: () => transferFlags,\n  type: () => type\n});\n\n// node_modules/check-error/index.js\nvar check_error_exports = {};\n__export(check_error_exports, {\n  compatibleConstructor: () => compatibleConstructor,\n  compatibleInstance: () => compatibleInstance,\n  compatibleMessage: () => compatibleMessage,\n  getConstructorName: () => getConstructorName,\n  getMessage: () => getMessage\n});\nfunction isErrorInstance(obj) {\n  return obj instanceof Error || Object.prototype.toString.call(obj) === \"[object Error]\";\n}\n__name(isErrorInstance, \"isErrorInstance\");\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === \"[object RegExp]\";\n}\n__name(isRegExp, \"isRegExp\");\nfunction compatibleInstance(thrown, errorLike) {\n  return isErrorInstance(errorLike) && thrown === errorLike;\n}\n__name(compatibleInstance, \"compatibleInstance\");\nfunction compatibleConstructor(thrown, errorLike) {\n  if (isErrorInstance(errorLike)) {\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if ((typeof errorLike === \"object\" || typeof errorLike === \"function\") && errorLike.prototype) {\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n  return false;\n}\n__name(compatibleConstructor, \"compatibleConstructor\");\nfunction compatibleMessage(thrown, errMatcher) {\n  const comparisonString = typeof thrown === \"string\" ? thrown : thrown.message;\n  if (isRegExp(errMatcher)) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === \"string\") {\n    return comparisonString.indexOf(errMatcher) !== -1;\n  }\n  return false;\n}\n__name(compatibleMessage, \"compatibleMessage\");\nfunction getConstructorName(errorLike) {\n  let constructorName = errorLike;\n  if (isErrorInstance(errorLike)) {\n    constructorName = errorLike.constructor.name;\n  } else if (typeof errorLike === \"function\") {\n    constructorName = errorLike.name;\n    if (constructorName === \"\") {\n      const newConstructorName = new errorLike().name;\n      constructorName = newConstructorName || constructorName;\n    }\n  }\n  return constructorName;\n}\n__name(getConstructorName, \"getConstructorName\");\nfunction getMessage(errorLike) {\n  let msg = \"\";\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === \"string\") {\n    msg = errorLike;\n  }\n  return msg;\n}\n__name(getMessage, \"getMessage\");\n\n// lib/chai/utils/flag.js\nfunction flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = /* @__PURE__ */ Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n}\n__name(flag, \"flag\");\n\n// lib/chai/utils/test.js\nfunction test(obj, args) {\n  var negate = flag(obj, \"negate\"), expr = args[0];\n  return negate ? !expr : expr;\n}\n__name(test, \"test\");\n\n// lib/chai/utils/type-detect.js\nfunction type(obj) {\n  if (typeof obj === \"undefined\") {\n    return \"undefined\";\n  }\n  if (obj === null) {\n    return \"null\";\n  }\n  const stringTag = obj[Symbol.toStringTag];\n  if (typeof stringTag === \"string\") {\n    return stringTag;\n  }\n  const type3 = Object.prototype.toString.call(obj).slice(8, -1);\n  return type3;\n}\n__name(type, \"type\");\n\n// node_modules/assertion-error/index.js\nvar canElideFrames = \"captureStackTrace\" in Error;\nvar AssertionError = class _AssertionError extends Error {\n  static {\n    __name(this, \"AssertionError\");\n  }\n  message;\n  get name() {\n    return \"AssertionError\";\n  }\n  get ok() {\n    return false;\n  }\n  constructor(message = \"Unspecified AssertionError\", props, ssf) {\n    super(message);\n    this.message = message;\n    if (canElideFrames) {\n      Error.captureStackTrace(this, ssf || _AssertionError);\n    }\n    for (const key in props) {\n      if (!(key in this)) {\n        this[key] = props[key];\n      }\n    }\n  }\n  toJSON(stack) {\n    return {\n      ...this,\n      name: this.name,\n      message: this.message,\n      ok: false,\n      stack: stack !== false ? this.stack : void 0\n    };\n  }\n};\n\n// lib/chai/utils/expectTypes.js\nfunction expectTypes(obj, types) {\n  var flagMsg = flag(obj, \"message\");\n  var ssfi = flag(obj, \"ssfi\");\n  flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n  obj = flag(obj, \"object\");\n  types = types.map(function(t) {\n    return t.toLowerCase();\n  });\n  types.sort();\n  var str = types.map(function(t, index) {\n    var art = ~[\"a\", \"e\", \"i\", \"o\", \"u\"].indexOf(t.charAt(0)) ? \"an\" : \"a\";\n    var or = types.length > 1 && index === types.length - 1 ? \"or \" : \"\";\n    return or + art + \" \" + t;\n  }).join(\", \");\n  var objType = type(obj).toLowerCase();\n  if (!types.some(function(expected) {\n    return objType === expected;\n  })) {\n    throw new AssertionError(\n      flagMsg + \"object tested must be \" + str + \", but \" + objType + \" given\",\n      void 0,\n      ssfi\n    );\n  }\n}\n__name(expectTypes, \"expectTypes\");\n\n// lib/chai/utils/getActual.js\nfunction getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n}\n__name(getActual, \"getActual\");\n\n// node_modules/loupe/lib/helpers.js\nvar ansiColors = {\n  bold: [\"1\", \"22\"],\n  dim: [\"2\", \"22\"],\n  italic: [\"3\", \"23\"],\n  underline: [\"4\", \"24\"],\n  // 5 & 6 are blinking\n  inverse: [\"7\", \"27\"],\n  hidden: [\"8\", \"28\"],\n  strike: [\"9\", \"29\"],\n  // 10-20 are fonts\n  // 21-29 are resets for 1-9\n  black: [\"30\", \"39\"],\n  red: [\"31\", \"39\"],\n  green: [\"32\", \"39\"],\n  yellow: [\"33\", \"39\"],\n  blue: [\"34\", \"39\"],\n  magenta: [\"35\", \"39\"],\n  cyan: [\"36\", \"39\"],\n  white: [\"37\", \"39\"],\n  brightblack: [\"30;1\", \"39\"],\n  brightred: [\"31;1\", \"39\"],\n  brightgreen: [\"32;1\", \"39\"],\n  brightyellow: [\"33;1\", \"39\"],\n  brightblue: [\"34;1\", \"39\"],\n  brightmagenta: [\"35;1\", \"39\"],\n  brightcyan: [\"36;1\", \"39\"],\n  brightwhite: [\"37;1\", \"39\"],\n  grey: [\"90\", \"39\"]\n};\nvar styles = {\n  special: \"cyan\",\n  number: \"yellow\",\n  bigint: \"yellow\",\n  boolean: \"yellow\",\n  undefined: \"grey\",\n  null: \"bold\",\n  string: \"green\",\n  symbol: \"green\",\n  date: \"magenta\",\n  regexp: \"red\"\n};\nvar truncator = \"\\u2026\";\nfunction colorise(value, styleType) {\n  const color = ansiColors[styles[styleType]] || ansiColors[styleType] || \"\";\n  if (!color) {\n    return String(value);\n  }\n  return `\\x1B[${color[0]}m${String(value)}\\x1B[${color[1]}m`;\n}\n__name(colorise, \"colorise\");\nfunction normaliseOptions({\n  showHidden = false,\n  depth = 2,\n  colors = false,\n  customInspect = true,\n  showProxy = false,\n  maxArrayLength = Infinity,\n  breakLength = Infinity,\n  seen = [],\n  // eslint-disable-next-line no-shadow\n  truncate: truncate2 = Infinity,\n  stylize = String\n} = {}, inspect3) {\n  const options = {\n    showHidden: Boolean(showHidden),\n    depth: Number(depth),\n    colors: Boolean(colors),\n    customInspect: Boolean(customInspect),\n    showProxy: Boolean(showProxy),\n    maxArrayLength: Number(maxArrayLength),\n    breakLength: Number(breakLength),\n    truncate: Number(truncate2),\n    seen,\n    inspect: inspect3,\n    stylize\n  };\n  if (options.colors) {\n    options.stylize = colorise;\n  }\n  return options;\n}\n__name(normaliseOptions, \"normaliseOptions\");\nfunction truncate(string, length, tail = truncator) {\n  string = String(string);\n  const tailLength = tail.length;\n  const stringLength = string.length;\n  if (tailLength > length && stringLength > tailLength) {\n    return tail;\n  }\n  if (stringLength > length && stringLength > tailLength) {\n    return `${string.slice(0, length - tailLength)}${tail}`;\n  }\n  return string;\n}\n__name(truncate, \"truncate\");\nfunction inspectList(list, options, inspectItem, separator = \", \") {\n  inspectItem = inspectItem || options.inspect;\n  const size = list.length;\n  if (size === 0)\n    return \"\";\n  const originalLength = options.truncate;\n  let output = \"\";\n  let peek = \"\";\n  let truncated = \"\";\n  for (let i = 0; i < size; i += 1) {\n    const last = i + 1 === list.length;\n    const secondToLast = i + 2 === list.length;\n    truncated = `${truncator}(${list.length - i})`;\n    const value = list[i];\n    options.truncate = originalLength - output.length - (last ? 0 : separator.length);\n    const string = peek || inspectItem(value, options) + (last ? \"\" : separator);\n    const nextLength = output.length + string.length;\n    const truncatedLength = nextLength + truncated.length;\n    if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n      break;\n    }\n    if (!last && !secondToLast && truncatedLength > originalLength) {\n      break;\n    }\n    peek = last ? \"\" : inspectItem(list[i + 1], options) + (secondToLast ? \"\" : separator);\n    if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n      break;\n    }\n    output += string;\n    if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n      truncated = `${truncator}(${list.length - i - 1})`;\n      break;\n    }\n    truncated = \"\";\n  }\n  return `${output}${truncated}`;\n}\n__name(inspectList, \"inspectList\");\nfunction quoteComplexKey(key) {\n  if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n    return key;\n  }\n  return JSON.stringify(key).replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n}\n__name(quoteComplexKey, \"quoteComplexKey\");\nfunction inspectProperty([key, value], options) {\n  options.truncate -= 2;\n  if (typeof key === \"string\") {\n    key = quoteComplexKey(key);\n  } else if (typeof key !== \"number\") {\n    key = `[${options.inspect(key, options)}]`;\n  }\n  options.truncate -= key.length;\n  value = options.inspect(value, options);\n  return `${key}: ${value}`;\n}\n__name(inspectProperty, \"inspectProperty\");\n\n// node_modules/loupe/lib/array.js\nfunction inspectArray(array, options) {\n  const nonIndexProperties = Object.keys(array).slice(array.length);\n  if (!array.length && !nonIndexProperties.length)\n    return \"[]\";\n  options.truncate -= 4;\n  const listContents = inspectList(array, options);\n  options.truncate -= listContents.length;\n  let propertyContents = \"\";\n  if (nonIndexProperties.length) {\n    propertyContents = inspectList(nonIndexProperties.map((key) => [key, array[key]]), options, inspectProperty);\n  }\n  return `[ ${listContents}${propertyContents ? `, ${propertyContents}` : \"\"} ]`;\n}\n__name(inspectArray, \"inspectArray\");\n\n// node_modules/loupe/lib/typedarray.js\nvar getArrayName = /* @__PURE__ */ __name((array) => {\n  if (typeof Buffer === \"function\" && array instanceof Buffer) {\n    return \"Buffer\";\n  }\n  if (array[Symbol.toStringTag]) {\n    return array[Symbol.toStringTag];\n  }\n  return array.constructor.name;\n}, \"getArrayName\");\nfunction inspectTypedArray(array, options) {\n  const name = getArrayName(array);\n  options.truncate -= name.length + 4;\n  const nonIndexProperties = Object.keys(array).slice(array.length);\n  if (!array.length && !nonIndexProperties.length)\n    return `${name}[]`;\n  let output = \"\";\n  for (let i = 0; i < array.length; i++) {\n    const string = `${options.stylize(truncate(array[i], options.truncate), \"number\")}${i === array.length - 1 ? \"\" : \", \"}`;\n    options.truncate -= string.length;\n    if (array[i] !== array.length && options.truncate <= 3) {\n      output += `${truncator}(${array.length - array[i] + 1})`;\n      break;\n    }\n    output += string;\n  }\n  let propertyContents = \"\";\n  if (nonIndexProperties.length) {\n    propertyContents = inspectList(nonIndexProperties.map((key) => [key, array[key]]), options, inspectProperty);\n  }\n  return `${name}[ ${output}${propertyContents ? `, ${propertyContents}` : \"\"} ]`;\n}\n__name(inspectTypedArray, \"inspectTypedArray\");\n\n// node_modules/loupe/lib/date.js\nfunction inspectDate(dateObject, options) {\n  const stringRepresentation = dateObject.toJSON();\n  if (stringRepresentation === null) {\n    return \"Invalid Date\";\n  }\n  const split = stringRepresentation.split(\"T\");\n  const date = split[0];\n  return options.stylize(`${date}T${truncate(split[1], options.truncate - date.length - 1)}`, \"date\");\n}\n__name(inspectDate, \"inspectDate\");\n\n// node_modules/loupe/lib/function.js\nfunction inspectFunction(func, options) {\n  const functionType = func[Symbol.toStringTag] || \"Function\";\n  const name = func.name;\n  if (!name) {\n    return options.stylize(`[${functionType}]`, \"special\");\n  }\n  return options.stylize(`[${functionType} ${truncate(name, options.truncate - 11)}]`, \"special\");\n}\n__name(inspectFunction, \"inspectFunction\");\n\n// node_modules/loupe/lib/map.js\nfunction inspectMapEntry([key, value], options) {\n  options.truncate -= 4;\n  key = options.inspect(key, options);\n  options.truncate -= key.length;\n  value = options.inspect(value, options);\n  return `${key} => ${value}`;\n}\n__name(inspectMapEntry, \"inspectMapEntry\");\nfunction mapToEntries(map) {\n  const entries = [];\n  map.forEach((value, key) => {\n    entries.push([key, value]);\n  });\n  return entries;\n}\n__name(mapToEntries, \"mapToEntries\");\nfunction inspectMap(map, options) {\n  const size = map.size - 1;\n  if (size <= 0) {\n    return \"Map{}\";\n  }\n  options.truncate -= 7;\n  return `Map{ ${inspectList(mapToEntries(map), options, inspectMapEntry)} }`;\n}\n__name(inspectMap, \"inspectMap\");\n\n// node_modules/loupe/lib/number.js\nvar isNaN = Number.isNaN || ((i) => i !== i);\nfunction inspectNumber(number, options) {\n  if (isNaN(number)) {\n    return options.stylize(\"NaN\", \"number\");\n  }\n  if (number === Infinity) {\n    return options.stylize(\"Infinity\", \"number\");\n  }\n  if (number === -Infinity) {\n    return options.stylize(\"-Infinity\", \"number\");\n  }\n  if (number === 0) {\n    return options.stylize(1 / number === Infinity ? \"+0\" : \"-0\", \"number\");\n  }\n  return options.stylize(truncate(String(number), options.truncate), \"number\");\n}\n__name(inspectNumber, \"inspectNumber\");\n\n// node_modules/loupe/lib/bigint.js\nfunction inspectBigInt(number, options) {\n  let nums = truncate(number.toString(), options.truncate - 1);\n  if (nums !== truncator)\n    nums += \"n\";\n  return options.stylize(nums, \"bigint\");\n}\n__name(inspectBigInt, \"inspectBigInt\");\n\n// node_modules/loupe/lib/regexp.js\nfunction inspectRegExp(value, options) {\n  const flags = value.toString().split(\"/\")[2];\n  const sourceLength = options.truncate - (2 + flags.length);\n  const source = value.source;\n  return options.stylize(`/${truncate(source, sourceLength)}/${flags}`, \"regexp\");\n}\n__name(inspectRegExp, \"inspectRegExp\");\n\n// node_modules/loupe/lib/set.js\nfunction arrayFromSet(set2) {\n  const values = [];\n  set2.forEach((value) => {\n    values.push(value);\n  });\n  return values;\n}\n__name(arrayFromSet, \"arrayFromSet\");\nfunction inspectSet(set2, options) {\n  if (set2.size === 0)\n    return \"Set{}\";\n  options.truncate -= 7;\n  return `Set{ ${inspectList(arrayFromSet(set2), options)} }`;\n}\n__name(inspectSet, \"inspectSet\");\n\n// node_modules/loupe/lib/string.js\nvar stringEscapeChars = new RegExp(\"['\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]\", \"g\");\nvar escapeCharacters = {\n  \"\\b\": \"\\\\b\",\n  \"\t\": \"\\\\t\",\n  \"\\n\": \"\\\\n\",\n  \"\\f\": \"\\\\f\",\n  \"\\r\": \"\\\\r\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n};\nvar hex = 16;\nvar unicodeLength = 4;\nfunction escape(char) {\n  return escapeCharacters[char] || `\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`;\n}\n__name(escape, \"escape\");\nfunction inspectString(string, options) {\n  if (stringEscapeChars.test(string)) {\n    string = string.replace(stringEscapeChars, escape);\n  }\n  return options.stylize(`'${truncate(string, options.truncate - 2)}'`, \"string\");\n}\n__name(inspectString, \"inspectString\");\n\n// node_modules/loupe/lib/symbol.js\nfunction inspectSymbol(value) {\n  if (\"description\" in Symbol.prototype) {\n    return value.description ? `Symbol(${value.description})` : \"Symbol()\";\n  }\n  return value.toString();\n}\n__name(inspectSymbol, \"inspectSymbol\");\n\n// node_modules/loupe/lib/promise.js\nvar getPromiseValue = /* @__PURE__ */ __name(() => \"Promise{\\u2026}\", \"getPromiseValue\");\ntry {\n  const { getPromiseDetails, kPending, kRejected } = process.binding(\"util\");\n  if (Array.isArray(getPromiseDetails(Promise.resolve()))) {\n    getPromiseValue = /* @__PURE__ */ __name((value, options) => {\n      const [state, innerValue] = getPromiseDetails(value);\n      if (state === kPending) {\n        return \"Promise{<pending>}\";\n      }\n      return `Promise${state === kRejected ? \"!\" : \"\"}{${options.inspect(innerValue, options)}}`;\n    }, \"getPromiseValue\");\n  }\n} catch (notNode) {\n}\nvar promise_default = getPromiseValue;\n\n// node_modules/loupe/lib/object.js\nfunction inspectObject(object, options) {\n  const properties = Object.getOwnPropertyNames(object);\n  const symbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object) : [];\n  if (properties.length === 0 && symbols.length === 0) {\n    return \"{}\";\n  }\n  options.truncate -= 4;\n  options.seen = options.seen || [];\n  if (options.seen.indexOf(object) >= 0) {\n    return \"[Circular]\";\n  }\n  options.seen.push(object);\n  const propertyContents = inspectList(properties.map((key) => [key, object[key]]), options, inspectProperty);\n  const symbolContents = inspectList(symbols.map((key) => [key, object[key]]), options, inspectProperty);\n  options.seen.pop();\n  let sep = \"\";\n  if (propertyContents && symbolContents) {\n    sep = \", \";\n  }\n  return `{ ${propertyContents}${sep}${symbolContents} }`;\n}\n__name(inspectObject, \"inspectObject\");\n\n// node_modules/loupe/lib/class.js\nvar toStringTag = typeof Symbol !== \"undefined\" && Symbol.toStringTag ? Symbol.toStringTag : false;\nfunction inspectClass(value, options) {\n  let name = \"\";\n  if (toStringTag && toStringTag in value) {\n    name = value[toStringTag];\n  }\n  name = name || value.constructor.name;\n  if (!name || name === \"_class\") {\n    name = \"<Anonymous Class>\";\n  }\n  options.truncate -= name.length;\n  return `${name}${inspectObject(value, options)}`;\n}\n__name(inspectClass, \"inspectClass\");\n\n// node_modules/loupe/lib/arguments.js\nfunction inspectArguments(args, options) {\n  if (args.length === 0)\n    return \"Arguments[]\";\n  options.truncate -= 13;\n  return `Arguments[ ${inspectList(args, options)} ]`;\n}\n__name(inspectArguments, \"inspectArguments\");\n\n// node_modules/loupe/lib/error.js\nvar errorKeys = [\n  \"stack\",\n  \"line\",\n  \"column\",\n  \"name\",\n  \"message\",\n  \"fileName\",\n  \"lineNumber\",\n  \"columnNumber\",\n  \"number\",\n  \"description\"\n];\nfunction inspectObject2(error, options) {\n  const properties = Object.getOwnPropertyNames(error).filter((key) => errorKeys.indexOf(key) === -1);\n  const name = error.name;\n  options.truncate -= name.length;\n  let message = \"\";\n  if (typeof error.message === \"string\") {\n    message = truncate(error.message, options.truncate);\n  } else {\n    properties.unshift(\"message\");\n  }\n  message = message ? `: ${message}` : \"\";\n  options.truncate -= message.length + 5;\n  const propertyContents = inspectList(properties.map((key) => [key, error[key]]), options, inspectProperty);\n  return `${name}${message}${propertyContents ? ` { ${propertyContents} }` : \"\"}`;\n}\n__name(inspectObject2, \"inspectObject\");\n\n// node_modules/loupe/lib/html.js\nfunction inspectAttribute([key, value], options) {\n  options.truncate -= 3;\n  if (!value) {\n    return `${options.stylize(String(key), \"yellow\")}`;\n  }\n  return `${options.stylize(String(key), \"yellow\")}=${options.stylize(`\"${value}\"`, \"string\")}`;\n}\n__name(inspectAttribute, \"inspectAttribute\");\nfunction inspectHTMLCollection(collection, options) {\n  return inspectList(collection, options, inspectHTML, \"\\n\");\n}\n__name(inspectHTMLCollection, \"inspectHTMLCollection\");\nfunction inspectHTML(element, options) {\n  const properties = element.getAttributeNames();\n  const name = element.tagName.toLowerCase();\n  const head = options.stylize(`<${name}`, \"special\");\n  const headClose = options.stylize(`>`, \"special\");\n  const tail = options.stylize(`</${name}>`, \"special\");\n  options.truncate -= name.length * 2 + 5;\n  let propertyContents = \"\";\n  if (properties.length > 0) {\n    propertyContents += \" \";\n    propertyContents += inspectList(properties.map((key) => [key, element.getAttribute(key)]), options, inspectAttribute, \" \");\n  }\n  options.truncate -= propertyContents.length;\n  const truncate2 = options.truncate;\n  let children = inspectHTMLCollection(element.children, options);\n  if (children && children.length > truncate2) {\n    children = `${truncator}(${element.children.length})`;\n  }\n  return `${head}${propertyContents}${headClose}${children}${tail}`;\n}\n__name(inspectHTML, \"inspectHTML\");\n\n// node_modules/loupe/lib/index.js\nvar symbolsSupported = typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\nvar chaiInspect = symbolsSupported ? Symbol.for(\"chai/inspect\") : \"@@chai/inspect\";\nvar nodeInspect = false;\ntry {\n  const nodeUtil = require_util();\n  nodeInspect = nodeUtil.inspect ? nodeUtil.inspect.custom : false;\n} catch (noNodeInspect) {\n  nodeInspect = false;\n}\nvar constructorMap = /* @__PURE__ */ new WeakMap();\nvar stringTagMap = {};\nvar baseTypesMap = {\n  undefined: (value, options) => options.stylize(\"undefined\", \"undefined\"),\n  null: (value, options) => options.stylize(\"null\", \"null\"),\n  boolean: (value, options) => options.stylize(String(value), \"boolean\"),\n  Boolean: (value, options) => options.stylize(String(value), \"boolean\"),\n  number: inspectNumber,\n  Number: inspectNumber,\n  bigint: inspectBigInt,\n  BigInt: inspectBigInt,\n  string: inspectString,\n  String: inspectString,\n  function: inspectFunction,\n  Function: inspectFunction,\n  symbol: inspectSymbol,\n  // A Symbol polyfill will return `Symbol` not `symbol` from typedetect\n  Symbol: inspectSymbol,\n  Array: inspectArray,\n  Date: inspectDate,\n  Map: inspectMap,\n  Set: inspectSet,\n  RegExp: inspectRegExp,\n  Promise: promise_default,\n  // WeakSet, WeakMap are totally opaque to us\n  WeakSet: (value, options) => options.stylize(\"WeakSet{\\u2026}\", \"special\"),\n  WeakMap: (value, options) => options.stylize(\"WeakMap{\\u2026}\", \"special\"),\n  Arguments: inspectArguments,\n  Int8Array: inspectTypedArray,\n  Uint8Array: inspectTypedArray,\n  Uint8ClampedArray: inspectTypedArray,\n  Int16Array: inspectTypedArray,\n  Uint16Array: inspectTypedArray,\n  Int32Array: inspectTypedArray,\n  Uint32Array: inspectTypedArray,\n  Float32Array: inspectTypedArray,\n  Float64Array: inspectTypedArray,\n  Generator: () => \"\",\n  DataView: () => \"\",\n  ArrayBuffer: () => \"\",\n  Error: inspectObject2,\n  HTMLCollection: inspectHTMLCollection,\n  NodeList: inspectHTMLCollection\n};\nvar inspectCustom = /* @__PURE__ */ __name((value, options, type3) => {\n  if (chaiInspect in value && typeof value[chaiInspect] === \"function\") {\n    return value[chaiInspect](options);\n  }\n  if (nodeInspect && nodeInspect in value && typeof value[nodeInspect] === \"function\") {\n    return value[nodeInspect](options.depth, options);\n  }\n  if (\"inspect\" in value && typeof value.inspect === \"function\") {\n    return value.inspect(options.depth, options);\n  }\n  if (\"constructor\" in value && constructorMap.has(value.constructor)) {\n    return constructorMap.get(value.constructor)(value, options);\n  }\n  if (stringTagMap[type3]) {\n    return stringTagMap[type3](value, options);\n  }\n  return \"\";\n}, \"inspectCustom\");\nvar toString = Object.prototype.toString;\nfunction inspect(value, opts = {}) {\n  const options = normaliseOptions(opts, inspect);\n  const { customInspect } = options;\n  let type3 = value === null ? \"null\" : typeof value;\n  if (type3 === \"object\") {\n    type3 = toString.call(value).slice(8, -1);\n  }\n  if (type3 in baseTypesMap) {\n    return baseTypesMap[type3](value, options);\n  }\n  if (customInspect && value) {\n    const output = inspectCustom(value, options, type3);\n    if (output) {\n      if (typeof output === \"string\")\n        return output;\n      return inspect(output, options);\n    }\n  }\n  const proto = value ? Object.getPrototypeOf(value) : false;\n  if (proto === Object.prototype || proto === null) {\n    return inspectObject(value, options);\n  }\n  if (value && typeof HTMLElement === \"function\" && value instanceof HTMLElement) {\n    return inspectHTML(value, options);\n  }\n  if (\"constructor\" in value) {\n    if (value.constructor !== Object) {\n      return inspectClass(value, options);\n    }\n    return inspectObject(value, options);\n  }\n  if (value === Object(value)) {\n    return inspectObject(value, options);\n  }\n  return options.stylize(String(value), type3);\n}\n__name(inspect, \"inspect\");\n\n// lib/chai/config.js\nvar config = {\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {boolean}\n   * @public\n   */\n  includeStack: false,\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {boolean}\n   * @public\n   */\n  showDiff: true,\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {number}\n   * @public\n   */\n  truncateThreshold: 40,\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {boolean}\n   * @public\n   */\n  useProxy: true,\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @public\n   */\n  proxyExcludedKeys: [\"then\", \"catch\", \"inspect\", \"toJSON\"],\n  /**\n   * ### config.deepEqual\n   *\n   * User configurable property, defines which a custom function to use for deepEqual\n   * comparisons.\n   * By default, the function used is the one from the `deep-eql` package without custom comparator.\n   *\n   *     // use a custom comparator\n   *     chai.config.deepEqual = (expected, actual) => {\n   *         return chai.util.eql(expected, actual, {\n   *             comparator: (expected, actual) => {\n   *                 // for non number comparison, use the default behavior\n   *                 if(typeof expected !== 'number') return null;\n   *                 // allow a difference of 10 between compared numbers\n   *                 return typeof actual === 'number' && Math.abs(actual - expected) < 10\n   *             }\n   *         })\n   *     };\n   *\n   * @param {Function}\n   * @public\n   */\n  deepEqual: null\n};\n\n// lib/chai/utils/inspect.js\nfunction inspect2(obj, showHidden, depth, colors) {\n  var options = {\n    colors,\n    depth: typeof depth === \"undefined\" ? 2 : depth,\n    showHidden,\n    truncate: config.truncateThreshold ? config.truncateThreshold : Infinity\n  };\n  return inspect(obj, options);\n}\n__name(inspect2, \"inspect\");\n\n// lib/chai/utils/objDisplay.js\nfunction objDisplay(obj) {\n  var str = inspect2(obj), type3 = Object.prototype.toString.call(obj);\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type3 === \"[object Function]\") {\n      return !obj.name || obj.name === \"\" ? \"[Function]\" : \"[Function: \" + obj.name + \"]\";\n    } else if (type3 === \"[object Array]\") {\n      return \"[ Array(\" + obj.length + \") ]\";\n    } else if (type3 === \"[object Object]\") {\n      var keys = Object.keys(obj), kstr = keys.length > 2 ? keys.splice(0, 2).join(\", \") + \", ...\" : keys.join(\", \");\n      return \"{ Object (\" + kstr + \") }\";\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n}\n__name(objDisplay, \"objDisplay\");\n\n// lib/chai/utils/getMessage.js\nfunction getMessage2(obj, args) {\n  var negate = flag(obj, \"negate\"), val = flag(obj, \"object\"), expected = args[3], actual = getActual(obj, args), msg = negate ? args[2] : args[1], flagMsg = flag(obj, \"message\");\n  if (typeof msg === \"function\")\n    msg = msg();\n  msg = msg || \"\";\n  msg = msg.replace(/#\\{this\\}/g, function() {\n    return objDisplay(val);\n  }).replace(/#\\{act\\}/g, function() {\n    return objDisplay(actual);\n  }).replace(/#\\{exp\\}/g, function() {\n    return objDisplay(expected);\n  });\n  return flagMsg ? flagMsg + \": \" + msg : msg;\n}\n__name(getMessage2, \"getMessage\");\n\n// lib/chai/utils/transferFlags.js\nfunction transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = /* @__PURE__ */ Object.create(null));\n  if (!object.__flags) {\n    object.__flags = /* @__PURE__ */ Object.create(null);\n  }\n  includeAll = arguments.length === 3 ? includeAll : true;\n  for (var flag3 in flags) {\n    if (includeAll || flag3 !== \"object\" && flag3 !== \"ssfi\" && flag3 !== \"lockSsfi\" && flag3 != \"message\") {\n      object.__flags[flag3] = flags[flag3];\n    }\n  }\n}\n__name(transferFlags, \"transferFlags\");\n\n// node_modules/deep-eql/index.js\nfunction type2(obj) {\n  if (typeof obj === \"undefined\") {\n    return \"undefined\";\n  }\n  if (obj === null) {\n    return \"null\";\n  }\n  const stringTag = obj[Symbol.toStringTag];\n  if (typeof stringTag === \"string\") {\n    return stringTag;\n  }\n  const sliceStart = 8;\n  const sliceEnd = -1;\n  return Object.prototype.toString.call(obj).slice(sliceStart, sliceEnd);\n}\n__name(type2, \"type\");\nfunction FakeMap() {\n  this._key = \"chai/deep-eql__\" + Math.random() + Date.now();\n}\n__name(FakeMap, \"FakeMap\");\nFakeMap.prototype = {\n  get: /* @__PURE__ */ __name(function get(key) {\n    return key[this._key];\n  }, \"get\"),\n  set: /* @__PURE__ */ __name(function set(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value,\n        configurable: true\n      });\n    }\n  }, \"set\")\n};\nvar MemoizeMap = typeof WeakMap === \"function\" ? WeakMap : FakeMap;\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === \"boolean\") {\n      return result;\n    }\n  }\n  return null;\n}\n__name(memoizeCompare, \"memoizeCompare\");\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n__name(memoizeSet, \"memoizeSet\");\nvar deep_eql_default = deepEqual;\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n__name(deepEqual, \"deepEqual\");\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  if (leftHandOperand === rightHandOperand) {\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n  if (leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n  rightHandOperand !== rightHandOperand) {\n    return true;\n  }\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return false;\n  }\n  return null;\n}\n__name(simpleEqual, \"simpleEqual\");\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      return simpleResult;\n    }\n  }\n  var leftHandType = type2(leftHandOperand);\n  if (leftHandType !== type2(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n__name(extensiveDeepEqual, \"extensiveDeepEqual\");\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n    case \"Date\":\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case \"Promise\":\n    case \"Symbol\":\n    case \"function\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return leftHandOperand === rightHandOperand;\n    case \"Error\":\n      return keysEqual(leftHandOperand, rightHandOperand, [\"name\", \"message\", \"code\"], options);\n    case \"Arguments\":\n    case \"Int8Array\":\n    case \"Uint8Array\":\n    case \"Uint8ClampedArray\":\n    case \"Int16Array\":\n    case \"Uint16Array\":\n    case \"Int32Array\":\n    case \"Uint32Array\":\n    case \"Float32Array\":\n    case \"Float64Array\":\n    case \"Array\":\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case \"RegExp\":\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case \"Generator\":\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case \"DataView\":\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case \"ArrayBuffer\":\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case \"Set\":\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case \"Map\":\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case \"Temporal.PlainDate\":\n    case \"Temporal.PlainTime\":\n    case \"Temporal.PlainDateTime\":\n    case \"Temporal.Instant\":\n    case \"Temporal.ZonedDateTime\":\n    case \"Temporal.PlainYearMonth\":\n    case \"Temporal.PlainMonthDay\":\n      return leftHandOperand.equals(rightHandOperand);\n    case \"Temporal.Duration\":\n      return leftHandOperand.total(\"nanoseconds\") === rightHandOperand.total(\"nanoseconds\");\n    case \"Temporal.TimeZone\":\n    case \"Temporal.Calendar\":\n      return leftHandOperand.toString() === rightHandOperand.toString();\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n__name(extensiveDeepEqualByType, \"extensiveDeepEqualByType\");\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n__name(regexpEqual, \"regexpEqual\");\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(/* @__PURE__ */ __name(function gatherEntries(key, value) {\n    leftHandItems.push([key, value]);\n  }, \"gatherEntries\"));\n  rightHandOperand.forEach(/* @__PURE__ */ __name(function gatherEntries(key, value) {\n    rightHandItems.push([key, value]);\n  }, \"gatherEntries\"));\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n__name(entriesEqual, \"entriesEqual\");\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n__name(iterableEqual, \"iterableEqual\");\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n__name(generatorEqual, \"generatorEqual\");\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== \"undefined\" && typeof target === \"object\" && typeof Symbol.iterator !== \"undefined\" && typeof target[Symbol.iterator] === \"function\";\n}\n__name(hasIteratorFunction, \"hasIteratorFunction\");\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n__name(getIteratorEntries, \"getIteratorEntries\");\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [generatorResult.value];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n__name(getGeneratorEntries, \"getGeneratorEntries\");\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n__name(getEnumerableKeys, \"getEnumerableKeys\");\nfunction getEnumerableSymbols(target) {\n  var keys = [];\n  var allKeys = Object.getOwnPropertySymbols(target);\n  for (var i = 0; i < allKeys.length; i += 1) {\n    var key = allKeys[i];\n    if (Object.getOwnPropertyDescriptor(target, key).enumerable) {\n      keys.push(key);\n    }\n  }\n  return keys;\n}\n__name(getEnumerableSymbols, \"getEnumerableSymbols\");\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n__name(keysEqual, \"keysEqual\");\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  var leftHandSymbols = getEnumerableSymbols(leftHandOperand);\n  var rightHandSymbols = getEnumerableSymbols(rightHandOperand);\n  leftHandKeys = leftHandKeys.concat(leftHandSymbols);\n  rightHandKeys = rightHandKeys.concat(rightHandSymbols);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    if (iterableEqual(mapSymbols(leftHandKeys).sort(), mapSymbols(rightHandKeys).sort()) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n  if (leftHandKeys.length === 0 && leftHandEntries.length === 0 && rightHandKeys.length === 0 && rightHandEntries.length === 0) {\n    return true;\n  }\n  return false;\n}\n__name(objectEqual, \"objectEqual\");\nfunction isPrimitive(value) {\n  return value === null || typeof value !== \"object\";\n}\n__name(isPrimitive, \"isPrimitive\");\nfunction mapSymbols(arr) {\n  return arr.map(/* @__PURE__ */ __name(function mapSymbol(entry) {\n    if (typeof entry === \"symbol\") {\n      return entry.toString();\n    }\n    return entry;\n  }, \"mapSymbol\"));\n}\n__name(mapSymbols, \"mapSymbols\");\n\n// node_modules/pathval/index.js\nfunction hasProperty(obj, name) {\n  if (typeof obj === \"undefined\" || obj === null) {\n    return false;\n  }\n  return name in Object(obj);\n}\n__name(hasProperty, \"hasProperty\");\nfunction parsePath(path) {\n  const str = path.replace(/([^\\\\])\\[/g, \"$1.[\");\n  const parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map((value) => {\n    if (value === \"constructor\" || value === \"__proto__\" || value === \"prototype\") {\n      return {};\n    }\n    const regexp = /^\\[(\\d+)\\]$/;\n    const mArr = regexp.exec(value);\n    let parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.[\\]])/g, \"$1\") };\n    }\n    return parsed;\n  });\n}\n__name(parsePath, \"parsePath\");\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  let temporaryValue = obj;\n  let res = null;\n  pathDepth = typeof pathDepth === \"undefined\" ? parsed.length : pathDepth;\n  for (let i = 0; i < pathDepth; i++) {\n    const part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === \"undefined\") {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n      if (i === pathDepth - 1) {\n        res = temporaryValue;\n      }\n    }\n  }\n  return res;\n}\n__name(internalGetPathValue, \"internalGetPathValue\");\nfunction getPathInfo(obj, path) {\n  const parsed = parsePath(path);\n  const last = parsed[parsed.length - 1];\n  const info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed)\n  };\n  info.exists = hasProperty(info.parent, info.name);\n  return info;\n}\n__name(getPathInfo, \"getPathInfo\");\n\n// lib/chai/assertion.js\nfunction Assertion(obj, msg, ssfi, lockSsfi) {\n  flag(this, \"ssfi\", ssfi || Assertion);\n  flag(this, \"lockSsfi\", lockSsfi);\n  flag(this, \"object\", obj);\n  flag(this, \"message\", msg);\n  flag(this, \"eql\", config.deepEqual || deep_eql_default);\n  return proxify(this);\n}\n__name(Assertion, \"Assertion\");\nObject.defineProperty(Assertion, \"includeStack\", {\n  get: function() {\n    console.warn(\"Assertion.includeStack is deprecated, use chai.config.includeStack instead.\");\n    return config.includeStack;\n  },\n  set: function(value) {\n    console.warn(\"Assertion.includeStack is deprecated, use chai.config.includeStack instead.\");\n    config.includeStack = value;\n  }\n});\nObject.defineProperty(Assertion, \"showDiff\", {\n  get: function() {\n    console.warn(\"Assertion.showDiff is deprecated, use chai.config.showDiff instead.\");\n    return config.showDiff;\n  },\n  set: function(value) {\n    console.warn(\"Assertion.showDiff is deprecated, use chai.config.showDiff instead.\");\n    config.showDiff = value;\n  }\n});\nAssertion.addProperty = function(name, fn) {\n  addProperty(this.prototype, name, fn);\n};\nAssertion.addMethod = function(name, fn) {\n  addMethod(this.prototype, name, fn);\n};\nAssertion.addChainableMethod = function(name, fn, chainingBehavior) {\n  addChainableMethod(this.prototype, name, fn, chainingBehavior);\n};\nAssertion.overwriteProperty = function(name, fn) {\n  overwriteProperty(this.prototype, name, fn);\n};\nAssertion.overwriteMethod = function(name, fn) {\n  overwriteMethod(this.prototype, name, fn);\n};\nAssertion.overwriteChainableMethod = function(name, fn, chainingBehavior) {\n  overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n};\nAssertion.prototype.assert = function(expr, msg, negateMsg, expected, _actual, showDiff) {\n  var ok = test(this, arguments);\n  if (false !== showDiff)\n    showDiff = true;\n  if (void 0 === expected && void 0 === _actual)\n    showDiff = false;\n  if (true !== config.showDiff)\n    showDiff = false;\n  if (!ok) {\n    msg = getMessage2(this, arguments);\n    var actual = getActual(this, arguments);\n    var assertionErrorObjectProperties = {\n      actual,\n      expected,\n      showDiff\n    };\n    var operator = getOperator(this, arguments);\n    if (operator) {\n      assertionErrorObjectProperties.operator = operator;\n    }\n    throw new AssertionError(\n      msg,\n      assertionErrorObjectProperties,\n      config.includeStack ? this.assert : flag(this, \"ssfi\")\n    );\n  }\n};\nObject.defineProperty(\n  Assertion.prototype,\n  \"_obj\",\n  {\n    get: function() {\n      return flag(this, \"object\");\n    },\n    set: function(val) {\n      flag(this, \"object\", val);\n    }\n  }\n);\n\n// lib/chai/utils/isProxyEnabled.js\nfunction isProxyEnabled() {\n  return config.useProxy && typeof Proxy !== \"undefined\" && typeof Reflect !== \"undefined\";\n}\n__name(isProxyEnabled, \"isProxyEnabled\");\n\n// lib/chai/utils/addProperty.js\nfunction addProperty(ctx, name, getter) {\n  getter = getter === void 0 ? function() {\n  } : getter;\n  Object.defineProperty(\n    ctx,\n    name,\n    {\n      get: /* @__PURE__ */ __name(function propertyGetter() {\n        if (!isProxyEnabled() && !flag(this, \"lockSsfi\")) {\n          flag(this, \"ssfi\", propertyGetter);\n        }\n        var result = getter.call(this);\n        if (result !== void 0)\n          return result;\n        var newAssertion = new Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }, \"propertyGetter\"),\n      configurable: true\n    }\n  );\n}\n__name(addProperty, \"addProperty\");\n\n// lib/chai/utils/addLengthGuard.js\nvar fnLengthDesc = Object.getOwnPropertyDescriptor(function() {\n}, \"length\");\nfunction addLengthGuard(fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable)\n    return fn;\n  Object.defineProperty(fn, \"length\", {\n    get: function() {\n      if (isChainable) {\n        throw Error(\"Invalid Chai property: \" + assertionName + '.length. Due to a compatibility issue, \"length\" cannot directly follow \"' + assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n      throw Error(\"Invalid Chai property: \" + assertionName + '.length. See docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n  return fn;\n}\n__name(addLengthGuard, \"addLengthGuard\");\n\n// lib/chai/utils/getProperties.js\nfunction getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n  function addProperty2(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n  __name(addProperty2, \"addProperty\");\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty2);\n    proto = Object.getPrototypeOf(proto);\n  }\n  return result;\n}\n__name(getProperties, \"getProperties\");\n\n// lib/chai/utils/proxify.js\nvar builtins = [\"__flags\", \"__methods\", \"_obj\", \"assert\"];\nfunction proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled())\n    return obj;\n  return new Proxy(obj, {\n    get: /* @__PURE__ */ __name(function proxyGetter(target, property) {\n      if (typeof property === \"string\" && config.proxyExcludedKeys.indexOf(property) === -1 && !Reflect.has(target, property)) {\n        if (nonChainableMethodName) {\n          throw Error(\"Invalid Chai property: \" + nonChainableMethodName + \".\" + property + '. See docs for proper usage of \"' + nonChainableMethodName + '\".');\n        }\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (!Object.prototype.hasOwnProperty(prop) && builtins.indexOf(prop) === -1) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n        if (suggestion !== null) {\n          throw Error(\"Invalid Chai property: \" + property + '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error(\"Invalid Chai property: \" + property);\n        }\n      }\n      if (builtins.indexOf(property) === -1 && !flag(target, \"lockSsfi\")) {\n        flag(target, \"ssfi\", proxyGetter);\n      }\n      return Reflect.get(target, property);\n    }, \"proxyGetter\")\n  });\n}\n__name(proxify, \"proxify\");\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n  var memo = [];\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] + (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n  return memo[strA.length][strB.length];\n}\n__name(stringDistanceCapped, \"stringDistanceCapped\");\n\n// lib/chai/utils/addMethod.js\nfunction addMethod(ctx, name, method) {\n  var methodWrapper = /* @__PURE__ */ __name(function() {\n    if (!flag(this, \"lockSsfi\")) {\n      flag(this, \"ssfi\", methodWrapper);\n    }\n    var result = method.apply(this, arguments);\n    if (result !== void 0)\n      return result;\n    var newAssertion = new Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }, \"methodWrapper\");\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n}\n__name(addMethod, \"addMethod\");\n\n// lib/chai/utils/overwriteProperty.js\nfunction overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name), _super = /* @__PURE__ */ __name(function() {\n  }, \"_super\");\n  if (_get && \"function\" === typeof _get.get)\n    _super = _get.get;\n  Object.defineProperty(\n    ctx,\n    name,\n    {\n      get: /* @__PURE__ */ __name(function overwritingPropertyGetter() {\n        if (!isProxyEnabled() && !flag(this, \"lockSsfi\")) {\n          flag(this, \"ssfi\", overwritingPropertyGetter);\n        }\n        var origLockSsfi = flag(this, \"lockSsfi\");\n        flag(this, \"lockSsfi\", true);\n        var result = getter(_super).call(this);\n        flag(this, \"lockSsfi\", origLockSsfi);\n        if (result !== void 0) {\n          return result;\n        }\n        var newAssertion = new Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }, \"overwritingPropertyGetter\"),\n      configurable: true\n    }\n  );\n}\n__name(overwriteProperty, \"overwriteProperty\");\n\n// lib/chai/utils/overwriteMethod.js\nfunction overwriteMethod(ctx, name, method) {\n  var _method = ctx[name], _super = /* @__PURE__ */ __name(function() {\n    throw new Error(name + \" is not a function\");\n  }, \"_super\");\n  if (_method && \"function\" === typeof _method)\n    _super = _method;\n  var overwritingMethodWrapper = /* @__PURE__ */ __name(function() {\n    if (!flag(this, \"lockSsfi\")) {\n      flag(this, \"ssfi\", overwritingMethodWrapper);\n    }\n    var origLockSsfi = flag(this, \"lockSsfi\");\n    flag(this, \"lockSsfi\", true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, \"lockSsfi\", origLockSsfi);\n    if (result !== void 0) {\n      return result;\n    }\n    var newAssertion = new Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }, \"overwritingMethodWrapper\");\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n}\n__name(overwriteMethod, \"overwriteMethod\");\n\n// lib/chai/utils/addChainableMethod.js\nvar canSetPrototype = typeof Object.setPrototypeOf === \"function\";\nvar testFn = /* @__PURE__ */ __name(function() {\n}, \"testFn\");\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n  if (typeof propDesc !== \"object\")\n    return true;\n  return !propDesc.configurable;\n});\nvar call = Function.prototype.call;\nvar apply = Function.prototype.apply;\nfunction addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== \"function\") {\n    chainingBehavior = /* @__PURE__ */ __name(function() {\n    }, \"chainingBehavior\");\n  }\n  var chainableBehavior = {\n    method,\n    chainingBehavior\n  };\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n  Object.defineProperty(\n    ctx,\n    name,\n    {\n      get: /* @__PURE__ */ __name(function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n        var chainableMethodWrapper = /* @__PURE__ */ __name(function() {\n          if (!flag(this, \"lockSsfi\")) {\n            flag(this, \"ssfi\", chainableMethodWrapper);\n          }\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== void 0) {\n            return result;\n          }\n          var newAssertion = new Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        }, \"chainableMethodWrapper\");\n        addLengthGuard(chainableMethodWrapper, name, true);\n        if (canSetPrototype) {\n          var prototype = Object.create(this);\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        } else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function(asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }, \"chainableMethodGetter\"),\n      configurable: true\n    }\n  );\n}\n__name(addChainableMethod, \"addChainableMethod\");\n\n// lib/chai/utils/overwriteChainableMethod.js\nfunction overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = /* @__PURE__ */ __name(function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== void 0) {\n      return result;\n    }\n    var newAssertion = new Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }, \"overwritingChainableMethodGetter\");\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = /* @__PURE__ */ __name(function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== void 0) {\n      return result;\n    }\n    var newAssertion = new Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }, \"overwritingChainableMethodWrapper\");\n}\n__name(overwriteChainableMethod, \"overwriteChainableMethod\");\n\n// lib/chai/utils/compareByInspect.js\nfunction compareByInspect(a, b) {\n  return inspect2(a) < inspect2(b) ? -1 : 1;\n}\n__name(compareByInspect, \"compareByInspect\");\n\n// lib/chai/utils/getOwnEnumerablePropertySymbols.js\nfunction getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== \"function\")\n    return [];\n  return Object.getOwnPropertySymbols(obj).filter(function(sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n}\n__name(getOwnEnumerablePropertySymbols, \"getOwnEnumerablePropertySymbols\");\n\n// lib/chai/utils/getOwnEnumerableProperties.js\nfunction getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n}\n__name(getOwnEnumerableProperties, \"getOwnEnumerableProperties\");\n\n// lib/chai/utils/isNaN.js\nfunction _isNaN(value) {\n  return value !== value;\n}\n__name(_isNaN, \"_isNaN\");\nvar isNaN2 = Number.isNaN || _isNaN;\n\n// lib/chai/utils/getOperator.js\nfunction isObjectType(obj) {\n  var objectType = type(obj);\n  var objectTypes = [\"Array\", \"Object\", \"Function\"];\n  return objectTypes.indexOf(objectType) !== -1;\n}\n__name(isObjectType, \"isObjectType\");\nfunction getOperator(obj, args) {\n  var operator = flag(obj, \"operator\");\n  var negate = flag(obj, \"negate\");\n  var expected = args[3];\n  var msg = negate ? args[2] : args[1];\n  if (operator) {\n    return operator;\n  }\n  if (typeof msg === \"function\")\n    msg = msg();\n  msg = msg || \"\";\n  if (!msg) {\n    return void 0;\n  }\n  if (/\\shave\\s/.test(msg)) {\n    return void 0;\n  }\n  var isObject = isObjectType(expected);\n  if (/\\snot\\s/.test(msg)) {\n    return isObject ? \"notDeepStrictEqual\" : \"notStrictEqual\";\n  }\n  return isObject ? \"deepStrictEqual\" : \"strictEqual\";\n}\n__name(getOperator, \"getOperator\");\n\n// lib/chai/utils/index.js\nfunction getName(fn) {\n  return fn.name;\n}\n__name(getName, \"getName\");\nfunction isRegExp2(obj) {\n  return Object.prototype.toString.call(obj) === \"[object RegExp]\";\n}\n__name(isRegExp2, \"isRegExp\");\n\n// lib/chai/core/assertions.js\nvar { flag: flag2 } = utils_exports;\n[\n  \"to\",\n  \"be\",\n  \"been\",\n  \"is\",\n  \"and\",\n  \"has\",\n  \"have\",\n  \"with\",\n  \"that\",\n  \"which\",\n  \"at\",\n  \"of\",\n  \"same\",\n  \"but\",\n  \"does\",\n  \"still\",\n  \"also\"\n].forEach(function(chain) {\n  Assertion.addProperty(chain);\n});\nAssertion.addProperty(\"not\", function() {\n  flag2(this, \"negate\", true);\n});\nAssertion.addProperty(\"deep\", function() {\n  flag2(this, \"deep\", true);\n});\nAssertion.addProperty(\"nested\", function() {\n  flag2(this, \"nested\", true);\n});\nAssertion.addProperty(\"own\", function() {\n  flag2(this, \"own\", true);\n});\nAssertion.addProperty(\"ordered\", function() {\n  flag2(this, \"ordered\", true);\n});\nAssertion.addProperty(\"any\", function() {\n  flag2(this, \"any\", true);\n  flag2(this, \"all\", false);\n});\nAssertion.addProperty(\"all\", function() {\n  flag2(this, \"all\", true);\n  flag2(this, \"any\", false);\n});\nvar functionTypes = {\n  \"function\": [\"function\", \"asyncfunction\", \"generatorfunction\", \"asyncgeneratorfunction\"],\n  \"asyncfunction\": [\"asyncfunction\", \"asyncgeneratorfunction\"],\n  \"generatorfunction\": [\"generatorfunction\", \"asyncgeneratorfunction\"],\n  \"asyncgeneratorfunction\": [\"asyncgeneratorfunction\"]\n};\nfunction an(type3, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  type3 = type3.toLowerCase();\n  var obj = flag2(this, \"object\"), article = ~[\"a\", \"e\", \"i\", \"o\", \"u\"].indexOf(type3.charAt(0)) ? \"an \" : \"a \";\n  const detectedType = type(obj).toLowerCase();\n  if (functionTypes[\"function\"].includes(type3)) {\n    this.assert(\n      functionTypes[type3].includes(detectedType),\n      \"expected #{this} to be \" + article + type3,\n      \"expected #{this} not to be \" + article + type3\n    );\n  } else {\n    this.assert(\n      type3 === detectedType,\n      \"expected #{this} to be \" + article + type3,\n      \"expected #{this} not to be \" + article + type3\n    );\n  }\n}\n__name(an, \"an\");\nAssertion.addChainableMethod(\"an\", an);\nAssertion.addChainableMethod(\"a\", an);\nfunction SameValueZero(a, b) {\n  return isNaN2(a) && isNaN2(b) || a === b;\n}\n__name(SameValueZero, \"SameValueZero\");\nfunction includeChainingBehavior() {\n  flag2(this, \"contains\", true);\n}\n__name(includeChainingBehavior, \"includeChainingBehavior\");\nfunction include(val, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), objType = type(obj).toLowerCase(), flagMsg = flag2(this, \"message\"), negate = flag2(this, \"negate\"), ssfi = flag2(this, \"ssfi\"), isDeep = flag2(this, \"deep\"), descriptor = isDeep ? \"deep \" : \"\", isEql = isDeep ? flag2(this, \"eql\") : SameValueZero;\n  flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n  var included = false;\n  switch (objType) {\n    case \"string\":\n      included = obj.indexOf(val) !== -1;\n      break;\n    case \"weakset\":\n      if (isDeep) {\n        throw new AssertionError(\n          flagMsg + \"unable to use .deep.include with WeakSet\",\n          void 0,\n          ssfi\n        );\n      }\n      included = obj.has(val);\n      break;\n    case \"map\":\n      obj.forEach(function(item) {\n        included = included || isEql(item, val);\n      });\n      break;\n    case \"set\":\n      if (isDeep) {\n        obj.forEach(function(item) {\n          included = included || isEql(item, val);\n        });\n      } else {\n        included = obj.has(val);\n      }\n      break;\n    case \"array\":\n      if (isDeep) {\n        included = obj.some(function(item) {\n          return isEql(item, val);\n        });\n      } else {\n        included = obj.indexOf(val) !== -1;\n      }\n      break;\n    default:\n      if (val !== Object(val)) {\n        throw new AssertionError(\n          flagMsg + \"the given combination of arguments (\" + objType + \" and \" + type(val).toLowerCase() + \") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a \" + type(val).toLowerCase(),\n          void 0,\n          ssfi\n        );\n      }\n      var props = Object.keys(val), firstErr = null, numErrs = 0;\n      props.forEach(function(prop) {\n        var propAssertion = new Assertion(obj);\n        transferFlags(this, propAssertion, true);\n        flag2(propAssertion, \"lockSsfi\", true);\n        if (!negate || props.length === 1) {\n          propAssertion.property(prop, val[prop]);\n          return;\n        }\n        try {\n          propAssertion.property(prop, val[prop]);\n        } catch (err) {\n          if (!check_error_exports.compatibleConstructor(err, AssertionError)) {\n            throw err;\n          }\n          if (firstErr === null)\n            firstErr = err;\n          numErrs++;\n        }\n      }, this);\n      if (negate && props.length > 1 && numErrs === props.length) {\n        throw firstErr;\n      }\n      return;\n  }\n  this.assert(\n    included,\n    \"expected #{this} to \" + descriptor + \"include \" + inspect2(val),\n    \"expected #{this} to not \" + descriptor + \"include \" + inspect2(val)\n  );\n}\n__name(include, \"include\");\nAssertion.addChainableMethod(\"include\", include, includeChainingBehavior);\nAssertion.addChainableMethod(\"contain\", include, includeChainingBehavior);\nAssertion.addChainableMethod(\"contains\", include, includeChainingBehavior);\nAssertion.addChainableMethod(\"includes\", include, includeChainingBehavior);\nAssertion.addProperty(\"ok\", function() {\n  this.assert(\n    flag2(this, \"object\"),\n    \"expected #{this} to be truthy\",\n    \"expected #{this} to be falsy\"\n  );\n});\nAssertion.addProperty(\"true\", function() {\n  this.assert(\n    true === flag2(this, \"object\"),\n    \"expected #{this} to be true\",\n    \"expected #{this} to be false\",\n    flag2(this, \"negate\") ? false : true\n  );\n});\nAssertion.addProperty(\"callable\", function() {\n  const val = flag2(this, \"object\");\n  const ssfi = flag2(this, \"ssfi\");\n  const message = flag2(this, \"message\");\n  const msg = message ? `${message}: ` : \"\";\n  const negate = flag2(this, \"negate\");\n  const assertionMessage = negate ? `${msg}expected ${inspect2(val)} not to be a callable function` : `${msg}expected ${inspect2(val)} to be a callable function`;\n  const isCallable = [\"Function\", \"AsyncFunction\", \"GeneratorFunction\", \"AsyncGeneratorFunction\"].includes(type(val));\n  if (isCallable && negate || !isCallable && !negate) {\n    throw new AssertionError(\n      assertionMessage,\n      void 0,\n      ssfi\n    );\n  }\n});\nAssertion.addProperty(\"false\", function() {\n  this.assert(\n    false === flag2(this, \"object\"),\n    \"expected #{this} to be false\",\n    \"expected #{this} to be true\",\n    flag2(this, \"negate\") ? true : false\n  );\n});\nAssertion.addProperty(\"null\", function() {\n  this.assert(\n    null === flag2(this, \"object\"),\n    \"expected #{this} to be null\",\n    \"expected #{this} not to be null\"\n  );\n});\nAssertion.addProperty(\"undefined\", function() {\n  this.assert(\n    void 0 === flag2(this, \"object\"),\n    \"expected #{this} to be undefined\",\n    \"expected #{this} not to be undefined\"\n  );\n});\nAssertion.addProperty(\"NaN\", function() {\n  this.assert(\n    isNaN2(flag2(this, \"object\")),\n    \"expected #{this} to be NaN\",\n    \"expected #{this} not to be NaN\"\n  );\n});\nfunction assertExist() {\n  var val = flag2(this, \"object\");\n  this.assert(\n    val !== null && val !== void 0,\n    \"expected #{this} to exist\",\n    \"expected #{this} to not exist\"\n  );\n}\n__name(assertExist, \"assertExist\");\nAssertion.addProperty(\"exist\", assertExist);\nAssertion.addProperty(\"exists\", assertExist);\nAssertion.addProperty(\"empty\", function() {\n  var val = flag2(this, \"object\"), ssfi = flag2(this, \"ssfi\"), flagMsg = flag2(this, \"message\"), itemsCount;\n  flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n  switch (type(val).toLowerCase()) {\n    case \"array\":\n    case \"string\":\n      itemsCount = val.length;\n      break;\n    case \"map\":\n    case \"set\":\n      itemsCount = val.size;\n      break;\n    case \"weakmap\":\n    case \"weakset\":\n      throw new AssertionError(\n        flagMsg + \".empty was passed a weak collection\",\n        void 0,\n        ssfi\n      );\n    case \"function\":\n      var msg = flagMsg + \".empty was passed a function \" + getName(val);\n      throw new AssertionError(msg.trim(), void 0, ssfi);\n    default:\n      if (val !== Object(val)) {\n        throw new AssertionError(\n          flagMsg + \".empty was passed non-string primitive \" + inspect2(val),\n          void 0,\n          ssfi\n        );\n      }\n      itemsCount = Object.keys(val).length;\n  }\n  this.assert(\n    0 === itemsCount,\n    \"expected #{this} to be empty\",\n    \"expected #{this} not to be empty\"\n  );\n});\nfunction checkArguments() {\n  var obj = flag2(this, \"object\"), type3 = type(obj);\n  this.assert(\n    \"Arguments\" === type3,\n    \"expected #{this} to be arguments but got \" + type3,\n    \"expected #{this} to not be arguments\"\n  );\n}\n__name(checkArguments, \"checkArguments\");\nAssertion.addProperty(\"arguments\", checkArguments);\nAssertion.addProperty(\"Arguments\", checkArguments);\nfunction assertEqual(val, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\");\n  if (flag2(this, \"deep\")) {\n    var prevLockSsfi = flag2(this, \"lockSsfi\");\n    flag2(this, \"lockSsfi\", true);\n    this.eql(val);\n    flag2(this, \"lockSsfi\", prevLockSsfi);\n  } else {\n    this.assert(\n      val === obj,\n      \"expected #{this} to equal #{exp}\",\n      \"expected #{this} to not equal #{exp}\",\n      val,\n      this._obj,\n      true\n    );\n  }\n}\n__name(assertEqual, \"assertEqual\");\nAssertion.addMethod(\"equal\", assertEqual);\nAssertion.addMethod(\"equals\", assertEqual);\nAssertion.addMethod(\"eq\", assertEqual);\nfunction assertEql(obj, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var eql = flag2(this, \"eql\");\n  this.assert(\n    eql(obj, flag2(this, \"object\")),\n    \"expected #{this} to deeply equal #{exp}\",\n    \"expected #{this} to not deeply equal #{exp}\",\n    obj,\n    this._obj,\n    true\n  );\n}\n__name(assertEql, \"assertEql\");\nAssertion.addMethod(\"eql\", assertEql);\nAssertion.addMethod(\"eqls\", assertEql);\nfunction assertAbove(n, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), doLength = flag2(this, \"doLength\"), flagMsg = flag2(this, \"message\"), msgPrefix = flagMsg ? flagMsg + \": \" : \"\", ssfi = flag2(this, \"ssfi\"), objType = type(obj).toLowerCase(), nType = type(n).toLowerCase(), errorMessage, shouldThrow = true;\n  if (doLength && objType !== \"map\" && objType !== \"set\") {\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property(\"length\");\n  }\n  if (!doLength && (objType === \"date\" && nType !== \"date\")) {\n    errorMessage = msgPrefix + \"the argument to above must be a date\";\n  } else if (nType !== \"number\" && (doLength || objType === \"number\")) {\n    errorMessage = msgPrefix + \"the argument to above must be a number\";\n  } else if (!doLength && (objType !== \"date\" && objType !== \"number\")) {\n    var printObj = objType === \"string\" ? \"'\" + obj + \"'\" : obj;\n    errorMessage = msgPrefix + \"expected \" + printObj + \" to be a number or a date\";\n  } else {\n    shouldThrow = false;\n  }\n  if (shouldThrow) {\n    throw new AssertionError(errorMessage, void 0, ssfi);\n  }\n  if (doLength) {\n    var descriptor = \"length\", itemsCount;\n    if (objType === \"map\" || objType === \"set\") {\n      descriptor = \"size\";\n      itemsCount = obj.size;\n    } else {\n      itemsCount = obj.length;\n    }\n    this.assert(\n      itemsCount > n,\n      \"expected #{this} to have a \" + descriptor + \" above #{exp} but got #{act}\",\n      \"expected #{this} to not have a \" + descriptor + \" above #{exp}\",\n      n,\n      itemsCount\n    );\n  } else {\n    this.assert(\n      obj > n,\n      \"expected #{this} to be above #{exp}\",\n      \"expected #{this} to be at most #{exp}\",\n      n\n    );\n  }\n}\n__name(assertAbove, \"assertAbove\");\nAssertion.addMethod(\"above\", assertAbove);\nAssertion.addMethod(\"gt\", assertAbove);\nAssertion.addMethod(\"greaterThan\", assertAbove);\nfunction assertLeast(n, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), doLength = flag2(this, \"doLength\"), flagMsg = flag2(this, \"message\"), msgPrefix = flagMsg ? flagMsg + \": \" : \"\", ssfi = flag2(this, \"ssfi\"), objType = type(obj).toLowerCase(), nType = type(n).toLowerCase(), errorMessage, shouldThrow = true;\n  if (doLength && objType !== \"map\" && objType !== \"set\") {\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property(\"length\");\n  }\n  if (!doLength && (objType === \"date\" && nType !== \"date\")) {\n    errorMessage = msgPrefix + \"the argument to least must be a date\";\n  } else if (nType !== \"number\" && (doLength || objType === \"number\")) {\n    errorMessage = msgPrefix + \"the argument to least must be a number\";\n  } else if (!doLength && (objType !== \"date\" && objType !== \"number\")) {\n    var printObj = objType === \"string\" ? \"'\" + obj + \"'\" : obj;\n    errorMessage = msgPrefix + \"expected \" + printObj + \" to be a number or a date\";\n  } else {\n    shouldThrow = false;\n  }\n  if (shouldThrow) {\n    throw new AssertionError(errorMessage, void 0, ssfi);\n  }\n  if (doLength) {\n    var descriptor = \"length\", itemsCount;\n    if (objType === \"map\" || objType === \"set\") {\n      descriptor = \"size\";\n      itemsCount = obj.size;\n    } else {\n      itemsCount = obj.length;\n    }\n    this.assert(\n      itemsCount >= n,\n      \"expected #{this} to have a \" + descriptor + \" at least #{exp} but got #{act}\",\n      \"expected #{this} to have a \" + descriptor + \" below #{exp}\",\n      n,\n      itemsCount\n    );\n  } else {\n    this.assert(\n      obj >= n,\n      \"expected #{this} to be at least #{exp}\",\n      \"expected #{this} to be below #{exp}\",\n      n\n    );\n  }\n}\n__name(assertLeast, \"assertLeast\");\nAssertion.addMethod(\"least\", assertLeast);\nAssertion.addMethod(\"gte\", assertLeast);\nAssertion.addMethod(\"greaterThanOrEqual\", assertLeast);\nfunction assertBelow(n, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), doLength = flag2(this, \"doLength\"), flagMsg = flag2(this, \"message\"), msgPrefix = flagMsg ? flagMsg + \": \" : \"\", ssfi = flag2(this, \"ssfi\"), objType = type(obj).toLowerCase(), nType = type(n).toLowerCase(), errorMessage, shouldThrow = true;\n  if (doLength && objType !== \"map\" && objType !== \"set\") {\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property(\"length\");\n  }\n  if (!doLength && (objType === \"date\" && nType !== \"date\")) {\n    errorMessage = msgPrefix + \"the argument to below must be a date\";\n  } else if (nType !== \"number\" && (doLength || objType === \"number\")) {\n    errorMessage = msgPrefix + \"the argument to below must be a number\";\n  } else if (!doLength && (objType !== \"date\" && objType !== \"number\")) {\n    var printObj = objType === \"string\" ? \"'\" + obj + \"'\" : obj;\n    errorMessage = msgPrefix + \"expected \" + printObj + \" to be a number or a date\";\n  } else {\n    shouldThrow = false;\n  }\n  if (shouldThrow) {\n    throw new AssertionError(errorMessage, void 0, ssfi);\n  }\n  if (doLength) {\n    var descriptor = \"length\", itemsCount;\n    if (objType === \"map\" || objType === \"set\") {\n      descriptor = \"size\";\n      itemsCount = obj.size;\n    } else {\n      itemsCount = obj.length;\n    }\n    this.assert(\n      itemsCount < n,\n      \"expected #{this} to have a \" + descriptor + \" below #{exp} but got #{act}\",\n      \"expected #{this} to not have a \" + descriptor + \" below #{exp}\",\n      n,\n      itemsCount\n    );\n  } else {\n    this.assert(\n      obj < n,\n      \"expected #{this} to be below #{exp}\",\n      \"expected #{this} to be at least #{exp}\",\n      n\n    );\n  }\n}\n__name(assertBelow, \"assertBelow\");\nAssertion.addMethod(\"below\", assertBelow);\nAssertion.addMethod(\"lt\", assertBelow);\nAssertion.addMethod(\"lessThan\", assertBelow);\nfunction assertMost(n, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), doLength = flag2(this, \"doLength\"), flagMsg = flag2(this, \"message\"), msgPrefix = flagMsg ? flagMsg + \": \" : \"\", ssfi = flag2(this, \"ssfi\"), objType = type(obj).toLowerCase(), nType = type(n).toLowerCase(), errorMessage, shouldThrow = true;\n  if (doLength && objType !== \"map\" && objType !== \"set\") {\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property(\"length\");\n  }\n  if (!doLength && (objType === \"date\" && nType !== \"date\")) {\n    errorMessage = msgPrefix + \"the argument to most must be a date\";\n  } else if (nType !== \"number\" && (doLength || objType === \"number\")) {\n    errorMessage = msgPrefix + \"the argument to most must be a number\";\n  } else if (!doLength && (objType !== \"date\" && objType !== \"number\")) {\n    var printObj = objType === \"string\" ? \"'\" + obj + \"'\" : obj;\n    errorMessage = msgPrefix + \"expected \" + printObj + \" to be a number or a date\";\n  } else {\n    shouldThrow = false;\n  }\n  if (shouldThrow) {\n    throw new AssertionError(errorMessage, void 0, ssfi);\n  }\n  if (doLength) {\n    var descriptor = \"length\", itemsCount;\n    if (objType === \"map\" || objType === \"set\") {\n      descriptor = \"size\";\n      itemsCount = obj.size;\n    } else {\n      itemsCount = obj.length;\n    }\n    this.assert(\n      itemsCount <= n,\n      \"expected #{this} to have a \" + descriptor + \" at most #{exp} but got #{act}\",\n      \"expected #{this} to have a \" + descriptor + \" above #{exp}\",\n      n,\n      itemsCount\n    );\n  } else {\n    this.assert(\n      obj <= n,\n      \"expected #{this} to be at most #{exp}\",\n      \"expected #{this} to be above #{exp}\",\n      n\n    );\n  }\n}\n__name(assertMost, \"assertMost\");\nAssertion.addMethod(\"most\", assertMost);\nAssertion.addMethod(\"lte\", assertMost);\nAssertion.addMethod(\"lessThanOrEqual\", assertMost);\nAssertion.addMethod(\"within\", function(start, finish, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), doLength = flag2(this, \"doLength\"), flagMsg = flag2(this, \"message\"), msgPrefix = flagMsg ? flagMsg + \": \" : \"\", ssfi = flag2(this, \"ssfi\"), objType = type(obj).toLowerCase(), startType = type(start).toLowerCase(), finishType = type(finish).toLowerCase(), errorMessage, shouldThrow = true, range = startType === \"date\" && finishType === \"date\" ? start.toISOString() + \"..\" + finish.toISOString() : start + \"..\" + finish;\n  if (doLength && objType !== \"map\" && objType !== \"set\") {\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property(\"length\");\n  }\n  if (!doLength && (objType === \"date\" && (startType !== \"date\" || finishType !== \"date\"))) {\n    errorMessage = msgPrefix + \"the arguments to within must be dates\";\n  } else if ((startType !== \"number\" || finishType !== \"number\") && (doLength || objType === \"number\")) {\n    errorMessage = msgPrefix + \"the arguments to within must be numbers\";\n  } else if (!doLength && (objType !== \"date\" && objType !== \"number\")) {\n    var printObj = objType === \"string\" ? \"'\" + obj + \"'\" : obj;\n    errorMessage = msgPrefix + \"expected \" + printObj + \" to be a number or a date\";\n  } else {\n    shouldThrow = false;\n  }\n  if (shouldThrow) {\n    throw new AssertionError(errorMessage, void 0, ssfi);\n  }\n  if (doLength) {\n    var descriptor = \"length\", itemsCount;\n    if (objType === \"map\" || objType === \"set\") {\n      descriptor = \"size\";\n      itemsCount = obj.size;\n    } else {\n      itemsCount = obj.length;\n    }\n    this.assert(\n      itemsCount >= start && itemsCount <= finish,\n      \"expected #{this} to have a \" + descriptor + \" within \" + range,\n      \"expected #{this} to not have a \" + descriptor + \" within \" + range\n    );\n  } else {\n    this.assert(\n      obj >= start && obj <= finish,\n      \"expected #{this} to be within \" + range,\n      \"expected #{this} to not be within \" + range\n    );\n  }\n});\nfunction assertInstanceOf(constructor, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var target = flag2(this, \"object\");\n  var ssfi = flag2(this, \"ssfi\");\n  var flagMsg = flag2(this, \"message\");\n  try {\n    var isInstanceOf = target instanceof constructor;\n  } catch (err) {\n    if (err instanceof TypeError) {\n      flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n      throw new AssertionError(\n        flagMsg + \"The instanceof assertion needs a constructor but \" + type(constructor) + \" was given.\",\n        void 0,\n        ssfi\n      );\n    }\n    throw err;\n  }\n  var name = getName(constructor);\n  if (name == null) {\n    name = \"an unnamed constructor\";\n  }\n  this.assert(\n    isInstanceOf,\n    \"expected #{this} to be an instance of \" + name,\n    \"expected #{this} to not be an instance of \" + name\n  );\n}\n__name(assertInstanceOf, \"assertInstanceOf\");\nAssertion.addMethod(\"instanceof\", assertInstanceOf);\nAssertion.addMethod(\"instanceOf\", assertInstanceOf);\nfunction assertProperty(name, val, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var isNested = flag2(this, \"nested\"), isOwn = flag2(this, \"own\"), flagMsg = flag2(this, \"message\"), obj = flag2(this, \"object\"), ssfi = flag2(this, \"ssfi\"), nameType = typeof name;\n  flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n  if (isNested) {\n    if (nameType !== \"string\") {\n      throw new AssertionError(\n        flagMsg + \"the argument to property must be a string when using nested syntax\",\n        void 0,\n        ssfi\n      );\n    }\n  } else {\n    if (nameType !== \"string\" && nameType !== \"number\" && nameType !== \"symbol\") {\n      throw new AssertionError(\n        flagMsg + \"the argument to property must be a string, number, or symbol\",\n        void 0,\n        ssfi\n      );\n    }\n  }\n  if (isNested && isOwn) {\n    throw new AssertionError(\n      flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n      void 0,\n      ssfi\n    );\n  }\n  if (obj === null || obj === void 0) {\n    throw new AssertionError(\n      flagMsg + \"Target cannot be null or undefined.\",\n      void 0,\n      ssfi\n    );\n  }\n  var isDeep = flag2(this, \"deep\"), negate = flag2(this, \"negate\"), pathInfo = isNested ? getPathInfo(obj, name) : null, value = isNested ? pathInfo.value : obj[name], isEql = isDeep ? flag2(this, \"eql\") : (val1, val2) => val1 === val2;\n  var descriptor = \"\";\n  if (isDeep)\n    descriptor += \"deep \";\n  if (isOwn)\n    descriptor += \"own \";\n  if (isNested)\n    descriptor += \"nested \";\n  descriptor += \"property \";\n  var hasProperty2;\n  if (isOwn)\n    hasProperty2 = Object.prototype.hasOwnProperty.call(obj, name);\n  else if (isNested)\n    hasProperty2 = pathInfo.exists;\n  else\n    hasProperty2 = hasProperty(obj, name);\n  if (!negate || arguments.length === 1) {\n    this.assert(\n      hasProperty2,\n      \"expected #{this} to have \" + descriptor + inspect2(name),\n      \"expected #{this} to not have \" + descriptor + inspect2(name)\n    );\n  }\n  if (arguments.length > 1) {\n    this.assert(\n      hasProperty2 && isEql(val, value),\n      \"expected #{this} to have \" + descriptor + inspect2(name) + \" of #{exp}, but got #{act}\",\n      \"expected #{this} to not have \" + descriptor + inspect2(name) + \" of #{act}\",\n      val,\n      value\n    );\n  }\n  flag2(this, \"object\", value);\n}\n__name(assertProperty, \"assertProperty\");\nAssertion.addMethod(\"property\", assertProperty);\nfunction assertOwnProperty(name, value, msg) {\n  flag2(this, \"own\", true);\n  assertProperty.apply(this, arguments);\n}\n__name(assertOwnProperty, \"assertOwnProperty\");\nAssertion.addMethod(\"ownProperty\", assertOwnProperty);\nAssertion.addMethod(\"haveOwnProperty\", assertOwnProperty);\nfunction assertOwnPropertyDescriptor(name, descriptor, msg) {\n  if (typeof descriptor === \"string\") {\n    msg = descriptor;\n    descriptor = null;\n  }\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\");\n  var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n  var eql = flag2(this, \"eql\");\n  if (actualDescriptor && descriptor) {\n    this.assert(\n      eql(descriptor, actualDescriptor),\n      \"expected the own property descriptor for \" + inspect2(name) + \" on #{this} to match \" + inspect2(descriptor) + \", got \" + inspect2(actualDescriptor),\n      \"expected the own property descriptor for \" + inspect2(name) + \" on #{this} to not match \" + inspect2(descriptor),\n      descriptor,\n      actualDescriptor,\n      true\n    );\n  } else {\n    this.assert(\n      actualDescriptor,\n      \"expected #{this} to have an own property descriptor for \" + inspect2(name),\n      \"expected #{this} to not have an own property descriptor for \" + inspect2(name)\n    );\n  }\n  flag2(this, \"object\", actualDescriptor);\n}\n__name(assertOwnPropertyDescriptor, \"assertOwnPropertyDescriptor\");\nAssertion.addMethod(\"ownPropertyDescriptor\", assertOwnPropertyDescriptor);\nAssertion.addMethod(\"haveOwnPropertyDescriptor\", assertOwnPropertyDescriptor);\nfunction assertLengthChain() {\n  flag2(this, \"doLength\", true);\n}\n__name(assertLengthChain, \"assertLengthChain\");\nfunction assertLength(n, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), objType = type(obj).toLowerCase(), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\"), descriptor = \"length\", itemsCount;\n  switch (objType) {\n    case \"map\":\n    case \"set\":\n      descriptor = \"size\";\n      itemsCount = obj.size;\n      break;\n    default:\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property(\"length\");\n      itemsCount = obj.length;\n  }\n  this.assert(\n    itemsCount == n,\n    \"expected #{this} to have a \" + descriptor + \" of #{exp} but got #{act}\",\n    \"expected #{this} to not have a \" + descriptor + \" of #{act}\",\n    n,\n    itemsCount\n  );\n}\n__name(assertLength, \"assertLength\");\nAssertion.addChainableMethod(\"length\", assertLength, assertLengthChain);\nAssertion.addChainableMethod(\"lengthOf\", assertLength, assertLengthChain);\nfunction assertMatch(re, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\");\n  this.assert(\n    re.exec(obj),\n    \"expected #{this} to match \" + re,\n    \"expected #{this} not to match \" + re\n  );\n}\n__name(assertMatch, \"assertMatch\");\nAssertion.addMethod(\"match\", assertMatch);\nAssertion.addMethod(\"matches\", assertMatch);\nAssertion.addMethod(\"string\", function(str, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\");\n  new Assertion(obj, flagMsg, ssfi, true).is.a(\"string\");\n  this.assert(\n    ~obj.indexOf(str),\n    \"expected #{this} to contain \" + inspect2(str),\n    \"expected #{this} to not contain \" + inspect2(str)\n  );\n});\nfunction assertKeys(keys) {\n  var obj = flag2(this, \"object\"), objType = type(obj), keysType = type(keys), ssfi = flag2(this, \"ssfi\"), isDeep = flag2(this, \"deep\"), str, deepStr = \"\", actual, ok = true, flagMsg = flag2(this, \"message\");\n  flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n  var mixedArgsMsg = flagMsg + \"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments\";\n  if (objType === \"Map\" || objType === \"Set\") {\n    deepStr = isDeep ? \"deeply \" : \"\";\n    actual = [];\n    obj.forEach(function(val, key) {\n      actual.push(key);\n    });\n    if (keysType !== \"Array\") {\n      keys = Array.prototype.slice.call(arguments);\n    }\n  } else {\n    actual = getOwnEnumerableProperties(obj);\n    switch (keysType) {\n      case \"Array\":\n        if (arguments.length > 1) {\n          throw new AssertionError(mixedArgsMsg, void 0, ssfi);\n        }\n        break;\n      case \"Object\":\n        if (arguments.length > 1) {\n          throw new AssertionError(mixedArgsMsg, void 0, ssfi);\n        }\n        keys = Object.keys(keys);\n        break;\n      default:\n        keys = Array.prototype.slice.call(arguments);\n    }\n    keys = keys.map(function(val) {\n      return typeof val === \"symbol\" ? val : String(val);\n    });\n  }\n  if (!keys.length) {\n    throw new AssertionError(flagMsg + \"keys required\", void 0, ssfi);\n  }\n  var len = keys.length, any = flag2(this, \"any\"), all = flag2(this, \"all\"), expected = keys, isEql = isDeep ? flag2(this, \"eql\") : (val1, val2) => val1 === val2;\n  if (!any && !all) {\n    all = true;\n  }\n  if (any) {\n    ok = expected.some(function(expectedKey) {\n      return actual.some(function(actualKey) {\n        return isEql(expectedKey, actualKey);\n      });\n    });\n  }\n  if (all) {\n    ok = expected.every(function(expectedKey) {\n      return actual.some(function(actualKey) {\n        return isEql(expectedKey, actualKey);\n      });\n    });\n    if (!flag2(this, \"contains\")) {\n      ok = ok && keys.length == actual.length;\n    }\n  }\n  if (len > 1) {\n    keys = keys.map(function(key) {\n      return inspect2(key);\n    });\n    var last = keys.pop();\n    if (all) {\n      str = keys.join(\", \") + \", and \" + last;\n    }\n    if (any) {\n      str = keys.join(\", \") + \", or \" + last;\n    }\n  } else {\n    str = inspect2(keys[0]);\n  }\n  str = (len > 1 ? \"keys \" : \"key \") + str;\n  str = (flag2(this, \"contains\") ? \"contain \" : \"have \") + str;\n  this.assert(\n    ok,\n    \"expected #{this} to \" + deepStr + str,\n    \"expected #{this} to not \" + deepStr + str,\n    expected.slice(0).sort(compareByInspect),\n    actual.sort(compareByInspect),\n    true\n  );\n}\n__name(assertKeys, \"assertKeys\");\nAssertion.addMethod(\"keys\", assertKeys);\nAssertion.addMethod(\"key\", assertKeys);\nfunction assertThrows(errorLike, errMsgMatcher, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), ssfi = flag2(this, \"ssfi\"), flagMsg = flag2(this, \"message\"), negate = flag2(this, \"negate\") || false;\n  new Assertion(obj, flagMsg, ssfi, true).is.a(\"function\");\n  if (isRegExp2(errorLike) || typeof errorLike === \"string\") {\n    errMsgMatcher = errorLike;\n    errorLike = null;\n  }\n  let caughtErr;\n  let errorWasThrown = false;\n  try {\n    obj();\n  } catch (err) {\n    errorWasThrown = true;\n    caughtErr = err;\n  }\n  var everyArgIsUndefined = errorLike === void 0 && errMsgMatcher === void 0;\n  var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n  var errorLikeFail = false;\n  var errMsgMatcherFail = false;\n  if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n    var errorLikeString = \"an error\";\n    if (errorLike instanceof Error) {\n      errorLikeString = \"#{exp}\";\n    } else if (errorLike) {\n      errorLikeString = check_error_exports.getConstructorName(errorLike);\n    }\n    let actual = caughtErr;\n    if (caughtErr instanceof Error) {\n      actual = caughtErr.toString();\n    } else if (typeof caughtErr === \"string\") {\n      actual = caughtErr;\n    } else if (caughtErr && (typeof caughtErr === \"object\" || typeof caughtErr === \"function\")) {\n      try {\n        actual = check_error_exports.getConstructorName(caughtErr);\n      } catch (_err) {\n      }\n    }\n    this.assert(\n      errorWasThrown,\n      \"expected #{this} to throw \" + errorLikeString,\n      \"expected #{this} to not throw an error but #{act} was thrown\",\n      errorLike && errorLike.toString(),\n      actual\n    );\n  }\n  if (errorLike && caughtErr) {\n    if (errorLike instanceof Error) {\n      var isCompatibleInstance = check_error_exports.compatibleInstance(caughtErr, errorLike);\n      if (isCompatibleInstance === negate) {\n        if (everyArgIsDefined && negate) {\n          errorLikeFail = true;\n        } else {\n          this.assert(\n            negate,\n            \"expected #{this} to throw #{exp} but #{act} was thrown\",\n            \"expected #{this} to not throw #{exp}\" + (caughtErr && !negate ? \" but #{act} was thrown\" : \"\"),\n            errorLike.toString(),\n            caughtErr.toString()\n          );\n        }\n      }\n    }\n    var isCompatibleConstructor = check_error_exports.compatibleConstructor(caughtErr, errorLike);\n    if (isCompatibleConstructor === negate) {\n      if (everyArgIsDefined && negate) {\n        errorLikeFail = true;\n      } else {\n        this.assert(\n          negate,\n          \"expected #{this} to throw #{exp} but #{act} was thrown\",\n          \"expected #{this} to not throw #{exp}\" + (caughtErr ? \" but #{act} was thrown\" : \"\"),\n          errorLike instanceof Error ? errorLike.toString() : errorLike && check_error_exports.getConstructorName(errorLike),\n          caughtErr instanceof Error ? caughtErr.toString() : caughtErr && check_error_exports.getConstructorName(caughtErr)\n        );\n      }\n    }\n  }\n  if (caughtErr && errMsgMatcher !== void 0 && errMsgMatcher !== null) {\n    var placeholder = \"including\";\n    if (isRegExp2(errMsgMatcher)) {\n      placeholder = \"matching\";\n    }\n    var isCompatibleMessage = check_error_exports.compatibleMessage(caughtErr, errMsgMatcher);\n    if (isCompatibleMessage === negate) {\n      if (everyArgIsDefined && negate) {\n        errMsgMatcherFail = true;\n      } else {\n        this.assert(\n          negate,\n          \"expected #{this} to throw error \" + placeholder + \" #{exp} but got #{act}\",\n          \"expected #{this} to throw error not \" + placeholder + \" #{exp}\",\n          errMsgMatcher,\n          check_error_exports.getMessage(caughtErr)\n        );\n      }\n    }\n  }\n  if (errorLikeFail && errMsgMatcherFail) {\n    this.assert(\n      negate,\n      \"expected #{this} to throw #{exp} but #{act} was thrown\",\n      \"expected #{this} to not throw #{exp}\" + (caughtErr ? \" but #{act} was thrown\" : \"\"),\n      errorLike instanceof Error ? errorLike.toString() : errorLike && check_error_exports.getConstructorName(errorLike),\n      caughtErr instanceof Error ? caughtErr.toString() : caughtErr && check_error_exports.getConstructorName(caughtErr)\n    );\n  }\n  flag2(this, \"object\", caughtErr);\n}\n__name(assertThrows, \"assertThrows\");\nAssertion.addMethod(\"throw\", assertThrows);\nAssertion.addMethod(\"throws\", assertThrows);\nAssertion.addMethod(\"Throw\", assertThrows);\nfunction respondTo(method, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), itself = flag2(this, \"itself\"), context = \"function\" === typeof obj && !itself ? obj.prototype[method] : obj[method];\n  this.assert(\n    \"function\" === typeof context,\n    \"expected #{this} to respond to \" + inspect2(method),\n    \"expected #{this} to not respond to \" + inspect2(method)\n  );\n}\n__name(respondTo, \"respondTo\");\nAssertion.addMethod(\"respondTo\", respondTo);\nAssertion.addMethod(\"respondsTo\", respondTo);\nAssertion.addProperty(\"itself\", function() {\n  flag2(this, \"itself\", true);\n});\nfunction satisfy(matcher, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\");\n  var result = matcher(obj);\n  this.assert(\n    result,\n    \"expected #{this} to satisfy \" + objDisplay(matcher),\n    \"expected #{this} to not satisfy\" + objDisplay(matcher),\n    flag2(this, \"negate\") ? false : true,\n    result\n  );\n}\n__name(satisfy, \"satisfy\");\nAssertion.addMethod(\"satisfy\", satisfy);\nAssertion.addMethod(\"satisfies\", satisfy);\nfunction closeTo(expected, delta, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\");\n  new Assertion(obj, flagMsg, ssfi, true).is.a(\"number\");\n  if (typeof expected !== \"number\" || typeof delta !== \"number\") {\n    flagMsg = flagMsg ? flagMsg + \": \" : \"\";\n    var deltaMessage = delta === void 0 ? \", and a delta is required\" : \"\";\n    throw new AssertionError(\n      flagMsg + \"the arguments to closeTo or approximately must be numbers\" + deltaMessage,\n      void 0,\n      ssfi\n    );\n  }\n  this.assert(\n    Math.abs(obj - expected) <= delta,\n    \"expected #{this} to be close to \" + expected + \" +/- \" + delta,\n    \"expected #{this} not to be close to \" + expected + \" +/- \" + delta\n  );\n}\n__name(closeTo, \"closeTo\");\nAssertion.addMethod(\"closeTo\", closeTo);\nAssertion.addMethod(\"approximately\", closeTo);\nfunction isSubsetOf(_subset, _superset, cmp, contains, ordered) {\n  let superset = Array.from(_superset);\n  let subset = Array.from(_subset);\n  if (!contains) {\n    if (subset.length !== superset.length)\n      return false;\n    superset = superset.slice();\n  }\n  return subset.every(function(elem, idx) {\n    if (ordered)\n      return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n    if (!cmp) {\n      var matchIdx = superset.indexOf(elem);\n      if (matchIdx === -1)\n        return false;\n      if (!contains)\n        superset.splice(matchIdx, 1);\n      return true;\n    }\n    return superset.some(function(elem2, matchIdx2) {\n      if (!cmp(elem, elem2))\n        return false;\n      if (!contains)\n        superset.splice(matchIdx2, 1);\n      return true;\n    });\n  });\n}\n__name(isSubsetOf, \"isSubsetOf\");\nAssertion.addMethod(\"members\", function(subset, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\");\n  new Assertion(obj, flagMsg, ssfi, true).to.be.iterable;\n  new Assertion(subset, flagMsg, ssfi, true).to.be.iterable;\n  var contains = flag2(this, \"contains\");\n  var ordered = flag2(this, \"ordered\");\n  var subject, failMsg, failNegateMsg;\n  if (contains) {\n    subject = ordered ? \"an ordered superset\" : \"a superset\";\n    failMsg = \"expected #{this} to be \" + subject + \" of #{exp}\";\n    failNegateMsg = \"expected #{this} to not be \" + subject + \" of #{exp}\";\n  } else {\n    subject = ordered ? \"ordered members\" : \"members\";\n    failMsg = \"expected #{this} to have the same \" + subject + \" as #{exp}\";\n    failNegateMsg = \"expected #{this} to not have the same \" + subject + \" as #{exp}\";\n  }\n  var cmp = flag2(this, \"deep\") ? flag2(this, \"eql\") : void 0;\n  this.assert(\n    isSubsetOf(subset, obj, cmp, contains, ordered),\n    failMsg,\n    failNegateMsg,\n    subset,\n    obj,\n    true\n  );\n});\nAssertion.addProperty(\"iterable\", function(msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var obj = flag2(this, \"object\");\n  this.assert(\n    obj != void 0 && obj[Symbol.iterator],\n    \"expected #{this} to be an iterable\",\n    \"expected #{this} to not be an iterable\",\n    obj\n  );\n});\nfunction oneOf(list, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var expected = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\"), contains = flag2(this, \"contains\"), isDeep = flag2(this, \"deep\"), eql = flag2(this, \"eql\");\n  new Assertion(list, flagMsg, ssfi, true).to.be.an(\"array\");\n  if (contains) {\n    this.assert(\n      list.some(function(possibility) {\n        return expected.indexOf(possibility) > -1;\n      }),\n      \"expected #{this} to contain one of #{exp}\",\n      \"expected #{this} to not contain one of #{exp}\",\n      list,\n      expected\n    );\n  } else {\n    if (isDeep) {\n      this.assert(\n        list.some(function(possibility) {\n          return eql(expected, possibility);\n        }),\n        \"expected #{this} to deeply equal one of #{exp}\",\n        \"expected #{this} to deeply equal one of #{exp}\",\n        list,\n        expected\n      );\n    } else {\n      this.assert(\n        list.indexOf(expected) > -1,\n        \"expected #{this} to be one of #{exp}\",\n        \"expected #{this} to not be one of #{exp}\",\n        list,\n        expected\n      );\n    }\n  }\n}\n__name(oneOf, \"oneOf\");\nAssertion.addMethod(\"oneOf\", oneOf);\nfunction assertChanges(subject, prop, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var fn = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\");\n  new Assertion(fn, flagMsg, ssfi, true).is.a(\"function\");\n  var initial;\n  if (!prop) {\n    new Assertion(subject, flagMsg, ssfi, true).is.a(\"function\");\n    initial = subject();\n  } else {\n    new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n    initial = subject[prop];\n  }\n  fn();\n  var final = prop === void 0 || prop === null ? subject() : subject[prop];\n  var msgObj = prop === void 0 || prop === null ? initial : \".\" + prop;\n  flag2(this, \"deltaMsgObj\", msgObj);\n  flag2(this, \"initialDeltaValue\", initial);\n  flag2(this, \"finalDeltaValue\", final);\n  flag2(this, \"deltaBehavior\", \"change\");\n  flag2(this, \"realDelta\", final !== initial);\n  this.assert(\n    initial !== final,\n    \"expected \" + msgObj + \" to change\",\n    \"expected \" + msgObj + \" to not change\"\n  );\n}\n__name(assertChanges, \"assertChanges\");\nAssertion.addMethod(\"change\", assertChanges);\nAssertion.addMethod(\"changes\", assertChanges);\nfunction assertIncreases(subject, prop, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var fn = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\");\n  new Assertion(fn, flagMsg, ssfi, true).is.a(\"function\");\n  var initial;\n  if (!prop) {\n    new Assertion(subject, flagMsg, ssfi, true).is.a(\"function\");\n    initial = subject();\n  } else {\n    new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n    initial = subject[prop];\n  }\n  new Assertion(initial, flagMsg, ssfi, true).is.a(\"number\");\n  fn();\n  var final = prop === void 0 || prop === null ? subject() : subject[prop];\n  var msgObj = prop === void 0 || prop === null ? initial : \".\" + prop;\n  flag2(this, \"deltaMsgObj\", msgObj);\n  flag2(this, \"initialDeltaValue\", initial);\n  flag2(this, \"finalDeltaValue\", final);\n  flag2(this, \"deltaBehavior\", \"increase\");\n  flag2(this, \"realDelta\", final - initial);\n  this.assert(\n    final - initial > 0,\n    \"expected \" + msgObj + \" to increase\",\n    \"expected \" + msgObj + \" to not increase\"\n  );\n}\n__name(assertIncreases, \"assertIncreases\");\nAssertion.addMethod(\"increase\", assertIncreases);\nAssertion.addMethod(\"increases\", assertIncreases);\nfunction assertDecreases(subject, prop, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var fn = flag2(this, \"object\"), flagMsg = flag2(this, \"message\"), ssfi = flag2(this, \"ssfi\");\n  new Assertion(fn, flagMsg, ssfi, true).is.a(\"function\");\n  var initial;\n  if (!prop) {\n    new Assertion(subject, flagMsg, ssfi, true).is.a(\"function\");\n    initial = subject();\n  } else {\n    new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n    initial = subject[prop];\n  }\n  new Assertion(initial, flagMsg, ssfi, true).is.a(\"number\");\n  fn();\n  var final = prop === void 0 || prop === null ? subject() : subject[prop];\n  var msgObj = prop === void 0 || prop === null ? initial : \".\" + prop;\n  flag2(this, \"deltaMsgObj\", msgObj);\n  flag2(this, \"initialDeltaValue\", initial);\n  flag2(this, \"finalDeltaValue\", final);\n  flag2(this, \"deltaBehavior\", \"decrease\");\n  flag2(this, \"realDelta\", initial - final);\n  this.assert(\n    final - initial < 0,\n    \"expected \" + msgObj + \" to decrease\",\n    \"expected \" + msgObj + \" to not decrease\"\n  );\n}\n__name(assertDecreases, \"assertDecreases\");\nAssertion.addMethod(\"decrease\", assertDecreases);\nAssertion.addMethod(\"decreases\", assertDecreases);\nfunction assertDelta(delta, msg) {\n  if (msg)\n    flag2(this, \"message\", msg);\n  var msgObj = flag2(this, \"deltaMsgObj\");\n  var initial = flag2(this, \"initialDeltaValue\");\n  var final = flag2(this, \"finalDeltaValue\");\n  var behavior = flag2(this, \"deltaBehavior\");\n  var realDelta = flag2(this, \"realDelta\");\n  var expression;\n  if (behavior === \"change\") {\n    expression = Math.abs(final - initial) === Math.abs(delta);\n  } else {\n    expression = realDelta === Math.abs(delta);\n  }\n  this.assert(\n    expression,\n    \"expected \" + msgObj + \" to \" + behavior + \" by \" + delta,\n    \"expected \" + msgObj + \" to not \" + behavior + \" by \" + delta\n  );\n}\n__name(assertDelta, \"assertDelta\");\nAssertion.addMethod(\"by\", assertDelta);\nAssertion.addProperty(\"extensible\", function() {\n  var obj = flag2(this, \"object\");\n  var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n  this.assert(\n    isExtensible,\n    \"expected #{this} to be extensible\",\n    \"expected #{this} to not be extensible\"\n  );\n});\nAssertion.addProperty(\"sealed\", function() {\n  var obj = flag2(this, \"object\");\n  var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n  this.assert(\n    isSealed,\n    \"expected #{this} to be sealed\",\n    \"expected #{this} to not be sealed\"\n  );\n});\nAssertion.addProperty(\"frozen\", function() {\n  var obj = flag2(this, \"object\");\n  var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n  this.assert(\n    isFrozen,\n    \"expected #{this} to be frozen\",\n    \"expected #{this} to not be frozen\"\n  );\n});\nAssertion.addProperty(\"finite\", function(msg) {\n  var obj = flag2(this, \"object\");\n  this.assert(\n    typeof obj === \"number\" && isFinite(obj),\n    \"expected #{this} to be a finite number\",\n    \"expected #{this} to not be a finite number\"\n  );\n});\n\n// lib/chai/interface/expect.js\nfunction expect(val, message) {\n  return new Assertion(val, message);\n}\n__name(expect, \"expect\");\nexpect.fail = function(actual, expected, message, operator) {\n  if (arguments.length < 2) {\n    message = actual;\n    actual = void 0;\n  }\n  message = message || \"expect.fail()\";\n  throw new AssertionError(message, {\n    actual,\n    expected,\n    operator\n  }, expect.fail);\n};\n\n// lib/chai/interface/should.js\nvar should_exports = {};\n__export(should_exports, {\n  Should: () => Should,\n  should: () => should\n});\nfunction loadShould() {\n  function shouldGetter() {\n    if (this instanceof String || this instanceof Number || this instanceof Boolean || typeof Symbol === \"function\" && this instanceof Symbol || typeof BigInt === \"function\" && this instanceof BigInt) {\n      return new Assertion(this.valueOf(), null, shouldGetter);\n    }\n    return new Assertion(this, null, shouldGetter);\n  }\n  __name(shouldGetter, \"shouldGetter\");\n  function shouldSetter(value) {\n    Object.defineProperty(this, \"should\", {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  }\n  __name(shouldSetter, \"shouldSetter\");\n  Object.defineProperty(Object.prototype, \"should\", {\n    set: shouldSetter,\n    get: shouldGetter,\n    configurable: true\n  });\n  var should2 = {};\n  should2.fail = function(actual, expected, message, operator) {\n    if (arguments.length < 2) {\n      message = actual;\n      actual = void 0;\n    }\n    message = message || \"should.fail()\";\n    throw new AssertionError(message, {\n      actual,\n      expected,\n      operator\n    }, should2.fail);\n  };\n  should2.equal = function(actual, expected, message) {\n    new Assertion(actual, message).to.equal(expected);\n  };\n  should2.Throw = function(fn, errt, errs, msg) {\n    new Assertion(fn, msg).to.Throw(errt, errs);\n  };\n  should2.exist = function(val, msg) {\n    new Assertion(val, msg).to.exist;\n  };\n  should2.not = {};\n  should2.not.equal = function(actual, expected, msg) {\n    new Assertion(actual, msg).to.not.equal(expected);\n  };\n  should2.not.Throw = function(fn, errt, errs, msg) {\n    new Assertion(fn, msg).to.not.Throw(errt, errs);\n  };\n  should2.not.exist = function(val, msg) {\n    new Assertion(val, msg).to.not.exist;\n  };\n  should2[\"throw\"] = should2[\"Throw\"];\n  should2.not[\"throw\"] = should2.not[\"Throw\"];\n  return should2;\n}\n__name(loadShould, \"loadShould\");\nvar should = loadShould;\nvar Should = loadShould;\n\n// lib/chai/interface/assert.js\nfunction assert(express, errmsg) {\n  var test2 = new Assertion(null, null, assert, true);\n  test2.assert(\n    express,\n    errmsg,\n    \"[ negation message unavailable ]\"\n  );\n}\n__name(assert, \"assert\");\nassert.fail = function(actual, expected, message, operator) {\n  if (arguments.length < 2) {\n    message = actual;\n    actual = void 0;\n  }\n  message = message || \"assert.fail()\";\n  throw new AssertionError(message, {\n    actual,\n    expected,\n    operator\n  }, assert.fail);\n};\nassert.isOk = function(val, msg) {\n  new Assertion(val, msg, assert.isOk, true).is.ok;\n};\nassert.isNotOk = function(val, msg) {\n  new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n};\nassert.equal = function(act, exp, msg) {\n  var test2 = new Assertion(act, msg, assert.equal, true);\n  test2.assert(\n    exp == flag(test2, \"object\"),\n    \"expected #{this} to equal #{exp}\",\n    \"expected #{this} to not equal #{act}\",\n    exp,\n    act,\n    true\n  );\n};\nassert.notEqual = function(act, exp, msg) {\n  var test2 = new Assertion(act, msg, assert.notEqual, true);\n  test2.assert(\n    exp != flag(test2, \"object\"),\n    \"expected #{this} to not equal #{exp}\",\n    \"expected #{this} to equal #{act}\",\n    exp,\n    act,\n    true\n  );\n};\nassert.strictEqual = function(act, exp, msg) {\n  new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n};\nassert.notStrictEqual = function(act, exp, msg) {\n  new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n};\nassert.deepEqual = assert.deepStrictEqual = function(act, exp, msg) {\n  new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n};\nassert.notDeepEqual = function(act, exp, msg) {\n  new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n};\nassert.isAbove = function(val, abv, msg) {\n  new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n};\nassert.isAtLeast = function(val, atlst, msg) {\n  new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n};\nassert.isBelow = function(val, blw, msg) {\n  new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n};\nassert.isAtMost = function(val, atmst, msg) {\n  new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n};\nassert.isTrue = function(val, msg) {\n  new Assertion(val, msg, assert.isTrue, true).is[\"true\"];\n};\nassert.isNotTrue = function(val, msg) {\n  new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n};\nassert.isFalse = function(val, msg) {\n  new Assertion(val, msg, assert.isFalse, true).is[\"false\"];\n};\nassert.isNotFalse = function(val, msg) {\n  new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n};\nassert.isNull = function(val, msg) {\n  new Assertion(val, msg, assert.isNull, true).to.equal(null);\n};\nassert.isNotNull = function(val, msg) {\n  new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n};\nassert.isNaN = function(val, msg) {\n  new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n};\nassert.isNotNaN = function(value, message) {\n  new Assertion(value, message, assert.isNotNaN, true).not.to.be.NaN;\n};\nassert.exists = function(val, msg) {\n  new Assertion(val, msg, assert.exists, true).to.exist;\n};\nassert.notExists = function(val, msg) {\n  new Assertion(val, msg, assert.notExists, true).to.not.exist;\n};\nassert.isUndefined = function(val, msg) {\n  new Assertion(val, msg, assert.isUndefined, true).to.equal(void 0);\n};\nassert.isDefined = function(val, msg) {\n  new Assertion(val, msg, assert.isDefined, true).to.not.equal(void 0);\n};\nassert.isCallable = function(value, message) {\n  new Assertion(value, message, assert.isCallable, true).is.callable;\n};\nassert.isNotCallable = function(value, message) {\n  new Assertion(value, message, assert.isNotCallable, true).is.not.callable;\n};\nassert.isObject = function(val, msg) {\n  new Assertion(val, msg, assert.isObject, true).to.be.a(\"object\");\n};\nassert.isNotObject = function(val, msg) {\n  new Assertion(val, msg, assert.isNotObject, true).to.not.be.a(\"object\");\n};\nassert.isArray = function(val, msg) {\n  new Assertion(val, msg, assert.isArray, true).to.be.an(\"array\");\n};\nassert.isNotArray = function(val, msg) {\n  new Assertion(val, msg, assert.isNotArray, true).to.not.be.an(\"array\");\n};\nassert.isString = function(val, msg) {\n  new Assertion(val, msg, assert.isString, true).to.be.a(\"string\");\n};\nassert.isNotString = function(val, msg) {\n  new Assertion(val, msg, assert.isNotString, true).to.not.be.a(\"string\");\n};\nassert.isNumber = function(val, msg) {\n  new Assertion(val, msg, assert.isNumber, true).to.be.a(\"number\");\n};\nassert.isNotNumber = function(val, msg) {\n  new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a(\"number\");\n};\nassert.isFinite = function(val, msg) {\n  new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n};\nassert.isBoolean = function(val, msg) {\n  new Assertion(val, msg, assert.isBoolean, true).to.be.a(\"boolean\");\n};\nassert.isNotBoolean = function(val, msg) {\n  new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a(\"boolean\");\n};\nassert.typeOf = function(val, type3, msg) {\n  new Assertion(val, msg, assert.typeOf, true).to.be.a(type3);\n};\nassert.notTypeOf = function(value, type3, message) {\n  new Assertion(value, message, assert.notTypeOf, true).to.not.be.a(type3);\n};\nassert.instanceOf = function(val, type3, msg) {\n  new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type3);\n};\nassert.notInstanceOf = function(val, type3, msg) {\n  new Assertion(val, msg, assert.notInstanceOf, true).to.not.be.instanceOf(type3);\n};\nassert.include = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.include, true).include(inc);\n};\nassert.notInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n};\nassert.deepInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n};\nassert.notDeepInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n};\nassert.nestedInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n};\nassert.notNestedInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.notNestedInclude, true).not.nested.include(inc);\n};\nassert.deepNestedInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.deepNestedInclude, true).deep.nested.include(inc);\n};\nassert.notDeepNestedInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.notDeepNestedInclude, true).not.deep.nested.include(inc);\n};\nassert.ownInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n};\nassert.notOwnInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n};\nassert.deepOwnInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.deepOwnInclude, true).deep.own.include(inc);\n};\nassert.notDeepOwnInclude = function(exp, inc, msg) {\n  new Assertion(exp, msg, assert.notDeepOwnInclude, true).not.deep.own.include(inc);\n};\nassert.match = function(exp, re, msg) {\n  new Assertion(exp, msg, assert.match, true).to.match(re);\n};\nassert.notMatch = function(exp, re, msg) {\n  new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n};\nassert.property = function(obj, prop, msg) {\n  new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n};\nassert.notProperty = function(obj, prop, msg) {\n  new Assertion(obj, msg, assert.notProperty, true).to.not.have.property(prop);\n};\nassert.propertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.propertyVal, true).to.have.property(prop, val);\n};\nassert.notPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.notPropertyVal, true).to.not.have.property(prop, val);\n};\nassert.deepPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.deepPropertyVal, true).to.have.deep.property(prop, val);\n};\nassert.notDeepPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.notDeepPropertyVal, true).to.not.have.deep.property(prop, val);\n};\nassert.ownProperty = function(obj, prop, msg) {\n  new Assertion(obj, msg, assert.ownProperty, true).to.have.own.property(prop);\n};\nassert.notOwnProperty = function(obj, prop, msg) {\n  new Assertion(obj, msg, assert.notOwnProperty, true).to.not.have.own.property(prop);\n};\nassert.ownPropertyVal = function(obj, prop, value, msg) {\n  new Assertion(obj, msg, assert.ownPropertyVal, true).to.have.own.property(prop, value);\n};\nassert.notOwnPropertyVal = function(obj, prop, value, msg) {\n  new Assertion(obj, msg, assert.notOwnPropertyVal, true).to.not.have.own.property(prop, value);\n};\nassert.deepOwnPropertyVal = function(obj, prop, value, msg) {\n  new Assertion(obj, msg, assert.deepOwnPropertyVal, true).to.have.deep.own.property(prop, value);\n};\nassert.notDeepOwnPropertyVal = function(obj, prop, value, msg) {\n  new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true).to.not.have.deep.own.property(prop, value);\n};\nassert.nestedProperty = function(obj, prop, msg) {\n  new Assertion(obj, msg, assert.nestedProperty, true).to.have.nested.property(prop);\n};\nassert.notNestedProperty = function(obj, prop, msg) {\n  new Assertion(obj, msg, assert.notNestedProperty, true).to.not.have.nested.property(prop);\n};\nassert.nestedPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.nestedPropertyVal, true).to.have.nested.property(prop, val);\n};\nassert.notNestedPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.notNestedPropertyVal, true).to.not.have.nested.property(prop, val);\n};\nassert.deepNestedPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.deepNestedPropertyVal, true).to.have.deep.nested.property(prop, val);\n};\nassert.notDeepNestedPropertyVal = function(obj, prop, val, msg) {\n  new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true).to.not.have.deep.nested.property(prop, val);\n};\nassert.lengthOf = function(exp, len, msg) {\n  new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n};\nassert.hasAnyKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n};\nassert.hasAllKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n};\nassert.containsAllKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.containsAllKeys, true).to.contain.all.keys(keys);\n};\nassert.doesNotHaveAnyKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true).to.not.have.any.keys(keys);\n};\nassert.doesNotHaveAllKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.doesNotHaveAllKeys, true).to.not.have.all.keys(keys);\n};\nassert.hasAnyDeepKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.hasAnyDeepKeys, true).to.have.any.deep.keys(keys);\n};\nassert.hasAllDeepKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.hasAllDeepKeys, true).to.have.all.deep.keys(keys);\n};\nassert.containsAllDeepKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.containsAllDeepKeys, true).to.contain.all.deep.keys(keys);\n};\nassert.doesNotHaveAnyDeepKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true).to.not.have.any.deep.keys(keys);\n};\nassert.doesNotHaveAllDeepKeys = function(obj, keys, msg) {\n  new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true).to.not.have.all.deep.keys(keys);\n};\nassert.throws = function(fn, errorLike, errMsgMatcher, msg) {\n  if (\"string\" === typeof errorLike || errorLike instanceof RegExp) {\n    errMsgMatcher = errorLike;\n    errorLike = null;\n  }\n  var assertErr = new Assertion(fn, msg, assert.throws, true).to.throw(errorLike, errMsgMatcher);\n  return flag(assertErr, \"object\");\n};\nassert.doesNotThrow = function(fn, errorLike, errMsgMatcher, message) {\n  if (\"string\" === typeof errorLike || errorLike instanceof RegExp) {\n    errMsgMatcher = errorLike;\n    errorLike = null;\n  }\n  new Assertion(fn, message, assert.doesNotThrow, true).to.not.throw(errorLike, errMsgMatcher);\n};\nassert.operator = function(val, operator, val2, msg) {\n  var ok;\n  switch (operator) {\n    case \"==\":\n      ok = val == val2;\n      break;\n    case \"===\":\n      ok = val === val2;\n      break;\n    case \">\":\n      ok = val > val2;\n      break;\n    case \">=\":\n      ok = val >= val2;\n      break;\n    case \"<\":\n      ok = val < val2;\n      break;\n    case \"<=\":\n      ok = val <= val2;\n      break;\n    case \"!=\":\n      ok = val != val2;\n      break;\n    case \"!==\":\n      ok = val !== val2;\n      break;\n    default:\n      msg = msg ? msg + \": \" : msg;\n      throw new AssertionError(\n        msg + 'Invalid operator \"' + operator + '\"',\n        void 0,\n        assert.operator\n      );\n  }\n  var test2 = new Assertion(ok, msg, assert.operator, true);\n  test2.assert(\n    true === flag(test2, \"object\"),\n    \"expected \" + inspect2(val) + \" to be \" + operator + \" \" + inspect2(val2),\n    \"expected \" + inspect2(val) + \" to not be \" + operator + \" \" + inspect2(val2)\n  );\n};\nassert.closeTo = function(act, exp, delta, msg) {\n  new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n};\nassert.approximately = function(act, exp, delta, msg) {\n  new Assertion(act, msg, assert.approximately, true).to.be.approximately(exp, delta);\n};\nassert.sameMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.sameMembers, true).to.have.same.members(set2);\n};\nassert.notSameMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.notSameMembers, true).to.not.have.same.members(set2);\n};\nassert.sameDeepMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.sameDeepMembers, true).to.have.same.deep.members(set2);\n};\nassert.notSameDeepMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.notSameDeepMembers, true).to.not.have.same.deep.members(set2);\n};\nassert.sameOrderedMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.sameOrderedMembers, true).to.have.same.ordered.members(set2);\n};\nassert.notSameOrderedMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.notSameOrderedMembers, true).to.not.have.same.ordered.members(set2);\n};\nassert.sameDeepOrderedMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.sameDeepOrderedMembers, true).to.have.same.deep.ordered.members(set2);\n};\nassert.notSameDeepOrderedMembers = function(set1, set2, msg) {\n  new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true).to.not.have.same.deep.ordered.members(set2);\n};\nassert.includeMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.includeMembers, true).to.include.members(subset);\n};\nassert.notIncludeMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.notIncludeMembers, true).to.not.include.members(subset);\n};\nassert.includeDeepMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.includeDeepMembers, true).to.include.deep.members(subset);\n};\nassert.notIncludeDeepMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.notIncludeDeepMembers, true).to.not.include.deep.members(subset);\n};\nassert.includeOrderedMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.includeOrderedMembers, true).to.include.ordered.members(subset);\n};\nassert.notIncludeOrderedMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.notIncludeOrderedMembers, true).to.not.include.ordered.members(subset);\n};\nassert.includeDeepOrderedMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.includeDeepOrderedMembers, true).to.include.deep.ordered.members(subset);\n};\nassert.notIncludeDeepOrderedMembers = function(superset, subset, msg) {\n  new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true).to.not.include.deep.ordered.members(subset);\n};\nassert.oneOf = function(inList, list, msg) {\n  new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n};\nassert.isIterable = function(obj, msg) {\n  if (obj == void 0 || !obj[Symbol.iterator]) {\n    msg = msg ? `${msg} expected ${inspect2(obj)} to be an iterable` : `expected ${inspect2(obj)} to be an iterable`;\n    throw new AssertionError(\n      msg,\n      void 0,\n      assert.isIterable\n    );\n  }\n};\nassert.changes = function(fn, obj, prop, msg) {\n  if (arguments.length === 3 && typeof obj === \"function\") {\n    msg = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n};\nassert.changesBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.changesBy, true).to.change(obj, prop).by(delta);\n};\nassert.doesNotChange = function(fn, obj, prop, msg) {\n  if (arguments.length === 3 && typeof obj === \"function\") {\n    msg = prop;\n    prop = null;\n  }\n  return new Assertion(fn, msg, assert.doesNotChange, true).to.not.change(obj, prop);\n};\nassert.changesButNotBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.changesButNotBy, true).to.change(obj, prop).but.not.by(delta);\n};\nassert.increases = function(fn, obj, prop, msg) {\n  if (arguments.length === 3 && typeof obj === \"function\") {\n    msg = prop;\n    prop = null;\n  }\n  return new Assertion(fn, msg, assert.increases, true).to.increase(obj, prop);\n};\nassert.increasesBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.increasesBy, true).to.increase(obj, prop).by(delta);\n};\nassert.doesNotIncrease = function(fn, obj, prop, msg) {\n  if (arguments.length === 3 && typeof obj === \"function\") {\n    msg = prop;\n    prop = null;\n  }\n  return new Assertion(fn, msg, assert.doesNotIncrease, true).to.not.increase(obj, prop);\n};\nassert.increasesButNotBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.increasesButNotBy, true).to.increase(obj, prop).but.not.by(delta);\n};\nassert.decreases = function(fn, obj, prop, msg) {\n  if (arguments.length === 3 && typeof obj === \"function\") {\n    msg = prop;\n    prop = null;\n  }\n  return new Assertion(fn, msg, assert.decreases, true).to.decrease(obj, prop);\n};\nassert.decreasesBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.decreasesBy, true).to.decrease(obj, prop).by(delta);\n};\nassert.doesNotDecrease = function(fn, obj, prop, msg) {\n  if (arguments.length === 3 && typeof obj === \"function\") {\n    msg = prop;\n    prop = null;\n  }\n  return new Assertion(fn, msg, assert.doesNotDecrease, true).to.not.decrease(obj, prop);\n};\nassert.doesNotDecreaseBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  return new Assertion(fn, msg, assert.doesNotDecreaseBy, true).to.not.decrease(obj, prop).by(delta);\n};\nassert.decreasesButNotBy = function(fn, obj, prop, delta, msg) {\n  if (arguments.length === 4 && typeof obj === \"function\") {\n    var tmpMsg = delta;\n    delta = prop;\n    msg = tmpMsg;\n  } else if (arguments.length === 3) {\n    delta = prop;\n    prop = null;\n  }\n  new Assertion(fn, msg, assert.decreasesButNotBy, true).to.decrease(obj, prop).but.not.by(delta);\n};\nassert.ifError = function(val) {\n  if (val) {\n    throw val;\n  }\n};\nassert.isExtensible = function(obj, msg) {\n  new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n};\nassert.isNotExtensible = function(obj, msg) {\n  new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n};\nassert.isSealed = function(obj, msg) {\n  new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n};\nassert.isNotSealed = function(obj, msg) {\n  new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n};\nassert.isFrozen = function(obj, msg) {\n  new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n};\nassert.isNotFrozen = function(obj, msg) {\n  new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n};\nassert.isEmpty = function(val, msg) {\n  new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n};\nassert.isNotEmpty = function(val, msg) {\n  new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n};\n(/* @__PURE__ */ __name(function alias(name, as) {\n  assert[as] = assert[name];\n  return alias;\n}, \"alias\"))(\"isOk\", \"ok\")(\"isNotOk\", \"notOk\")(\"throws\", \"throw\")(\"throws\", \"Throw\")(\"isExtensible\", \"extensible\")(\"isNotExtensible\", \"notExtensible\")(\"isSealed\", \"sealed\")(\"isNotSealed\", \"notSealed\")(\"isFrozen\", \"frozen\")(\"isNotFrozen\", \"notFrozen\")(\"isEmpty\", \"empty\")(\"isNotEmpty\", \"notEmpty\")(\"isCallable\", \"isFunction\")(\"isNotCallable\", \"isNotFunction\");\n\n// lib/chai.js\nvar used = [];\nfunction use(fn) {\n  const exports = {\n    AssertionError,\n    util: utils_exports,\n    config,\n    expect,\n    assert,\n    Assertion,\n    ...should_exports\n  };\n  if (!~used.indexOf(fn)) {\n    fn(exports, utils_exports);\n    used.push(fn);\n  }\n  return exports;\n}\n__name(use, \"use\");\n\n/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n/*! Bundled license information:\n\ndeep-eql/index.js:\n  (*!\n   * deep-eql\n   * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n   * MIT Licensed\n   *)\n  (*!\n   * Check to see if the MemoizeMap has recorded a result of the two operands\n   *\n   * @param {Mixed} leftHandOperand\n   * @param {Mixed} rightHandOperand\n   * @param {MemoizeMap} memoizeMap\n   * @returns {Boolean|null} result\n  *)\n  (*!\n   * Set the result of the equality into the MemoizeMap\n   *\n   * @param {Mixed} leftHandOperand\n   * @param {Mixed} rightHandOperand\n   * @param {MemoizeMap} memoizeMap\n   * @param {Boolean} result\n  *)\n  (*!\n   * Primary Export\n   *)\n  (*!\n   * The main logic of the `deepEqual` function.\n   *\n   * @param {Mixed} leftHandOperand\n   * @param {Mixed} rightHandOperand\n   * @param {Object} [options] (optional) Additional options\n   * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n   * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n      complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n      references to blow the stack.\n   * @return {Boolean} equal match\n  *)\n  (*!\n   * Compare two Regular Expressions for equality.\n   *\n   * @param {RegExp} leftHandOperand\n   * @param {RegExp} rightHandOperand\n   * @return {Boolean} result\n   *)\n  (*!\n   * Compare two Sets/Maps for equality. Faster than other equality functions.\n   *\n   * @param {Set} leftHandOperand\n   * @param {Set} rightHandOperand\n   * @param {Object} [options] (Optional)\n   * @return {Boolean} result\n   *)\n  (*!\n   * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n   *\n   * @param {Iterable} leftHandOperand\n   * @param {Iterable} rightHandOperand\n   * @param {Object} [options] (Optional)\n   * @return {Boolean} result\n   *)\n  (*!\n   * Simple equality for generator objects such as those returned by generator functions.\n   *\n   * @param {Iterable} leftHandOperand\n   * @param {Iterable} rightHandOperand\n   * @param {Object} [options] (Optional)\n   * @return {Boolean} result\n   *)\n  (*!\n   * Determine if the given object has an @@iterator function.\n   *\n   * @param {Object} target\n   * @return {Boolean} `true` if the object has an @@iterator function.\n   *)\n  (*!\n   * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n   * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n   *\n   * @param {Object} target\n   * @returns {Array} an array of entries from the @@iterator function\n   *)\n  (*!\n   * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n   *\n   * @param {Generator} target\n   * @returns {Array} an array of entries from the Generator.\n   *)\n  (*!\n   * Gets all own and inherited enumerable keys from a target.\n   *\n   * @param {Object} target\n   * @returns {Array} an array of own and inherited enumerable keys from the target.\n   *)\n  (*!\n   * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n   * each key. If any value of the given key is not equal, the function will return false (early).\n   *\n   * @param {Mixed} leftHandOperand\n   * @param {Mixed} rightHandOperand\n   * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n   * @param {Object} [options] (Optional)\n   * @return {Boolean} result\n   *)\n  (*!\n   * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n   * for each enumerable key in the object.\n   *\n   * @param {Mixed} leftHandOperand\n   * @param {Mixed} rightHandOperand\n   * @param {Object} [options] (Optional)\n   * @return {Boolean} result\n   *)\n  (*!\n   * Returns true if the argument is a primitive.\n   *\n   * This intentionally returns true for all objects that can be compared by reference,\n   * including functions and symbols.\n   *\n   * @param {Mixed} value\n   * @return {Boolean} result\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/chai/chai.js\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/accessible-description.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/accessible-description.mjs ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeAccessibleDescription: function() { return /* binding */ computeAccessibleDescription; }\n/* harmony export */ });\n/* harmony import */ var _accessible_name_and_description_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessible-name-and-description.mjs */ \"./node_modules/dom-accessibility-api/dist/accessible-name-and-description.mjs\");\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.mjs */ \"./node_modules/dom-accessibility-api/dist/util.mjs\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n/**\n * @param root\n * @param options\n * @returns\n */\nfunction computeAccessibleDescription(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var description = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_1__.queryIdRefs)(root, \"aria-describedby\").map(function (element) {\n    return (0,_accessible_name_and_description_mjs__WEBPACK_IMPORTED_MODULE_0__.computeTextAlternative)(element, _objectSpread(_objectSpread({}, options), {}, {\n      compute: \"description\"\n    }));\n  }).join(\" \");\n\n  // TODO: Technically we need to make sure that node wasn't used for the accessible name\n  //       This causes `description_1.0_combobox-focusable-manual` to fail\n  //\n  // https://www.w3.org/TR/html-aam-1.0/#accessible-name-and-description-computation\n  // says for so many elements to use the `title` that we assume all elements are considered\n  if (description === \"\") {\n    var title = root.getAttribute(\"title\");\n    description = title === null ? \"\" : title;\n  }\n  return description;\n}\n//# sourceMappingURL=accessible-description.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvYWNjZXNzaWJsZS1kZXNjcmlwdGlvbi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0JBQXdCLDJCQUEyQixzR0FBc0cscUJBQXFCLG1CQUFtQiw4SEFBOEg7QUFDL1QsMkNBQTJDLGdDQUFnQyxvQ0FBb0Msb0RBQW9ELDZEQUE2RCxpRUFBaUUsc0NBQXNDO0FBQ3ZVLGlDQUFpQyxnQkFBZ0Isc0JBQXNCLE9BQU8sdURBQXVELDZEQUE2RCw0Q0FBNEMsb0tBQW9LLG1GQUFtRixLQUFLO0FBQzFlLDRDQUE0QywyQkFBMkIsa0JBQWtCLGtDQUFrQyxvRUFBb0UsS0FBSyxPQUFPLG9CQUFvQjtBQUMvTiwrQkFBK0IsdUNBQXVDO0FBQ3RFLHFDQUFxQyxpRUFBaUUsc0NBQXNDLDBCQUEwQiwrQ0FBK0MsMkNBQTJDLHVFQUF1RTtBQUN4UDtBQUN0Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0Isc0RBQVc7QUFDL0IsV0FBVyw0RkFBc0Isd0NBQXdDLGNBQWM7QUFDdkY7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RvbS1hY2Nlc3NpYmlsaXR5LWFwaS9kaXN0L2FjY2Vzc2libGUtZGVzY3JpcHRpb24ubWpzPzQ1MDUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH0sIF90eXBlb2Yob2JqKTsgfVxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7IHZhciBrZXkgPSBfdG9QcmltaXRpdmUoYXJnLCBcInN0cmluZ1wiKTsgcmV0dXJuIF90eXBlb2Yoa2V5KSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUoaW5wdXQsIGhpbnQpIHsgaWYgKF90eXBlb2YoaW5wdXQpICE9PSBcIm9iamVjdFwiIHx8IGlucHV0ID09PSBudWxsKSByZXR1cm4gaW5wdXQ7IHZhciBwcmltID0gaW5wdXRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHByaW0gIT09IHVuZGVmaW5lZCkgeyB2YXIgcmVzID0gcHJpbS5jYWxsKGlucHV0LCBoaW50IHx8IFwiZGVmYXVsdFwiKTsgaWYgKF90eXBlb2YocmVzKSAhPT0gXCJvYmplY3RcIikgcmV0dXJuIHJlczsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoaGludCA9PT0gXCJzdHJpbmdcIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpOyB9XG5pbXBvcnQgeyBjb21wdXRlVGV4dEFsdGVybmF0aXZlIH0gZnJvbSBcIi4vYWNjZXNzaWJsZS1uYW1lLWFuZC1kZXNjcmlwdGlvbi5tanNcIjtcbmltcG9ydCB7IHF1ZXJ5SWRSZWZzIH0gZnJvbSBcIi4vdXRpbC5tanNcIjtcblxuLyoqXG4gKiBAcGFyYW0gcm9vdFxuICogQHBhcmFtIG9wdGlvbnNcbiAqIEByZXR1cm5zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlQWNjZXNzaWJsZURlc2NyaXB0aW9uKHJvb3QpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICB2YXIgZGVzY3JpcHRpb24gPSBxdWVyeUlkUmVmcyhyb290LCBcImFyaWEtZGVzY3JpYmVkYnlcIikubWFwKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgcmV0dXJuIGNvbXB1dGVUZXh0QWx0ZXJuYXRpdmUoZWxlbWVudCwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zKSwge30sIHtcbiAgICAgIGNvbXB1dGU6IFwiZGVzY3JpcHRpb25cIlxuICAgIH0pKTtcbiAgfSkuam9pbihcIiBcIik7XG5cbiAgLy8gVE9ETzogVGVjaG5pY2FsbHkgd2UgbmVlZCB0byBtYWtlIHN1cmUgdGhhdCBub2RlIHdhc24ndCB1c2VkIGZvciB0aGUgYWNjZXNzaWJsZSBuYW1lXG4gIC8vICAgICAgIFRoaXMgY2F1c2VzIGBkZXNjcmlwdGlvbl8xLjBfY29tYm9ib3gtZm9jdXNhYmxlLW1hbnVhbGAgdG8gZmFpbFxuICAvL1xuICAvLyBodHRwczovL3d3dy53My5vcmcvVFIvaHRtbC1hYW0tMS4wLyNhY2Nlc3NpYmxlLW5hbWUtYW5kLWRlc2NyaXB0aW9uLWNvbXB1dGF0aW9uXG4gIC8vIHNheXMgZm9yIHNvIG1hbnkgZWxlbWVudHMgdG8gdXNlIHRoZSBgdGl0bGVgIHRoYXQgd2UgYXNzdW1lIGFsbCBlbGVtZW50cyBhcmUgY29uc2lkZXJlZFxuICBpZiAoZGVzY3JpcHRpb24gPT09IFwiXCIpIHtcbiAgICB2YXIgdGl0bGUgPSByb290LmdldEF0dHJpYnV0ZShcInRpdGxlXCIpO1xuICAgIGRlc2NyaXB0aW9uID0gdGl0bGUgPT09IG51bGwgPyBcIlwiIDogdGl0bGU7XG4gIH1cbiAgcmV0dXJuIGRlc2NyaXB0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjZXNzaWJsZS1kZXNjcmlwdGlvbi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/accessible-description.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/accessible-name-and-description.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/accessible-name-and-description.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeTextAlternative: function() { return /* binding */ computeTextAlternative; }\n/* harmony export */ });\n/* harmony import */ var _polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfills/array.from.mjs */ \"./node_modules/dom-accessibility-api/dist/polyfills/array.from.mjs\");\n/* harmony import */ var _polyfills_SetLike_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polyfills/SetLike.mjs */ \"./node_modules/dom-accessibility-api/dist/polyfills/SetLike.mjs\");\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.mjs */ \"./node_modules/dom-accessibility-api/dist/util.mjs\");\n/**\n * implements https://w3c.github.io/accname/\n */\n\n\n\n\n/**\n *  A string of characters where all carriage returns, newlines, tabs, and form-feeds are replaced with a single space, and multiple spaces are reduced to a single space. The string contains only character data; it does not contain any markup.\n */\n\n/**\n *\n * @param {string} string -\n * @returns {FlatString} -\n */\nfunction asFlatString(s) {\n  return s.trim().replace(/\\s\\s+/g, \" \");\n}\n\n/**\n *\n * @param node -\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n * @returns {boolean} -\n */\nfunction isHidden(node, getComputedStyleImplementation) {\n  if (!(0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(node)) {\n    return false;\n  }\n  if (node.hasAttribute(\"hidden\") || node.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n  var style = getComputedStyleImplementation(node);\n  return style.getPropertyValue(\"display\") === \"none\" || style.getPropertyValue(\"visibility\") === \"hidden\";\n}\n\n/**\n * @param {Node} node -\n * @returns {boolean} - As defined in step 2E of https://w3c.github.io/accname/#mapping_additional_nd_te\n */\nfunction isControl(node) {\n  return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(node, [\"button\", \"combobox\", \"listbox\", \"textbox\"]) || hasAbstractRole(node, \"range\");\n}\nfunction hasAbstractRole(node, role) {\n  if (!(0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(node)) {\n    return false;\n  }\n  switch (role) {\n    case \"range\":\n      return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(node, [\"meter\", \"progressbar\", \"scrollbar\", \"slider\", \"spinbutton\"]);\n    default:\n      throw new TypeError(\"No knowledge about abstract role '\".concat(role, \"'. This is likely a bug :(\"));\n  }\n}\n\n/**\n * element.querySelectorAll but also considers owned tree\n * @param element\n * @param selectors\n */\nfunction querySelectorAllSubtree(element, selectors) {\n  var elements = (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element.querySelectorAll(selectors));\n  (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.queryIdRefs)(element, \"aria-owns\").forEach(function (root) {\n    // babel transpiles this assuming an iterator\n    elements.push.apply(elements, (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(root.querySelectorAll(selectors)));\n  });\n  return elements;\n}\nfunction querySelectedOptions(listbox) {\n  if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLSelectElement)(listbox)) {\n    // IE11 polyfill\n    return listbox.selectedOptions || querySelectorAllSubtree(listbox, \"[selected]\");\n  }\n  return querySelectorAllSubtree(listbox, '[aria-selected=\"true\"]');\n}\nfunction isMarkedPresentational(node) {\n  return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(node, [\"none\", \"presentation\"]);\n}\n\n/**\n * Elements specifically listed in html-aam\n *\n * We don't need this for `label` or `legend` elements.\n * Their implicit roles already allow \"naming from content\".\n *\n * sources:\n *\n * - https://w3c.github.io/html-aam/#table-element\n */\nfunction isNativeHostLanguageTextAlternativeElement(node) {\n  return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLTableCaptionElement)(node);\n}\n\n/**\n * https://w3c.github.io/aria/#namefromcontent\n */\nfunction allowsNameFromContent(node) {\n  return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(node, [\"button\", \"cell\", \"checkbox\", \"columnheader\", \"gridcell\", \"heading\", \"label\", \"legend\", \"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"option\", \"radio\", \"row\", \"rowheader\", \"switch\", \"tab\", \"tooltip\", \"treeitem\"]);\n}\n\n/**\n * TODO https://github.com/eps1lon/dom-accessibility-api/issues/100\n */\nfunction isDescendantOfNativeHostLanguageTextAlternativeElement(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars -- not implemented yet\nnode) {\n  return false;\n}\nfunction getValueOfTextbox(element) {\n  if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLInputElement)(element) || (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLTextAreaElement)(element)) {\n    return element.value;\n  }\n  // https://github.com/eps1lon/dom-accessibility-api/issues/4\n  return element.textContent || \"\";\n}\nfunction getTextualContent(declaration) {\n  var content = declaration.getPropertyValue(\"content\");\n  if (/^[\"'].*[\"']$/.test(content)) {\n    return content.slice(1, -1);\n  }\n  return \"\";\n}\n\n/**\n * https://html.spec.whatwg.org/multipage/forms.html#category-label\n * TODO: form-associated custom elements\n * @param element\n */\nfunction isLabelableElement(element) {\n  var localName = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.getLocalName)(element);\n  return localName === \"button\" || localName === \"input\" && element.getAttribute(\"type\") !== \"hidden\" || localName === \"meter\" || localName === \"output\" || localName === \"progress\" || localName === \"select\" || localName === \"textarea\";\n}\n\n/**\n * > [...], then the first such descendant in tree order is the label element's labeled control.\n * -- https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param element\n */\nfunction findLabelableElement(element) {\n  if (isLabelableElement(element)) {\n    return element;\n  }\n  var labelableElement = null;\n  element.childNodes.forEach(function (childNode) {\n    if (labelableElement === null && (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(childNode)) {\n      var descendantLabelableElement = findLabelableElement(childNode);\n      if (descendantLabelableElement !== null) {\n        labelableElement = descendantLabelableElement;\n      }\n    }\n  });\n  return labelableElement;\n}\n\n/**\n * Polyfill of HTMLLabelElement.control\n * https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param label\n */\nfunction getControlOfLabel(label) {\n  if (label.control !== undefined) {\n    return label.control;\n  }\n  var htmlFor = label.getAttribute(\"for\");\n  if (htmlFor !== null) {\n    return label.ownerDocument.getElementById(htmlFor);\n  }\n  return findLabelableElement(label);\n}\n\n/**\n * Polyfill of HTMLInputElement.labels\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels\n * @param element\n */\nfunction getLabels(element) {\n  var labelsProperty = element.labels;\n  if (labelsProperty === null) {\n    return labelsProperty;\n  }\n  if (labelsProperty !== undefined) {\n    return (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(labelsProperty);\n  }\n\n  // polyfill\n  if (!isLabelableElement(element)) {\n    return null;\n  }\n  var document = element.ownerDocument;\n  return (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(document.querySelectorAll(\"label\")).filter(function (label) {\n    return getControlOfLabel(label) === element;\n  });\n}\n\n/**\n * Gets the contents of a slot used for computing the accname\n * @param slot\n */\nfunction getSlotContents(slot) {\n  // Computing the accessible name for elements containing slots is not\n  // currently defined in the spec. This implementation reflects the\n  // behavior of NVDA 2020.2/Firefox 81 and iOS VoiceOver/Safari 13.6.\n  var assignedNodes = slot.assignedNodes();\n  if (assignedNodes.length === 0) {\n    // if no nodes are assigned to the slot, it displays the default content\n    return (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(slot.childNodes);\n  }\n  return assignedNodes;\n}\n\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_te\n * @param root\n * @param options\n * @returns\n */\nfunction computeTextAlternative(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var consultedNodes = new _polyfills_SetLike_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  var window = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.safeWindow)(root);\n  var _options$compute = options.compute,\n    compute = _options$compute === void 0 ? \"name\" : _options$compute,\n    _options$computedStyl = options.computedStyleSupportsPseudoElements,\n    computedStyleSupportsPseudoElements = _options$computedStyl === void 0 ? options.getComputedStyle !== undefined : _options$computedStyl,\n    _options$getComputedS = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS === void 0 ? window.getComputedStyle.bind(window) : _options$getComputedS,\n    _options$hidden = options.hidden,\n    hidden = _options$hidden === void 0 ? false : _options$hidden;\n\n  // 2F.i\n  function computeMiscTextAlternative(node, context) {\n    var accumulatedText = \"\";\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(node) && computedStyleSupportsPseudoElements) {\n      var pseudoBefore = getComputedStyle(node, \"::before\");\n      var beforeContent = getTextualContent(pseudoBefore);\n      accumulatedText = \"\".concat(beforeContent, \" \").concat(accumulatedText);\n    }\n\n    // FIXME: Including aria-owns is not defined in the spec\n    // But it is required in the web-platform-test\n    var childNodes = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLSlotElement)(node) ? getSlotContents(node) : (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.childNodes).concat((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.queryIdRefs)(node, \"aria-owns\"));\n    childNodes.forEach(function (child) {\n      var result = computeTextAlternative(child, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false,\n        recursion: true\n      });\n      // TODO: Unclear why display affects delimiter\n      // see https://github.com/w3c/accname/issues/3\n      var display = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(child) ? getComputedStyle(child).getPropertyValue(\"display\") : \"inline\";\n      var separator = display !== \"inline\" ? \" \" : \"\";\n      // trailing separator for wpt tests\n      accumulatedText += \"\".concat(separator).concat(result).concat(separator);\n    });\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(node) && computedStyleSupportsPseudoElements) {\n      var pseudoAfter = getComputedStyle(node, \"::after\");\n      var afterContent = getTextualContent(pseudoAfter);\n      accumulatedText = \"\".concat(accumulatedText, \" \").concat(afterContent);\n    }\n    return accumulatedText.trim();\n  }\n\n  /**\n   *\n   * @param element\n   * @param attributeName\n   * @returns A string non-empty string or `null`\n   */\n  function useAttribute(element, attributeName) {\n    var attribute = element.getAttributeNode(attributeName);\n    if (attribute !== null && !consultedNodes.has(attribute) && attribute.value.trim() !== \"\") {\n      consultedNodes.add(attribute);\n      return attribute.value;\n    }\n    return null;\n  }\n  function computeTooltipAttributeValue(node) {\n    if (!(0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(node)) {\n      return null;\n    }\n    return useAttribute(node, \"title\");\n  }\n  function computeElementTextAlternative(node) {\n    if (!(0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(node)) {\n      return null;\n    }\n\n    // https://w3c.github.io/html-aam/#fieldset-and-legend-elements\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLFieldSetElement)(node)) {\n      consultedNodes.add(node);\n      var children = (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.childNodes);\n      for (var i = 0; i < children.length; i += 1) {\n        var child = children[i];\n        if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLLegendElement)(child)) {\n          return computeTextAlternative(child, {\n            isEmbeddedInLabel: false,\n            isReferenced: false,\n            recursion: false\n          });\n        }\n      }\n    } else if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLTableElement)(node)) {\n      // https://w3c.github.io/html-aam/#table-element\n      consultedNodes.add(node);\n      var _children = (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.childNodes);\n      for (var _i = 0; _i < _children.length; _i += 1) {\n        var _child = _children[_i];\n        if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLTableCaptionElement)(_child)) {\n          return computeTextAlternative(_child, {\n            isEmbeddedInLabel: false,\n            isReferenced: false,\n            recursion: false\n          });\n        }\n      }\n    } else if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isSVGSVGElement)(node)) {\n      // https://www.w3.org/TR/svg-aam-1.0/\n      consultedNodes.add(node);\n      var _children2 = (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.childNodes);\n      for (var _i2 = 0; _i2 < _children2.length; _i2 += 1) {\n        var _child2 = _children2[_i2];\n        if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isSVGTitleElement)(_child2)) {\n          return _child2.textContent;\n        }\n      }\n      return null;\n    } else if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.getLocalName)(node) === \"img\" || (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.getLocalName)(node) === \"area\") {\n      // https://w3c.github.io/html-aam/#area-element\n      // https://w3c.github.io/html-aam/#img-element\n      var nameFromAlt = useAttribute(node, \"alt\");\n      if (nameFromAlt !== null) {\n        return nameFromAlt;\n      }\n    } else if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLOptGroupElement)(node)) {\n      var nameFromLabel = useAttribute(node, \"label\");\n      if (nameFromLabel !== null) {\n        return nameFromLabel;\n      }\n    }\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLInputElement)(node) && (node.type === \"button\" || node.type === \"submit\" || node.type === \"reset\")) {\n      // https://w3c.github.io/html-aam/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-description-computation\n      var nameFromValue = useAttribute(node, \"value\");\n      if (nameFromValue !== null) {\n        return nameFromValue;\n      }\n\n      // TODO: l10n\n      if (node.type === \"submit\") {\n        return \"Submit\";\n      }\n      // TODO: l10n\n      if (node.type === \"reset\") {\n        return \"Reset\";\n      }\n    }\n    var labels = getLabels(node);\n    if (labels !== null && labels.length !== 0) {\n      consultedNodes.add(node);\n      return (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(labels).map(function (element) {\n        return computeTextAlternative(element, {\n          isEmbeddedInLabel: true,\n          isReferenced: false,\n          recursion: true\n        });\n      }).filter(function (label) {\n        return label.length > 0;\n      }).join(\" \");\n    }\n\n    // https://w3c.github.io/html-aam/#input-type-image-accessible-name-computation\n    // TODO: wpt test consider label elements but html-aam does not mention them\n    // We follow existing implementations over spec\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLInputElement)(node) && node.type === \"image\") {\n      var _nameFromAlt = useAttribute(node, \"alt\");\n      if (_nameFromAlt !== null) {\n        return _nameFromAlt;\n      }\n      var nameFromTitle = useAttribute(node, \"title\");\n      if (nameFromTitle !== null) {\n        return nameFromTitle;\n      }\n\n      // TODO: l10n\n      return \"Submit Query\";\n    }\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(node, [\"button\"])) {\n      // https://www.w3.org/TR/html-aam-1.0/#button-element\n      var nameFromSubTree = computeMiscTextAlternative(node, {\n        isEmbeddedInLabel: false,\n        isReferenced: false\n      });\n      if (nameFromSubTree !== \"\") {\n        return nameFromSubTree;\n      }\n    }\n    return null;\n  }\n  function computeTextAlternative(current, context) {\n    if (consultedNodes.has(current)) {\n      return \"\";\n    }\n\n    // 2A\n    if (!hidden && isHidden(current, getComputedStyle) && !context.isReferenced) {\n      consultedNodes.add(current);\n      return \"\";\n    }\n\n    // 2B\n    var labelAttributeNode = (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(current) ? current.getAttributeNode(\"aria-labelledby\") : null;\n    // TODO: Do we generally need to block query IdRefs of attributes we have already consulted?\n    var labelElements = labelAttributeNode !== null && !consultedNodes.has(labelAttributeNode) ? (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.queryIdRefs)(current, \"aria-labelledby\") : [];\n    if (compute === \"name\" && !context.isReferenced && labelElements.length > 0) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- Can't be null here otherwise labelElements would be empty\n      consultedNodes.add(labelAttributeNode);\n      return labelElements.map(function (element) {\n        // TODO: Chrome will consider repeated values i.e. use a node multiple times while we'll bail out in computeTextAlternative.\n        return computeTextAlternative(element, {\n          isEmbeddedInLabel: context.isEmbeddedInLabel,\n          isReferenced: true,\n          // this isn't recursion as specified, otherwise we would skip\n          // `aria-label` in\n          // <input id=\"myself\" aria-label=\"foo\" aria-labelledby=\"myself\"\n          recursion: false\n        });\n      }).join(\" \");\n    }\n\n    // 2C\n    // Changed from the spec in anticipation of https://github.com/w3c/accname/issues/64\n    // spec says we should only consider skipping if we have a non-empty label\n    var skipToStep2E = context.recursion && isControl(current) && compute === \"name\";\n    if (!skipToStep2E) {\n      var ariaLabel = ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(current) && current.getAttribute(\"aria-label\") || \"\").trim();\n      if (ariaLabel !== \"\" && compute === \"name\") {\n        consultedNodes.add(current);\n        return ariaLabel;\n      }\n\n      // 2D\n      if (!isMarkedPresentational(current)) {\n        var elementTextAlternative = computeElementTextAlternative(current);\n        if (elementTextAlternative !== null) {\n          consultedNodes.add(current);\n          return elementTextAlternative;\n        }\n      }\n    }\n\n    // special casing, cheating to make tests pass\n    // https://github.com/w3c/accname/issues/67\n    if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(current, [\"menu\"])) {\n      consultedNodes.add(current);\n      return \"\";\n    }\n\n    // 2E\n    if (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {\n      if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(current, [\"combobox\", \"listbox\"])) {\n        consultedNodes.add(current);\n        var selectedOptions = querySelectedOptions(current);\n        if (selectedOptions.length === 0) {\n          // defined per test `name_heading_combobox`\n          return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isHTMLInputElement)(current) ? current.value : \"\";\n        }\n        return (0,_polyfills_array_from_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(selectedOptions).map(function (selectedOption) {\n          return computeTextAlternative(selectedOption, {\n            isEmbeddedInLabel: context.isEmbeddedInLabel,\n            isReferenced: false,\n            recursion: true\n          });\n        }).join(\" \");\n      }\n      if (hasAbstractRole(current, \"range\")) {\n        consultedNodes.add(current);\n        if (current.hasAttribute(\"aria-valuetext\")) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n          return current.getAttribute(\"aria-valuetext\");\n        }\n        if (current.hasAttribute(\"aria-valuenow\")) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n          return current.getAttribute(\"aria-valuenow\");\n        }\n        // Otherwise, use the value as specified by a host language attribute.\n        return current.getAttribute(\"value\") || \"\";\n      }\n      if ((0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.hasAnyConcreteRoles)(current, [\"textbox\"])) {\n        consultedNodes.add(current);\n        return getValueOfTextbox(current);\n      }\n    }\n\n    // 2F: https://w3c.github.io/accname/#step2F\n    if (allowsNameFromContent(current) || (0,_util_mjs__WEBPACK_IMPORTED_MODULE_2__.isElement)(current) && context.isReferenced || isNativeHostLanguageTextAlternativeElement(current) || isDescendantOfNativeHostLanguageTextAlternativeElement(current)) {\n      var accumulatedText2F = computeMiscTextAlternative(current, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false\n      });\n      if (accumulatedText2F !== \"\") {\n        consultedNodes.add(current);\n        return accumulatedText2F;\n      }\n    }\n    if (current.nodeType === current.TEXT_NODE) {\n      consultedNodes.add(current);\n      return current.textContent || \"\";\n    }\n    if (context.recursion) {\n      consultedNodes.add(current);\n      return computeMiscTextAlternative(current, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false\n      });\n    }\n    var tooltipAttributeValue = computeTooltipAttributeValue(current);\n    if (tooltipAttributeValue !== null) {\n      consultedNodes.add(current);\n      return tooltipAttributeValue;\n    }\n\n    // TODO should this be reachable?\n    consultedNodes.add(current);\n    return \"\";\n  }\n  return asFlatString(computeTextAlternative(root, {\n    isEmbeddedInLabel: false,\n    // by spec computeAccessibleDescription starts with the referenced elements as roots\n    isReferenced: compute === \"description\",\n    recursion: false\n  }));\n}\n//# sourceMappingURL=accessible-name-and-description.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/accessible-name-and-description.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/accessible-name.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/accessible-name.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeAccessibleName: function() { return /* binding */ computeAccessibleName; }\n/* harmony export */ });\n/* harmony import */ var _accessible_name_and_description_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessible-name-and-description.mjs */ \"./node_modules/dom-accessibility-api/dist/accessible-name-and-description.mjs\");\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.mjs */ \"./node_modules/dom-accessibility-api/dist/util.mjs\");\n\n\n\n/**\n * https://w3c.github.io/aria/#namefromprohibited\n */\nfunction prohibitsNaming(node) {\n  return (0,_util_mjs__WEBPACK_IMPORTED_MODULE_1__.hasAnyConcreteRoles)(node, [\"caption\", \"code\", \"deletion\", \"emphasis\", \"generic\", \"insertion\", \"paragraph\", \"presentation\", \"strong\", \"subscript\", \"superscript\"]);\n}\n\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_name\n * @param root\n * @param options\n * @returns\n */\nfunction computeAccessibleName(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (prohibitsNaming(root)) {\n    return \"\";\n  }\n  return (0,_accessible_name_and_description_mjs__WEBPACK_IMPORTED_MODULE_0__.computeTextAlternative)(root, options);\n}\n//# sourceMappingURL=accessible-name.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvYWNjZXNzaWJsZS1uYW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0U7QUFDOUI7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw4REFBbUI7QUFDNUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsNEZBQXNCO0FBQy9CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RvbS1hY2Nlc3NpYmlsaXR5LWFwaS9kaXN0L2FjY2Vzc2libGUtbmFtZS5tanM/NmMyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wdXRlVGV4dEFsdGVybmF0aXZlIH0gZnJvbSBcIi4vYWNjZXNzaWJsZS1uYW1lLWFuZC1kZXNjcmlwdGlvbi5tanNcIjtcbmltcG9ydCB7IGhhc0FueUNvbmNyZXRlUm9sZXMgfSBmcm9tIFwiLi91dGlsLm1qc1wiO1xuXG4vKipcbiAqIGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9hcmlhLyNuYW1lZnJvbXByb2hpYml0ZWRcbiAqL1xuZnVuY3Rpb24gcHJvaGliaXRzTmFtaW5nKG5vZGUpIHtcbiAgcmV0dXJuIGhhc0FueUNvbmNyZXRlUm9sZXMobm9kZSwgW1wiY2FwdGlvblwiLCBcImNvZGVcIiwgXCJkZWxldGlvblwiLCBcImVtcGhhc2lzXCIsIFwiZ2VuZXJpY1wiLCBcImluc2VydGlvblwiLCBcInBhcmFncmFwaFwiLCBcInByZXNlbnRhdGlvblwiLCBcInN0cm9uZ1wiLCBcInN1YnNjcmlwdFwiLCBcInN1cGVyc2NyaXB0XCJdKTtcbn1cblxuLyoqXG4gKiBpbXBsZW1lbnRzIGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9hY2NuYW1lLyNtYXBwaW5nX2FkZGl0aW9uYWxfbmRfbmFtZVxuICogQHBhcmFtIHJvb3RcbiAqIEBwYXJhbSBvcHRpb25zXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHV0ZUFjY2Vzc2libGVOYW1lKHJvb3QpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICBpZiAocHJvaGliaXRzTmFtaW5nKHJvb3QpKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgcmV0dXJuIGNvbXB1dGVUZXh0QWx0ZXJuYXRpdmUocm9vdCwgb3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY2Nlc3NpYmxlLW5hbWUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/accessible-name.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/getRole.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/getRole.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getRole; },\n/* harmony export */   getLocalName: function() { return /* binding */ getLocalName; }\n/* harmony export */ });\n// https://w3c.github.io/html-aria/#document-conformance-requirements-for-use-of-aria-attributes-in-html\n\n/**\n * Safe Element.localName for all supported environments\n * @param element\n */\nfunction getLocalName(element) {\n  var _element$localName;\n  return (// eslint-disable-next-line no-restricted-properties -- actual guard for environments without localName\n    (_element$localName = element.localName) !== null && _element$localName !== void 0 ? _element$localName :\n    // eslint-disable-next-line no-restricted-properties -- required for the fallback\n    element.tagName.toLowerCase()\n  );\n}\nvar localNameToRoleMappings = {\n  article: \"article\",\n  aside: \"complementary\",\n  button: \"button\",\n  datalist: \"listbox\",\n  dd: \"definition\",\n  details: \"group\",\n  dialog: \"dialog\",\n  dt: \"term\",\n  fieldset: \"group\",\n  figure: \"figure\",\n  // WARNING: Only with an accessible name\n  form: \"form\",\n  footer: \"contentinfo\",\n  h1: \"heading\",\n  h2: \"heading\",\n  h3: \"heading\",\n  h4: \"heading\",\n  h5: \"heading\",\n  h6: \"heading\",\n  header: \"banner\",\n  hr: \"separator\",\n  html: \"document\",\n  legend: \"legend\",\n  li: \"listitem\",\n  math: \"math\",\n  main: \"main\",\n  menu: \"list\",\n  nav: \"navigation\",\n  ol: \"list\",\n  optgroup: \"group\",\n  // WARNING: Only in certain context\n  option: \"option\",\n  output: \"status\",\n  progress: \"progressbar\",\n  // WARNING: Only with an accessible name\n  section: \"region\",\n  summary: \"button\",\n  table: \"table\",\n  tbody: \"rowgroup\",\n  textarea: \"textbox\",\n  tfoot: \"rowgroup\",\n  // WARNING: Only in certain context\n  td: \"cell\",\n  th: \"columnheader\",\n  thead: \"rowgroup\",\n  tr: \"row\",\n  ul: \"list\"\n};\nvar prohibitedAttributes = {\n  caption: new Set([\"aria-label\", \"aria-labelledby\"]),\n  code: new Set([\"aria-label\", \"aria-labelledby\"]),\n  deletion: new Set([\"aria-label\", \"aria-labelledby\"]),\n  emphasis: new Set([\"aria-label\", \"aria-labelledby\"]),\n  generic: new Set([\"aria-label\", \"aria-labelledby\", \"aria-roledescription\"]),\n  insertion: new Set([\"aria-label\", \"aria-labelledby\"]),\n  paragraph: new Set([\"aria-label\", \"aria-labelledby\"]),\n  presentation: new Set([\"aria-label\", \"aria-labelledby\"]),\n  strong: new Set([\"aria-label\", \"aria-labelledby\"]),\n  subscript: new Set([\"aria-label\", \"aria-labelledby\"]),\n  superscript: new Set([\"aria-label\", \"aria-labelledby\"])\n};\n\n/**\n *\n * @param element\n * @param role The role used for this element. This is specified to control whether you want to use the implicit or explicit role.\n */\nfunction hasGlobalAriaAttributes(element, role) {\n  // https://rawgit.com/w3c/aria/stable/#global_states\n  // commented attributes are deprecated\n  return [\"aria-atomic\", \"aria-busy\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\",\n  // \"disabled\",\n  \"aria-dropeffect\",\n  // \"errormessage\",\n  \"aria-flowto\", \"aria-grabbed\",\n  // \"haspopup\",\n  \"aria-hidden\",\n  // \"invalid\",\n  \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-live\", \"aria-owns\", \"aria-relevant\", \"aria-roledescription\"].some(function (attributeName) {\n    var _prohibitedAttributes;\n    return element.hasAttribute(attributeName) && !((_prohibitedAttributes = prohibitedAttributes[role]) !== null && _prohibitedAttributes !== void 0 && _prohibitedAttributes.has(attributeName));\n  });\n}\nfunction ignorePresentationalRole(element, implicitRole) {\n  // https://rawgit.com/w3c/aria/stable/#conflict_resolution_presentation_none\n  return hasGlobalAriaAttributes(element, implicitRole);\n}\nfunction getRole(element) {\n  var explicitRole = getExplicitRole(element);\n  if (explicitRole === null || explicitRole === \"presentation\") {\n    var implicitRole = getImplicitRole(element);\n    if (explicitRole !== \"presentation\" || ignorePresentationalRole(element, implicitRole || \"\")) {\n      return implicitRole;\n    }\n  }\n  return explicitRole;\n}\nfunction getImplicitRole(element) {\n  var mappedByTag = localNameToRoleMappings[getLocalName(element)];\n  if (mappedByTag !== undefined) {\n    return mappedByTag;\n  }\n  switch (getLocalName(element)) {\n    case \"a\":\n    case \"area\":\n    case \"link\":\n      if (element.hasAttribute(\"href\")) {\n        return \"link\";\n      }\n      break;\n    case \"img\":\n      if (element.getAttribute(\"alt\") === \"\" && !ignorePresentationalRole(element, \"img\")) {\n        return \"presentation\";\n      }\n      return \"img\";\n    case \"input\":\n      {\n        var _ref = element,\n          type = _ref.type;\n        switch (type) {\n          case \"button\":\n          case \"image\":\n          case \"reset\":\n          case \"submit\":\n            return \"button\";\n          case \"checkbox\":\n          case \"radio\":\n            return type;\n          case \"range\":\n            return \"slider\";\n          case \"email\":\n          case \"tel\":\n          case \"text\":\n          case \"url\":\n            if (element.hasAttribute(\"list\")) {\n              return \"combobox\";\n            }\n            return \"textbox\";\n          case \"search\":\n            if (element.hasAttribute(\"list\")) {\n              return \"combobox\";\n            }\n            return \"searchbox\";\n          case \"number\":\n            return \"spinbutton\";\n          default:\n            return null;\n        }\n      }\n    case \"select\":\n      if (element.hasAttribute(\"multiple\") || element.size > 1) {\n        return \"listbox\";\n      }\n      return \"combobox\";\n  }\n  return null;\n}\nfunction getExplicitRole(element) {\n  var role = element.getAttribute(\"role\");\n  if (role !== null) {\n    var explicitRole = role.trim().split(\" \")[0];\n    // String.prototype.split(sep, limit) will always return an array with at least one member\n    // as long as limit is either undefined or > 0\n    if (explicitRole.length > 0) {\n      return explicitRole;\n    }\n  }\n  return null;\n}\n//# sourceMappingURL=getRole.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/getRole.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/index.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeAccessibleDescription: function() { return /* reexport safe */ _accessible_description_mjs__WEBPACK_IMPORTED_MODULE_0__.computeAccessibleDescription; },\n/* harmony export */   computeAccessibleName: function() { return /* reexport safe */ _accessible_name_mjs__WEBPACK_IMPORTED_MODULE_1__.computeAccessibleName; },\n/* harmony export */   getRole: function() { return /* reexport safe */ _getRole_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _accessible_description_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessible-description.mjs */ \"./node_modules/dom-accessibility-api/dist/accessible-description.mjs\");\n/* harmony import */ var _accessible_name_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./accessible-name.mjs */ \"./node_modules/dom-accessibility-api/dist/accessible-name.mjs\");\n/* harmony import */ var _getRole_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getRole.mjs */ \"./node_modules/dom-accessibility-api/dist/getRole.mjs\");\n/* harmony import */ var _is_inaccessible_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-inaccessible.mjs */ \"./node_modules/dom-accessibility-api/dist/is-inaccessible.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _is_inaccessible_mjs__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"computeAccessibleDescription\",\"computeAccessibleName\",\"getRole\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _is_inaccessible_mjs__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNEU7QUFDZDtBQUNYO0FBQ2I7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RvbS1hY2Nlc3NpYmlsaXR5LWFwaS9kaXN0L2luZGV4Lm1qcz9jNzliIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNvbXB1dGVBY2Nlc3NpYmxlRGVzY3JpcHRpb24gfSBmcm9tIFwiLi9hY2Nlc3NpYmxlLWRlc2NyaXB0aW9uLm1qc1wiO1xuZXhwb3J0IHsgY29tcHV0ZUFjY2Vzc2libGVOYW1lIH0gZnJvbSBcIi4vYWNjZXNzaWJsZS1uYW1lLm1qc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBnZXRSb2xlIH0gZnJvbSBcIi4vZ2V0Um9sZS5tanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzLWluYWNjZXNzaWJsZS5tanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/is-inaccessible.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/is-inaccessible.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isInaccessible: function() { return /* binding */ isInaccessible; },\n/* harmony export */   isSubtreeInaccessible: function() { return /* binding */ isSubtreeInaccessible; }\n/* harmony export */ });\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param element\n * @param options\n * @returns {boolean} true if excluded, otherwise false\n */\nfunction isInaccessible(element) {\n  var _element$ownerDocumen;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS,\n    _options$isSubtreeIna = options.isSubtreeInaccessible,\n    isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n  // since visibility is inherited we can exit early\n  if (getComputedStyle(element).visibility === \"hidden\") {\n    return true;\n  }\n  var currentElement = element;\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement, {\n      getComputedStyle: getComputedStyle\n    })) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\n/**\n *\n * @param element\n * @param options\n * @returns {boolean} - `true` if every child of the element is inaccessible\n */\nfunction isSubtreeInaccessible(element) {\n  var _element$ownerDocumen2;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS2 = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n  if (element.hidden === true) {\n    return true;\n  }\n  if (element.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n  if (getComputedStyle(element).display === \"none\") {\n    return true;\n  }\n  return false;\n}\n//# sourceMappingURL=is-inaccessible.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvaXMtaW5hY2Nlc3NpYmxlLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvaXMtaW5hY2Nlc3NpYmxlLm1qcz9iYzYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGFydGlhbCBpbXBsZW1lbnRhdGlvbiBodHRwczovL3d3dy53My5vcmcvVFIvd2FpLWFyaWEtMS4yLyN0cmVlX2V4Y2x1c2lvblxuICogd2hpY2ggc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgZWxlbWVudHMgd2l0aCBhIG5vbi1wcmVzZW50YXRpb25hbCByb2xlIGkuZS5cbiAqIGByb2xlPVwibm9uZVwiYCBhbmQgYHJvbGU9XCJwcmVzZW50YXRpb25cImAgd2lsbCBub3QgYmUgZXhjbHVkZWQuXG4gKlxuICogSW1wbGVtZW50cyBhcmlhLWhpZGRlbiBzZW1hbnRpY3MgKGkuZS4gcGFyZW50IG92ZXJyaWRlcyBjaGlsZClcbiAqIElnbm9yZXMgXCJDaGlsZCBQcmVzZW50YXRpb25hbDogVHJ1ZVwiIGNoYXJhY3RlcmlzdGljc1xuICpcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgZXhjbHVkZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNJbmFjY2Vzc2libGUoZWxlbWVudCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHZhciBfb3B0aW9ucyRnZXRDb21wdXRlZFMgPSBvcHRpb25zLmdldENvbXB1dGVkU3R5bGUsXG4gICAgZ2V0Q29tcHV0ZWRTdHlsZSA9IF9vcHRpb25zJGdldENvbXB1dGVkUyA9PT0gdm9pZCAwID8gKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldykgPT09IG51bGwgfHwgX2VsZW1lbnQkb3duZXJEb2N1bWVuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZWxlbWVudCRvd25lckRvY3VtZW4uZ2V0Q29tcHV0ZWRTdHlsZSA6IF9vcHRpb25zJGdldENvbXB1dGVkUyxcbiAgICBfb3B0aW9ucyRpc1N1YnRyZWVJbmEgPSBvcHRpb25zLmlzU3VidHJlZUluYWNjZXNzaWJsZSxcbiAgICBpc1N1YnRyZWVJbmFjY2Vzc2libGVJbXBsID0gX29wdGlvbnMkaXNTdWJ0cmVlSW5hID09PSB2b2lkIDAgPyBpc1N1YnRyZWVJbmFjY2Vzc2libGUgOiBfb3B0aW9ucyRpc1N1YnRyZWVJbmE7XG4gIGlmICh0eXBlb2YgZ2V0Q29tcHV0ZWRTdHlsZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIk93bmVyIGRvY3VtZW50IG9mIHRoZSBlbGVtZW50IG5lZWRzIHRvIGhhdmUgYW4gYXNzb2NpYXRlZCB3aW5kb3cuXCIpO1xuICB9XG4gIC8vIHNpbmNlIHZpc2liaWxpdHkgaXMgaW5oZXJpdGVkIHdlIGNhbiBleGl0IGVhcmx5XG4gIGlmIChnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLnZpc2liaWxpdHkgPT09IFwiaGlkZGVuXCIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB2YXIgY3VycmVudEVsZW1lbnQgPSBlbGVtZW50O1xuICB3aGlsZSAoY3VycmVudEVsZW1lbnQpIHtcbiAgICBpZiAoaXNTdWJ0cmVlSW5hY2Nlc3NpYmxlSW1wbChjdXJyZW50RWxlbWVudCwge1xuICAgICAgZ2V0Q29tcHV0ZWRTdHlsZTogZ2V0Q29tcHV0ZWRTdHlsZVxuICAgIH0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY3VycmVudEVsZW1lbnQgPSBjdXJyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50O1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICpcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHJldHVybnMge2Jvb2xlYW59IC0gYHRydWVgIGlmIGV2ZXJ5IGNoaWxkIG9mIHRoZSBlbGVtZW50IGlzIGluYWNjZXNzaWJsZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTdWJ0cmVlSW5hY2Nlc3NpYmxlKGVsZW1lbnQpIHtcbiAgdmFyIF9lbGVtZW50JG93bmVyRG9jdW1lbjI7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIF9vcHRpb25zJGdldENvbXB1dGVkUzIgPSBvcHRpb25zLmdldENvbXB1dGVkU3R5bGUsXG4gICAgZ2V0Q29tcHV0ZWRTdHlsZSA9IF9vcHRpb25zJGdldENvbXB1dGVkUzIgPT09IHZvaWQgMCA/IChfZWxlbWVudCRvd25lckRvY3VtZW4yID0gZWxlbWVudC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSA9PT0gbnVsbCB8fCBfZWxlbWVudCRvd25lckRvY3VtZW4yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZWxlbWVudCRvd25lckRvY3VtZW4yLmdldENvbXB1dGVkU3R5bGUgOiBfb3B0aW9ucyRnZXRDb21wdXRlZFMyO1xuICBpZiAodHlwZW9mIGdldENvbXB1dGVkU3R5bGUgIT09IFwiZnVuY3Rpb25cIikge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJPd25lciBkb2N1bWVudCBvZiB0aGUgZWxlbWVudCBuZWVkcyB0byBoYXZlIGFuIGFzc29jaWF0ZWQgd2luZG93LlwiKTtcbiAgfVxuICBpZiAoZWxlbWVudC5oaWRkZW4gPT09IHRydWUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiKSA9PT0gXCJ0cnVlXCIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5kaXNwbGF5ID09PSBcIm5vbmVcIikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWluYWNjZXNzaWJsZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/is-inaccessible.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/polyfills/SetLike.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/polyfills/SetLike.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// for environments without Set we fallback to arrays with unique members\nvar SetLike = /*#__PURE__*/function () {\n  function SetLike() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, SetLike);\n    _defineProperty(this, \"items\", void 0);\n    this.items = items;\n  }\n  _createClass(SetLike, [{\n    key: \"add\",\n    value: function add(value) {\n      if (this.has(value) === false) {\n        this.items.push(value);\n      }\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.items = [];\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(value) {\n      var previousLength = this.items.length;\n      this.items = this.items.filter(function (item) {\n        return item !== value;\n      });\n      return previousLength !== this.items.length;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callbackfn) {\n      var _this = this;\n      this.items.forEach(function (item) {\n        callbackfn(item, item, _this);\n      });\n    }\n  }, {\n    key: \"has\",\n    value: function has(value) {\n      return this.items.indexOf(value) !== -1;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.items.length;\n    }\n  }]);\n  return SetLike;\n}();\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof Set === \"undefined\" ? Set : SetLike);\n//# sourceMappingURL=SetLike.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvcG9seWZpbGxzL1NldExpa2UubWpzIiwibWFwcGluZ3MiOiI7QUFBQSx3QkFBd0IsMkJBQTJCLHNHQUFzRyxxQkFBcUIsbUJBQW1CLDhIQUE4SDtBQUMvVCxrREFBa0QsMENBQTBDO0FBQzVGLDRDQUE0QyxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVEO0FBQy9QLDhEQUE4RCxzRUFBc0UsOERBQThELGtEQUFrRCxpQkFBaUIsR0FBRztBQUN4USw0Q0FBNEMsMkJBQTJCLGtCQUFrQixrQ0FBa0Msb0VBQW9FLEtBQUssT0FBTyxvQkFBb0I7QUFDL04sK0JBQStCLHVDQUF1QztBQUN0RSxxQ0FBcUMsaUVBQWlFLHNDQUFzQywwQkFBMEIsK0NBQStDLDJDQUEyQyx1RUFBdUU7QUFDdlU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0QsK0RBQWUsMENBQTBDLEVBQUM7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RvbS1hY2Nlc3NpYmlsaXR5LWFwaS9kaXN0L3BvbHlmaWxscy9TZXRMaWtlLm1qcz9jNTI3Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIF90b1Byb3BlcnR5S2V5KGRlc2NyaXB0b3Iua2V5KSwgZGVzY3JpcHRvcik7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6IGZhbHNlIH0pOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsga2V5ID0gX3RvUHJvcGVydHlLZXkoa2V5KTsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleShhcmcpIHsgdmFyIGtleSA9IF90b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpOyByZXR1cm4gX3R5cGVvZihrZXkpID09PSBcInN5bWJvbFwiID8ga2V5IDogU3RyaW5nKGtleSk7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZShpbnB1dCwgaGludCkgeyBpZiAoX3R5cGVvZihpbnB1dCkgIT09IFwib2JqZWN0XCIgfHwgaW5wdXQgPT09IG51bGwpIHJldHVybiBpbnB1dDsgdmFyIHByaW0gPSBpbnB1dFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAocHJpbSAhPT0gdW5kZWZpbmVkKSB7IHZhciByZXMgPSBwcmltLmNhbGwoaW5wdXQsIGhpbnQgfHwgXCJkZWZhdWx0XCIpOyBpZiAoX3R5cGVvZihyZXMpICE9PSBcIm9iamVjdFwiKSByZXR1cm4gcmVzOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChoaW50ID09PSBcInN0cmluZ1wiID8gU3RyaW5nIDogTnVtYmVyKShpbnB1dCk7IH1cbi8vIGZvciBlbnZpcm9ubWVudHMgd2l0aG91dCBTZXQgd2UgZmFsbGJhY2sgdG8gYXJyYXlzIHdpdGggdW5pcXVlIG1lbWJlcnNcbnZhciBTZXRMaWtlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2V0TGlrZSgpIHtcbiAgICB2YXIgaXRlbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZXRMaWtlKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpdGVtc1wiLCB2b2lkIDApO1xuICAgIHRoaXMuaXRlbXMgPSBpdGVtcztcbiAgfVxuICBfY3JlYXRlQ2xhc3MoU2V0TGlrZSwgW3tcbiAgICBrZXk6IFwiYWRkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMuaGFzKHZhbHVlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5pdGVtcy5wdXNoKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbGVhclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIHRoaXMuaXRlbXMgPSBbXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVsZXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9kZWxldGUodmFsdWUpIHtcbiAgICAgIHZhciBwcmV2aW91c0xlbmd0aCA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSB2YWx1ZTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHByZXZpb3VzTGVuZ3RoICE9PSB0aGlzLml0ZW1zLmxlbmd0aDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yRWFjaFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4pIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICB0aGlzLml0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgY2FsbGJhY2tmbihpdGVtLCBpdGVtLCBfdGhpcyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhcyh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaXRlbXMuaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzaXplXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBTZXRMaWtlO1xufSgpO1xuZXhwb3J0IGRlZmF1bHQgdHlwZW9mIFNldCA9PT0gXCJ1bmRlZmluZWRcIiA/IFNldCA6IFNldExpa2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXRMaWtlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/polyfills/SetLike.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/polyfills/array.from.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/polyfills/array.from.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ arrayFrom; }\n/* harmony export */ });\n/**\n * @source {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Polyfill}\n * but without thisArg (too hard to type, no need to `this`)\n */\nvar toStr = Object.prototype.toString;\nfunction isCallable(fn) {\n  return typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\n}\nfunction toInteger(value) {\n  var number = Number(value);\n  if (isNaN(number)) {\n    return 0;\n  }\n  if (number === 0 || !isFinite(number)) {\n    return number;\n  }\n  return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(value) {\n  var len = toInteger(value);\n  return Math.min(Math.max(len, 0), maxSafeInteger);\n}\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n */\n\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n * @param mapfn A mapping function to call on every element of the array.\n * @param thisArg Value of 'this' used to invoke the mapfn.\n */\nfunction arrayFrom(arrayLike, mapFn) {\n  // 1. Let C be the this value.\n  // edit(@eps1lon): we're not calling it as Array.from\n  var C = Array;\n\n  // 2. Let items be ToObject(arrayLike).\n  var items = Object(arrayLike);\n\n  // 3. ReturnIfAbrupt(items).\n  if (arrayLike == null) {\n    throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n  }\n\n  // 4. If mapfn is undefined, then let mapping be false.\n  // const mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\n  if (typeof mapFn !== \"undefined\") {\n    // 5. else\n    // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n    if (!isCallable(mapFn)) {\n      throw new TypeError(\"Array.from: when provided, the second argument must be a function\");\n    }\n  }\n\n  // 10. Let lenValue be Get(items, \"length\").\n  // 11. Let len be ToLength(lenValue).\n  var len = toLength(items.length);\n\n  // 13. If IsConstructor(C) is true, then\n  // 13. a. Let A be the result of calling the [[Construct]] internal method\n  // of C with an argument list containing the single item len.\n  // 14. a. Else, Let A be ArrayCreate(len).\n  var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n  // 16. Let k be 0.\n  var k = 0;\n  // 17. Repeat, while k < len… (also steps a - h)\n  var kValue;\n  while (k < len) {\n    kValue = items[k];\n    if (mapFn) {\n      A[k] = mapFn(kValue, k);\n    } else {\n      A[k] = kValue;\n    }\n    k += 1;\n  }\n  // 18. Let putStatus be Put(A, \"length\", len, true).\n  A.length = len;\n  // 20. Return A.\n  return A;\n}\n//# sourceMappingURL=array.from.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvcG9seWZpbGxzL2FycmF5LmZyb20ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvcG9seWZpbGxzL2FycmF5LmZyb20ubWpzPzU3YzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAc291cmNlIHtodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BcnJheS9mcm9tI1BvbHlmaWxsfVxuICogYnV0IHdpdGhvdXQgdGhpc0FyZyAodG9vIGhhcmQgdG8gdHlwZSwgbm8gbmVlZCB0byBgdGhpc2ApXG4gKi9cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5mdW5jdGlvbiBpc0NhbGxhYmxlKGZuKSB7XG4gIHJldHVybiB0eXBlb2YgZm4gPT09IFwiZnVuY3Rpb25cIiB8fCB0b1N0ci5jYWxsKGZuKSA9PT0gXCJbb2JqZWN0IEZ1bmN0aW9uXVwiO1xufVxuZnVuY3Rpb24gdG9JbnRlZ2VyKHZhbHVlKSB7XG4gIHZhciBudW1iZXIgPSBOdW1iZXIodmFsdWUpO1xuICBpZiAoaXNOYU4obnVtYmVyKSkge1xuICAgIHJldHVybiAwO1xuICB9XG4gIGlmIChudW1iZXIgPT09IDAgfHwgIWlzRmluaXRlKG51bWJlcikpIHtcbiAgICByZXR1cm4gbnVtYmVyO1xuICB9XG4gIHJldHVybiAobnVtYmVyID4gMCA/IDEgOiAtMSkgKiBNYXRoLmZsb29yKE1hdGguYWJzKG51bWJlcikpO1xufVxudmFyIG1heFNhZmVJbnRlZ2VyID0gTWF0aC5wb3coMiwgNTMpIC0gMTtcbmZ1bmN0aW9uIHRvTGVuZ3RoKHZhbHVlKSB7XG4gIHZhciBsZW4gPSB0b0ludGVnZXIodmFsdWUpO1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobGVuLCAwKSwgbWF4U2FmZUludGVnZXIpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IGZyb20gYW4gaXRlcmFibGUgb2JqZWN0LlxuICogQHBhcmFtIGl0ZXJhYmxlIEFuIGl0ZXJhYmxlIG9iamVjdCB0byBjb252ZXJ0IHRvIGFuIGFycmF5LlxuICovXG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBmcm9tIGFuIGl0ZXJhYmxlIG9iamVjdC5cbiAqIEBwYXJhbSBpdGVyYWJsZSBBbiBpdGVyYWJsZSBvYmplY3QgdG8gY29udmVydCB0byBhbiBhcnJheS5cbiAqIEBwYXJhbSBtYXBmbiBBIG1hcHBpbmcgZnVuY3Rpb24gdG8gY2FsbCBvbiBldmVyeSBlbGVtZW50IG9mIHRoZSBhcnJheS5cbiAqIEBwYXJhbSB0aGlzQXJnIFZhbHVlIG9mICd0aGlzJyB1c2VkIHRvIGludm9rZSB0aGUgbWFwZm4uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFycmF5RnJvbShhcnJheUxpa2UsIG1hcEZuKSB7XG4gIC8vIDEuIExldCBDIGJlIHRoZSB0aGlzIHZhbHVlLlxuICAvLyBlZGl0KEBlcHMxbG9uKTogd2UncmUgbm90IGNhbGxpbmcgaXQgYXMgQXJyYXkuZnJvbVxuICB2YXIgQyA9IEFycmF5O1xuXG4gIC8vIDIuIExldCBpdGVtcyBiZSBUb09iamVjdChhcnJheUxpa2UpLlxuICB2YXIgaXRlbXMgPSBPYmplY3QoYXJyYXlMaWtlKTtcblxuICAvLyAzLiBSZXR1cm5JZkFicnVwdChpdGVtcykuXG4gIGlmIChhcnJheUxpa2UgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJBcnJheS5mcm9tIHJlcXVpcmVzIGFuIGFycmF5LWxpa2Ugb2JqZWN0IC0gbm90IG51bGwgb3IgdW5kZWZpbmVkXCIpO1xuICB9XG5cbiAgLy8gNC4gSWYgbWFwZm4gaXMgdW5kZWZpbmVkLCB0aGVuIGxldCBtYXBwaW5nIGJlIGZhbHNlLlxuICAvLyBjb25zdCBtYXBGbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdm9pZCB1bmRlZmluZWQ7XG5cbiAgaWYgKHR5cGVvZiBtYXBGbiAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIC8vIDUuIGVsc2VcbiAgICAvLyA1LiBhIElmIElzQ2FsbGFibGUobWFwZm4pIGlzIGZhbHNlLCB0aHJvdyBhIFR5cGVFcnJvciBleGNlcHRpb24uXG4gICAgaWYgKCFpc0NhbGxhYmxlKG1hcEZuKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFycmF5LmZyb206IHdoZW4gcHJvdmlkZWQsIHRoZSBzZWNvbmQgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIDEwLiBMZXQgbGVuVmFsdWUgYmUgR2V0KGl0ZW1zLCBcImxlbmd0aFwiKS5cbiAgLy8gMTEuIExldCBsZW4gYmUgVG9MZW5ndGgobGVuVmFsdWUpLlxuICB2YXIgbGVuID0gdG9MZW5ndGgoaXRlbXMubGVuZ3RoKTtcblxuICAvLyAxMy4gSWYgSXNDb25zdHJ1Y3RvcihDKSBpcyB0cnVlLCB0aGVuXG4gIC8vIDEzLiBhLiBMZXQgQSBiZSB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFtbQ29uc3RydWN0XV0gaW50ZXJuYWwgbWV0aG9kXG4gIC8vIG9mIEMgd2l0aCBhbiBhcmd1bWVudCBsaXN0IGNvbnRhaW5pbmcgdGhlIHNpbmdsZSBpdGVtIGxlbi5cbiAgLy8gMTQuIGEuIEVsc2UsIExldCBBIGJlIEFycmF5Q3JlYXRlKGxlbikuXG4gIHZhciBBID0gaXNDYWxsYWJsZShDKSA/IE9iamVjdChuZXcgQyhsZW4pKSA6IG5ldyBBcnJheShsZW4pO1xuXG4gIC8vIDE2LiBMZXQgayBiZSAwLlxuICB2YXIgayA9IDA7XG4gIC8vIDE3LiBSZXBlYXQsIHdoaWxlIGsgPCBsZW7igKYgKGFsc28gc3RlcHMgYSAtIGgpXG4gIHZhciBrVmFsdWU7XG4gIHdoaWxlIChrIDwgbGVuKSB7XG4gICAga1ZhbHVlID0gaXRlbXNba107XG4gICAgaWYgKG1hcEZuKSB7XG4gICAgICBBW2tdID0gbWFwRm4oa1ZhbHVlLCBrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgQVtrXSA9IGtWYWx1ZTtcbiAgICB9XG4gICAgayArPSAxO1xuICB9XG4gIC8vIDE4LiBMZXQgcHV0U3RhdHVzIGJlIFB1dChBLCBcImxlbmd0aFwiLCBsZW4sIHRydWUpLlxuICBBLmxlbmd0aCA9IGxlbjtcbiAgLy8gMjAuIFJldHVybiBBLlxuICByZXR1cm4gQTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFycmF5LmZyb20ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/polyfills/array.from.mjs\n"));

/***/ }),

/***/ "./node_modules/dom-accessibility-api/dist/util.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/dom-accessibility-api/dist/util.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLocalName: function() { return /* reexport safe */ _getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName; },\n/* harmony export */   hasAnyConcreteRoles: function() { return /* binding */ hasAnyConcreteRoles; },\n/* harmony export */   isElement: function() { return /* binding */ isElement; },\n/* harmony export */   isHTMLFieldSetElement: function() { return /* binding */ isHTMLFieldSetElement; },\n/* harmony export */   isHTMLInputElement: function() { return /* binding */ isHTMLInputElement; },\n/* harmony export */   isHTMLLegendElement: function() { return /* binding */ isHTMLLegendElement; },\n/* harmony export */   isHTMLOptGroupElement: function() { return /* binding */ isHTMLOptGroupElement; },\n/* harmony export */   isHTMLSelectElement: function() { return /* binding */ isHTMLSelectElement; },\n/* harmony export */   isHTMLSlotElement: function() { return /* binding */ isHTMLSlotElement; },\n/* harmony export */   isHTMLTableCaptionElement: function() { return /* binding */ isHTMLTableCaptionElement; },\n/* harmony export */   isHTMLTableElement: function() { return /* binding */ isHTMLTableElement; },\n/* harmony export */   isHTMLTextAreaElement: function() { return /* binding */ isHTMLTextAreaElement; },\n/* harmony export */   isSVGElement: function() { return /* binding */ isSVGElement; },\n/* harmony export */   isSVGSVGElement: function() { return /* binding */ isSVGSVGElement; },\n/* harmony export */   isSVGTitleElement: function() { return /* binding */ isSVGTitleElement; },\n/* harmony export */   queryIdRefs: function() { return /* binding */ queryIdRefs; },\n/* harmony export */   safeWindow: function() { return /* binding */ safeWindow; }\n/* harmony export */ });\n/* harmony import */ var _getRole_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getRole.mjs */ \"./node_modules/dom-accessibility-api/dist/getRole.mjs\");\n\n\nfunction isElement(node) {\n  return node !== null && node.nodeType === node.ELEMENT_NODE;\n}\nfunction isHTMLTableCaptionElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"caption\";\n}\nfunction isHTMLInputElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"input\";\n}\nfunction isHTMLOptGroupElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"optgroup\";\n}\nfunction isHTMLSelectElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"select\";\n}\nfunction isHTMLTableElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"table\";\n}\nfunction isHTMLTextAreaElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"textarea\";\n}\nfunction safeWindow(node) {\n  var _ref = node.ownerDocument === null ? node : node.ownerDocument,\n    defaultView = _ref.defaultView;\n  if (defaultView === null) {\n    throw new TypeError(\"no window available\");\n  }\n  return defaultView;\n}\nfunction isHTMLFieldSetElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"fieldset\";\n}\nfunction isHTMLLegendElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"legend\";\n}\nfunction isHTMLSlotElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"slot\";\n}\nfunction isSVGElement(node) {\n  return isElement(node) && node.ownerSVGElement !== undefined;\n}\nfunction isSVGSVGElement(node) {\n  return isElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"svg\";\n}\nfunction isSVGTitleElement(node) {\n  return isSVGElement(node) && (0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocalName)(node) === \"title\";\n}\n\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\nfunction queryIdRefs(node, attributeName) {\n  if (isElement(node) && node.hasAttribute(attributeName)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n    var ids = node.getAttribute(attributeName).split(\" \");\n\n    // Browsers that don't support shadow DOM won't have getRootNode\n    var root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    return ids.map(function (id) {\n      return root.getElementById(id);\n    }).filter(function (element) {\n      return element !== null;\n    }\n    // TODO: why does this not narrow?\n    );\n  }\n\n  return [];\n}\nfunction hasAnyConcreteRoles(node, roles) {\n  if (isElement(node)) {\n    return roles.indexOf((0,_getRole_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node)) !== -1;\n  }\n  return false;\n}\n//# sourceMappingURL=util.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvdXRpbC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZDO0FBQ1M7QUFDL0M7QUFDUDtBQUNBO0FBQ087QUFDUCw0QkFBNEIsMERBQVk7QUFDeEM7QUFDTztBQUNQLDRCQUE0QiwwREFBWTtBQUN4QztBQUNPO0FBQ1AsNEJBQTRCLDBEQUFZO0FBQ3hDO0FBQ087QUFDUCw0QkFBNEIsMERBQVk7QUFDeEM7QUFDTztBQUNQLDRCQUE0QiwwREFBWTtBQUN4QztBQUNPO0FBQ1AsNEJBQTRCLDBEQUFZO0FBQ3hDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLDBEQUFZO0FBQ3hDO0FBQ087QUFDUCw0QkFBNEIsMERBQVk7QUFDeEM7QUFDTztBQUNQLDRCQUE0QiwwREFBWTtBQUN4QztBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLDBEQUFZO0FBQ3hDO0FBQ087QUFDUCwrQkFBK0IsMERBQVk7QUFDM0M7O0FBRUE7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxXQUFXO0FBQ3hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ087QUFDUDtBQUNBLHlCQUF5Qix3REFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZG9tLWFjY2Vzc2liaWxpdHktYXBpL2Rpc3QvdXRpbC5tanM/NDExYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBnZXRMb2NhbE5hbWUgfSBmcm9tIFwiLi9nZXRSb2xlLm1qc1wiO1xuaW1wb3J0IGdldFJvbGUsIHsgZ2V0TG9jYWxOYW1lIH0gZnJvbSBcIi4vZ2V0Um9sZS5tanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc0VsZW1lbnQobm9kZSkge1xuICByZXR1cm4gbm9kZSAhPT0gbnVsbCAmJiBub2RlLm5vZGVUeXBlID09PSBub2RlLkVMRU1FTlRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0hUTUxUYWJsZUNhcHRpb25FbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwiY2FwdGlvblwiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSFRNTElucHV0RWxlbWVudChub2RlKSB7XG4gIHJldHVybiBpc0VsZW1lbnQobm9kZSkgJiYgZ2V0TG9jYWxOYW1lKG5vZGUpID09PSBcImlucHV0XCI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNIVE1MT3B0R3JvdXBFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwib3B0Z3JvdXBcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0hUTUxTZWxlY3RFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwic2VsZWN0XCI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNIVE1MVGFibGVFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwidGFibGVcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0hUTUxUZXh0QXJlYUVsZW1lbnQobm9kZSkge1xuICByZXR1cm4gaXNFbGVtZW50KG5vZGUpICYmIGdldExvY2FsTmFtZShub2RlKSA9PT0gXCJ0ZXh0YXJlYVwiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNhZmVXaW5kb3cobm9kZSkge1xuICB2YXIgX3JlZiA9IG5vZGUub3duZXJEb2N1bWVudCA9PT0gbnVsbCA/IG5vZGUgOiBub2RlLm93bmVyRG9jdW1lbnQsXG4gICAgZGVmYXVsdFZpZXcgPSBfcmVmLmRlZmF1bHRWaWV3O1xuICBpZiAoZGVmYXVsdFZpZXcgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwibm8gd2luZG93IGF2YWlsYWJsZVwiKTtcbiAgfVxuICByZXR1cm4gZGVmYXVsdFZpZXc7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNIVE1MRmllbGRTZXRFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwiZmllbGRzZXRcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0hUTUxMZWdlbmRFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwibGVnZW5kXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNIVE1MU2xvdEVsZW1lbnQobm9kZSkge1xuICByZXR1cm4gaXNFbGVtZW50KG5vZGUpICYmIGdldExvY2FsTmFtZShub2RlKSA9PT0gXCJzbG90XCI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTVkdFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBub2RlLm93bmVyU1ZHRWxlbWVudCAhPT0gdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU1ZHU1ZHRWxlbWVudChub2RlKSB7XG4gIHJldHVybiBpc0VsZW1lbnQobm9kZSkgJiYgZ2V0TG9jYWxOYW1lKG5vZGUpID09PSBcInN2Z1wiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU1ZHVGl0bGVFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuIGlzU1ZHRWxlbWVudChub2RlKSAmJiBnZXRMb2NhbE5hbWUobm9kZSkgPT09IFwidGl0bGVcIjtcbn1cblxuLyoqXG4gKlxuICogQHBhcmFtIHtOb2RlfSBub2RlIC1cbiAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyaWJ1dGVOYW1lIC1cbiAqIEByZXR1cm5zIHtFbGVtZW50W119IC1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5SWRSZWZzKG5vZGUsIGF0dHJpYnV0ZU5hbWUpIHtcbiAgaWYgKGlzRWxlbWVudChub2RlKSAmJiBub2RlLmhhc0F0dHJpYnV0ZShhdHRyaWJ1dGVOYW1lKSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uIC0tIHNhZmUgZHVlIHRvIGhhc0F0dHJpYnV0ZSBjaGVja1xuICAgIHZhciBpZHMgPSBub2RlLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVOYW1lKS5zcGxpdChcIiBcIik7XG5cbiAgICAvLyBCcm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgc2hhZG93IERPTSB3b24ndCBoYXZlIGdldFJvb3ROb2RlXG4gICAgdmFyIHJvb3QgPSBub2RlLmdldFJvb3ROb2RlID8gbm9kZS5nZXRSb290Tm9kZSgpIDogbm9kZS5vd25lckRvY3VtZW50O1xuICAgIHJldHVybiBpZHMubWFwKGZ1bmN0aW9uIChpZCkge1xuICAgICAgcmV0dXJuIHJvb3QuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgcmV0dXJuIGVsZW1lbnQgIT09IG51bGw7XG4gICAgfVxuICAgIC8vIFRPRE86IHdoeSBkb2VzIHRoaXMgbm90IG5hcnJvdz9cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIFtdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc0FueUNvbmNyZXRlUm9sZXMobm9kZSwgcm9sZXMpIHtcbiAgaWYgKGlzRWxlbWVudChub2RlKSkge1xuICAgIHJldHVybiByb2xlcy5pbmRleE9mKGdldFJvbGUobm9kZSkpICE9PSAtMTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dom-accessibility-api/dist/util.mjs\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/arguments.js":
/*!*********************************************!*\
  !*** ./node_modules/loupe/lib/arguments.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectArguments; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectArguments(args, options) {\n    if (args.length === 0)\n        return 'Arguments[]';\n    options.truncate -= 13;\n    return `Arguments[ ${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(args, options)} ]`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2FyZ3VtZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUM1QjtBQUNmO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix3REFBVyxpQkFBaUI7QUFDckQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvdXBlL2xpYi9hcmd1bWVudHMuanM/ZDZmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNwZWN0TGlzdCB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbnNwZWN0QXJndW1lbnRzKGFyZ3MsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJncy5sZW5ndGggPT09IDApXG4gICAgICAgIHJldHVybiAnQXJndW1lbnRzW10nO1xuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gMTM7XG4gICAgcmV0dXJuIGBBcmd1bWVudHNbICR7aW5zcGVjdExpc3QoYXJncywgb3B0aW9ucyl9IF1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/arguments.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/array.js":
/*!*****************************************!*\
  !*** ./node_modules/loupe/lib/array.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectArray; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectArray(array, options) {\n    // Object.keys will always output the Array indices first, so we can slice by\n    // `array.length` to get non-index properties\n    const nonIndexProperties = Object.keys(array).slice(array.length);\n    if (!array.length && !nonIndexProperties.length)\n        return '[]';\n    options.truncate -= 4;\n    const listContents = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(array, options);\n    options.truncate -= listContents.length;\n    let propertyContents = '';\n    if (nonIndexProperties.length) {\n        propertyContents = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(nonIndexProperties.map(key => [key, array[key]]), options, _helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectProperty);\n    }\n    return `[ ${listContents}${propertyContents ? `, ${propertyContents}` : ''} ]`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2FycmF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTREO0FBQzdDO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix3REFBVyw0REFBNEQsd0RBQWU7QUFDakg7QUFDQSxnQkFBZ0IsYUFBYSxFQUFFLHdCQUF3QixpQkFBaUIsUUFBUTtBQUNoRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2FycmF5LmpzPzFmMjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdExpc3QsIGluc3BlY3RQcm9wZXJ0eSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbnNwZWN0QXJyYXkoYXJyYXksIG9wdGlvbnMpIHtcbiAgICAvLyBPYmplY3Qua2V5cyB3aWxsIGFsd2F5cyBvdXRwdXQgdGhlIEFycmF5IGluZGljZXMgZmlyc3QsIHNvIHdlIGNhbiBzbGljZSBieVxuICAgIC8vIGBhcnJheS5sZW5ndGhgIHRvIGdldCBub24taW5kZXggcHJvcGVydGllc1xuICAgIGNvbnN0IG5vbkluZGV4UHJvcGVydGllcyA9IE9iamVjdC5rZXlzKGFycmF5KS5zbGljZShhcnJheS5sZW5ndGgpO1xuICAgIGlmICghYXJyYXkubGVuZ3RoICYmICFub25JbmRleFByb3BlcnRpZXMubGVuZ3RoKVxuICAgICAgICByZXR1cm4gJ1tdJztcbiAgICBvcHRpb25zLnRydW5jYXRlIC09IDQ7XG4gICAgY29uc3QgbGlzdENvbnRlbnRzID0gaW5zcGVjdExpc3QoYXJyYXksIG9wdGlvbnMpO1xuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gbGlzdENvbnRlbnRzLmxlbmd0aDtcbiAgICBsZXQgcHJvcGVydHlDb250ZW50cyA9ICcnO1xuICAgIGlmIChub25JbmRleFByb3BlcnRpZXMubGVuZ3RoKSB7XG4gICAgICAgIHByb3BlcnR5Q29udGVudHMgPSBpbnNwZWN0TGlzdChub25JbmRleFByb3BlcnRpZXMubWFwKGtleSA9PiBba2V5LCBhcnJheVtrZXldXSksIG9wdGlvbnMsIGluc3BlY3RQcm9wZXJ0eSk7XG4gICAgfVxuICAgIHJldHVybiBgWyAke2xpc3RDb250ZW50c30ke3Byb3BlcnR5Q29udGVudHMgPyBgLCAke3Byb3BlcnR5Q29udGVudHN9YCA6ICcnfSBdYDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/array.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/bigint.js":
/*!******************************************!*\
  !*** ./node_modules/loupe/lib/bigint.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectBigInt; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectBigInt(number, options) {\n    let nums = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(number.toString(), options.truncate - 1);\n    if (nums !== _helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncator)\n        nums += 'n';\n    return options.stylize(nums, 'bigint');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2JpZ2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUNwQztBQUNmLGVBQWUscURBQVE7QUFDdkIsaUJBQWlCLGtEQUFTO0FBQzFCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2JpZ2ludC5qcz9mY2Y0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRydW5jYXRlLCB0cnVuY2F0b3IgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdEJpZ0ludChudW1iZXIsIG9wdGlvbnMpIHtcbiAgICBsZXQgbnVtcyA9IHRydW5jYXRlKG51bWJlci50b1N0cmluZygpLCBvcHRpb25zLnRydW5jYXRlIC0gMSk7XG4gICAgaWYgKG51bXMgIT09IHRydW5jYXRvcilcbiAgICAgICAgbnVtcyArPSAnbic7XG4gICAgcmV0dXJuIG9wdGlvbnMuc3R5bGl6ZShudW1zLCAnYmlnaW50Jyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/bigint.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/class.js":
/*!*****************************************!*\
  !*** ./node_modules/loupe/lib/class.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectClass; }\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/loupe/lib/object.js\");\n\nconst toStringTag = typeof Symbol !== 'undefined' && Symbol.toStringTag ? Symbol.toStringTag : false;\nfunction inspectClass(value, options) {\n    let name = '';\n    if (toStringTag && toStringTag in value) {\n        name = value[toStringTag];\n    }\n    name = name || value.constructor.name;\n    // Babel transforms anonymous classes to the name `_class`\n    if (!name || name === '_class') {\n        name = '<Anonymous Class>';\n    }\n    options.truncate -= name.length;\n    return `${name}${(0,_object_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value, options)}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2NsYXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ3hDO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsS0FBSyxFQUFFLHNEQUFhLGlCQUFpQjtBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2NsYXNzLmpzP2U5NmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluc3BlY3RPYmplY3QgZnJvbSAnLi9vYmplY3QuanMnO1xuY29uc3QgdG9TdHJpbmdUYWcgPSB0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiBmYWxzZTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc3BlY3RDbGFzcyh2YWx1ZSwgb3B0aW9ucykge1xuICAgIGxldCBuYW1lID0gJyc7XG4gICAgaWYgKHRvU3RyaW5nVGFnICYmIHRvU3RyaW5nVGFnIGluIHZhbHVlKSB7XG4gICAgICAgIG5hbWUgPSB2YWx1ZVt0b1N0cmluZ1RhZ107XG4gICAgfVxuICAgIG5hbWUgPSBuYW1lIHx8IHZhbHVlLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgLy8gQmFiZWwgdHJhbnNmb3JtcyBhbm9ueW1vdXMgY2xhc3NlcyB0byB0aGUgbmFtZSBgX2NsYXNzYFxuICAgIGlmICghbmFtZSB8fCBuYW1lID09PSAnX2NsYXNzJykge1xuICAgICAgICBuYW1lID0gJzxBbm9ueW1vdXMgQ2xhc3M+JztcbiAgICB9XG4gICAgb3B0aW9ucy50cnVuY2F0ZSAtPSBuYW1lLmxlbmd0aDtcbiAgICByZXR1cm4gYCR7bmFtZX0ke2luc3BlY3RPYmplY3QodmFsdWUsIG9wdGlvbnMpfWA7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/class.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/date.js":
/*!****************************************!*\
  !*** ./node_modules/loupe/lib/date.js ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectDate; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectDate(dateObject, options) {\n    const stringRepresentation = dateObject.toJSON();\n    if (stringRepresentation === null) {\n        return 'Invalid Date';\n    }\n    const split = stringRepresentation.split('T');\n    const date = split[0];\n    // If we need to - truncate the time portion, but never the date\n    return options.stylize(`${date}T${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(split[1], options.truncate - date.length - 1)}`, 'date');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDekI7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixLQUFLLEdBQUcscURBQVEsK0NBQStDO0FBQzdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb3VwZS9saWIvZGF0ZS5qcz80NTgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRydW5jYXRlIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc3BlY3REYXRlKGRhdGVPYmplY3QsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBzdHJpbmdSZXByZXNlbnRhdGlvbiA9IGRhdGVPYmplY3QudG9KU09OKCk7XG4gICAgaWYgKHN0cmluZ1JlcHJlc2VudGF0aW9uID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAnSW52YWxpZCBEYXRlJztcbiAgICB9XG4gICAgY29uc3Qgc3BsaXQgPSBzdHJpbmdSZXByZXNlbnRhdGlvbi5zcGxpdCgnVCcpO1xuICAgIGNvbnN0IGRhdGUgPSBzcGxpdFswXTtcbiAgICAvLyBJZiB3ZSBuZWVkIHRvIC0gdHJ1bmNhdGUgdGhlIHRpbWUgcG9ydGlvbiwgYnV0IG5ldmVyIHRoZSBkYXRlXG4gICAgcmV0dXJuIG9wdGlvbnMuc3R5bGl6ZShgJHtkYXRlfVQke3RydW5jYXRlKHNwbGl0WzFdLCBvcHRpb25zLnRydW5jYXRlIC0gZGF0ZS5sZW5ndGggLSAxKX1gLCAnZGF0ZScpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/date.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/error.js":
/*!*****************************************!*\
  !*** ./node_modules/loupe/lib/error.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectObject; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nconst errorKeys = [\n    'stack',\n    'line',\n    'column',\n    'name',\n    'message',\n    'fileName',\n    'lineNumber',\n    'columnNumber',\n    'number',\n    'description',\n];\nfunction inspectObject(error, options) {\n    const properties = Object.getOwnPropertyNames(error).filter(key => errorKeys.indexOf(key) === -1);\n    const name = error.name;\n    options.truncate -= name.length;\n    let message = '';\n    if (typeof error.message === 'string') {\n        message = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(error.message, options.truncate);\n    }\n    else {\n        properties.unshift('message');\n    }\n    message = message ? `: ${message}` : '';\n    options.truncate -= message.length + 5;\n    const propertyContents = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(properties.map(key => [key, error[key]]), options, _helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectProperty);\n    return `${name}${message}${propertyContents ? ` { ${propertyContents} }` : ''}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2Vycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxREFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRO0FBQ3JDO0FBQ0EsNkJBQTZCLHdEQUFXLG9EQUFvRCx3REFBZTtBQUMzRyxjQUFjLEtBQUssRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsbUJBQW1CLE9BQU87QUFDbEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvdXBlL2xpYi9lcnJvci5qcz9lNGI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3RMaXN0LCBpbnNwZWN0UHJvcGVydHksIHRydW5jYXRlIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmNvbnN0IGVycm9yS2V5cyA9IFtcbiAgICAnc3RhY2snLFxuICAgICdsaW5lJyxcbiAgICAnY29sdW1uJyxcbiAgICAnbmFtZScsXG4gICAgJ21lc3NhZ2UnLFxuICAgICdmaWxlTmFtZScsXG4gICAgJ2xpbmVOdW1iZXInLFxuICAgICdjb2x1bW5OdW1iZXInLFxuICAgICdudW1iZXInLFxuICAgICdkZXNjcmlwdGlvbicsXG5dO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdE9iamVjdChlcnJvciwgb3B0aW9ucykge1xuICAgIGNvbnN0IHByb3BlcnRpZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlcnJvcikuZmlsdGVyKGtleSA9PiBlcnJvcktleXMuaW5kZXhPZihrZXkpID09PSAtMSk7XG4gICAgY29uc3QgbmFtZSA9IGVycm9yLm5hbWU7XG4gICAgb3B0aW9ucy50cnVuY2F0ZSAtPSBuYW1lLmxlbmd0aDtcbiAgICBsZXQgbWVzc2FnZSA9ICcnO1xuICAgIGlmICh0eXBlb2YgZXJyb3IubWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgbWVzc2FnZSA9IHRydW5jYXRlKGVycm9yLm1lc3NhZ2UsIG9wdGlvbnMudHJ1bmNhdGUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJvcGVydGllcy51bnNoaWZ0KCdtZXNzYWdlJyk7XG4gICAgfVxuICAgIG1lc3NhZ2UgPSBtZXNzYWdlID8gYDogJHttZXNzYWdlfWAgOiAnJztcbiAgICBvcHRpb25zLnRydW5jYXRlIC09IG1lc3NhZ2UubGVuZ3RoICsgNTtcbiAgICBjb25zdCBwcm9wZXJ0eUNvbnRlbnRzID0gaW5zcGVjdExpc3QocHJvcGVydGllcy5tYXAoa2V5ID0+IFtrZXksIGVycm9yW2tleV1dKSwgb3B0aW9ucywgaW5zcGVjdFByb3BlcnR5KTtcbiAgICByZXR1cm4gYCR7bmFtZX0ke21lc3NhZ2V9JHtwcm9wZXJ0eUNvbnRlbnRzID8gYCB7ICR7cHJvcGVydHlDb250ZW50c30gfWAgOiAnJ31gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/error.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/function.js":
/*!********************************************!*\
  !*** ./node_modules/loupe/lib/function.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectFunction; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectFunction(func, options) {\n    const functionType = func[Symbol.toStringTag] || 'Function';\n    const name = func.name;\n    if (!name) {\n        return options.stylize(`[${functionType}]`, 'special');\n    }\n    return options.stylize(`[${functionType} ${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(name, options.truncate - 11)}]`, 'special');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2Z1bmN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ3pCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGFBQWE7QUFDaEQ7QUFDQSwrQkFBK0IsY0FBYyxFQUFFLHFEQUFRLDhCQUE4QjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2Z1bmN0aW9uLmpzPzIxODQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHJ1bmNhdGUgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdEZ1bmN0aW9uKGZ1bmMsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBmdW5jdGlvblR5cGUgPSBmdW5jW1N5bWJvbC50b1N0cmluZ1RhZ10gfHwgJ0Z1bmN0aW9uJztcbiAgICBjb25zdCBuYW1lID0gZnVuYy5uYW1lO1xuICAgIGlmICghbmFtZSkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5zdHlsaXplKGBbJHtmdW5jdGlvblR5cGV9XWAsICdzcGVjaWFsJyk7XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zLnN0eWxpemUoYFske2Z1bmN0aW9uVHlwZX0gJHt0cnVuY2F0ZShuYW1lLCBvcHRpb25zLnRydW5jYXRlIC0gMTEpfV1gLCAnc3BlY2lhbCcpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/function.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/helpers.js":
/*!*******************************************!*\
  !*** ./node_modules/loupe/lib/helpers.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inspectList: function() { return /* binding */ inspectList; },\n/* harmony export */   inspectProperty: function() { return /* binding */ inspectProperty; },\n/* harmony export */   normaliseOptions: function() { return /* binding */ normaliseOptions; },\n/* harmony export */   truncate: function() { return /* binding */ truncate; },\n/* harmony export */   truncator: function() { return /* binding */ truncator; }\n/* harmony export */ });\nconst ansiColors = {\n    bold: ['1', '22'],\n    dim: ['2', '22'],\n    italic: ['3', '23'],\n    underline: ['4', '24'],\n    // 5 & 6 are blinking\n    inverse: ['7', '27'],\n    hidden: ['8', '28'],\n    strike: ['9', '29'],\n    // 10-20 are fonts\n    // 21-29 are resets for 1-9\n    black: ['30', '39'],\n    red: ['31', '39'],\n    green: ['32', '39'],\n    yellow: ['33', '39'],\n    blue: ['34', '39'],\n    magenta: ['35', '39'],\n    cyan: ['36', '39'],\n    white: ['37', '39'],\n    brightblack: ['30;1', '39'],\n    brightred: ['31;1', '39'],\n    brightgreen: ['32;1', '39'],\n    brightyellow: ['33;1', '39'],\n    brightblue: ['34;1', '39'],\n    brightmagenta: ['35;1', '39'],\n    brightcyan: ['36;1', '39'],\n    brightwhite: ['37;1', '39'],\n    grey: ['90', '39'],\n};\nconst styles = {\n    special: 'cyan',\n    number: 'yellow',\n    bigint: 'yellow',\n    boolean: 'yellow',\n    undefined: 'grey',\n    null: 'bold',\n    string: 'green',\n    symbol: 'green',\n    date: 'magenta',\n    regexp: 'red',\n};\nconst truncator = '…';\nfunction colorise(value, styleType) {\n    const color = ansiColors[styles[styleType]] || ansiColors[styleType] || '';\n    if (!color) {\n        return String(value);\n    }\n    return `\\u001b[${color[0]}m${String(value)}\\u001b[${color[1]}m`;\n}\nfunction normaliseOptions({ showHidden = false, depth = 2, colors = false, customInspect = true, showProxy = false, maxArrayLength = Infinity, breakLength = Infinity, seen = [], \n// eslint-disable-next-line no-shadow\ntruncate = Infinity, stylize = String, } = {}, inspect) {\n    const options = {\n        showHidden: Boolean(showHidden),\n        depth: Number(depth),\n        colors: Boolean(colors),\n        customInspect: Boolean(customInspect),\n        showProxy: Boolean(showProxy),\n        maxArrayLength: Number(maxArrayLength),\n        breakLength: Number(breakLength),\n        truncate: Number(truncate),\n        seen,\n        inspect,\n        stylize,\n    };\n    if (options.colors) {\n        options.stylize = colorise;\n    }\n    return options;\n}\nfunction isHighSurrogate(char) {\n    return char >= '\\ud800' && char <= '\\udbff';\n}\nfunction truncate(string, length, tail = truncator) {\n    string = String(string);\n    const tailLength = tail.length;\n    const stringLength = string.length;\n    if (tailLength > length && stringLength > tailLength) {\n        return tail;\n    }\n    if (stringLength > length && stringLength > tailLength) {\n        let end = length - tailLength;\n        if (end > 0 && isHighSurrogate(string[end - 1])) {\n            end = end - 1;\n        }\n        return `${string.slice(0, end)}${tail}`;\n    }\n    return string;\n}\n// eslint-disable-next-line complexity\nfunction inspectList(list, options, inspectItem, separator = ', ') {\n    inspectItem = inspectItem || options.inspect;\n    const size = list.length;\n    if (size === 0)\n        return '';\n    const originalLength = options.truncate;\n    let output = '';\n    let peek = '';\n    let truncated = '';\n    for (let i = 0; i < size; i += 1) {\n        const last = i + 1 === list.length;\n        const secondToLast = i + 2 === list.length;\n        truncated = `${truncator}(${list.length - i})`;\n        const value = list[i];\n        // If there is more than one remaining we need to account for a separator of `, `\n        options.truncate = originalLength - output.length - (last ? 0 : separator.length);\n        const string = peek || inspectItem(value, options) + (last ? '' : separator);\n        const nextLength = output.length + string.length;\n        const truncatedLength = nextLength + truncated.length;\n        // If this is the last element, and adding it would\n        // take us over length, but adding the truncator wouldn't - then break now\n        if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n            break;\n        }\n        // If this isn't the last or second to last element to scan,\n        // but the string is already over length then break here\n        if (!last && !secondToLast && truncatedLength > originalLength) {\n            break;\n        }\n        // Peek at the next string to determine if we should\n        // break early before adding this item to the output\n        peek = last ? '' : inspectItem(list[i + 1], options) + (secondToLast ? '' : separator);\n        // If we have one element left, but this element and\n        // the next takes over length, the break early\n        if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n            break;\n        }\n        output += string;\n        // If the next element takes us to length -\n        // but there are more after that, then we should truncate now\n        if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n            truncated = `${truncator}(${list.length - i - 1})`;\n            break;\n        }\n        truncated = '';\n    }\n    return `${output}${truncated}`;\n}\nfunction quoteComplexKey(key) {\n    if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n        return key;\n    }\n    return JSON.stringify(key)\n        .replace(/'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\"')\n        .replace(/(^\"|\"$)/g, \"'\");\n}\nfunction inspectProperty([key, value], options) {\n    options.truncate -= 2;\n    if (typeof key === 'string') {\n        key = quoteComplexKey(key);\n    }\n    else if (typeof key !== 'number') {\n        key = `[${options.inspect(key, options)}]`;\n    }\n    options.truncate -= key.length;\n    value = options.inspect(value, options);\n    return `${key}: ${value}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/html.js":
/*!****************************************!*\
  !*** ./node_modules/loupe/lib/html.js ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectHTML; },\n/* harmony export */   inspectAttribute: function() { return /* binding */ inspectAttribute; },\n/* harmony export */   inspectHTMLCollection: function() { return /* binding */ inspectHTMLCollection; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectAttribute([key, value], options) {\n    options.truncate -= 3;\n    if (!value) {\n        return `${options.stylize(String(key), 'yellow')}`;\n    }\n    return `${options.stylize(String(key), 'yellow')}=${options.stylize(`\"${value}\"`, 'string')}`;\n}\n// @ts-ignore (Deno doesn't have Element)\nfunction inspectHTMLCollection(collection, options) {\n    // eslint-disable-next-line no-use-before-define\n    return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(collection, options, inspectHTML, '\\n');\n}\n// @ts-ignore (Deno doesn't have Element)\nfunction inspectHTML(element, options) {\n    const properties = element.getAttributeNames();\n    const name = element.tagName.toLowerCase();\n    const head = options.stylize(`<${name}`, 'special');\n    const headClose = options.stylize(`>`, 'special');\n    const tail = options.stylize(`</${name}>`, 'special');\n    options.truncate -= name.length * 2 + 5;\n    let propertyContents = '';\n    if (properties.length > 0) {\n        propertyContents += ' ';\n        propertyContents += (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(properties.map((key) => [key, element.getAttribute(key)]), options, inspectAttribute, ' ');\n    }\n    options.truncate -= propertyContents.length;\n    const truncate = options.truncate;\n    let children = inspectHTMLCollection(element.children, options);\n    if (children && children.length > truncate) {\n        children = `${_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncator}(${element.children.length})`;\n    }\n    return `${head}${propertyContents}${headClose}${children}${tail}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL2h0bWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzRDtBQUMvQztBQUNQO0FBQ0E7QUFDQSxrQkFBa0IsdUNBQXVDO0FBQ3pEO0FBQ0EsY0FBYyx1Q0FBdUMsR0FBRyxvQkFBb0IsTUFBTSxjQUFjO0FBQ2hHO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyx3REFBVztBQUN0QjtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0EscUNBQXFDLEtBQUs7QUFDMUM7QUFDQSxzQ0FBc0MsS0FBSztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix3REFBVztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFTLENBQUMsR0FBRyx3QkFBd0I7QUFDM0Q7QUFDQSxjQUFjLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEtBQUs7QUFDcEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvdXBlL2xpYi9odG1sLmpzPzEzYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdExpc3QsIHRydW5jYXRvciB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaW5zcGVjdEF0dHJpYnV0ZShba2V5LCB2YWx1ZV0sIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zLnRydW5jYXRlIC09IDM7XG4gICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICByZXR1cm4gYCR7b3B0aW9ucy5zdHlsaXplKFN0cmluZyhrZXkpLCAneWVsbG93Jyl9YDtcbiAgICB9XG4gICAgcmV0dXJuIGAke29wdGlvbnMuc3R5bGl6ZShTdHJpbmcoa2V5KSwgJ3llbGxvdycpfT0ke29wdGlvbnMuc3R5bGl6ZShgXCIke3ZhbHVlfVwiYCwgJ3N0cmluZycpfWA7XG59XG4vLyBAdHMtaWdub3JlIChEZW5vIGRvZXNuJ3QgaGF2ZSBFbGVtZW50KVxuZXhwb3J0IGZ1bmN0aW9uIGluc3BlY3RIVE1MQ29sbGVjdGlvbihjb2xsZWN0aW9uLCBvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgcmV0dXJuIGluc3BlY3RMaXN0KGNvbGxlY3Rpb24sIG9wdGlvbnMsIGluc3BlY3RIVE1MLCAnXFxuJyk7XG59XG4vLyBAdHMtaWdub3JlIChEZW5vIGRvZXNuJ3QgaGF2ZSBFbGVtZW50KVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdEhUTUwoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIGNvbnN0IHByb3BlcnRpZXMgPSBlbGVtZW50LmdldEF0dHJpYnV0ZU5hbWVzKCk7XG4gICAgY29uc3QgbmFtZSA9IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IGhlYWQgPSBvcHRpb25zLnN0eWxpemUoYDwke25hbWV9YCwgJ3NwZWNpYWwnKTtcbiAgICBjb25zdCBoZWFkQ2xvc2UgPSBvcHRpb25zLnN0eWxpemUoYD5gLCAnc3BlY2lhbCcpO1xuICAgIGNvbnN0IHRhaWwgPSBvcHRpb25zLnN0eWxpemUoYDwvJHtuYW1lfT5gLCAnc3BlY2lhbCcpO1xuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gbmFtZS5sZW5ndGggKiAyICsgNTtcbiAgICBsZXQgcHJvcGVydHlDb250ZW50cyA9ICcnO1xuICAgIGlmIChwcm9wZXJ0aWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcHJvcGVydHlDb250ZW50cyArPSAnICc7XG4gICAgICAgIHByb3BlcnR5Q29udGVudHMgKz0gaW5zcGVjdExpc3QocHJvcGVydGllcy5tYXAoKGtleSkgPT4gW2tleSwgZWxlbWVudC5nZXRBdHRyaWJ1dGUoa2V5KV0pLCBvcHRpb25zLCBpbnNwZWN0QXR0cmlidXRlLCAnICcpO1xuICAgIH1cbiAgICBvcHRpb25zLnRydW5jYXRlIC09IHByb3BlcnR5Q29udGVudHMubGVuZ3RoO1xuICAgIGNvbnN0IHRydW5jYXRlID0gb3B0aW9ucy50cnVuY2F0ZTtcbiAgICBsZXQgY2hpbGRyZW4gPSBpbnNwZWN0SFRNTENvbGxlY3Rpb24oZWxlbWVudC5jaGlsZHJlbiwgb3B0aW9ucyk7XG4gICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA+IHRydW5jYXRlKSB7XG4gICAgICAgIGNoaWxkcmVuID0gYCR7dHJ1bmNhdG9yfSgke2VsZW1lbnQuY2hpbGRyZW4ubGVuZ3RofSlgO1xuICAgIH1cbiAgICByZXR1cm4gYCR7aGVhZH0ke3Byb3BlcnR5Q29udGVudHN9JHtoZWFkQ2xvc2V9JHtjaGlsZHJlbn0ke3RhaWx9YDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/html.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/index.js":
/*!*****************************************!*\
  !*** ./node_modules/loupe/lib/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   custom: function() { return /* binding */ custom; },\n/* harmony export */   inspect: function() { return /* binding */ inspect; },\n/* harmony export */   registerConstructor: function() { return /* binding */ registerConstructor; },\n/* harmony export */   registerStringTag: function() { return /* binding */ registerStringTag; }\n/* harmony export */ });\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ \"./node_modules/loupe/lib/array.js\");\n/* harmony import */ var _typedarray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typedarray.js */ \"./node_modules/loupe/lib/typedarray.js\");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date.js */ \"./node_modules/loupe/lib/date.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./function.js */ \"./node_modules/loupe/lib/function.js\");\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map.js */ \"./node_modules/loupe/lib/map.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./number.js */ \"./node_modules/loupe/lib/number.js\");\n/* harmony import */ var _bigint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bigint.js */ \"./node_modules/loupe/lib/bigint.js\");\n/* harmony import */ var _regexp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./regexp.js */ \"./node_modules/loupe/lib/regexp.js\");\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./set.js */ \"./node_modules/loupe/lib/set.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./string.js */ \"./node_modules/loupe/lib/string.js\");\n/* harmony import */ var _symbol_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./symbol.js */ \"./node_modules/loupe/lib/symbol.js\");\n/* harmony import */ var _promise_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./promise.js */ \"./node_modules/loupe/lib/promise.js\");\n/* harmony import */ var _class_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./class.js */ \"./node_modules/loupe/lib/class.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./object.js */ \"./node_modules/loupe/lib/object.js\");\n/* harmony import */ var _arguments_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./arguments.js */ \"./node_modules/loupe/lib/arguments.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./error.js */ \"./node_modules/loupe/lib/error.js\");\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./html.js */ \"./node_modules/loupe/lib/html.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n/* !\n * loupe\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst symbolsSupported = typeof Symbol === 'function' && typeof Symbol.for === 'function';\nconst chaiInspect = symbolsSupported ? Symbol.for('chai/inspect') : '@@chai/inspect';\nlet nodeInspect = false;\ntry {\n    // eslint-disable-next-line global-require\n    // @ts-ignore\n    const nodeUtil = require('util');\n    nodeInspect = nodeUtil.inspect ? nodeUtil.inspect.custom : false;\n}\ncatch (noNodeInspect) {\n    nodeInspect = false;\n}\nconst constructorMap = new WeakMap();\nconst stringTagMap = {};\nconst baseTypesMap = {\n    undefined: (value, options) => options.stylize('undefined', 'undefined'),\n    null: (value, options) => options.stylize('null', 'null'),\n    boolean: (value, options) => options.stylize(String(value), 'boolean'),\n    Boolean: (value, options) => options.stylize(String(value), 'boolean'),\n    number: _number_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    Number: _number_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    bigint: _bigint_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    BigInt: _bigint_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    string: _string_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    String: _string_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    function: _function_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    Function: _function_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    symbol: _symbol_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    // A Symbol polyfill will return `Symbol` not `symbol` from typedetect\n    Symbol: _symbol_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    Array: _array_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    Date: _date_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    Map: _map_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    Set: _set_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    RegExp: _regexp_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    Promise: _promise_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    // WeakSet, WeakMap are totally opaque to us\n    WeakSet: (value, options) => options.stylize('WeakSet{…}', 'special'),\n    WeakMap: (value, options) => options.stylize('WeakMap{…}', 'special'),\n    Arguments: _arguments_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    Int8Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Uint8Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Uint8ClampedArray: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Int16Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Uint16Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Int32Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Uint32Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Float32Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Float64Array: _typedarray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Generator: () => '',\n    DataView: () => '',\n    ArrayBuffer: () => '',\n    Error: _error_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    HTMLCollection: _html_js__WEBPACK_IMPORTED_MODULE_16__.inspectHTMLCollection,\n    NodeList: _html_js__WEBPACK_IMPORTED_MODULE_16__.inspectHTMLCollection,\n};\n// eslint-disable-next-line complexity\nconst inspectCustom = (value, options, type) => {\n    if (chaiInspect in value && typeof value[chaiInspect] === 'function') {\n        return value[chaiInspect](options);\n    }\n    if (nodeInspect && nodeInspect in value && typeof value[nodeInspect] === 'function') {\n        return value[nodeInspect](options.depth, options);\n    }\n    if ('inspect' in value && typeof value.inspect === 'function') {\n        return value.inspect(options.depth, options);\n    }\n    if ('constructor' in value && constructorMap.has(value.constructor)) {\n        return constructorMap.get(value.constructor)(value, options);\n    }\n    if (stringTagMap[type]) {\n        return stringTagMap[type](value, options);\n    }\n    return '';\n};\nconst toString = Object.prototype.toString;\n// eslint-disable-next-line complexity\nfunction inspect(value, opts = {}) {\n    const options = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_17__.normaliseOptions)(opts, inspect);\n    const { customInspect } = options;\n    let type = value === null ? 'null' : typeof value;\n    if (type === 'object') {\n        type = toString.call(value).slice(8, -1);\n    }\n    // If it is a base value that we already support, then use Loupe's inspector\n    if (type in baseTypesMap) {\n        return baseTypesMap[type](value, options);\n    }\n    // If `options.customInspect` is set to true then try to use the custom inspector\n    if (customInspect && value) {\n        const output = inspectCustom(value, options, type);\n        if (output) {\n            if (typeof output === 'string')\n                return output;\n            return inspect(output, options);\n        }\n    }\n    const proto = value ? Object.getPrototypeOf(value) : false;\n    // If it's a plain Object then use Loupe's inspector\n    if (proto === Object.prototype || proto === null) {\n        return (0,_object_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(value, options);\n    }\n    // Specifically account for HTMLElements\n    // @ts-ignore\n    if (value && typeof HTMLElement === 'function' && value instanceof HTMLElement) {\n        return (0,_html_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(value, options);\n    }\n    if ('constructor' in value) {\n        // If it is a class, inspect it like an object but add the constructor name\n        if (value.constructor !== Object) {\n            return (0,_class_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(value, options);\n        }\n        // If it is an object with an anonymous prototype, display it as an object.\n        return (0,_object_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(value, options);\n    }\n    // last chance to check if it's an object\n    if (value === Object(value)) {\n        return (0,_object_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(value, options);\n    }\n    // We have run out of options! Just stringify the value\n    return options.stylize(String(value), type);\n}\nfunction registerConstructor(constructor, inspector) {\n    if (constructorMap.has(constructor)) {\n        return false;\n    }\n    constructorMap.set(constructor, inspector);\n    return true;\n}\nfunction registerStringTag(stringTag, inspector) {\n    if (stringTag in stringTagMap) {\n        return false;\n    }\n    stringTagMap[stringTag] = inspector;\n    return true;\n}\nconst custom = chaiInspect;\n/* harmony default export */ __webpack_exports__[\"default\"] = (inspect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/map.js":
/*!***************************************!*\
  !*** ./node_modules/loupe/lib/map.js ***!
  \***************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectMap; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectMapEntry([key, value], options) {\n    options.truncate -= 4;\n    key = options.inspect(key, options);\n    options.truncate -= key.length;\n    value = options.inspect(value, options);\n    return `${key} => ${value}`;\n}\n// IE11 doesn't support `map.entries()`\nfunction mapToEntries(map) {\n    const entries = [];\n    map.forEach((value, key) => {\n        entries.push([key, value]);\n    });\n    return entries;\n}\nfunction inspectMap(map, options) {\n    const size = map.size - 1;\n    if (size <= 0) {\n        return 'Map{}';\n    }\n    options.truncate -= 7;\n    return `Map{ ${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(mapToEntries(map), options, inspectMapEntry)} }`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL21hcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxLQUFLLEtBQUssTUFBTTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCLEVBQUUsd0RBQVcsZ0RBQWdEO0FBQzlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb3VwZS9saWIvbWFwLmpzPzEyZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdExpc3QgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZnVuY3Rpb24gaW5zcGVjdE1hcEVudHJ5KFtrZXksIHZhbHVlXSwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gNDtcbiAgICBrZXkgPSBvcHRpb25zLmluc3BlY3Qoa2V5LCBvcHRpb25zKTtcbiAgICBvcHRpb25zLnRydW5jYXRlIC09IGtleS5sZW5ndGg7XG4gICAgdmFsdWUgPSBvcHRpb25zLmluc3BlY3QodmFsdWUsIG9wdGlvbnMpO1xuICAgIHJldHVybiBgJHtrZXl9ID0+ICR7dmFsdWV9YDtcbn1cbi8vIElFMTEgZG9lc24ndCBzdXBwb3J0IGBtYXAuZW50cmllcygpYFxuZnVuY3Rpb24gbWFwVG9FbnRyaWVzKG1hcCkge1xuICAgIGNvbnN0IGVudHJpZXMgPSBbXTtcbiAgICBtYXAuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBlbnRyaWVzLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZW50cmllcztcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc3BlY3RNYXAobWFwLCBvcHRpb25zKSB7XG4gICAgY29uc3Qgc2l6ZSA9IG1hcC5zaXplIC0gMTtcbiAgICBpZiAoc2l6ZSA8PSAwKSB7XG4gICAgICAgIHJldHVybiAnTWFwe30nO1xuICAgIH1cbiAgICBvcHRpb25zLnRydW5jYXRlIC09IDc7XG4gICAgcmV0dXJuIGBNYXB7ICR7aW5zcGVjdExpc3QobWFwVG9FbnRyaWVzKG1hcCksIG9wdGlvbnMsIGluc3BlY3RNYXBFbnRyeSl9IH1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/map.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/number.js":
/*!******************************************!*\
  !*** ./node_modules/loupe/lib/number.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectNumber; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nconst isNaN = Number.isNaN || (i => i !== i); // eslint-disable-line no-self-compare\nfunction inspectNumber(number, options) {\n    if (isNaN(number)) {\n        return options.stylize('NaN', 'number');\n    }\n    if (number === Infinity) {\n        return options.stylize('Infinity', 'number');\n    }\n    if (number === -Infinity) {\n        return options.stylize('-Infinity', 'number');\n    }\n    if (number === 0) {\n        return options.stylize(1 / number === Infinity ? '+0' : '-0', 'number');\n    }\n    return options.stylize((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(String(number), options.truncate), 'number');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL251bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4Qyw4Q0FBOEM7QUFDL0I7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscURBQVE7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvdXBlL2xpYi9udW1iZXIuanM/MDkwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0cnVuY2F0ZSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5jb25zdCBpc05hTiA9IE51bWJlci5pc05hTiB8fCAoaSA9PiBpICE9PSBpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zZWxmLWNvbXBhcmVcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc3BlY3ROdW1iZXIobnVtYmVyLCBvcHRpb25zKSB7XG4gICAgaWYgKGlzTmFOKG51bWJlcikpIHtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuc3R5bGl6ZSgnTmFOJywgJ251bWJlcicpO1xuICAgIH1cbiAgICBpZiAobnVtYmVyID09PSBJbmZpbml0eSkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5zdHlsaXplKCdJbmZpbml0eScsICdudW1iZXInKTtcbiAgICB9XG4gICAgaWYgKG51bWJlciA9PT0gLUluZmluaXR5KSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zLnN0eWxpemUoJy1JbmZpbml0eScsICdudW1iZXInKTtcbiAgICB9XG4gICAgaWYgKG51bWJlciA9PT0gMCkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5zdHlsaXplKDEgLyBudW1iZXIgPT09IEluZmluaXR5ID8gJyswJyA6ICctMCcsICdudW1iZXInKTtcbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnMuc3R5bGl6ZSh0cnVuY2F0ZShTdHJpbmcobnVtYmVyKSwgb3B0aW9ucy50cnVuY2F0ZSksICdudW1iZXInKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/number.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/object.js":
/*!******************************************!*\
  !*** ./node_modules/loupe/lib/object.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectObject; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectObject(object, options) {\n    const properties = Object.getOwnPropertyNames(object);\n    const symbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object) : [];\n    if (properties.length === 0 && symbols.length === 0) {\n        return '{}';\n    }\n    options.truncate -= 4;\n    options.seen = options.seen || [];\n    if (options.seen.indexOf(object) >= 0) {\n        return '[Circular]';\n    }\n    options.seen.push(object);\n    const propertyContents = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(properties.map(key => [key, object[key]]), options, _helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectProperty);\n    const symbolContents = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(symbols.map(key => [key, object[key]]), options, _helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectProperty);\n    options.seen.pop();\n    let sep = '';\n    if (propertyContents && symbolContents) {\n        sep = ', ';\n    }\n    return `{ ${propertyContents}${sep}${symbolContents} }`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL29iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0RDtBQUM3QztBQUNmO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix3REFBVyxxREFBcUQsd0RBQWU7QUFDNUcsMkJBQTJCLHdEQUFXLGtEQUFrRCx3REFBZTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxpQkFBaUI7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvdXBlL2xpYi9vYmplY3QuanM/NTJiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNwZWN0TGlzdCwgaW5zcGVjdFByb3BlcnR5IH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc3BlY3RPYmplY3Qob2JqZWN0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgcHJvcGVydGllcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iamVjdCk7XG4gICAgY29uc3Qgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCkgOiBbXTtcbiAgICBpZiAocHJvcGVydGllcy5sZW5ndGggPT09IDAgJiYgc3ltYm9scy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICd7fSc7XG4gICAgfVxuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gNDtcbiAgICBvcHRpb25zLnNlZW4gPSBvcHRpb25zLnNlZW4gfHwgW107XG4gICAgaWYgKG9wdGlvbnMuc2Vlbi5pbmRleE9mKG9iamVjdCkgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1tDaXJjdWxhcl0nO1xuICAgIH1cbiAgICBvcHRpb25zLnNlZW4ucHVzaChvYmplY3QpO1xuICAgIGNvbnN0IHByb3BlcnR5Q29udGVudHMgPSBpbnNwZWN0TGlzdChwcm9wZXJ0aWVzLm1hcChrZXkgPT4gW2tleSwgb2JqZWN0W2tleV1dKSwgb3B0aW9ucywgaW5zcGVjdFByb3BlcnR5KTtcbiAgICBjb25zdCBzeW1ib2xDb250ZW50cyA9IGluc3BlY3RMaXN0KHN5bWJvbHMubWFwKGtleSA9PiBba2V5LCBvYmplY3Rba2V5XV0pLCBvcHRpb25zLCBpbnNwZWN0UHJvcGVydHkpO1xuICAgIG9wdGlvbnMuc2Vlbi5wb3AoKTtcbiAgICBsZXQgc2VwID0gJyc7XG4gICAgaWYgKHByb3BlcnR5Q29udGVudHMgJiYgc3ltYm9sQ29udGVudHMpIHtcbiAgICAgICAgc2VwID0gJywgJztcbiAgICB9XG4gICAgcmV0dXJuIGB7ICR7cHJvcGVydHlDb250ZW50c30ke3NlcH0ke3N5bWJvbENvbnRlbnRzfSB9YDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/object.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/promise.js":
/*!*******************************************!*\
  !*** ./node_modules/loupe/lib/promise.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nlet getPromiseValue = () => 'Promise{…}';\ntry {\n    // @ts-ignore\n    const { getPromiseDetails, kPending, kRejected } = process.binding('util');\n    if (Array.isArray(getPromiseDetails(Promise.resolve()))) {\n        getPromiseValue = (value, options) => {\n            const [state, innerValue] = getPromiseDetails(value);\n            if (state === kPending) {\n                return 'Promise{<pending>}';\n            }\n            return `Promise${state === kRejected ? '!' : ''}{${options.inspect(innerValue, options)}}`;\n        };\n    }\n}\ncatch (notNode) {\n    /* ignore */\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (getPromiseValue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3Byb21pc2UuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBcUMsRUFBRTtBQUN2QztBQUNBO0FBQ0EsWUFBWSx5Q0FBeUMsRUFBRSxPQUFPO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVU7QUFDMUM7QUFDQSw2QkFBNkIsZ0NBQWdDLEVBQUUsc0NBQXNDO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUFlLGVBQWUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3Byb21pc2UuanM/NmM1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZ2V0UHJvbWlzZVZhbHVlID0gKCkgPT4gJ1Byb21pc2V74oCmfSc7XG50cnkge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBjb25zdCB7IGdldFByb21pc2VEZXRhaWxzLCBrUGVuZGluZywga1JlamVjdGVkIH0gPSBwcm9jZXNzLmJpbmRpbmcoJ3V0aWwnKTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShnZXRQcm9taXNlRGV0YWlscyhQcm9taXNlLnJlc29sdmUoKSkpKSB7XG4gICAgICAgIGdldFByb21pc2VWYWx1ZSA9ICh2YWx1ZSwgb3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgY29uc3QgW3N0YXRlLCBpbm5lclZhbHVlXSA9IGdldFByb21pc2VEZXRhaWxzKHZhbHVlKTtcbiAgICAgICAgICAgIGlmIChzdGF0ZSA9PT0ga1BlbmRpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ1Byb21pc2V7PHBlbmRpbmc+fSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYFByb21pc2Uke3N0YXRlID09PSBrUmVqZWN0ZWQgPyAnIScgOiAnJ317JHtvcHRpb25zLmluc3BlY3QoaW5uZXJWYWx1ZSwgb3B0aW9ucyl9fWA7XG4gICAgICAgIH07XG4gICAgfVxufVxuY2F0Y2ggKG5vdE5vZGUpIHtcbiAgICAvKiBpZ25vcmUgKi9cbn1cbmV4cG9ydCBkZWZhdWx0IGdldFByb21pc2VWYWx1ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/promise.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/regexp.js":
/*!******************************************!*\
  !*** ./node_modules/loupe/lib/regexp.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectRegExp; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nfunction inspectRegExp(value, options) {\n    const flags = value.toString().split('/')[2];\n    const sourceLength = options.truncate - (2 + flags.length);\n    const source = value.source;\n    return options.stylize(`/${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(source, sourceLength)}/${flags}`, 'regexp');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3JlZ2V4cC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN6QjtBQUNmO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixxREFBUSx1QkFBdUIsR0FBRyxNQUFNO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb3VwZS9saWIvcmVnZXhwLmpzPzg0ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHJ1bmNhdGUgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdFJlZ0V4cCh2YWx1ZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGZsYWdzID0gdmFsdWUudG9TdHJpbmcoKS5zcGxpdCgnLycpWzJdO1xuICAgIGNvbnN0IHNvdXJjZUxlbmd0aCA9IG9wdGlvbnMudHJ1bmNhdGUgLSAoMiArIGZsYWdzLmxlbmd0aCk7XG4gICAgY29uc3Qgc291cmNlID0gdmFsdWUuc291cmNlO1xuICAgIHJldHVybiBvcHRpb25zLnN0eWxpemUoYC8ke3RydW5jYXRlKHNvdXJjZSwgc291cmNlTGVuZ3RoKX0vJHtmbGFnc31gLCAncmVnZXhwJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/regexp.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/set.js":
/*!***************************************!*\
  !*** ./node_modules/loupe/lib/set.js ***!
  \***************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectSet; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\n// IE11 doesn't support `Array.from(set)`\nfunction arrayFromSet(set) {\n    const values = [];\n    set.forEach(value => {\n        values.push(value);\n    });\n    return values;\n}\nfunction inspectSet(set, options) {\n    if (set.size === 0)\n        return 'Set{}';\n    options.truncate -= 7;\n    return `Set{ ${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(arrayFromSet(set), options)} }`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3NldC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDZTtBQUNmO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsaUJBQWlCLEVBQUUsd0RBQVcsK0JBQStCO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb3VwZS9saWIvc2V0LmpzPzYxNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdExpc3QgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuLy8gSUUxMSBkb2Vzbid0IHN1cHBvcnQgYEFycmF5LmZyb20oc2V0KWBcbmZ1bmN0aW9uIGFycmF5RnJvbVNldChzZXQpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICBzZXQuZm9yRWFjaCh2YWx1ZSA9PiB7XG4gICAgICAgIHZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsdWVzO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdFNldChzZXQsIG9wdGlvbnMpIHtcbiAgICBpZiAoc2V0LnNpemUgPT09IDApXG4gICAgICAgIHJldHVybiAnU2V0e30nO1xuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gNztcbiAgICByZXR1cm4gYFNldHsgJHtpbnNwZWN0TGlzdChhcnJheUZyb21TZXQoc2V0KSwgb3B0aW9ucyl9IH1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/set.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/string.js":
/*!******************************************!*\
  !*** ./node_modules/loupe/lib/string.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectString; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n\nconst stringEscapeChars = new RegExp(\"['\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\" +\n    '\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]', 'g');\nconst escapeCharacters = {\n    '\\b': '\\\\b',\n    '\\t': '\\\\t',\n    '\\n': '\\\\n',\n    '\\f': '\\\\f',\n    '\\r': '\\\\r',\n    \"'\": \"\\\\'\",\n    '\\\\': '\\\\\\\\',\n};\nconst hex = 16;\nconst unicodeLength = 4;\nfunction escape(char) {\n    return (escapeCharacters[char] ||\n        `\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`);\n}\nfunction inspectString(string, options) {\n    if (stringEscapeChars.test(string)) {\n        string = string.replace(stringEscapeChars, escape);\n    }\n    return options.stylize(`'${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(string, options.truncate - 2)}'`, 'string');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU8saUNBQWlDLHdCQUF3QjtBQUM5RTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHFEQUFRLCtCQUErQjtBQUN0RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3N0cmluZy5qcz9kNzk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRydW5jYXRlIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmNvbnN0IHN0cmluZ0VzY2FwZUNoYXJzID0gbmV3IFJlZ0V4cChcIlsnXFxcXHUwMDAwLVxcXFx1MDAxZlxcXFx1MDA3Zi1cXFxcdTAwOWZcXFxcdTAwYWRcXFxcdTA2MDAtXFxcXHUwNjA0XFxcXHUwNzBmXFxcXHUxN2I0XFxcXHUxN2I1XCIgK1xuICAgICdcXFxcdTIwMGMtXFxcXHUyMDBmXFxcXHUyMDI4LVxcXFx1MjAyZlxcXFx1MjA2MC1cXFxcdTIwNmZcXFxcdWZlZmZcXFxcdWZmZjAtXFxcXHVmZmZmXScsICdnJyk7XG5jb25zdCBlc2NhcGVDaGFyYWN0ZXJzID0ge1xuICAgICdcXGInOiAnXFxcXGInLFxuICAgICdcXHQnOiAnXFxcXHQnLFxuICAgICdcXG4nOiAnXFxcXG4nLFxuICAgICdcXGYnOiAnXFxcXGYnLFxuICAgICdcXHInOiAnXFxcXHInLFxuICAgIFwiJ1wiOiBcIlxcXFwnXCIsXG4gICAgJ1xcXFwnOiAnXFxcXFxcXFwnLFxufTtcbmNvbnN0IGhleCA9IDE2O1xuY29uc3QgdW5pY29kZUxlbmd0aCA9IDQ7XG5mdW5jdGlvbiBlc2NhcGUoY2hhcikge1xuICAgIHJldHVybiAoZXNjYXBlQ2hhcmFjdGVyc1tjaGFyXSB8fFxuICAgICAgICBgXFxcXHUke2AwMDAwJHtjaGFyLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoaGV4KX1gLnNsaWNlKC11bmljb2RlTGVuZ3RoKX1gKTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc3BlY3RTdHJpbmcoc3RyaW5nLCBvcHRpb25zKSB7XG4gICAgaWYgKHN0cmluZ0VzY2FwZUNoYXJzLnRlc3Qoc3RyaW5nKSkge1xuICAgICAgICBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShzdHJpbmdFc2NhcGVDaGFycywgZXNjYXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnMuc3R5bGl6ZShgJyR7dHJ1bmNhdGUoc3RyaW5nLCBvcHRpb25zLnRydW5jYXRlIC0gMil9J2AsICdzdHJpbmcnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/string.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/symbol.js":
/*!******************************************!*\
  !*** ./node_modules/loupe/lib/symbol.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectSymbol; }\n/* harmony export */ });\nfunction inspectSymbol(value) {\n    if ('description' in Symbol.prototype) {\n        return value.description ? `Symbol(${value.description})` : 'Symbol()';\n    }\n    return value.toString();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3N5bWJvbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBLDZDQUE2QyxrQkFBa0I7QUFDL0Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb3VwZS9saWIvc3ltYm9sLmpzP2IxZjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5zcGVjdFN5bWJvbCh2YWx1ZSkge1xuICAgIGlmICgnZGVzY3JpcHRpb24nIGluIFN5bWJvbC5wcm90b3R5cGUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmRlc2NyaXB0aW9uID8gYFN5bWJvbCgke3ZhbHVlLmRlc2NyaXB0aW9ufSlgIDogJ1N5bWJvbCgpJztcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/symbol.js\n"));

/***/ }),

/***/ "./node_modules/loupe/lib/typedarray.js":
/*!**********************************************!*\
  !*** ./node_modules/loupe/lib/typedarray.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ inspectTypedArray; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/loupe/lib/helpers.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\nconst getArrayName = (array) => {\n    // We need to special case Node.js' Buffers, which report to be Uint8Array\n    // @ts-ignore\n    if (typeof Buffer === 'function' && array instanceof Buffer) {\n        return 'Buffer';\n    }\n    if (array[Symbol.toStringTag]) {\n        return array[Symbol.toStringTag];\n    }\n    return array.constructor.name;\n};\nfunction inspectTypedArray(array, options) {\n    const name = getArrayName(array);\n    options.truncate -= name.length + 4;\n    // Object.keys will always output the Array indices first, so we can slice by\n    // `array.length` to get non-index properties\n    const nonIndexProperties = Object.keys(array).slice(array.length);\n    if (!array.length && !nonIndexProperties.length)\n        return `${name}[]`;\n    // As we know TypedArrays only contain Unsigned Integers, we can skip inspecting each one and simply\n    // stylise the toString() value of them\n    let output = '';\n    for (let i = 0; i < array.length; i++) {\n        const string = `${options.stylize((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncate)(array[i], options.truncate), 'number')}${i === array.length - 1 ? '' : ', '}`;\n        options.truncate -= string.length;\n        if (array[i] !== array.length && options.truncate <= 3) {\n            output += `${_helpers_js__WEBPACK_IMPORTED_MODULE_0__.truncator}(${array.length - array[i] + 1})`;\n            break;\n        }\n        output += string;\n    }\n    let propertyContents = '';\n    if (nonIndexProperties.length) {\n        propertyContents = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectList)(nonIndexProperties.map(key => [key, array[key]]), options, _helpers_js__WEBPACK_IMPORTED_MODULE_0__.inspectProperty);\n    }\n    return `${name}[ ${output}${propertyContents ? `, ${propertyContents}` : ''} ]`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG91cGUvbGliL3R5cGVkYXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTSxvQ0FBb0MsTUFBTTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLEtBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QywwQkFBMEIsZ0JBQWdCLHFEQUFRLHdDQUF3QyxFQUFFLG1DQUFtQztBQUMvSDtBQUNBO0FBQ0EseUJBQXlCLGtEQUFTLENBQUMsR0FBRyw0QkFBNEI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHdEQUFXLDREQUE0RCx3REFBZTtBQUNqSDtBQUNBLGNBQWMsS0FBSyxJQUFJLE9BQU8sRUFBRSx3QkFBd0IsaUJBQWlCLFFBQVE7QUFDakYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvdXBlL2xpYi90eXBlZGFycmF5LmpzPzI4Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdExpc3QsIGluc3BlY3RQcm9wZXJ0eSwgdHJ1bmNhdGUsIHRydW5jYXRvciB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5jb25zdCBnZXRBcnJheU5hbWUgPSAoYXJyYXkpID0+IHtcbiAgICAvLyBXZSBuZWVkIHRvIHNwZWNpYWwgY2FzZSBOb2RlLmpzJyBCdWZmZXJzLCB3aGljaCByZXBvcnQgdG8gYmUgVWludDhBcnJheVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAodHlwZW9mIEJ1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBhcnJheSBpbnN0YW5jZW9mIEJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gJ0J1ZmZlcic7XG4gICAgfVxuICAgIGlmIChhcnJheVtTeW1ib2wudG9TdHJpbmdUYWddKSB7XG4gICAgICAgIHJldHVybiBhcnJheVtTeW1ib2wudG9TdHJpbmdUYWddO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXkuY29uc3RydWN0b3IubmFtZTtcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbnNwZWN0VHlwZWRBcnJheShhcnJheSwgb3B0aW9ucykge1xuICAgIGNvbnN0IG5hbWUgPSBnZXRBcnJheU5hbWUoYXJyYXkpO1xuICAgIG9wdGlvbnMudHJ1bmNhdGUgLT0gbmFtZS5sZW5ndGggKyA0O1xuICAgIC8vIE9iamVjdC5rZXlzIHdpbGwgYWx3YXlzIG91dHB1dCB0aGUgQXJyYXkgaW5kaWNlcyBmaXJzdCwgc28gd2UgY2FuIHNsaWNlIGJ5XG4gICAgLy8gYGFycmF5Lmxlbmd0aGAgdG8gZ2V0IG5vbi1pbmRleCBwcm9wZXJ0aWVzXG4gICAgY29uc3Qgbm9uSW5kZXhQcm9wZXJ0aWVzID0gT2JqZWN0LmtleXMoYXJyYXkpLnNsaWNlKGFycmF5Lmxlbmd0aCk7XG4gICAgaWYgKCFhcnJheS5sZW5ndGggJiYgIW5vbkluZGV4UHJvcGVydGllcy5sZW5ndGgpXG4gICAgICAgIHJldHVybiBgJHtuYW1lfVtdYDtcbiAgICAvLyBBcyB3ZSBrbm93IFR5cGVkQXJyYXlzIG9ubHkgY29udGFpbiBVbnNpZ25lZCBJbnRlZ2Vycywgd2UgY2FuIHNraXAgaW5zcGVjdGluZyBlYWNoIG9uZSBhbmQgc2ltcGx5XG4gICAgLy8gc3R5bGlzZSB0aGUgdG9TdHJpbmcoKSB2YWx1ZSBvZiB0aGVtXG4gICAgbGV0IG91dHB1dCA9ICcnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgc3RyaW5nID0gYCR7b3B0aW9ucy5zdHlsaXplKHRydW5jYXRlKGFycmF5W2ldLCBvcHRpb25zLnRydW5jYXRlKSwgJ251bWJlcicpfSR7aSA9PT0gYXJyYXkubGVuZ3RoIC0gMSA/ICcnIDogJywgJ31gO1xuICAgICAgICBvcHRpb25zLnRydW5jYXRlIC09IHN0cmluZy5sZW5ndGg7XG4gICAgICAgIGlmIChhcnJheVtpXSAhPT0gYXJyYXkubGVuZ3RoICYmIG9wdGlvbnMudHJ1bmNhdGUgPD0gMykge1xuICAgICAgICAgICAgb3V0cHV0ICs9IGAke3RydW5jYXRvcn0oJHthcnJheS5sZW5ndGggLSBhcnJheVtpXSArIDF9KWA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBvdXRwdXQgKz0gc3RyaW5nO1xuICAgIH1cbiAgICBsZXQgcHJvcGVydHlDb250ZW50cyA9ICcnO1xuICAgIGlmIChub25JbmRleFByb3BlcnRpZXMubGVuZ3RoKSB7XG4gICAgICAgIHByb3BlcnR5Q29udGVudHMgPSBpbnNwZWN0TGlzdChub25JbmRleFByb3BlcnRpZXMubWFwKGtleSA9PiBba2V5LCBhcnJheVtrZXldXSksIG9wdGlvbnMsIGluc3BlY3RQcm9wZXJ0eSk7XG4gICAgfVxuICAgIHJldHVybiBgJHtuYW1lfVsgJHtvdXRwdXR9JHtwcm9wZXJ0eUNvbnRlbnRzID8gYCwgJHtwcm9wZXJ0eUNvbnRlbnRzfWAgOiAnJ30gXWA7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/loupe/lib/typedarray.js\n"));

/***/ }),

/***/ "./node_modules/pathe/dist/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/pathe/dist/index.mjs ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   basename: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.h; },\n/* harmony export */   \"default\": function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.p; },\n/* harmony export */   delimiter: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.d; },\n/* harmony export */   dirname: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.f; },\n/* harmony export */   extname: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.e; },\n/* harmony export */   format: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.g; },\n/* harmony export */   isAbsolute: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.i; },\n/* harmony export */   join: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.j; },\n/* harmony export */   normalize: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.a; },\n/* harmony export */   normalizeString: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.b; },\n/* harmony export */   parse: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.k; },\n/* harmony export */   relative: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.c; },\n/* harmony export */   resolve: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.r; },\n/* harmony export */   sep: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.s; },\n/* harmony export */   toNamespacedPath: function() { return /* reexport safe */ _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__.t; }\n/* harmony export */ });\n/* harmony import */ var _shared_pathe_ff20891b_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/pathe.ff20891b.mjs */ \"./node_modules/pathe/dist/shared/pathe.ff20891b.mjs\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcGF0aGUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcGF0aGUvZGlzdC9pbmRleC5tanM/MGI3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBoIGFzIGJhc2VuYW1lLCBwIGFzIGRlZmF1bHQsIGQgYXMgZGVsaW1pdGVyLCBmIGFzIGRpcm5hbWUsIGUgYXMgZXh0bmFtZSwgZyBhcyBmb3JtYXQsIGkgYXMgaXNBYnNvbHV0ZSwgaiBhcyBqb2luLCBhIGFzIG5vcm1hbGl6ZSwgYiBhcyBub3JtYWxpemVTdHJpbmcsIGsgYXMgcGFyc2UsIGMgYXMgcmVsYXRpdmUsIHIgYXMgcmVzb2x2ZSwgcyBhcyBzZXAsIHQgYXMgdG9OYW1lc3BhY2VkUGF0aCB9IGZyb20gJy4vc2hhcmVkL3BhdGhlLmZmMjA4OTFiLm1qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/pathe/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/pathe/dist/shared/pathe.ff20891b.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/pathe/dist/shared/pathe.ff20891b.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ normalize; },\n/* harmony export */   b: function() { return /* binding */ normalizeString; },\n/* harmony export */   c: function() { return /* binding */ relative; },\n/* harmony export */   d: function() { return /* binding */ delimiter; },\n/* harmony export */   e: function() { return /* binding */ extname; },\n/* harmony export */   f: function() { return /* binding */ dirname; },\n/* harmony export */   g: function() { return /* binding */ format; },\n/* harmony export */   h: function() { return /* binding */ basename; },\n/* harmony export */   i: function() { return /* binding */ isAbsolute; },\n/* harmony export */   j: function() { return /* binding */ join; },\n/* harmony export */   k: function() { return /* binding */ parse; },\n/* harmony export */   n: function() { return /* binding */ normalizeWindowsPath; },\n/* harmony export */   p: function() { return /* binding */ path; },\n/* harmony export */   r: function() { return /* binding */ resolve; },\n/* harmony export */   s: function() { return /* binding */ sep; },\n/* harmony export */   t: function() { return /* binding */ toNamespacedPath; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nconst _DRIVE_LETTER_START_RE = /^[A-Za-z]:\\//;\nfunction normalizeWindowsPath(input = \"\") {\n  if (!input) {\n    return input;\n  }\n  return input.replace(/\\\\/g, \"/\").replace(_DRIVE_LETTER_START_RE, (r) => r.toUpperCase());\n}\n\nconst _UNC_REGEX = /^[/\\\\]{2}/;\nconst _IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;\nconst _DRIVE_LETTER_RE = /^[A-Za-z]:$/;\nconst _ROOT_FOLDER_RE = /^\\/([A-Za-z]:)?$/;\nconst sep = \"/\";\nconst delimiter = \":\";\nconst normalize = function(path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  path = normalizeWindowsPath(path);\n  const isUNCPath = path.match(_UNC_REGEX);\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSeparator = path[path.length - 1] === \"/\";\n  path = normalizeString(path, !isPathAbsolute);\n  if (path.length === 0) {\n    if (isPathAbsolute) {\n      return \"/\";\n    }\n    return trailingSeparator ? \"./\" : \".\";\n  }\n  if (trailingSeparator) {\n    path += \"/\";\n  }\n  if (_DRIVE_LETTER_RE.test(path)) {\n    path += \"/\";\n  }\n  if (isUNCPath) {\n    if (!isPathAbsolute) {\n      return `//./${path}`;\n    }\n    return `//${path}`;\n  }\n  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;\n};\nconst join = function(...arguments_) {\n  if (arguments_.length === 0) {\n    return \".\";\n  }\n  let joined;\n  for (const argument of arguments_) {\n    if (argument && argument.length > 0) {\n      if (joined === void 0) {\n        joined = argument;\n      } else {\n        joined += `/${argument}`;\n      }\n    }\n  }\n  if (joined === void 0) {\n    return \".\";\n  }\n  return normalize(joined.replace(/\\/\\/+/g, \"/\"));\n};\nfunction cwd() {\n  if (typeof process !== \"undefined\" && typeof process.cwd === \"function\") {\n    return process.cwd().replace(/\\\\/g, \"/\");\n  }\n  return \"/\";\n}\nconst resolve = function(...arguments_) {\n  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));\n  let resolvedPath = \"\";\n  let resolvedAbsolute = false;\n  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {\n    const path = index >= 0 ? arguments_[index] : cwd();\n    if (!path || path.length === 0) {\n      continue;\n    }\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = isAbsolute(path);\n  }\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);\n  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {\n    return `/${resolvedPath}`;\n  }\n  return resolvedPath.length > 0 ? resolvedPath : \".\";\n};\nfunction normalizeString(path, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let char = null;\n  for (let index = 0; index <= path.length; ++index) {\n    if (index < path.length) {\n      char = path[index];\n    } else if (char === \"/\") {\n      break;\n    } else {\n      char = \"/\";\n    }\n    if (char === \"/\") {\n      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== \".\" || res[res.length - 2] !== \".\") {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex === -1) {\n              res = \"\";\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n            }\n            lastSlash = index;\n            dots = 0;\n            continue;\n          } else if (res.length > 0) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path.slice(lastSlash + 1, index)}`;\n        } else {\n          res = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (char === \".\" && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst isAbsolute = function(p) {\n  return _IS_ABSOLUTE_RE.test(p);\n};\nconst toNamespacedPath = function(p) {\n  return normalizeWindowsPath(p);\n};\nconst _EXTNAME_RE = /.(\\.[^./]+)$/;\nconst extname = function(p) {\n  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));\n  return match && match[1] || \"\";\n};\nconst relative = function(from, to) {\n  const _from = resolve(from).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  const _to = resolve(to).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  if (_to[0][1] === \":\" && _from[0][1] === \":\" && _from[0] !== _to[0]) {\n    return _to.join(\"/\");\n  }\n  const _fromCopy = [..._from];\n  for (const segment of _fromCopy) {\n    if (_to[0] !== segment) {\n      break;\n    }\n    _from.shift();\n    _to.shift();\n  }\n  return [..._from.map(() => \"..\"), ..._to].join(\"/\");\n};\nconst dirname = function(p) {\n  const segments = normalizeWindowsPath(p).replace(/\\/$/, \"\").split(\"/\").slice(0, -1);\n  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {\n    segments[0] += \"/\";\n  }\n  return segments.join(\"/\") || (isAbsolute(p) ? \"/\" : \".\");\n};\nconst format = function(p) {\n  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);\n  return normalizeWindowsPath(\n    p.root ? resolve(...segments) : segments.join(\"/\")\n  );\n};\nconst basename = function(p, extension) {\n  const lastSegment = normalizeWindowsPath(p).split(\"/\").pop();\n  return extension && lastSegment.endsWith(extension) ? lastSegment.slice(0, -extension.length) : lastSegment;\n};\nconst parse = function(p) {\n  const root = normalizeWindowsPath(p).split(\"/\").shift() || \"/\";\n  const base = basename(p);\n  const extension = extname(base);\n  return {\n    root,\n    dir: dirname(p),\n    base,\n    ext: extension,\n    name: base.slice(0, base.length - extension.length)\n  };\n};\n\nconst path = {\n  __proto__: null,\n  basename: basename,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pathe/dist/shared/pathe.ff20891b.mjs\n"));

/***/ }),

/***/ "./node_modules/tinyrainbow/dist/browser.js":
/*!**************************************************!*\
  !*** ./node_modules/tinyrainbow/dist/browser.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createColors: function() { return /* reexport safe */ _chunk_BVHSVHOK_js__WEBPACK_IMPORTED_MODULE_0__.c; },\n/* harmony export */   \"default\": function() { return /* binding */ f; },\n/* harmony export */   getDefaultColors: function() { return /* reexport safe */ _chunk_BVHSVHOK_js__WEBPACK_IMPORTED_MODULE_0__.a; },\n/* harmony export */   isSupported: function() { return /* reexport safe */ _chunk_BVHSVHOK_js__WEBPACK_IMPORTED_MODULE_0__.b; }\n/* harmony export */ });\n/* harmony import */ var _chunk_BVHSVHOK_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-BVHSVHOK.js */ \"./node_modules/tinyrainbow/dist/chunk-BVHSVHOK.js\");\n\n\n// src/browser.ts\nvar f = (0,_chunk_BVHSVHOK_js__WEBPACK_IMPORTED_MODULE_0__.c)(!1);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGlueXJhaW5ib3cvZGlzdC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSTZCOztBQUU3QjtBQUNBLFFBQVEscURBQUM7QUFNUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGlueXJhaW5ib3cvZGlzdC9icm93c2VyLmpzPzE0ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYSBhcyByLFxuICBiIGFzIGUsXG4gIGMgYXMgb1xufSBmcm9tIFwiLi9jaHVuay1CVkhTVkhPSy5qc1wiO1xuXG4vLyBzcmMvYnJvd3Nlci50c1xudmFyIGYgPSBvKCExKTtcbmV4cG9ydCB7XG4gIG8gYXMgY3JlYXRlQ29sb3JzLFxuICBmIGFzIGRlZmF1bHQsXG4gIHIgYXMgZ2V0RGVmYXVsdENvbG9ycyxcbiAgZSBhcyBpc1N1cHBvcnRlZFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/tinyrainbow/dist/browser.js\n"));

/***/ }),

/***/ "./node_modules/tinyrainbow/dist/chunk-BVHSVHOK.js":
/*!*********************************************************!*\
  !*** ./node_modules/tinyrainbow/dist/chunk-BVHSVHOK.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ m; },\n/* harmony export */   b: function() { return /* binding */ C; },\n/* harmony export */   c: function() { return /* binding */ p; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// src/index.ts\nvar f = {\n  reset: [0, 0],\n  bold: [1, 22, \"\\x1B[22m\\x1B[1m\"],\n  dim: [2, 22, \"\\x1B[22m\\x1B[2m\"],\n  italic: [3, 23],\n  underline: [4, 24],\n  inverse: [7, 27],\n  hidden: [8, 28],\n  strikethrough: [9, 29],\n  black: [30, 39],\n  red: [31, 39],\n  green: [32, 39],\n  yellow: [33, 39],\n  blue: [34, 39],\n  magenta: [35, 39],\n  cyan: [36, 39],\n  white: [37, 39],\n  gray: [90, 39],\n  bgBlack: [40, 49],\n  bgRed: [41, 49],\n  bgGreen: [42, 49],\n  bgYellow: [43, 49],\n  bgBlue: [44, 49],\n  bgMagenta: [45, 49],\n  bgCyan: [46, 49],\n  bgWhite: [47, 49],\n  blackBright: [90, 39],\n  redBright: [91, 39],\n  greenBright: [92, 39],\n  yellowBright: [93, 39],\n  blueBright: [94, 39],\n  magentaBright: [95, 39],\n  cyanBright: [96, 39],\n  whiteBright: [97, 39],\n  bgBlackBright: [100, 49],\n  bgRedBright: [101, 49],\n  bgGreenBright: [102, 49],\n  bgYellowBright: [103, 49],\n  bgBlueBright: [104, 49],\n  bgMagentaBright: [105, 49],\n  bgCyanBright: [106, 49],\n  bgWhiteBright: [107, 49]\n}, h = Object.entries(f);\nfunction a(n) {\n  return String(n);\n}\na.open = \"\";\na.close = \"\";\nvar B = /* @__PURE__ */ h.reduce(\n  (n, [e]) => (n[e] = a, n),\n  { isColorSupported: !1 }\n);\nfunction m() {\n  return { ...B };\n}\nfunction C(n = !1) {\n  let e = typeof process != \"undefined\" ? process : void 0, i = (e == null ? void 0 : e.env) || {}, g = (e == null ? void 0 : e.argv) || [];\n  return !(\"NO_COLOR\" in i || g.includes(\"--no-color\")) && (\"FORCE_COLOR\" in i || g.includes(\"--color\") || (e == null ? void 0 : e.platform) === \"win32\" || n && i.TERM !== \"dumb\" || \"CI\" in i) || typeof window != \"undefined\" && !!window.chrome;\n}\nfunction p(n = !1) {\n  let e = C(n), i = (r, t, c, o) => {\n    let l = \"\", s = 0;\n    do\n      l += r.substring(s, o) + c, s = o + t.length, o = r.indexOf(t, s);\n    while (~o);\n    return l + r.substring(s);\n  }, g = (r, t, c = r) => {\n    let o = (l) => {\n      let s = String(l), b = s.indexOf(t, r.length);\n      return ~b ? r + i(s, t, c, b) + t : r + s + t;\n    };\n    return o.open = r, o.close = t, o;\n  }, u = {\n    isColorSupported: e\n  }, d = (r) => `\\x1B[${r}m`;\n  for (let [r, t] of h)\n    u[r] = e ? g(\n      d(t[0]),\n      d(t[1]),\n      t[2]\n    ) : a;\n  return u;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGlueXJhaW5ib3cvZGlzdC9jaHVuay1CVkhTVkhPSy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsaUJBQWlCLE9BQU8sa0JBQWtCLE9BQU8saURBQWlEO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRyxxQkFBcUIsRUFBRTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU1FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aW55cmFpbmJvdy9kaXN0L2NodW5rLUJWSFNWSE9LLmpzPzdkNTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZGV4LnRzXG52YXIgZiA9IHtcbiAgcmVzZXQ6IFswLCAwXSxcbiAgYm9sZDogWzEsIDIyLCBcIlxceDFCWzIybVxceDFCWzFtXCJdLFxuICBkaW06IFsyLCAyMiwgXCJcXHgxQlsyMm1cXHgxQlsybVwiXSxcbiAgaXRhbGljOiBbMywgMjNdLFxuICB1bmRlcmxpbmU6IFs0LCAyNF0sXG4gIGludmVyc2U6IFs3LCAyN10sXG4gIGhpZGRlbjogWzgsIDI4XSxcbiAgc3RyaWtldGhyb3VnaDogWzksIDI5XSxcbiAgYmxhY2s6IFszMCwgMzldLFxuICByZWQ6IFszMSwgMzldLFxuICBncmVlbjogWzMyLCAzOV0sXG4gIHllbGxvdzogWzMzLCAzOV0sXG4gIGJsdWU6IFszNCwgMzldLFxuICBtYWdlbnRhOiBbMzUsIDM5XSxcbiAgY3lhbjogWzM2LCAzOV0sXG4gIHdoaXRlOiBbMzcsIDM5XSxcbiAgZ3JheTogWzkwLCAzOV0sXG4gIGJnQmxhY2s6IFs0MCwgNDldLFxuICBiZ1JlZDogWzQxLCA0OV0sXG4gIGJnR3JlZW46IFs0MiwgNDldLFxuICBiZ1llbGxvdzogWzQzLCA0OV0sXG4gIGJnQmx1ZTogWzQ0LCA0OV0sXG4gIGJnTWFnZW50YTogWzQ1LCA0OV0sXG4gIGJnQ3lhbjogWzQ2LCA0OV0sXG4gIGJnV2hpdGU6IFs0NywgNDldLFxuICBibGFja0JyaWdodDogWzkwLCAzOV0sXG4gIHJlZEJyaWdodDogWzkxLCAzOV0sXG4gIGdyZWVuQnJpZ2h0OiBbOTIsIDM5XSxcbiAgeWVsbG93QnJpZ2h0OiBbOTMsIDM5XSxcbiAgYmx1ZUJyaWdodDogWzk0LCAzOV0sXG4gIG1hZ2VudGFCcmlnaHQ6IFs5NSwgMzldLFxuICBjeWFuQnJpZ2h0OiBbOTYsIDM5XSxcbiAgd2hpdGVCcmlnaHQ6IFs5NywgMzldLFxuICBiZ0JsYWNrQnJpZ2h0OiBbMTAwLCA0OV0sXG4gIGJnUmVkQnJpZ2h0OiBbMTAxLCA0OV0sXG4gIGJnR3JlZW5CcmlnaHQ6IFsxMDIsIDQ5XSxcbiAgYmdZZWxsb3dCcmlnaHQ6IFsxMDMsIDQ5XSxcbiAgYmdCbHVlQnJpZ2h0OiBbMTA0LCA0OV0sXG4gIGJnTWFnZW50YUJyaWdodDogWzEwNSwgNDldLFxuICBiZ0N5YW5CcmlnaHQ6IFsxMDYsIDQ5XSxcbiAgYmdXaGl0ZUJyaWdodDogWzEwNywgNDldXG59LCBoID0gT2JqZWN0LmVudHJpZXMoZik7XG5mdW5jdGlvbiBhKG4pIHtcbiAgcmV0dXJuIFN0cmluZyhuKTtcbn1cbmEub3BlbiA9IFwiXCI7XG5hLmNsb3NlID0gXCJcIjtcbnZhciBCID0gLyogQF9fUFVSRV9fICovIGgucmVkdWNlKFxuICAobiwgW2VdKSA9PiAobltlXSA9IGEsIG4pLFxuICB7IGlzQ29sb3JTdXBwb3J0ZWQ6ICExIH1cbik7XG5mdW5jdGlvbiBtKCkge1xuICByZXR1cm4geyAuLi5CIH07XG59XG5mdW5jdGlvbiBDKG4gPSAhMSkge1xuICBsZXQgZSA9IHR5cGVvZiBwcm9jZXNzICE9IFwidW5kZWZpbmVkXCIgPyBwcm9jZXNzIDogdm9pZCAwLCBpID0gKGUgPT0gbnVsbCA/IHZvaWQgMCA6IGUuZW52KSB8fCB7fSwgZyA9IChlID09IG51bGwgPyB2b2lkIDAgOiBlLmFyZ3YpIHx8IFtdO1xuICByZXR1cm4gIShcIk5PX0NPTE9SXCIgaW4gaSB8fCBnLmluY2x1ZGVzKFwiLS1uby1jb2xvclwiKSkgJiYgKFwiRk9SQ0VfQ09MT1JcIiBpbiBpIHx8IGcuaW5jbHVkZXMoXCItLWNvbG9yXCIpIHx8IChlID09IG51bGwgPyB2b2lkIDAgOiBlLnBsYXRmb3JtKSA9PT0gXCJ3aW4zMlwiIHx8IG4gJiYgaS5URVJNICE9PSBcImR1bWJcIiB8fCBcIkNJXCIgaW4gaSkgfHwgdHlwZW9mIHdpbmRvdyAhPSBcInVuZGVmaW5lZFwiICYmICEhd2luZG93LmNocm9tZTtcbn1cbmZ1bmN0aW9uIHAobiA9ICExKSB7XG4gIGxldCBlID0gQyhuKSwgaSA9IChyLCB0LCBjLCBvKSA9PiB7XG4gICAgbGV0IGwgPSBcIlwiLCBzID0gMDtcbiAgICBkb1xuICAgICAgbCArPSByLnN1YnN0cmluZyhzLCBvKSArIGMsIHMgPSBvICsgdC5sZW5ndGgsIG8gPSByLmluZGV4T2YodCwgcyk7XG4gICAgd2hpbGUgKH5vKTtcbiAgICByZXR1cm4gbCArIHIuc3Vic3RyaW5nKHMpO1xuICB9LCBnID0gKHIsIHQsIGMgPSByKSA9PiB7XG4gICAgbGV0IG8gPSAobCkgPT4ge1xuICAgICAgbGV0IHMgPSBTdHJpbmcobCksIGIgPSBzLmluZGV4T2YodCwgci5sZW5ndGgpO1xuICAgICAgcmV0dXJuIH5iID8gciArIGkocywgdCwgYywgYikgKyB0IDogciArIHMgKyB0O1xuICAgIH07XG4gICAgcmV0dXJuIG8ub3BlbiA9IHIsIG8uY2xvc2UgPSB0LCBvO1xuICB9LCB1ID0ge1xuICAgIGlzQ29sb3JTdXBwb3J0ZWQ6IGVcbiAgfSwgZCA9IChyKSA9PiBgXFx4MUJbJHtyfW1gO1xuICBmb3IgKGxldCBbciwgdF0gb2YgaClcbiAgICB1W3JdID0gZSA/IGcoXG4gICAgICBkKHRbMF0pLFxuICAgICAgZCh0WzFdKSxcbiAgICAgIHRbMl1cbiAgICApIDogYTtcbiAgcmV0dXJuIHU7XG59XG5cbmV4cG9ydCB7XG4gIG0gYXMgYSxcbiAgQyBhcyBiLFxuICBwIGFzIGNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/tinyrainbow/dist/chunk-BVHSVHOK.js\n"));

/***/ }),

/***/ "./node_modules/tinyspy/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/tinyspy/dist/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInternalSpy: function() { return /* binding */ g; },\n/* harmony export */   getInternalState: function() { return /* binding */ I; },\n/* harmony export */   internalSpyOn: function() { return /* binding */ C; },\n/* harmony export */   restoreAll: function() { return /* binding */ X; },\n/* harmony export */   spies: function() { return /* binding */ x; },\n/* harmony export */   spy: function() { return /* binding */ L; },\n/* harmony export */   spyOn: function() { return /* binding */ Q; }\n/* harmony export */ });\n// src/utils.ts\nfunction d(e, t) {\n  if (!e)\n    throw new Error(t);\n}\nfunction y(e, t) {\n  return typeof t === e;\n}\nfunction w(e) {\n  return e instanceof Promise;\n}\nfunction f(e, t, n) {\n  Object.defineProperty(e, t, n);\n}\nfunction p(e, t, n) {\n  Object.defineProperty(e, t, { value: n });\n}\n\n// src/constants.ts\nvar u = Symbol.for(\"tinyspy:spy\");\n\n// src/internal.ts\nvar x = /* @__PURE__ */ new Set(), P = (e) => {\n  e.called = !1, e.callCount = 0, e.calls = [], e.results = [], e.resolves = [], e.next = [];\n}, K = (e) => (f(e, u, { value: { reset: () => P(e[u]) } }), e[u]), I = (e) => e[u] || K(e);\nfunction g(e) {\n  d(\n    y(\"function\", e) || y(\"undefined\", e),\n    \"cannot spy on a non-function value\"\n  );\n  let t = function(...s) {\n    let r = I(t);\n    r.called = !0, r.callCount++, r.calls.push(s);\n    let R = r.next.shift();\n    if (R) {\n      r.results.push(R);\n      let [o, l] = R;\n      if (o === \"ok\")\n        return l;\n      throw l;\n    }\n    let i, c = \"ok\", a = r.results.length;\n    if (r.impl)\n      try {\n        new.target ? i = Reflect.construct(r.impl, s, new.target) : i = r.impl.apply(this, s), c = \"ok\";\n      } catch (o) {\n        throw i = o, c = \"error\", r.results.push([c, o]), o;\n      }\n    let S = [c, i];\n    return w(i) && i.then(\n      (o) => r.resolves[a] = [\"ok\", o],\n      (o) => r.resolves[a] = [\"error\", o]\n    ), r.results.push(S), i;\n  };\n  p(t, \"_isMockFunction\", !0), p(t, \"length\", e ? e.length : 0), p(t, \"name\", e && e.name || \"spy\");\n  let n = I(t);\n  return n.reset(), n.impl = e, t;\n}\nfunction T(e) {\n  let t = I(e);\n  f(e, \"returns\", {\n    get: () => t.results.map(([, n]) => n)\n  }), [\n    \"called\",\n    \"callCount\",\n    \"results\",\n    \"resolves\",\n    \"calls\",\n    \"reset\",\n    \"impl\"\n  ].forEach(\n    (n) => f(e, n, { get: () => t[n], set: (s) => t[n] = s })\n  ), p(e, \"nextError\", (n) => (t.next.push([\"error\", n]), t)), p(e, \"nextResult\", (n) => (t.next.push([\"ok\", n]), t));\n}\n\n// src/spy.ts\nfunction L(e) {\n  let t = g(e);\n  return T(t), t;\n}\n\n// src/spyOn.ts\nvar k = (e, t) => Object.getOwnPropertyDescriptor(e, t), O = (e, t) => {\n  t != null && typeof t == \"function\" && t.prototype != null && Object.setPrototypeOf(e.prototype, t.prototype);\n};\nfunction C(e, t, n) {\n  d(\n    !y(\"undefined\", e),\n    \"spyOn could not find an object to spy upon\"\n  ), d(\n    y(\"object\", e) || y(\"function\", e),\n    \"cannot spyOn on a primitive value\"\n  );\n  let [s, r] = (() => {\n    if (!y(\"object\", t))\n      return [t, \"value\"];\n    if (\"getter\" in t && \"setter\" in t)\n      throw new Error(\"cannot spy on both getter and setter\");\n    if (\"getter\" in t)\n      return [t.getter, \"get\"];\n    if (\"setter\" in t)\n      return [t.setter, \"set\"];\n    throw new Error(\"specify getter or setter to spy on\");\n  })(), R = k(e, s), i = Object.getPrototypeOf(e), c = i && k(i, s), a = R || c;\n  d(\n    a || s in e,\n    `${String(s)} does not exist`\n  );\n  let S = !1;\n  r === \"value\" && a && !a.value && a.get && (r = \"get\", S = !0, n = a.get());\n  let o;\n  a ? o = a[r] : r !== \"value\" ? o = () => e[s] : o = e[s], n || (n = o);\n  let l = g(n);\n  r === \"value\" && O(l, o);\n  let h = (A) => {\n    let { value: M, ...v } = a || {\n      configurable: !0,\n      writable: !0\n    };\n    r !== \"value\" && delete v.writable, v[r] = A, f(e, s, v);\n  }, b = () => a ? f(e, s, a) : h(o), m = l[u];\n  return p(m, \"restore\", b), p(m, \"getOriginal\", () => S ? o() : o), p(m, \"willCall\", (A) => (m.impl = A, l)), h(\n    S ? () => (O(l, n), l) : l\n  ), x.add(l), l;\n}\nfunction Q(e, t, n) {\n  let s = C(e, t, n);\n  return T(s), [\"restore\", \"getOriginal\", \"willCall\"].forEach((r) => {\n    p(s, r, s[u][r]);\n  }), s;\n}\n\n// src/restoreAll.ts\nfunction X() {\n  for (let e of x)\n    e.restore();\n  x.clear();\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGlueXNweS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVTtBQUMxQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0JBQXdCLFNBQVMsd0JBQXdCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1Q0FBdUM7QUFDNUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxPQUFPLFdBQVc7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsaUJBQWlCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RpbnlzcHkvZGlzdC9pbmRleC5qcz8zNjZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy50c1xuZnVuY3Rpb24gZChlLCB0KSB7XG4gIGlmICghZSlcbiAgICB0aHJvdyBuZXcgRXJyb3IodCk7XG59XG5mdW5jdGlvbiB5KGUsIHQpIHtcbiAgcmV0dXJuIHR5cGVvZiB0ID09PSBlO1xufVxuZnVuY3Rpb24gdyhlKSB7XG4gIHJldHVybiBlIGluc3RhbmNlb2YgUHJvbWlzZTtcbn1cbmZ1bmN0aW9uIGYoZSwgdCwgbikge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgdCwgbik7XG59XG5mdW5jdGlvbiBwKGUsIHQsIG4pIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHQsIHsgdmFsdWU6IG4gfSk7XG59XG5cbi8vIHNyYy9jb25zdGFudHMudHNcbnZhciB1ID0gU3ltYm9sLmZvcihcInRpbnlzcHk6c3B5XCIpO1xuXG4vLyBzcmMvaW50ZXJuYWwudHNcbnZhciB4ID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSwgUCA9IChlKSA9PiB7XG4gIGUuY2FsbGVkID0gITEsIGUuY2FsbENvdW50ID0gMCwgZS5jYWxscyA9IFtdLCBlLnJlc3VsdHMgPSBbXSwgZS5yZXNvbHZlcyA9IFtdLCBlLm5leHQgPSBbXTtcbn0sIEsgPSAoZSkgPT4gKGYoZSwgdSwgeyB2YWx1ZTogeyByZXNldDogKCkgPT4gUChlW3VdKSB9IH0pLCBlW3VdKSwgSSA9IChlKSA9PiBlW3VdIHx8IEsoZSk7XG5mdW5jdGlvbiBnKGUpIHtcbiAgZChcbiAgICB5KFwiZnVuY3Rpb25cIiwgZSkgfHwgeShcInVuZGVmaW5lZFwiLCBlKSxcbiAgICBcImNhbm5vdCBzcHkgb24gYSBub24tZnVuY3Rpb24gdmFsdWVcIlxuICApO1xuICBsZXQgdCA9IGZ1bmN0aW9uKC4uLnMpIHtcbiAgICBsZXQgciA9IEkodCk7XG4gICAgci5jYWxsZWQgPSAhMCwgci5jYWxsQ291bnQrKywgci5jYWxscy5wdXNoKHMpO1xuICAgIGxldCBSID0gci5uZXh0LnNoaWZ0KCk7XG4gICAgaWYgKFIpIHtcbiAgICAgIHIucmVzdWx0cy5wdXNoKFIpO1xuICAgICAgbGV0IFtvLCBsXSA9IFI7XG4gICAgICBpZiAobyA9PT0gXCJva1wiKVxuICAgICAgICByZXR1cm4gbDtcbiAgICAgIHRocm93IGw7XG4gICAgfVxuICAgIGxldCBpLCBjID0gXCJva1wiLCBhID0gci5yZXN1bHRzLmxlbmd0aDtcbiAgICBpZiAoci5pbXBsKVxuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3LnRhcmdldCA/IGkgPSBSZWZsZWN0LmNvbnN0cnVjdChyLmltcGwsIHMsIG5ldy50YXJnZXQpIDogaSA9IHIuaW1wbC5hcHBseSh0aGlzLCBzKSwgYyA9IFwib2tcIjtcbiAgICAgIH0gY2F0Y2ggKG8pIHtcbiAgICAgICAgdGhyb3cgaSA9IG8sIGMgPSBcImVycm9yXCIsIHIucmVzdWx0cy5wdXNoKFtjLCBvXSksIG87XG4gICAgICB9XG4gICAgbGV0IFMgPSBbYywgaV07XG4gICAgcmV0dXJuIHcoaSkgJiYgaS50aGVuKFxuICAgICAgKG8pID0+IHIucmVzb2x2ZXNbYV0gPSBbXCJva1wiLCBvXSxcbiAgICAgIChvKSA9PiByLnJlc29sdmVzW2FdID0gW1wiZXJyb3JcIiwgb11cbiAgICApLCByLnJlc3VsdHMucHVzaChTKSwgaTtcbiAgfTtcbiAgcCh0LCBcIl9pc01vY2tGdW5jdGlvblwiLCAhMCksIHAodCwgXCJsZW5ndGhcIiwgZSA/IGUubGVuZ3RoIDogMCksIHAodCwgXCJuYW1lXCIsIGUgJiYgZS5uYW1lIHx8IFwic3B5XCIpO1xuICBsZXQgbiA9IEkodCk7XG4gIHJldHVybiBuLnJlc2V0KCksIG4uaW1wbCA9IGUsIHQ7XG59XG5mdW5jdGlvbiBUKGUpIHtcbiAgbGV0IHQgPSBJKGUpO1xuICBmKGUsIFwicmV0dXJuc1wiLCB7XG4gICAgZ2V0OiAoKSA9PiB0LnJlc3VsdHMubWFwKChbLCBuXSkgPT4gbilcbiAgfSksIFtcbiAgICBcImNhbGxlZFwiLFxuICAgIFwiY2FsbENvdW50XCIsXG4gICAgXCJyZXN1bHRzXCIsXG4gICAgXCJyZXNvbHZlc1wiLFxuICAgIFwiY2FsbHNcIixcbiAgICBcInJlc2V0XCIsXG4gICAgXCJpbXBsXCJcbiAgXS5mb3JFYWNoKFxuICAgIChuKSA9PiBmKGUsIG4sIHsgZ2V0OiAoKSA9PiB0W25dLCBzZXQ6IChzKSA9PiB0W25dID0gcyB9KVxuICApLCBwKGUsIFwibmV4dEVycm9yXCIsIChuKSA9PiAodC5uZXh0LnB1c2goW1wiZXJyb3JcIiwgbl0pLCB0KSksIHAoZSwgXCJuZXh0UmVzdWx0XCIsIChuKSA9PiAodC5uZXh0LnB1c2goW1wib2tcIiwgbl0pLCB0KSk7XG59XG5cbi8vIHNyYy9zcHkudHNcbmZ1bmN0aW9uIEwoZSkge1xuICBsZXQgdCA9IGcoZSk7XG4gIHJldHVybiBUKHQpLCB0O1xufVxuXG4vLyBzcmMvc3B5T24udHNcbnZhciBrID0gKGUsIHQpID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgdCksIE8gPSAoZSwgdCkgPT4ge1xuICB0ICE9IG51bGwgJiYgdHlwZW9mIHQgPT0gXCJmdW5jdGlvblwiICYmIHQucHJvdG90eXBlICE9IG51bGwgJiYgT2JqZWN0LnNldFByb3RvdHlwZU9mKGUucHJvdG90eXBlLCB0LnByb3RvdHlwZSk7XG59O1xuZnVuY3Rpb24gQyhlLCB0LCBuKSB7XG4gIGQoXG4gICAgIXkoXCJ1bmRlZmluZWRcIiwgZSksXG4gICAgXCJzcHlPbiBjb3VsZCBub3QgZmluZCBhbiBvYmplY3QgdG8gc3B5IHVwb25cIlxuICApLCBkKFxuICAgIHkoXCJvYmplY3RcIiwgZSkgfHwgeShcImZ1bmN0aW9uXCIsIGUpLFxuICAgIFwiY2Fubm90IHNweU9uIG9uIGEgcHJpbWl0aXZlIHZhbHVlXCJcbiAgKTtcbiAgbGV0IFtzLCByXSA9ICgoKSA9PiB7XG4gICAgaWYgKCF5KFwib2JqZWN0XCIsIHQpKVxuICAgICAgcmV0dXJuIFt0LCBcInZhbHVlXCJdO1xuICAgIGlmIChcImdldHRlclwiIGluIHQgJiYgXCJzZXR0ZXJcIiBpbiB0KVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IHNweSBvbiBib3RoIGdldHRlciBhbmQgc2V0dGVyXCIpO1xuICAgIGlmIChcImdldHRlclwiIGluIHQpXG4gICAgICByZXR1cm4gW3QuZ2V0dGVyLCBcImdldFwiXTtcbiAgICBpZiAoXCJzZXR0ZXJcIiBpbiB0KVxuICAgICAgcmV0dXJuIFt0LnNldHRlciwgXCJzZXRcIl07XG4gICAgdGhyb3cgbmV3IEVycm9yKFwic3BlY2lmeSBnZXR0ZXIgb3Igc2V0dGVyIHRvIHNweSBvblwiKTtcbiAgfSkoKSwgUiA9IGsoZSwgcyksIGkgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSksIGMgPSBpICYmIGsoaSwgcyksIGEgPSBSIHx8IGM7XG4gIGQoXG4gICAgYSB8fCBzIGluIGUsXG4gICAgYCR7U3RyaW5nKHMpfSBkb2VzIG5vdCBleGlzdGBcbiAgKTtcbiAgbGV0IFMgPSAhMTtcbiAgciA9PT0gXCJ2YWx1ZVwiICYmIGEgJiYgIWEudmFsdWUgJiYgYS5nZXQgJiYgKHIgPSBcImdldFwiLCBTID0gITAsIG4gPSBhLmdldCgpKTtcbiAgbGV0IG87XG4gIGEgPyBvID0gYVtyXSA6IHIgIT09IFwidmFsdWVcIiA/IG8gPSAoKSA9PiBlW3NdIDogbyA9IGVbc10sIG4gfHwgKG4gPSBvKTtcbiAgbGV0IGwgPSBnKG4pO1xuICByID09PSBcInZhbHVlXCIgJiYgTyhsLCBvKTtcbiAgbGV0IGggPSAoQSkgPT4ge1xuICAgIGxldCB7IHZhbHVlOiBNLCAuLi52IH0gPSBhIHx8IHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogITAsXG4gICAgICB3cml0YWJsZTogITBcbiAgICB9O1xuICAgIHIgIT09IFwidmFsdWVcIiAmJiBkZWxldGUgdi53cml0YWJsZSwgdltyXSA9IEEsIGYoZSwgcywgdik7XG4gIH0sIGIgPSAoKSA9PiBhID8gZihlLCBzLCBhKSA6IGgobyksIG0gPSBsW3VdO1xuICByZXR1cm4gcChtLCBcInJlc3RvcmVcIiwgYiksIHAobSwgXCJnZXRPcmlnaW5hbFwiLCAoKSA9PiBTID8gbygpIDogbyksIHAobSwgXCJ3aWxsQ2FsbFwiLCAoQSkgPT4gKG0uaW1wbCA9IEEsIGwpKSwgaChcbiAgICBTID8gKCkgPT4gKE8obCwgbiksIGwpIDogbFxuICApLCB4LmFkZChsKSwgbDtcbn1cbmZ1bmN0aW9uIFEoZSwgdCwgbikge1xuICBsZXQgcyA9IEMoZSwgdCwgbik7XG4gIHJldHVybiBUKHMpLCBbXCJyZXN0b3JlXCIsIFwiZ2V0T3JpZ2luYWxcIiwgXCJ3aWxsQ2FsbFwiXS5mb3JFYWNoKChyKSA9PiB7XG4gICAgcChzLCByLCBzW3VdW3JdKTtcbiAgfSksIHM7XG59XG5cbi8vIHNyYy9yZXN0b3JlQWxsLnRzXG5mdW5jdGlvbiBYKCkge1xuICBmb3IgKGxldCBlIG9mIHgpXG4gICAgZS5yZXN0b3JlKCk7XG4gIHguY2xlYXIoKTtcbn1cbmV4cG9ydCB7XG4gIGcgYXMgY3JlYXRlSW50ZXJuYWxTcHksXG4gIEkgYXMgZ2V0SW50ZXJuYWxTdGF0ZSxcbiAgQyBhcyBpbnRlcm5hbFNweU9uLFxuICBYIGFzIHJlc3RvcmVBbGwsXG4gIHggYXMgc3BpZXMsXG4gIEwgYXMgc3B5LFxuICBRIGFzIHNweU9uXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/tinyspy/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/vitest/dist/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   afterAll: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.afterAll; },\n/* harmony export */   afterEach: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.afterEach; },\n/* harmony export */   assert: function() { return /* reexport safe */ chai__WEBPACK_IMPORTED_MODULE_5__.assert; },\n/* harmony export */   assertType: function() { return /* reexport safe */ _vendor_index_Hqvcg1pf_js__WEBPACK_IMPORTED_MODULE_4__.b; },\n/* harmony export */   beforeAll: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.beforeAll; },\n/* harmony export */   beforeEach: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.beforeEach; },\n/* harmony export */   bench: function() { return /* reexport safe */ _vendor_benchmark_B6pblCp2_js__WEBPACK_IMPORTED_MODULE_1__.b; },\n/* harmony export */   chai: function() { return /* reexport module object */ chai__WEBPACK_IMPORTED_MODULE_5__; },\n/* harmony export */   createExpect: function() { return /* reexport safe */ _vendor_vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_3__.c; },\n/* harmony export */   describe: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.describe; },\n/* harmony export */   expect: function() { return /* reexport safe */ _vendor_vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_3__.a; },\n/* harmony export */   expectTypeOf: function() { return /* binding */ expectTypeOf; },\n/* harmony export */   getRunningMode: function() { return /* reexport safe */ _vendor_index_Hqvcg1pf_js__WEBPACK_IMPORTED_MODULE_4__.g; },\n/* harmony export */   inject: function() { return /* reexport safe */ _vendor_index_Hqvcg1pf_js__WEBPACK_IMPORTED_MODULE_4__.i; },\n/* harmony export */   isFirstRun: function() { return /* reexport safe */ _vendor_run_once_Db8Hgq9X_js__WEBPACK_IMPORTED_MODULE_2__.i; },\n/* harmony export */   isWatchMode: function() { return /* reexport safe */ _vendor_index_Hqvcg1pf_js__WEBPACK_IMPORTED_MODULE_4__.a; },\n/* harmony export */   it: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.it; },\n/* harmony export */   onTestFailed: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.onTestFailed; },\n/* harmony export */   onTestFinished: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.onTestFinished; },\n/* harmony export */   runOnce: function() { return /* reexport safe */ _vendor_run_once_Db8Hgq9X_js__WEBPACK_IMPORTED_MODULE_2__.a; },\n/* harmony export */   should: function() { return /* reexport safe */ chai__WEBPACK_IMPORTED_MODULE_5__.should; },\n/* harmony export */   suite: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.suite; },\n/* harmony export */   test: function() { return /* reexport safe */ _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.test; },\n/* harmony export */   vi: function() { return /* reexport safe */ _vendor_vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_3__.v; },\n/* harmony export */   vitest: function() { return /* reexport safe */ _vendor_vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_3__.b; }\n/* harmony export */ });\n/* harmony import */ var _vitest_runner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/runner */ \"./node_modules/@vitest/runner/dist/index.js\");\n/* harmony import */ var _vendor_benchmark_B6pblCp2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vendor/benchmark.B6pblCp2.js */ \"./node_modules/vitest/dist/vendor/benchmark.B6pblCp2.js\");\n/* harmony import */ var _vendor_run_once_Db8Hgq9X_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vendor/run-once.Db8Hgq9X.js */ \"./node_modules/vitest/dist/vendor/run-once.Db8Hgq9X.js\");\n/* harmony import */ var _vendor_vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vendor/vi.DXACdGTu.js */ \"./node_modules/vitest/dist/vendor/vi.DXACdGTu.js\");\n/* harmony import */ var _vendor_index_Hqvcg1pf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vendor/index.Hqvcg1pf.js */ \"./node_modules/vitest/dist/vendor/index.Hqvcg1pf.js\");\n/* harmony import */ var chai__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! chai */ \"./node_modules/chai/chai.js\");\n/* harmony import */ var _vitest_runner_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vitest/runner/utils */ \"./node_modules/@vitest/runner/dist/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar expectTypeOf = _vendor_index_Hqvcg1pf_js__WEBPACK_IMPORTED_MODULE_4__.d.expectTypeOf;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUk7QUFDekU7QUFDa0I7QUFDaUI7QUFDeEM7QUFDMEQ7QUFDcEY7QUFDYjtBQUNzQjtBQUNSO0FBQ1A7QUFDYTtBQUNyQjtBQUNzQjtBQUNIO0FBQ2pCO0FBQzhCO0FBQ3ZCO0FBQ0U7QUFDRztBQUNPO0FBQ0Y7QUFDQztBQUNBO0FBQ2Q7Ozs7QUFJckIsbUJBQW1CLHdEQUFJO0FBQ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZpdGVzdC9kaXN0L2luZGV4LmpzPzk4ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYWZ0ZXJBbGwsIGFmdGVyRWFjaCwgYmVmb3JlQWxsLCBiZWZvcmVFYWNoLCBkZXNjcmliZSwgaXQsIG9uVGVzdEZhaWxlZCwgb25UZXN0RmluaXNoZWQsIHN1aXRlLCB0ZXN0IH0gZnJvbSAnQHZpdGVzdC9ydW5uZXInO1xuZXhwb3J0IHsgYiBhcyBiZW5jaCB9IGZyb20gJy4vdmVuZG9yL2JlbmNobWFyay5CNnBibENwMi5qcyc7XG5leHBvcnQgeyBpIGFzIGlzRmlyc3RSdW4sIGEgYXMgcnVuT25jZSB9IGZyb20gJy4vdmVuZG9yL3J1bi1vbmNlLkRiOEhncTlYLmpzJztcbmV4cG9ydCB7IGMgYXMgY3JlYXRlRXhwZWN0LCBhIGFzIGV4cGVjdCwgdiBhcyB2aSwgYiBhcyB2aXRlc3QgfSBmcm9tICcuL3ZlbmRvci92aS5EWEFDZEdUdS5qcyc7XG5pbXBvcnQgeyBkIGFzIGRpc3QgfSBmcm9tICcuL3ZlbmRvci9pbmRleC5IcXZjZzFwZi5qcyc7XG5leHBvcnQgeyBiIGFzIGFzc2VydFR5cGUsIGcgYXMgZ2V0UnVubmluZ01vZGUsIGkgYXMgaW5qZWN0LCBhIGFzIGlzV2F0Y2hNb2RlIH0gZnJvbSAnLi92ZW5kb3IvaW5kZXguSHF2Y2cxcGYuanMnO1xuaW1wb3J0ICogYXMgY2hhaSBmcm9tICdjaGFpJztcbmV4cG9ydCB7IGNoYWkgfTtcbmV4cG9ydCB7IGFzc2VydCwgc2hvdWxkIH0gZnJvbSAnY2hhaSc7XG5pbXBvcnQgJ0B2aXRlc3QvcnVubmVyL3V0aWxzJztcbmltcG9ydCAnQHZpdGVzdC91dGlscyc7XG5pbXBvcnQgJy4vdmVuZG9yL2luZGV4LkJKbXRiXzdXLmpzJztcbmltcG9ydCAncGF0aGUnO1xuaW1wb3J0ICcuL3ZlbmRvci9nbG9iYWwuN2JGYm55WGwuanMnO1xuaW1wb3J0ICcuL3ZlbmRvci9lbnYuMmx0clFOcTAuanMnO1xuaW1wb3J0ICdzdGQtZW52JztcbmltcG9ydCAnLi92ZW5kb3IvX2NvbW1vbmpzSGVscGVycy5CRlRVM01BSS5qcyc7XG5pbXBvcnQgJ0B2aXRlc3QvZXhwZWN0JztcbmltcG9ydCAnQHZpdGVzdC9zbmFwc2hvdCc7XG5pbXBvcnQgJ0B2aXRlc3QvdXRpbHMvZXJyb3InO1xuaW1wb3J0ICcuL3ZlbmRvci90YXNrcy5EaFZ0UUJ0Vy5qcyc7XG5pbXBvcnQgJ0B2aXRlc3QvdXRpbHMvc291cmNlLW1hcCc7XG5pbXBvcnQgJy4vdmVuZG9yL2Jhc2UuQ1RZVjRHbnouanMnO1xuaW1wb3J0ICcuL3ZlbmRvci9kYXRlLlcyeEtSMnFlLmpzJztcbmltcG9ydCAnQHZpdGVzdC9zcHknO1xuXG5cblxudmFyIGV4cGVjdFR5cGVPZiA9IGRpc3QuZXhwZWN0VHlwZU9mO1xuZXhwb3J0IHsgZXhwZWN0VHlwZU9mIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/_commonjsHelpers.BFTU3MAI.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/_commonjsHelpers.BFTU3MAI.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: function() { return /* binding */ commonjsGlobal; },\n/* harmony export */   g: function() { return /* binding */ getDefaultExportFromCjs; }\n/* harmony export */ });\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL19jb21tb25qc0hlbHBlcnMuQkZUVTNNQUkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRTZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aXRlc3QvZGlzdC92ZW5kb3IvX2NvbW1vbmpzSGVscGVycy5CRlRVM01BSS5qcz8wZjRhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjb21tb25qc0dsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnID8gc2VsZiA6IHt9O1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0RXhwb3J0RnJvbUNqcyAoeCkge1xuXHRyZXR1cm4geCAmJiB4Ll9fZXNNb2R1bGUgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHgsICdkZWZhdWx0JykgPyB4WydkZWZhdWx0J10gOiB4O1xufVxuXG5leHBvcnQgeyBjb21tb25qc0dsb2JhbCBhcyBjLCBnZXREZWZhdWx0RXhwb3J0RnJvbUNqcyBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/_commonjsHelpers.BFTU3MAI.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/base.CTYV4Gnz.js":
/*!**********************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/base.CTYV4Gnz.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: function() { return /* binding */ AggregateErrorPonyfill; },\n/* harmony export */   a: function() { return /* binding */ slash; },\n/* harmony export */   b: function() { return /* binding */ isPrimitive; },\n/* harmony export */   c: function() { return /* binding */ groupBy; },\n/* harmony export */   d: function() { return /* binding */ deepMerge; },\n/* harmony export */   e: function() { return /* binding */ nanoid; },\n/* harmony export */   f: function() { return /* binding */ stdout; },\n/* harmony export */   g: function() { return /* binding */ getAllMockableProperties; },\n/* harmony export */   i: function() { return /* binding */ isChildProcess; },\n/* harmony export */   n: function() { return /* binding */ noop; },\n/* harmony export */   s: function() { return /* binding */ setProcessTitle; },\n/* harmony export */   t: function() { return /* binding */ toArray; },\n/* harmony export */   w: function() { return /* binding */ wildcardPatternToRegExp; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nfunction collectOwnProperties(obj, collector) {\n  const collect = typeof collector === \"function\" ? collector : (key) => collector.add(key);\n  Object.getOwnPropertyNames(obj).forEach(collect);\n  Object.getOwnPropertySymbols(obj).forEach(collect);\n}\nfunction groupBy(collection, iteratee) {\n  return collection.reduce((acc, item) => {\n    const key = iteratee(item);\n    acc[key] || (acc[key] = []);\n    acc[key].push(item);\n    return acc;\n  }, {});\n}\nfunction isPrimitive(value) {\n  return value === null || typeof value !== \"function\" && typeof value !== \"object\";\n}\nfunction getAllMockableProperties(obj, isModule, constructors) {\n  const { Map, Object: Object2, Function, RegExp: RegExp2, Array: Array2 } = constructors;\n  const allProps = new Map();\n  let curr = obj;\n  do {\n    if (curr === Object2.prototype || curr === Function.prototype || curr === RegExp2.prototype) {\n      break;\n    }\n    collectOwnProperties(curr, (key) => {\n      const descriptor = Object2.getOwnPropertyDescriptor(curr, key);\n      if (descriptor) {\n        allProps.set(key, { key, descriptor });\n      }\n    });\n  } while (curr = Object2.getPrototypeOf(curr));\n  if (isModule && !allProps.has(\"default\") && \"default\" in obj) {\n    const descriptor = Object2.getOwnPropertyDescriptor(obj, \"default\");\n    if (descriptor) {\n      allProps.set(\"default\", { key: \"default\", descriptor });\n    }\n  }\n  return Array2.from(allProps.values());\n}\nfunction slash(str) {\n  return str.replace(/\\\\/g, \"/\");\n}\nfunction noop() {\n}\nfunction toArray(array) {\n  if (array === null || array === void 0) {\n    array = [];\n  }\n  if (Array.isArray(array)) {\n    return array;\n  }\n  return [array];\n}\nfunction toString(v) {\n  return Object.prototype.toString.call(v);\n}\nfunction isPlainObject(val) {\n  return toString(val) === \"[object Object]\" && (!val.constructor || val.constructor.name === \"Object\");\n}\nfunction deepMerge(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (source === void 0) {\n    return target;\n  }\n  if (isMergeableObject(target) && isMergeableObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isMergeableObject(source[key])) {\n        if (!target[key]) {\n          target[key] = {};\n        }\n        deepMerge(target[key], source[key]);\n      } else {\n        target[key] = source[key];\n      }\n    });\n  }\n  return deepMerge(target, ...sources);\n}\nfunction isMergeableObject(item) {\n  return isPlainObject(item) && !Array.isArray(item);\n}\nfunction stdout() {\n  return console._stdout || process.stdout;\n}\nclass AggregateErrorPonyfill extends Error {\n  errors;\n  constructor(errors, message = \"\") {\n    super(message);\n    this.errors = [...errors];\n  }\n}\nfunction isChildProcess() {\n  return typeof process !== \"undefined\" && !!process.send;\n}\nfunction setProcessTitle(title) {\n  try {\n    process.title = `node (${title})`;\n  } catch {\n  }\n}\nfunction escapeRegExp(s) {\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction wildcardPatternToRegExp(pattern) {\n  return new RegExp(\n    `^${pattern.split(\"*\").map(escapeRegExp).join(\".*\")}$`,\n    \"i\"\n  );\n}\nconst urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nfunction nanoid(size = 21) {\n  let id = \"\";\n  let i = size;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2Jhc2UuQ1RZVjRHbnouanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBdUI7O0FBRXZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxpRUFBaUU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGlCQUFpQjtBQUM3QztBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDRCQUE0QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixPQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPLHNCQUFzQixPQUFPO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLElBQUksT0FBTyxrQkFBa0IsTUFBTTtBQUNuQyxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQWdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOFAiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZpdGVzdC9kaXN0L3ZlbmRvci9iYXNlLkNUWVY0R256LmpzPzc2NTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdml0ZXN0L3V0aWxzJztcblxuZnVuY3Rpb24gY29sbGVjdE93blByb3BlcnRpZXMob2JqLCBjb2xsZWN0b3IpIHtcbiAgY29uc3QgY29sbGVjdCA9IHR5cGVvZiBjb2xsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiA/IGNvbGxlY3RvciA6IChrZXkpID0+IGNvbGxlY3Rvci5hZGQoa2V5KTtcbiAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKS5mb3JFYWNoKGNvbGxlY3QpO1xuICBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iaikuZm9yRWFjaChjb2xsZWN0KTtcbn1cbmZ1bmN0aW9uIGdyb3VwQnkoY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgcmV0dXJuIGNvbGxlY3Rpb24ucmVkdWNlKChhY2MsIGl0ZW0pID0+IHtcbiAgICBjb25zdCBrZXkgPSBpdGVyYXRlZShpdGVtKTtcbiAgICBhY2Nba2V5XSB8fCAoYWNjW2tleV0gPSBbXSk7XG4gICAgYWNjW2tleV0ucHVzaChpdGVtKTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG59XG5mdW5jdGlvbiBpc1ByaW1pdGl2ZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiO1xufVxuZnVuY3Rpb24gZ2V0QWxsTW9ja2FibGVQcm9wZXJ0aWVzKG9iaiwgaXNNb2R1bGUsIGNvbnN0cnVjdG9ycykge1xuICBjb25zdCB7IE1hcCwgT2JqZWN0OiBPYmplY3QyLCBGdW5jdGlvbiwgUmVnRXhwOiBSZWdFeHAyLCBBcnJheTogQXJyYXkyIH0gPSBjb25zdHJ1Y3RvcnM7XG4gIGNvbnN0IGFsbFByb3BzID0gbmV3IE1hcCgpO1xuICBsZXQgY3VyciA9IG9iajtcbiAgZG8ge1xuICAgIGlmIChjdXJyID09PSBPYmplY3QyLnByb3RvdHlwZSB8fCBjdXJyID09PSBGdW5jdGlvbi5wcm90b3R5cGUgfHwgY3VyciA9PT0gUmVnRXhwMi5wcm90b3R5cGUpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjb2xsZWN0T3duUHJvcGVydGllcyhjdXJyLCAoa2V5KSA9PiB7XG4gICAgICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0Mi5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoY3Vyciwga2V5KTtcbiAgICAgIGlmIChkZXNjcmlwdG9yKSB7XG4gICAgICAgIGFsbFByb3BzLnNldChrZXksIHsga2V5LCBkZXNjcmlwdG9yIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9IHdoaWxlIChjdXJyID0gT2JqZWN0Mi5nZXRQcm90b3R5cGVPZihjdXJyKSk7XG4gIGlmIChpc01vZHVsZSAmJiAhYWxsUHJvcHMuaGFzKFwiZGVmYXVsdFwiKSAmJiBcImRlZmF1bHRcIiBpbiBvYmopIHtcbiAgICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0Mi5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBcImRlZmF1bHRcIik7XG4gICAgaWYgKGRlc2NyaXB0b3IpIHtcbiAgICAgIGFsbFByb3BzLnNldChcImRlZmF1bHRcIiwgeyBrZXk6IFwiZGVmYXVsdFwiLCBkZXNjcmlwdG9yIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gQXJyYXkyLmZyb20oYWxsUHJvcHMudmFsdWVzKCkpO1xufVxuZnVuY3Rpb24gc2xhc2goc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFxcXC9nLCBcIi9cIik7XG59XG5mdW5jdGlvbiBub29wKCkge1xufVxuZnVuY3Rpb24gdG9BcnJheShhcnJheSkge1xuICBpZiAoYXJyYXkgPT09IG51bGwgfHwgYXJyYXkgPT09IHZvaWQgMCkge1xuICAgIGFycmF5ID0gW107XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyYXkpKSB7XG4gICAgcmV0dXJuIGFycmF5O1xuICB9XG4gIHJldHVybiBbYXJyYXldO1xufVxuZnVuY3Rpb24gdG9TdHJpbmcodikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpO1xufVxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nKHZhbCkgPT09IFwiW29iamVjdCBPYmplY3RdXCIgJiYgKCF2YWwuY29uc3RydWN0b3IgfHwgdmFsLmNvbnN0cnVjdG9yLm5hbWUgPT09IFwiT2JqZWN0XCIpO1xufVxuZnVuY3Rpb24gZGVlcE1lcmdlKHRhcmdldCwgLi4uc291cmNlcykge1xuICBpZiAoIXNvdXJjZXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxuICBjb25zdCBzb3VyY2UgPSBzb3VyY2VzLnNoaWZ0KCk7XG4gIGlmIChzb3VyY2UgPT09IHZvaWQgMCkge1xuICAgIHJldHVybiB0YXJnZXQ7XG4gIH1cbiAgaWYgKGlzTWVyZ2VhYmxlT2JqZWN0KHRhcmdldCkgJiYgaXNNZXJnZWFibGVPYmplY3Qoc291cmNlKSkge1xuICAgIE9iamVjdC5rZXlzKHNvdXJjZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBpZiAoaXNNZXJnZWFibGVPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgIGlmICghdGFyZ2V0W2tleV0pIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIGRlZXBNZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZGVlcE1lcmdlKHRhcmdldCwgLi4uc291cmNlcyk7XG59XG5mdW5jdGlvbiBpc01lcmdlYWJsZU9iamVjdChpdGVtKSB7XG4gIHJldHVybiBpc1BsYWluT2JqZWN0KGl0ZW0pICYmICFBcnJheS5pc0FycmF5KGl0ZW0pO1xufVxuZnVuY3Rpb24gc3Rkb3V0KCkge1xuICByZXR1cm4gY29uc29sZS5fc3Rkb3V0IHx8IHByb2Nlc3Muc3Rkb3V0O1xufVxuY2xhc3MgQWdncmVnYXRlRXJyb3JQb255ZmlsbCBleHRlbmRzIEVycm9yIHtcbiAgZXJyb3JzO1xuICBjb25zdHJ1Y3RvcihlcnJvcnMsIG1lc3NhZ2UgPSBcIlwiKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5lcnJvcnMgPSBbLi4uZXJyb3JzXTtcbiAgfVxufVxuZnVuY3Rpb24gaXNDaGlsZFByb2Nlc3MoKSB7XG4gIHJldHVybiB0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiAhIXByb2Nlc3Muc2VuZDtcbn1cbmZ1bmN0aW9uIHNldFByb2Nlc3NUaXRsZSh0aXRsZSkge1xuICB0cnkge1xuICAgIHByb2Nlc3MudGl0bGUgPSBgbm9kZSAoJHt0aXRsZX0pYDtcbiAgfSBjYXRjaCB7XG4gIH1cbn1cbmZ1bmN0aW9uIGVzY2FwZVJlZ0V4cChzKSB7XG4gIHJldHVybiBzLnJlcGxhY2UoL1suKis/XiR7fSgpfFtcXF1cXFxcXS9nLCBcIlxcXFwkJlwiKTtcbn1cbmZ1bmN0aW9uIHdpbGRjYXJkUGF0dGVyblRvUmVnRXhwKHBhdHRlcm4pIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoXG4gICAgYF4ke3BhdHRlcm4uc3BsaXQoXCIqXCIpLm1hcChlc2NhcGVSZWdFeHApLmpvaW4oXCIuKlwiKX0kYCxcbiAgICBcImlcIlxuICApO1xufVxuY29uc3QgdXJsQWxwaGFiZXQgPSBcInVzZWFuZG9tLTI2VDE5ODM0MFBYNzVweEpBQ0tWRVJZTUlOREJVU0hXT0xGX0dRWmJmZ2hqa2xxdnd5enJpY3RcIjtcbmZ1bmN0aW9uIG5hbm9pZChzaXplID0gMjEpIHtcbiAgbGV0IGlkID0gXCJcIjtcbiAgbGV0IGkgPSBzaXplO1xuICB3aGlsZSAoaS0tKSB7XG4gICAgaWQgKz0gdXJsQWxwaGFiZXRbTWF0aC5yYW5kb20oKSAqIDY0IHwgMF07XG4gIH1cbiAgcmV0dXJuIGlkO1xufVxuXG5leHBvcnQgeyBBZ2dyZWdhdGVFcnJvclBvbnlmaWxsIGFzIEEsIHNsYXNoIGFzIGEsIGlzUHJpbWl0aXZlIGFzIGIsIGdyb3VwQnkgYXMgYywgZGVlcE1lcmdlIGFzIGQsIG5hbm9pZCBhcyBlLCBzdGRvdXQgYXMgZiwgZ2V0QWxsTW9ja2FibGVQcm9wZXJ0aWVzIGFzIGcsIGlzQ2hpbGRQcm9jZXNzIGFzIGksIG5vb3AgYXMgbiwgc2V0UHJvY2Vzc1RpdGxlIGFzIHMsIHRvQXJyYXkgYXMgdCwgd2lsZGNhcmRQYXR0ZXJuVG9SZWdFeHAgYXMgdyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/base.CTYV4Gnz.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/benchmark.B6pblCp2.js":
/*!***************************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/benchmark.B6pblCp2.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ getBenchOptions; },\n/* harmony export */   b: function() { return /* binding */ bench; },\n/* harmony export */   g: function() { return /* binding */ getBenchFn; }\n/* harmony export */ });\n/* harmony import */ var _vitest_runner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/runner */ \"./node_modules/@vitest/runner/dist/index.js\");\n/* harmony import */ var _vitest_runner_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vitest/runner/utils */ \"./node_modules/@vitest/runner/dist/utils.js\");\n/* harmony import */ var _vitest_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vitest/utils */ \"./node_modules/@vitest/utils/dist/index.js\");\n/* harmony import */ var _index_BJmtb_7W_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.BJmtb_7W.js */ \"./node_modules/vitest/dist/vendor/index.BJmtb_7W.js\");\n\n\n\n\n\nconst benchFns = /* @__PURE__ */ new WeakMap();\nconst benchOptsMap = /* @__PURE__ */ new WeakMap();\nfunction getBenchOptions(key) {\n  return benchOptsMap.get(key);\n}\nfunction getBenchFn(key) {\n  return benchFns.get(key);\n}\nconst bench = createBenchmark(function(name, fn = _vitest_utils__WEBPACK_IMPORTED_MODULE_2__.noop, options = {}) {\n  if (!(0,_index_BJmtb_7W_js__WEBPACK_IMPORTED_MODULE_3__.i)()) {\n    throw new Error(\"`bench()` is only available in benchmark mode.\");\n  }\n  const task = (0,_vitest_runner__WEBPACK_IMPORTED_MODULE_0__.getCurrentSuite)().task(formatName(name), {\n    ...this,\n    meta: {\n      benchmark: true\n    }\n  });\n  benchFns.set(task, fn);\n  benchOptsMap.set(task, options);\n});\nfunction createBenchmark(fn) {\n  const benchmark = (0,_vitest_runner_utils__WEBPACK_IMPORTED_MODULE_1__.createChainable)(\n    [\"skip\", \"only\", \"todo\"],\n    fn\n  );\n  benchmark.skipIf = (condition) => condition ? benchmark.skip : benchmark;\n  benchmark.runIf = (condition) => condition ? benchmark : benchmark.skip;\n  return benchmark;\n}\nfunction formatName(name) {\n  return typeof name === \"string\" ? name : name instanceof Function ? name.name || \"<anonymous>\" : String(name);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2JlbmNobWFyay5CNnBibENwMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlEO0FBQ007QUFDbEI7QUFDMkI7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsK0NBQUksY0FBYztBQUNwRSxPQUFPLHFEQUFvQjtBQUMzQjtBQUNBO0FBQ0EsZUFBZSwrREFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0Esb0JBQW9CLHFFQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2JlbmNobWFyay5CNnBibENwMi5qcz9lYjA5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRTdWl0ZSB9IGZyb20gJ0B2aXRlc3QvcnVubmVyJztcbmltcG9ydCB7IGNyZWF0ZUNoYWluYWJsZSB9IGZyb20gJ0B2aXRlc3QvcnVubmVyL3V0aWxzJztcbmltcG9ydCB7IG5vb3AgfSBmcm9tICdAdml0ZXN0L3V0aWxzJztcbmltcG9ydCB7IGkgYXMgaXNSdW5uaW5nSW5CZW5jaG1hcmsgfSBmcm9tICcuL2luZGV4LkJKbXRiXzdXLmpzJztcblxuY29uc3QgYmVuY2hGbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGJlbmNoT3B0c01hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuZnVuY3Rpb24gZ2V0QmVuY2hPcHRpb25zKGtleSkge1xuICByZXR1cm4gYmVuY2hPcHRzTWFwLmdldChrZXkpO1xufVxuZnVuY3Rpb24gZ2V0QmVuY2hGbihrZXkpIHtcbiAgcmV0dXJuIGJlbmNoRm5zLmdldChrZXkpO1xufVxuY29uc3QgYmVuY2ggPSBjcmVhdGVCZW5jaG1hcmsoZnVuY3Rpb24obmFtZSwgZm4gPSBub29wLCBvcHRpb25zID0ge30pIHtcbiAgaWYgKCFpc1J1bm5pbmdJbkJlbmNobWFyaygpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYGJlbmNoKClgIGlzIG9ubHkgYXZhaWxhYmxlIGluIGJlbmNobWFyayBtb2RlLlwiKTtcbiAgfVxuICBjb25zdCB0YXNrID0gZ2V0Q3VycmVudFN1aXRlKCkudGFzayhmb3JtYXROYW1lKG5hbWUpLCB7XG4gICAgLi4udGhpcyxcbiAgICBtZXRhOiB7XG4gICAgICBiZW5jaG1hcms6IHRydWVcbiAgICB9XG4gIH0pO1xuICBiZW5jaEZucy5zZXQodGFzaywgZm4pO1xuICBiZW5jaE9wdHNNYXAuc2V0KHRhc2ssIG9wdGlvbnMpO1xufSk7XG5mdW5jdGlvbiBjcmVhdGVCZW5jaG1hcmsoZm4pIHtcbiAgY29uc3QgYmVuY2htYXJrID0gY3JlYXRlQ2hhaW5hYmxlKFxuICAgIFtcInNraXBcIiwgXCJvbmx5XCIsIFwidG9kb1wiXSxcbiAgICBmblxuICApO1xuICBiZW5jaG1hcmsuc2tpcElmID0gKGNvbmRpdGlvbikgPT4gY29uZGl0aW9uID8gYmVuY2htYXJrLnNraXAgOiBiZW5jaG1hcms7XG4gIGJlbmNobWFyay5ydW5JZiA9IChjb25kaXRpb24pID0+IGNvbmRpdGlvbiA/IGJlbmNobWFyayA6IGJlbmNobWFyay5za2lwO1xuICByZXR1cm4gYmVuY2htYXJrO1xufVxuZnVuY3Rpb24gZm9ybWF0TmFtZShuYW1lKSB7XG4gIHJldHVybiB0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIiA/IG5hbWUgOiBuYW1lIGluc3RhbmNlb2YgRnVuY3Rpb24gPyBuYW1lLm5hbWUgfHwgXCI8YW5vbnltb3VzPlwiIDogU3RyaW5nKG5hbWUpO1xufVxuXG5leHBvcnQgeyBnZXRCZW5jaE9wdGlvbnMgYXMgYSwgYmVuY2ggYXMgYiwgZ2V0QmVuY2hGbiBhcyBnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/benchmark.B6pblCp2.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/date.W2xKR2qe.js":
/*!**********************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/date.W2xKR2qe.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   R: function() { return /* binding */ RealDate; },\n/* harmony export */   m: function() { return /* binding */ mockDate; },\n/* harmony export */   r: function() { return /* binding */ resetDate; }\n/* harmony export */ });\nconst RealDate = Date;\nlet now = null;\nclass MockDate extends RealDate {\n  constructor(y, m, d, h, M, s, ms) {\n    super();\n    let date;\n    switch (arguments.length) {\n      case 0:\n        if (now !== null) {\n          date = new RealDate(now.valueOf());\n        } else {\n          date = new RealDate();\n        }\n        break;\n      case 1:\n        date = new RealDate(y);\n        break;\n      default:\n        d = typeof d === \"undefined\" ? 1 : d;\n        h = h || 0;\n        M = M || 0;\n        s = s || 0;\n        ms = ms || 0;\n        date = new RealDate(y, m, d, h, M, s, ms);\n        break;\n    }\n    Object.setPrototypeOf(date, MockDate.prototype);\n    return date;\n  }\n}\nMockDate.UTC = RealDate.UTC;\nMockDate.now = function() {\n  return new MockDate().valueOf();\n};\nMockDate.parse = function(dateString) {\n  return RealDate.parse(dateString);\n};\nMockDate.toString = function() {\n  return RealDate.toString();\n};\nfunction mockDate(date) {\n  const dateObj = new RealDate(date.valueOf());\n  if (Number.isNaN(dateObj.getTime())) {\n    throw new TypeError(`mockdate: The time set is an invalid date: ${date}`);\n  }\n  globalThis.Date = MockDate;\n  now = dateObj.valueOf();\n}\nfunction resetDate() {\n  globalThis.Date = RealDate;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2RhdGUuVzJ4S1IycWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxLQUFLO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2RhdGUuVzJ4S1IycWUuanM/YmQ0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFsRGF0ZSA9IERhdGU7XG5sZXQgbm93ID0gbnVsbDtcbmNsYXNzIE1vY2tEYXRlIGV4dGVuZHMgUmVhbERhdGUge1xuICBjb25zdHJ1Y3Rvcih5LCBtLCBkLCBoLCBNLCBzLCBtcykge1xuICAgIHN1cGVyKCk7XG4gICAgbGV0IGRhdGU7XG4gICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgIGlmIChub3cgIT09IG51bGwpIHtcbiAgICAgICAgICBkYXRlID0gbmV3IFJlYWxEYXRlKG5vdy52YWx1ZU9mKCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRhdGUgPSBuZXcgUmVhbERhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgZGF0ZSA9IG5ldyBSZWFsRGF0ZSh5KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBkID0gdHlwZW9mIGQgPT09IFwidW5kZWZpbmVkXCIgPyAxIDogZDtcbiAgICAgICAgaCA9IGggfHwgMDtcbiAgICAgICAgTSA9IE0gfHwgMDtcbiAgICAgICAgcyA9IHMgfHwgMDtcbiAgICAgICAgbXMgPSBtcyB8fCAwO1xuICAgICAgICBkYXRlID0gbmV3IFJlYWxEYXRlKHksIG0sIGQsIGgsIE0sIHMsIG1zKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihkYXRlLCBNb2NrRGF0ZS5wcm90b3R5cGUpO1xuICAgIHJldHVybiBkYXRlO1xuICB9XG59XG5Nb2NrRGF0ZS5VVEMgPSBSZWFsRGF0ZS5VVEM7XG5Nb2NrRGF0ZS5ub3cgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBNb2NrRGF0ZSgpLnZhbHVlT2YoKTtcbn07XG5Nb2NrRGF0ZS5wYXJzZSA9IGZ1bmN0aW9uKGRhdGVTdHJpbmcpIHtcbiAgcmV0dXJuIFJlYWxEYXRlLnBhcnNlKGRhdGVTdHJpbmcpO1xufTtcbk1vY2tEYXRlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBSZWFsRGF0ZS50b1N0cmluZygpO1xufTtcbmZ1bmN0aW9uIG1vY2tEYXRlKGRhdGUpIHtcbiAgY29uc3QgZGF0ZU9iaiA9IG5ldyBSZWFsRGF0ZShkYXRlLnZhbHVlT2YoKSk7XG4gIGlmIChOdW1iZXIuaXNOYU4oZGF0ZU9iai5nZXRUaW1lKCkpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgbW9ja2RhdGU6IFRoZSB0aW1lIHNldCBpcyBhbiBpbnZhbGlkIGRhdGU6ICR7ZGF0ZX1gKTtcbiAgfVxuICBnbG9iYWxUaGlzLkRhdGUgPSBNb2NrRGF0ZTtcbiAgbm93ID0gZGF0ZU9iai52YWx1ZU9mKCk7XG59XG5mdW5jdGlvbiByZXNldERhdGUoKSB7XG4gIGdsb2JhbFRoaXMuRGF0ZSA9IFJlYWxEYXRlO1xufVxuXG5leHBvcnQgeyBSZWFsRGF0ZSBhcyBSLCBtb2NrRGF0ZSBhcyBtLCByZXNldERhdGUgYXMgciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/date.W2xKR2qe.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/global.7bFbnyXl.js":
/*!************************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/global.7bFbnyXl.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ getCurrentEnvironment; },\n/* harmony export */   g: function() { return /* binding */ getWorkerState; },\n/* harmony export */   p: function() { return /* binding */ provideWorkerState; }\n/* harmony export */ });\nfunction getWorkerState() {\n  const workerState = globalThis.__vitest_worker__;\n  if (!workerState) {\n    const errorMsg = 'Vitest failed to access its internal state.\\n\\nOne of the following is possible:\\n- \"vitest\" is imported directly without running \"vitest\" command\\n- \"vitest\" is imported inside \"globalSetup\" (to fix this, use \"setupFiles\" instead, because \"globalSetup\" runs in a different context)\\n- Otherwise, it might be a Vitest bug. Please report it to https://github.com/vitest-dev/vitest/issues\\n';\n    throw new Error(errorMsg);\n  }\n  return workerState;\n}\nfunction provideWorkerState(context, state) {\n  Object.defineProperty(context, \"__vitest_worker__\", {\n    value: state,\n    configurable: true,\n    writable: true,\n    enumerable: false\n  });\n  return state;\n}\nfunction getCurrentEnvironment() {\n  const state = getWorkerState();\n  return state == null ? void 0 : state.environment.name;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2dsb2JhbC43YkZibnlYbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZpdGVzdC9kaXN0L3ZlbmRvci9nbG9iYWwuN2JGYm55WGwuanM/N2M2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRXb3JrZXJTdGF0ZSgpIHtcbiAgY29uc3Qgd29ya2VyU3RhdGUgPSBnbG9iYWxUaGlzLl9fdml0ZXN0X3dvcmtlcl9fO1xuICBpZiAoIXdvcmtlclN0YXRlKSB7XG4gICAgY29uc3QgZXJyb3JNc2cgPSAnVml0ZXN0IGZhaWxlZCB0byBhY2Nlc3MgaXRzIGludGVybmFsIHN0YXRlLlxcblxcbk9uZSBvZiB0aGUgZm9sbG93aW5nIGlzIHBvc3NpYmxlOlxcbi0gXCJ2aXRlc3RcIiBpcyBpbXBvcnRlZCBkaXJlY3RseSB3aXRob3V0IHJ1bm5pbmcgXCJ2aXRlc3RcIiBjb21tYW5kXFxuLSBcInZpdGVzdFwiIGlzIGltcG9ydGVkIGluc2lkZSBcImdsb2JhbFNldHVwXCIgKHRvIGZpeCB0aGlzLCB1c2UgXCJzZXR1cEZpbGVzXCIgaW5zdGVhZCwgYmVjYXVzZSBcImdsb2JhbFNldHVwXCIgcnVucyBpbiBhIGRpZmZlcmVudCBjb250ZXh0KVxcbi0gT3RoZXJ3aXNlLCBpdCBtaWdodCBiZSBhIFZpdGVzdCBidWcuIFBsZWFzZSByZXBvcnQgaXQgdG8gaHR0cHM6Ly9naXRodWIuY29tL3ZpdGVzdC1kZXYvdml0ZXN0L2lzc3Vlc1xcbic7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTXNnKTtcbiAgfVxuICByZXR1cm4gd29ya2VyU3RhdGU7XG59XG5mdW5jdGlvbiBwcm92aWRlV29ya2VyU3RhdGUoY29udGV4dCwgc3RhdGUpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnRleHQsIFwiX192aXRlc3Rfd29ya2VyX19cIiwge1xuICAgIHZhbHVlOiBzdGF0ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBzdGF0ZTtcbn1cbmZ1bmN0aW9uIGdldEN1cnJlbnRFbnZpcm9ubWVudCgpIHtcbiAgY29uc3Qgc3RhdGUgPSBnZXRXb3JrZXJTdGF0ZSgpO1xuICByZXR1cm4gc3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0YXRlLmVudmlyb25tZW50Lm5hbWU7XG59XG5cbmV4cG9ydCB7IGdldEN1cnJlbnRFbnZpcm9ubWVudCBhcyBhLCBnZXRXb3JrZXJTdGF0ZSBhcyBnLCBwcm92aWRlV29ya2VyU3RhdGUgYXMgcCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/global.7bFbnyXl.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/index.BJmtb_7W.js":
/*!***********************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/index.BJmtb_7W.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ removeUndefinedValues; },\n/* harmony export */   i: function() { return /* binding */ isRunningInBenchmark; },\n/* harmony export */   r: function() { return /* binding */ relativePath; }\n/* harmony export */ });\n/* harmony import */ var pathe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pathe */ \"./node_modules/pathe/dist/index.mjs\");\n/* harmony import */ var _vitest_runner_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/runner/utils */ \"./node_modules/@vitest/runner/dist/utils.js\");\n/* harmony import */ var _global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global.7bFbnyXl.js */ \"./node_modules/vitest/dist/vendor/global.7bFbnyXl.js\");\n\n\n\n\n\n\nfunction getRunMode() {\n  return (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_1__.g)().config.mode;\n}\nfunction isRunningInBenchmark() {\n  return getRunMode() === \"benchmark\";\n}\nconst relativePath = pathe__WEBPACK_IMPORTED_MODULE_2__.relative;\nfunction removeUndefinedValues(obj) {\n  for (const key in Object.keys(obj)) {\n    if (obj[key] === void 0) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2luZGV4LkJKbXRiXzdXLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpQztBQUNIO0FBQ1A7QUFDb0M7QUFDaEM7O0FBRTNCO0FBQ0EsU0FBUyxzREFBYztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwyQ0FBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2luZGV4LkJKbXRiXzdXLmpzPzUyNTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVsYXRpdmUgfSBmcm9tICdwYXRoZSc7XG5pbXBvcnQgJ0B2aXRlc3QvcnVubmVyL3V0aWxzJztcbmltcG9ydCAnQHZpdGVzdC91dGlscyc7XG5pbXBvcnQgeyBnIGFzIGdldFdvcmtlclN0YXRlIH0gZnJvbSAnLi9nbG9iYWwuN2JGYm55WGwuanMnO1xuaW1wb3J0ICcuL2Vudi4ybHRyUU5xMC5qcyc7XG5cbmZ1bmN0aW9uIGdldFJ1bk1vZGUoKSB7XG4gIHJldHVybiBnZXRXb3JrZXJTdGF0ZSgpLmNvbmZpZy5tb2RlO1xufVxuZnVuY3Rpb24gaXNSdW5uaW5nSW5CZW5jaG1hcmsoKSB7XG4gIHJldHVybiBnZXRSdW5Nb2RlKCkgPT09IFwiYmVuY2htYXJrXCI7XG59XG5jb25zdCByZWxhdGl2ZVBhdGggPSByZWxhdGl2ZTtcbmZ1bmN0aW9uIHJlbW92ZVVuZGVmaW5lZFZhbHVlcyhvYmopIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gT2JqZWN0LmtleXMob2JqKSkge1xuICAgIGlmIChvYmpba2V5XSA9PT0gdm9pZCAwKSB7XG4gICAgICBkZWxldGUgb2JqW2tleV07XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydCB7IHJlbW92ZVVuZGVmaW5lZFZhbHVlcyBhcyBhLCBpc1J1bm5pbmdJbkJlbmNobWFyayBhcyBpLCByZWxhdGl2ZVBhdGggYXMgciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/index.BJmtb_7W.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/index.Hqvcg1pf.js":
/*!***********************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/index.Hqvcg1pf.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   V: function() { return /* binding */ VitestIndex; },\n/* harmony export */   a: function() { return /* binding */ isWatchMode; },\n/* harmony export */   b: function() { return /* binding */ assertType; },\n/* harmony export */   d: function() { return /* binding */ dist; },\n/* harmony export */   g: function() { return /* binding */ getRunningMode; },\n/* harmony export */   i: function() { return /* binding */ inject; }\n/* harmony export */ });\n/* harmony import */ var _vitest_runner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/runner */ \"./node_modules/@vitest/runner/dist/index.js\");\n/* harmony import */ var _benchmark_B6pblCp2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./benchmark.B6pblCp2.js */ \"./node_modules/vitest/dist/vendor/benchmark.B6pblCp2.js\");\n/* harmony import */ var _run_once_Db8Hgq9X_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./run-once.Db8Hgq9X.js */ \"./node_modules/vitest/dist/vendor/run-once.Db8Hgq9X.js\");\n/* harmony import */ var _vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vi.DXACdGTu.js */ \"./node_modules/vitest/dist/vendor/vi.DXACdGTu.js\");\n/* harmony import */ var _global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global.7bFbnyXl.js */ \"./node_modules/vitest/dist/vendor/global.7bFbnyXl.js\");\n/* harmony import */ var chai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chai */ \"./node_modules/chai/chai.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n\n\nfunction getRunningMode() {\n  return process.env.VITEST_MODE === \"WATCH\" ? \"watch\" : \"run\";\n}\nfunction isWatchMode() {\n  return getRunningMode() === \"watch\";\n}\n\nfunction inject(key) {\n  const workerState = (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_2__.g)();\n  return workerState.providedContext[key];\n}\n\nvar dist = {};\n\n(function (exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.expectTypeOf = void 0;\n\tconst fn = () => true;\n\t/**\n\t * Similar to Jest's `expect`, but with type-awareness.\n\t * Gives you access to a number of type-matchers that let you make assertions about the\n\t * form of a reference or generic type parameter.\n\t *\n\t * @example\n\t * import {foo, bar} from '../foo'\n\t * import {expectTypeOf} from 'expect-type'\n\t *\n\t * test('foo types', () => {\n\t *   // make sure `foo` has type {a: number}\n\t *   expectTypeOf(foo).toMatchTypeOf({a: 1})\n\t *   expectTypeOf(foo).toHaveProperty('a').toBeNumber()\n\t *\n\t *   // make sure `bar` is a function taking a string:\n\t *   expectTypeOf(bar).parameter(0).toBeString()\n\t *   expectTypeOf(bar).returns.not.toBeAny()\n\t * })\n\t *\n\t * @description\n\t * See the [full docs](https://npmjs.com/package/expect-type#documentation) for lots more examples.\n\t */\n\tconst expectTypeOf = (_actual) => {\n\t    const nonFunctionProperties = [\n\t        'parameters',\n\t        'returns',\n\t        'resolves',\n\t        'not',\n\t        'items',\n\t        'constructorParameters',\n\t        'thisParameter',\n\t        'instance',\n\t        'guards',\n\t        'asserts',\n\t        'branded',\n\t    ];\n\t    const obj = {\n\t        /* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\t        toBeAny: fn,\n\t        toBeUnknown: fn,\n\t        toBeNever: fn,\n\t        toBeFunction: fn,\n\t        toBeObject: fn,\n\t        toBeArray: fn,\n\t        toBeString: fn,\n\t        toBeNumber: fn,\n\t        toBeBoolean: fn,\n\t        toBeVoid: fn,\n\t        toBeSymbol: fn,\n\t        toBeNull: fn,\n\t        toBeUndefined: fn,\n\t        toBeNullable: fn,\n\t        toMatchTypeOf: fn,\n\t        toEqualTypeOf: fn,\n\t        toBeCallableWith: fn,\n\t        toBeConstructibleWith: fn,\n\t        /* eslint-enable @typescript-eslint/no-unsafe-assignment */\n\t        extract: exports.expectTypeOf,\n\t        exclude: exports.expectTypeOf,\n\t        pick: exports.expectTypeOf,\n\t        omit: exports.expectTypeOf,\n\t        toHaveProperty: exports.expectTypeOf,\n\t        parameter: exports.expectTypeOf,\n\t    };\n\t    const getterProperties = nonFunctionProperties;\n\t    getterProperties.forEach((prop) => Object.defineProperty(obj, prop, { get: () => (0, exports.expectTypeOf)({}) }));\n\t    return obj;\n\t};\n\texports.expectTypeOf = expectTypeOf; \n} (dist));\n\nfunction noop() {\n}\nconst assertType = noop;\n\nvar VitestIndex = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  afterAll: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.afterAll,\n  afterEach: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.afterEach,\n  assert: chai__WEBPACK_IMPORTED_MODULE_1__.assert,\n  assertType: assertType,\n  beforeAll: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.beforeAll,\n  beforeEach: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.beforeEach,\n  bench: _benchmark_B6pblCp2_js__WEBPACK_IMPORTED_MODULE_3__.b,\n  chai: chai__WEBPACK_IMPORTED_MODULE_1__,\n  createExpect: _vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_4__.c,\n  describe: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.describe,\n  expect: _vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_4__.a,\n  expectTypeOf: dist.expectTypeOf,\n  getRunningMode: getRunningMode,\n  inject: inject,\n  isFirstRun: _run_once_Db8Hgq9X_js__WEBPACK_IMPORTED_MODULE_5__.i,\n  isWatchMode: isWatchMode,\n  it: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.it,\n  onTestFailed: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.onTestFailed,\n  onTestFinished: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.onTestFinished,\n  runOnce: _run_once_Db8Hgq9X_js__WEBPACK_IMPORTED_MODULE_5__.a,\n  should: chai__WEBPACK_IMPORTED_MODULE_1__.should,\n  suite: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.suite,\n  test: _vitest_runner__WEBPACK_IMPORTED_MODULE_0__.test,\n  vi: _vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_4__.v,\n  vitest: _vi_DXACdGTu_js__WEBPACK_IMPORTED_MODULE_4__.b\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL2luZGV4LkhxdmNnMXBmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUk7QUFDaEY7QUFDa0I7QUFDdUI7QUFDbkM7QUFDOUI7QUFDUzs7QUFFdEM7QUFDQSxTQUFTLE9BQU87QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQkFBc0Isc0RBQWM7QUFDcEM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLGdEQUFnRCxhQUFhO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEIsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsdUNBQXVDLEtBQUs7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLHVDQUF1QyxHQUFHO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLG9EQUFRO0FBQ3BCLGFBQWEscURBQVM7QUFDdEIsVUFBVSx3Q0FBTTtBQUNoQjtBQUNBLGFBQWEscURBQVM7QUFDdEIsY0FBYyxzREFBVTtBQUN4QixTQUFTLHFEQUFLO0FBQ2QsUUFBUSxpQ0FBSTtBQUNaLGdCQUFnQiw4Q0FBWTtBQUM1QixZQUFZLG9EQUFRO0FBQ3BCLFVBQVUsOENBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvREFBVTtBQUN4QjtBQUNBLE1BQU0sOENBQUU7QUFDUixnQkFBZ0Isd0RBQVk7QUFDNUIsa0JBQWtCLDBEQUFjO0FBQ2hDLFdBQVcsb0RBQU87QUFDbEIsVUFBVSx3Q0FBTTtBQUNoQixTQUFTLGlEQUFLO0FBQ2QsUUFBUSxnREFBSTtBQUNaLE1BQU0sOENBQUU7QUFDUixVQUFVLDhDQUFNO0FBQ2hCLENBQUM7O0FBRTJHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aXRlc3QvZGlzdC92ZW5kb3IvaW5kZXguSHF2Y2cxcGYuanM/YWJhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhZnRlckFsbCwgYWZ0ZXJFYWNoLCBiZWZvcmVBbGwsIGJlZm9yZUVhY2gsIGRlc2NyaWJlLCBpdCwgb25UZXN0RmFpbGVkLCBvblRlc3RGaW5pc2hlZCwgc3VpdGUsIHRlc3QgfSBmcm9tICdAdml0ZXN0L3J1bm5lcic7XG5pbXBvcnQgeyBiIGFzIGJlbmNoIH0gZnJvbSAnLi9iZW5jaG1hcmsuQjZwYmxDcDIuanMnO1xuaW1wb3J0IHsgaSBhcyBpc0ZpcnN0UnVuLCBhIGFzIHJ1bk9uY2UgfSBmcm9tICcuL3J1bi1vbmNlLkRiOEhncTlYLmpzJztcbmltcG9ydCB7IGMgYXMgY3JlYXRlRXhwZWN0LCBhIGFzIGdsb2JhbEV4cGVjdCwgdiBhcyB2aSwgYiBhcyB2aXRlc3QgfSBmcm9tICcuL3ZpLkRYQUNkR1R1LmpzJztcbmltcG9ydCB7IGcgYXMgZ2V0V29ya2VyU3RhdGUgfSBmcm9tICcuL2dsb2JhbC43YkZibnlYbC5qcyc7XG5pbXBvcnQgKiBhcyBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IHsgYXNzZXJ0LCBzaG91bGQgfSBmcm9tICdjaGFpJztcblxuZnVuY3Rpb24gZ2V0UnVubmluZ01vZGUoKSB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5WSVRFU1RfTU9ERSA9PT0gXCJXQVRDSFwiID8gXCJ3YXRjaFwiIDogXCJydW5cIjtcbn1cbmZ1bmN0aW9uIGlzV2F0Y2hNb2RlKCkge1xuICByZXR1cm4gZ2V0UnVubmluZ01vZGUoKSA9PT0gXCJ3YXRjaFwiO1xufVxuXG5mdW5jdGlvbiBpbmplY3Qoa2V5KSB7XG4gIGNvbnN0IHdvcmtlclN0YXRlID0gZ2V0V29ya2VyU3RhdGUoKTtcbiAgcmV0dXJuIHdvcmtlclN0YXRlLnByb3ZpZGVkQ29udGV4dFtrZXldO1xufVxuXG52YXIgZGlzdCA9IHt9O1xuXG4oZnVuY3Rpb24gKGV4cG9ydHMpIHtcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuXHRleHBvcnRzLmV4cGVjdFR5cGVPZiA9IHZvaWQgMDtcblx0Y29uc3QgZm4gPSAoKSA9PiB0cnVlO1xuXHQvKipcblx0ICogU2ltaWxhciB0byBKZXN0J3MgYGV4cGVjdGAsIGJ1dCB3aXRoIHR5cGUtYXdhcmVuZXNzLlxuXHQgKiBHaXZlcyB5b3UgYWNjZXNzIHRvIGEgbnVtYmVyIG9mIHR5cGUtbWF0Y2hlcnMgdGhhdCBsZXQgeW91IG1ha2UgYXNzZXJ0aW9ucyBhYm91dCB0aGVcblx0ICogZm9ybSBvZiBhIHJlZmVyZW5jZSBvciBnZW5lcmljIHR5cGUgcGFyYW1ldGVyLlxuXHQgKlxuXHQgKiBAZXhhbXBsZVxuXHQgKiBpbXBvcnQge2ZvbywgYmFyfSBmcm9tICcuLi9mb28nXG5cdCAqIGltcG9ydCB7ZXhwZWN0VHlwZU9mfSBmcm9tICdleHBlY3QtdHlwZSdcblx0ICpcblx0ICogdGVzdCgnZm9vIHR5cGVzJywgKCkgPT4ge1xuXHQgKiAgIC8vIG1ha2Ugc3VyZSBgZm9vYCBoYXMgdHlwZSB7YTogbnVtYmVyfVxuXHQgKiAgIGV4cGVjdFR5cGVPZihmb28pLnRvTWF0Y2hUeXBlT2Yoe2E6IDF9KVxuXHQgKiAgIGV4cGVjdFR5cGVPZihmb28pLnRvSGF2ZVByb3BlcnR5KCdhJykudG9CZU51bWJlcigpXG5cdCAqXG5cdCAqICAgLy8gbWFrZSBzdXJlIGBiYXJgIGlzIGEgZnVuY3Rpb24gdGFraW5nIGEgc3RyaW5nOlxuXHQgKiAgIGV4cGVjdFR5cGVPZihiYXIpLnBhcmFtZXRlcigwKS50b0JlU3RyaW5nKClcblx0ICogICBleHBlY3RUeXBlT2YoYmFyKS5yZXR1cm5zLm5vdC50b0JlQW55KClcblx0ICogfSlcblx0ICpcblx0ICogQGRlc2NyaXB0aW9uXG5cdCAqIFNlZSB0aGUgW2Z1bGwgZG9jc10oaHR0cHM6Ly9ucG1qcy5jb20vcGFja2FnZS9leHBlY3QtdHlwZSNkb2N1bWVudGF0aW9uKSBmb3IgbG90cyBtb3JlIGV4YW1wbGVzLlxuXHQgKi9cblx0Y29uc3QgZXhwZWN0VHlwZU9mID0gKF9hY3R1YWwpID0+IHtcblx0ICAgIGNvbnN0IG5vbkZ1bmN0aW9uUHJvcGVydGllcyA9IFtcblx0ICAgICAgICAncGFyYW1ldGVycycsXG5cdCAgICAgICAgJ3JldHVybnMnLFxuXHQgICAgICAgICdyZXNvbHZlcycsXG5cdCAgICAgICAgJ25vdCcsXG5cdCAgICAgICAgJ2l0ZW1zJyxcblx0ICAgICAgICAnY29uc3RydWN0b3JQYXJhbWV0ZXJzJyxcblx0ICAgICAgICAndGhpc1BhcmFtZXRlcicsXG5cdCAgICAgICAgJ2luc3RhbmNlJyxcblx0ICAgICAgICAnZ3VhcmRzJyxcblx0ICAgICAgICAnYXNzZXJ0cycsXG5cdCAgICAgICAgJ2JyYW5kZWQnLFxuXHQgICAgXTtcblx0ICAgIGNvbnN0IG9iaiA9IHtcblx0ICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnQgKi9cblx0ICAgICAgICB0b0JlQW55OiBmbixcblx0ICAgICAgICB0b0JlVW5rbm93bjogZm4sXG5cdCAgICAgICAgdG9CZU5ldmVyOiBmbixcblx0ICAgICAgICB0b0JlRnVuY3Rpb246IGZuLFxuXHQgICAgICAgIHRvQmVPYmplY3Q6IGZuLFxuXHQgICAgICAgIHRvQmVBcnJheTogZm4sXG5cdCAgICAgICAgdG9CZVN0cmluZzogZm4sXG5cdCAgICAgICAgdG9CZU51bWJlcjogZm4sXG5cdCAgICAgICAgdG9CZUJvb2xlYW46IGZuLFxuXHQgICAgICAgIHRvQmVWb2lkOiBmbixcblx0ICAgICAgICB0b0JlU3ltYm9sOiBmbixcblx0ICAgICAgICB0b0JlTnVsbDogZm4sXG5cdCAgICAgICAgdG9CZVVuZGVmaW5lZDogZm4sXG5cdCAgICAgICAgdG9CZU51bGxhYmxlOiBmbixcblx0ICAgICAgICB0b01hdGNoVHlwZU9mOiBmbixcblx0ICAgICAgICB0b0VxdWFsVHlwZU9mOiBmbixcblx0ICAgICAgICB0b0JlQ2FsbGFibGVXaXRoOiBmbixcblx0ICAgICAgICB0b0JlQ29uc3RydWN0aWJsZVdpdGg6IGZuLFxuXHQgICAgICAgIC8qIGVzbGludC1lbmFibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hc3NpZ25tZW50ICovXG5cdCAgICAgICAgZXh0cmFjdDogZXhwb3J0cy5leHBlY3RUeXBlT2YsXG5cdCAgICAgICAgZXhjbHVkZTogZXhwb3J0cy5leHBlY3RUeXBlT2YsXG5cdCAgICAgICAgcGljazogZXhwb3J0cy5leHBlY3RUeXBlT2YsXG5cdCAgICAgICAgb21pdDogZXhwb3J0cy5leHBlY3RUeXBlT2YsXG5cdCAgICAgICAgdG9IYXZlUHJvcGVydHk6IGV4cG9ydHMuZXhwZWN0VHlwZU9mLFxuXHQgICAgICAgIHBhcmFtZXRlcjogZXhwb3J0cy5leHBlY3RUeXBlT2YsXG5cdCAgICB9O1xuXHQgICAgY29uc3QgZ2V0dGVyUHJvcGVydGllcyA9IG5vbkZ1bmN0aW9uUHJvcGVydGllcztcblx0ICAgIGdldHRlclByb3BlcnRpZXMuZm9yRWFjaCgocHJvcCkgPT4gT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgcHJvcCwgeyBnZXQ6ICgpID0+ICgwLCBleHBvcnRzLmV4cGVjdFR5cGVPZikoe30pIH0pKTtcblx0ICAgIHJldHVybiBvYmo7XG5cdH07XG5cdGV4cG9ydHMuZXhwZWN0VHlwZU9mID0gZXhwZWN0VHlwZU9mOyBcbn0gKGRpc3QpKTtcblxuZnVuY3Rpb24gbm9vcCgpIHtcbn1cbmNvbnN0IGFzc2VydFR5cGUgPSBub29wO1xuXG52YXIgVml0ZXN0SW5kZXggPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgYWZ0ZXJBbGw6IGFmdGVyQWxsLFxuICBhZnRlckVhY2g6IGFmdGVyRWFjaCxcbiAgYXNzZXJ0OiBhc3NlcnQsXG4gIGFzc2VydFR5cGU6IGFzc2VydFR5cGUsXG4gIGJlZm9yZUFsbDogYmVmb3JlQWxsLFxuICBiZWZvcmVFYWNoOiBiZWZvcmVFYWNoLFxuICBiZW5jaDogYmVuY2gsXG4gIGNoYWk6IGNoYWksXG4gIGNyZWF0ZUV4cGVjdDogY3JlYXRlRXhwZWN0LFxuICBkZXNjcmliZTogZGVzY3JpYmUsXG4gIGV4cGVjdDogZ2xvYmFsRXhwZWN0LFxuICBleHBlY3RUeXBlT2Y6IGRpc3QuZXhwZWN0VHlwZU9mLFxuICBnZXRSdW5uaW5nTW9kZTogZ2V0UnVubmluZ01vZGUsXG4gIGluamVjdDogaW5qZWN0LFxuICBpc0ZpcnN0UnVuOiBpc0ZpcnN0UnVuLFxuICBpc1dhdGNoTW9kZTogaXNXYXRjaE1vZGUsXG4gIGl0OiBpdCxcbiAgb25UZXN0RmFpbGVkOiBvblRlc3RGYWlsZWQsXG4gIG9uVGVzdEZpbmlzaGVkOiBvblRlc3RGaW5pc2hlZCxcbiAgcnVuT25jZTogcnVuT25jZSxcbiAgc2hvdWxkOiBzaG91bGQsXG4gIHN1aXRlOiBzdWl0ZSxcbiAgdGVzdDogdGVzdCxcbiAgdmk6IHZpLFxuICB2aXRlc3Q6IHZpdGVzdFxufSk7XG5cbmV4cG9ydCB7IFZpdGVzdEluZGV4IGFzIFYsIGlzV2F0Y2hNb2RlIGFzIGEsIGFzc2VydFR5cGUgYXMgYiwgZGlzdCBhcyBkLCBnZXRSdW5uaW5nTW9kZSBhcyBnLCBpbmplY3QgYXMgaSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/index.Hqvcg1pf.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/run-once.Db8Hgq9X.js":
/*!**************************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/run-once.Db8Hgq9X.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ runOnce; },\n/* harmony export */   i: function() { return /* binding */ isFirstRun; },\n/* harmony export */   r: function() { return /* binding */ resetRunOnceCounter; }\n/* harmony export */ });\n/* harmony import */ var _global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global.7bFbnyXl.js */ \"./node_modules/vitest/dist/vendor/global.7bFbnyXl.js\");\n\n\nconst filesCount = /* @__PURE__ */ new Map();\nconst cache = /* @__PURE__ */ new Map();\nfunction runOnce(fn, key) {\n  const filepath = (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_0__.g)().filepath || \"__unknown_files__\";\n  if (!key) {\n    filesCount.set(filepath, (filesCount.get(filepath) || 0) + 1);\n    key = String(filesCount.get(filepath));\n  }\n  const id = `${filepath}:${key}`;\n  if (!cache.has(id)) {\n    cache.set(id, fn());\n  }\n  return cache.get(id);\n}\nfunction isFirstRun() {\n  let firstRun = false;\n  runOnce(() => {\n    firstRun = true;\n  }, \"__vitest_first_run__\");\n  return firstRun;\n}\nfunction resetRunOnceCounter() {\n  filesCount.clear();\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL3J1bi1vbmNlLkRiOEhncTlYLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7O0FBRTNEO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzREFBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTLEdBQUcsSUFBSTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFbUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZpdGVzdC9kaXN0L3ZlbmRvci9ydW4tb25jZS5EYjhIZ3E5WC5qcz84YjkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGcgYXMgZ2V0V29ya2VyU3RhdGUgfSBmcm9tICcuL2dsb2JhbC43YkZibnlYbC5qcyc7XG5cbmNvbnN0IGZpbGVzQ291bnQgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuY29uc3QgY2FjaGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuZnVuY3Rpb24gcnVuT25jZShmbiwga2V5KSB7XG4gIGNvbnN0IGZpbGVwYXRoID0gZ2V0V29ya2VyU3RhdGUoKS5maWxlcGF0aCB8fCBcIl9fdW5rbm93bl9maWxlc19fXCI7XG4gIGlmICgha2V5KSB7XG4gICAgZmlsZXNDb3VudC5zZXQoZmlsZXBhdGgsIChmaWxlc0NvdW50LmdldChmaWxlcGF0aCkgfHwgMCkgKyAxKTtcbiAgICBrZXkgPSBTdHJpbmcoZmlsZXNDb3VudC5nZXQoZmlsZXBhdGgpKTtcbiAgfVxuICBjb25zdCBpZCA9IGAke2ZpbGVwYXRofToke2tleX1gO1xuICBpZiAoIWNhY2hlLmhhcyhpZCkpIHtcbiAgICBjYWNoZS5zZXQoaWQsIGZuKCkpO1xuICB9XG4gIHJldHVybiBjYWNoZS5nZXQoaWQpO1xufVxuZnVuY3Rpb24gaXNGaXJzdFJ1bigpIHtcbiAgbGV0IGZpcnN0UnVuID0gZmFsc2U7XG4gIHJ1bk9uY2UoKCkgPT4ge1xuICAgIGZpcnN0UnVuID0gdHJ1ZTtcbiAgfSwgXCJfX3ZpdGVzdF9maXJzdF9ydW5fX1wiKTtcbiAgcmV0dXJuIGZpcnN0UnVuO1xufVxuZnVuY3Rpb24gcmVzZXRSdW5PbmNlQ291bnRlcigpIHtcbiAgZmlsZXNDb3VudC5jbGVhcigpO1xufVxuXG5leHBvcnQgeyBydW5PbmNlIGFzIGEsIGlzRmlyc3RSdW4gYXMgaSwgcmVzZXRSdW5PbmNlQ291bnRlciBhcyByIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/run-once.Db8Hgq9X.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/tasks.DhVtQBtW.js":
/*!***********************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/tasks.DhVtQBtW.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ getFullName; },\n/* harmony export */   g: function() { return /* binding */ getTestName; },\n/* harmony export */   h: function() { return /* binding */ hasFailedSnapshot; }\n/* harmony export */ });\n/* harmony import */ var _vitest_runner_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vitest/runner/utils */ \"./node_modules/@vitest/runner/dist/utils.js\");\n\n\n\nfunction hasFailedSnapshot(suite) {\n  return (0,_vitest_runner_utils__WEBPACK_IMPORTED_MODULE_0__.getTests)(suite).some((s) => {\n    var _a, _b;\n    return (_b = (_a = s.result) == null ? void 0 : _a.errors) == null ? void 0 : _b.some(\n      (e) => typeof (e == null ? void 0 : e.message) === \"string\" && e.message.match(/Snapshot .* mismatched/)\n    );\n  });\n}\nfunction getFullName(task, separator = \" > \") {\n  return (0,_vitest_runner_utils__WEBPACK_IMPORTED_MODULE_0__.getNames)(task).join(separator);\n}\nfunction getTestName(task, separator = \" > \") {\n  return (0,_vitest_runner_utils__WEBPACK_IMPORTED_MODULE_0__.getNames)(task).slice(1).join(separator);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdml0ZXN0L2Rpc3QvdmVuZG9yL3Rhc2tzLkRoVnRRQnRXLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEQ7QUFDbkM7O0FBRXZCO0FBQ0EsU0FBUyw4REFBUTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsU0FBUyw4REFBUTtBQUNqQjtBQUNBO0FBQ0EsU0FBUyw4REFBUTtBQUNqQjs7QUFFc0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZpdGVzdC9kaXN0L3ZlbmRvci90YXNrcy5EaFZ0UUJ0Vy5qcz9iNWUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE5hbWVzLCBnZXRUZXN0cyB9IGZyb20gJ0B2aXRlc3QvcnVubmVyL3V0aWxzJztcbmltcG9ydCAnQHZpdGVzdC91dGlscyc7XG5cbmZ1bmN0aW9uIGhhc0ZhaWxlZFNuYXBzaG90KHN1aXRlKSB7XG4gIHJldHVybiBnZXRUZXN0cyhzdWl0ZSkuc29tZSgocykgPT4ge1xuICAgIHZhciBfYSwgX2I7XG4gICAgcmV0dXJuIChfYiA9IChfYSA9IHMucmVzdWx0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuZXJyb3JzKSA9PSBudWxsID8gdm9pZCAwIDogX2Iuc29tZShcbiAgICAgIChlKSA9PiB0eXBlb2YgKGUgPT0gbnVsbCA/IHZvaWQgMCA6IGUubWVzc2FnZSkgPT09IFwic3RyaW5nXCIgJiYgZS5tZXNzYWdlLm1hdGNoKC9TbmFwc2hvdCAuKiBtaXNtYXRjaGVkLylcbiAgICApO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGdldEZ1bGxOYW1lKHRhc2ssIHNlcGFyYXRvciA9IFwiID4gXCIpIHtcbiAgcmV0dXJuIGdldE5hbWVzKHRhc2spLmpvaW4oc2VwYXJhdG9yKTtcbn1cbmZ1bmN0aW9uIGdldFRlc3ROYW1lKHRhc2ssIHNlcGFyYXRvciA9IFwiID4gXCIpIHtcbiAgcmV0dXJuIGdldE5hbWVzKHRhc2spLnNsaWNlKDEpLmpvaW4oc2VwYXJhdG9yKTtcbn1cblxuZXhwb3J0IHsgZ2V0RnVsbE5hbWUgYXMgYSwgZ2V0VGVzdE5hbWUgYXMgZywgaGFzRmFpbGVkU25hcHNob3QgYXMgaCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/tasks.DhVtQBtW.js\n"));

/***/ }),

/***/ "./node_modules/vitest/dist/vendor/vi.DXACdGTu.js":
/*!********************************************************!*\
  !*** ./node_modules/vitest/dist/vendor/vi.DXACdGTu.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ globalExpect; },\n/* harmony export */   b: function() { return /* binding */ vitest; },\n/* harmony export */   c: function() { return /* binding */ createExpect; },\n/* harmony export */   g: function() { return /* binding */ getSnapshotClient; },\n/* harmony export */   r: function() { return /* binding */ resetModules; },\n/* harmony export */   v: function() { return /* binding */ vi; }\n/* harmony export */ });\n/* harmony import */ var chai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chai */ \"./node_modules/chai/chai.js\");\n/* harmony import */ var _commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_commonjsHelpers.BFTU3MAI.js */ \"./node_modules/vitest/dist/vendor/_commonjsHelpers.BFTU3MAI.js\");\n/* harmony import */ var _vitest_expect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vitest/expect */ \"./node_modules/@vitest/expect/dist/index.js\");\n/* harmony import */ var _vitest_snapshot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vitest/snapshot */ \"./node_modules/@vitest/snapshot/dist/index.js\");\n/* harmony import */ var _vitest_runner_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vitest/runner/utils */ \"./node_modules/@vitest/runner/dist/utils.js\");\n/* harmony import */ var _vitest_runner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vitest/runner */ \"./node_modules/@vitest/runner/dist/index.js\");\n/* harmony import */ var _tasks_DhVtQBtW_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tasks.DhVtQBtW.js */ \"./node_modules/vitest/dist/vendor/tasks.DhVtQBtW.js\");\n/* harmony import */ var _global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./global.7bFbnyXl.js */ \"./node_modules/vitest/dist/vendor/global.7bFbnyXl.js\");\n/* harmony import */ var _vitest_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vitest/utils */ \"./node_modules/@vitest/utils/dist/index.js\");\n/* harmony import */ var _vitest_utils_source_map__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @vitest/utils/source-map */ \"./node_modules/@vitest/utils/dist/source-map.js\");\n/* harmony import */ var _base_CTYV4Gnz_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base.CTYV4Gnz.js */ \"./node_modules/vitest/dist/vendor/base.CTYV4Gnz.js\");\n/* harmony import */ var _date_W2xKR2qe_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./date.W2xKR2qe.js */ \"./node_modules/vitest/dist/vendor/date.W2xKR2qe.js\");\n/* harmony import */ var _vitest_spy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @vitest/spy */ \"./node_modules/@vitest/spy/dist/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction resetModules(modules, resetMocks = false) {\n  const skipPaths = [\n    // Vitest\n    /\\/vitest\\/dist\\//,\n    /\\/vite-node\\/dist\\//,\n    // yarn's .store folder\n    /vitest-virtual-\\w+\\/dist/,\n    // cnpm\n    /@vitest\\/dist/,\n    // don't clear mocks\n    ...!resetMocks ? [/^mock:/] : []\n  ];\n  modules.forEach((mod, path) => {\n    if (skipPaths.some((re) => re.test(path))) {\n      return;\n    }\n    modules.invalidateModule(mod);\n  });\n}\nfunction waitNextTick() {\n  const { setTimeout } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_3__.getSafeTimers)();\n  return new Promise((resolve) => setTimeout(resolve, 0));\n}\nasync function waitForImportsToResolve() {\n  await waitNextTick();\n  const state = (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_4__.g)();\n  const promises = [];\n  let resolvingCount = 0;\n  for (const mod of state.moduleCache.values()) {\n    if (mod.promise && !mod.evaluated) {\n      promises.push(mod.promise);\n    }\n    if (mod.resolving) {\n      resolvingCount++;\n    }\n  }\n  if (!promises.length && !resolvingCount) {\n    return;\n  }\n  await Promise.allSettled(promises);\n  await waitForImportsToResolve();\n}\n\nfunction commonjsRequire(path) {\n\tthrow new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\n\nvar chaiSubset = {exports: {}};\n\n(function (module, exports) {\n\t(function() {\n\t\t(function(chaiSubset) {\n\t\t\tif (typeof commonjsRequire === 'function' && 'object' === 'object' && 'object' === 'object') {\n\t\t\t\treturn module.exports = chaiSubset;\n\t\t\t} else {\n\t\t\t\treturn chai.use(chaiSubset);\n\t\t\t}\n\t\t})(function(chai, utils) {\n\t\t\tvar Assertion = chai.Assertion;\n\t\t\tvar assertionPrototype = Assertion.prototype;\n\n\t\t\tAssertion.addMethod('containSubset', function (expected) {\n\t\t\t\tvar actual = utils.flag(this, 'object');\n\t\t\t\tvar showDiff = chai.config.showDiff;\n\n\t\t\t\tassertionPrototype.assert.call(this,\n\t\t\t\t\tcompare(expected, actual),\n\t\t\t\t\t'expected #{act} to contain subset #{exp}',\n\t\t\t\t\t'expected #{act} to not contain subset #{exp}',\n\t\t\t\t\texpected,\n\t\t\t\t\tactual,\n\t\t\t\t\tshowDiff\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tchai.assert.containSubset = function(val, exp, msg) {\n\t\t\t\tnew chai.Assertion(val, msg).to.be.containSubset(exp);\n\t\t\t};\n\n\t\t\tfunction compare(expected, actual) {\n\t\t\t\tif (expected === actual) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (typeof(actual) !== typeof(expected)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (typeof(expected) !== 'object' || expected === null) {\n\t\t\t\t\treturn expected === actual;\n\t\t\t\t}\n\t\t\t\tif (!!expected && !actual) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(expected)) {\n\t\t\t\t\tif (typeof(actual.length) !== 'number') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tvar aa = Array.prototype.slice.call(actual);\n\t\t\t\t\treturn expected.every(function (exp) {\n\t\t\t\t\t\treturn aa.some(function (act) {\n\t\t\t\t\t\t\treturn compare(exp, act);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (expected instanceof Date) {\n\t\t\t\t\tif (actual instanceof Date) {\n\t\t\t\t\t\treturn expected.getTime() === actual.getTime();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Object.keys(expected).every(function (key) {\n\t\t\t\t\tvar eo = expected[key];\n\t\t\t\t\tvar ao = actual[key];\n\t\t\t\t\tif (typeof(eo) === 'object' && eo !== null && ao !== null) {\n\t\t\t\t\t\treturn compare(eo, ao);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof(eo) === 'function') {\n\t\t\t\t\t\treturn eo(ao);\n\t\t\t\t\t}\n\t\t\t\t\treturn ao === eo;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t}).call(_commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__.c); \n} (chaiSubset));\n\nvar chaiSubsetExports = chaiSubset.exports;\nvar Subset = /*@__PURE__*/(0,_commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__.g)(chaiSubsetExports);\n\nfunction recordAsyncExpect(test, promise) {\n  if (test && promise instanceof Promise) {\n    promise = promise.finally(() => {\n      const index = test.promises.indexOf(promise);\n      if (index !== -1) {\n        test.promises.splice(index, 1);\n      }\n    });\n    if (!test.promises) {\n      test.promises = [];\n    }\n    test.promises.push(promise);\n  }\n  return promise;\n}\n\nlet _client;\nfunction getSnapshotClient() {\n  if (!_client) {\n    _client = new _vitest_snapshot__WEBPACK_IMPORTED_MODULE_6__.SnapshotClient({\n      isEqual: (received, expected) => {\n        return (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.equals)(received, expected, [_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.iterableEquality, _vitest_expect__WEBPACK_IMPORTED_MODULE_7__.subsetEquality]);\n      }\n    });\n  }\n  return _client;\n}\nfunction getError(expected, promise) {\n  if (typeof expected !== \"function\") {\n    if (!promise) {\n      throw new Error(\n        `expected must be a function, received ${typeof expected}`\n      );\n    }\n    return expected;\n  }\n  try {\n    expected();\n  } catch (e) {\n    return e;\n  }\n  throw new Error(\"snapshot function didn't throw\");\n}\nconst SnapshotPlugin = (chai, utils) => {\n  const getTestNames = (test) => {\n    if (!test) {\n      return {};\n    }\n    return {\n      filepath: test.file.filepath,\n      name: (0,_vitest_runner_utils__WEBPACK_IMPORTED_MODULE_1__.getNames)(test).slice(1).join(\" > \")\n    };\n  };\n  for (const key of [\"matchSnapshot\", \"toMatchSnapshot\"]) {\n    utils.addMethod(\n      chai.Assertion.prototype,\n      key,\n      function(properties, message) {\n        const isNot = utils.flag(this, \"negate\");\n        if (isNot) {\n          throw new Error(`${key} cannot be used with \"not\"`);\n        }\n        const expected = utils.flag(this, \"object\");\n        const test = utils.flag(this, \"vitest-test\");\n        if (typeof properties === \"string\" && typeof message === \"undefined\") {\n          message = properties;\n          properties = void 0;\n        }\n        const errorMessage = utils.flag(this, \"message\");\n        getSnapshotClient().assert({\n          received: expected,\n          message,\n          isInline: false,\n          properties,\n          errorMessage,\n          ...getTestNames(test)\n        });\n      }\n    );\n  }\n  utils.addMethod(\n    chai.Assertion.prototype,\n    \"toMatchFileSnapshot\",\n    function(file, message) {\n      const isNot = utils.flag(this, \"negate\");\n      if (isNot) {\n        throw new Error('toMatchFileSnapshot cannot be used with \"not\"');\n      }\n      const expected = utils.flag(this, \"object\");\n      const test = utils.flag(this, \"vitest-test\");\n      const errorMessage = utils.flag(this, \"message\");\n      const promise = getSnapshotClient().assertRaw({\n        received: expected,\n        message,\n        isInline: false,\n        rawSnapshot: {\n          file\n        },\n        errorMessage,\n        ...getTestNames(test)\n      });\n      return recordAsyncExpect(test, promise);\n    }\n  );\n  utils.addMethod(\n    chai.Assertion.prototype,\n    \"toMatchInlineSnapshot\",\n    function __INLINE_SNAPSHOT__(properties, inlineSnapshot, message) {\n      var _a;\n      const isNot = utils.flag(this, \"negate\");\n      if (isNot) {\n        throw new Error('toMatchInlineSnapshot cannot be used with \"not\"');\n      }\n      const test = utils.flag(this, \"vitest-test\");\n      const isInsideEach = test && (test.each || ((_a = test.suite) == null ? void 0 : _a.each));\n      if (isInsideEach) {\n        throw new Error(\n          \"InlineSnapshot cannot be used inside of test.each or describe.each\"\n        );\n      }\n      const expected = utils.flag(this, \"object\");\n      const error = utils.flag(this, \"error\");\n      if (typeof properties === \"string\") {\n        message = inlineSnapshot;\n        inlineSnapshot = properties;\n        properties = void 0;\n      }\n      if (inlineSnapshot) {\n        inlineSnapshot = (0,_vitest_snapshot__WEBPACK_IMPORTED_MODULE_6__.stripSnapshotIndentation)(inlineSnapshot);\n      }\n      const errorMessage = utils.flag(this, \"message\");\n      getSnapshotClient().assert({\n        received: expected,\n        message,\n        isInline: true,\n        properties,\n        inlineSnapshot,\n        error,\n        errorMessage,\n        ...getTestNames(test)\n      });\n    }\n  );\n  utils.addMethod(\n    chai.Assertion.prototype,\n    \"toThrowErrorMatchingSnapshot\",\n    function(message) {\n      const isNot = utils.flag(this, \"negate\");\n      if (isNot) {\n        throw new Error(\n          'toThrowErrorMatchingSnapshot cannot be used with \"not\"'\n        );\n      }\n      const expected = utils.flag(this, \"object\");\n      const test = utils.flag(this, \"vitest-test\");\n      const promise = utils.flag(this, \"promise\");\n      const errorMessage = utils.flag(this, \"message\");\n      getSnapshotClient().assert({\n        received: getError(expected, promise),\n        message,\n        errorMessage,\n        ...getTestNames(test)\n      });\n    }\n  );\n  utils.addMethod(\n    chai.Assertion.prototype,\n    \"toThrowErrorMatchingInlineSnapshot\",\n    function __INLINE_SNAPSHOT__(inlineSnapshot, message) {\n      var _a;\n      const isNot = utils.flag(this, \"negate\");\n      if (isNot) {\n        throw new Error(\n          'toThrowErrorMatchingInlineSnapshot cannot be used with \"not\"'\n        );\n      }\n      const test = utils.flag(this, \"vitest-test\");\n      const isInsideEach = test && (test.each || ((_a = test.suite) == null ? void 0 : _a.each));\n      if (isInsideEach) {\n        throw new Error(\n          \"InlineSnapshot cannot be used inside of test.each or describe.each\"\n        );\n      }\n      const expected = utils.flag(this, \"object\");\n      const error = utils.flag(this, \"error\");\n      const promise = utils.flag(this, \"promise\");\n      const errorMessage = utils.flag(this, \"message\");\n      if (inlineSnapshot) {\n        inlineSnapshot = (0,_vitest_snapshot__WEBPACK_IMPORTED_MODULE_6__.stripSnapshotIndentation)(inlineSnapshot);\n      }\n      getSnapshotClient().assert({\n        received: getError(expected, promise),\n        message,\n        inlineSnapshot,\n        isInline: true,\n        error,\n        errorMessage,\n        ...getTestNames(test)\n      });\n    }\n  );\n  utils.addMethod(chai.expect, \"addSnapshotSerializer\", _vitest_snapshot__WEBPACK_IMPORTED_MODULE_6__.addSerializer);\n};\n\nchai__WEBPACK_IMPORTED_MODULE_0__.use(_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.JestExtend);\nchai__WEBPACK_IMPORTED_MODULE_0__.use(_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.JestChaiExpect);\nchai__WEBPACK_IMPORTED_MODULE_0__.use(Subset);\nchai__WEBPACK_IMPORTED_MODULE_0__.use(SnapshotPlugin);\nchai__WEBPACK_IMPORTED_MODULE_0__.use(_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.JestAsymmetricMatchers);\n\nconst unsupported = [\n  // .poll is meant to retry matchers until they succeed, and\n  // snapshots will always succeed as long as the poll method doesn't thow an error\n  // in this case using the `vi.waitFor` method is more appropriate\n  \"matchSnapshot\",\n  \"toMatchSnapshot\",\n  \"toMatchInlineSnapshot\",\n  \"toThrowErrorMatchingSnapshot\",\n  \"toThrowErrorMatchingInlineSnapshot\",\n  // toThrow will never succeed because we call the poll callback until it doesn't throw\n  \"throws\",\n  \"Throw\",\n  \"throw\",\n  \"toThrow\",\n  \"toThrowError\"\n  // these are not supported because you can call them without `.poll`,\n  // we throw an error inside the rejects/resolves methods to prevent this\n  // rejects,\n  // resolves\n];\nfunction createExpectPoll(expect) {\n  return function poll(fn, options = {}) {\n    var _a;\n    const state = (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_4__.g)();\n    const defaults = ((_a = state.config.expect) == null ? void 0 : _a.poll) ?? {};\n    const {\n      interval = defaults.interval ?? 50,\n      timeout = defaults.timeout ?? 1e3,\n      message\n    } = options;\n    const assertion = expect(null, message).withContext({\n      poll: true\n    });\n    const proxy = new Proxy(assertion, {\n      get(target, key, receiver) {\n        const assertionFunction = Reflect.get(target, key, receiver);\n        if (typeof assertionFunction !== \"function\") {\n          return assertionFunction instanceof chai__WEBPACK_IMPORTED_MODULE_0__.Assertion ? proxy : assertionFunction;\n        }\n        if (key === \"assert\") {\n          return assertionFunction;\n        }\n        if (typeof key === \"string\" && unsupported.includes(key)) {\n          throw new SyntaxError(\n            `expect.poll() is not supported in combination with .${key}(). Use vi.waitFor() if your assertion condition is unstable.`\n          );\n        }\n        return function(...args) {\n          const STACK_TRACE_ERROR = new Error(\"STACK_TRACE_ERROR\");\n          return new Promise((resolve, reject) => {\n            let intervalId;\n            let lastError;\n            const { setTimeout, clearTimeout } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_3__.getSafeTimers)();\n            const timeoutId = setTimeout(() => {\n              clearTimeout(intervalId);\n              reject(\n                copyStackTrace$1(\n                  new Error(`Matcher did not succeed in ${timeout}ms`, {\n                    cause: lastError\n                  }),\n                  STACK_TRACE_ERROR\n                )\n              );\n            }, timeout);\n            const check = async () => {\n              try {\n                const obj = await fn();\n                chai__WEBPACK_IMPORTED_MODULE_0__.util.flag(assertion, \"object\", obj);\n                resolve(await assertionFunction.call(assertion, ...args));\n                clearTimeout(intervalId);\n                clearTimeout(timeoutId);\n              } catch (err) {\n                lastError = err;\n                intervalId = setTimeout(check, interval);\n              }\n            };\n            check();\n          });\n        };\n      }\n    });\n    return proxy;\n  };\n}\nfunction copyStackTrace$1(target, source) {\n  if (source.stack !== void 0) {\n    target.stack = source.stack.replace(source.message, target.message);\n  }\n  return target;\n}\n\nfunction createExpect(test) {\n  const expect = (value, message) => {\n    const { assertionCalls } = (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.getState)(expect);\n    (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.setState)({ assertionCalls: assertionCalls + 1 }, expect);\n    const assert2 = chai__WEBPACK_IMPORTED_MODULE_0__.expect(value, message);\n    const _test = test || (0,_vitest_runner__WEBPACK_IMPORTED_MODULE_2__.getCurrentTest)();\n    if (_test) {\n      return assert2.withTest(_test);\n    } else {\n      return assert2;\n    }\n  };\n  Object.assign(expect, chai__WEBPACK_IMPORTED_MODULE_0__.expect);\n  Object.assign(expect, globalThis[_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.ASYMMETRIC_MATCHERS_OBJECT]);\n  expect.getState = () => (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.getState)(expect);\n  expect.setState = (state) => (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.setState)(state, expect);\n  const globalState = (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.getState)(globalThis[_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.GLOBAL_EXPECT]) || {};\n  const testPath = getTestFile(test);\n  (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.setState)(\n    {\n      // this should also add \"snapshotState\" that is added conditionally\n      ...globalState,\n      assertionCalls: 0,\n      isExpectingAssertions: false,\n      isExpectingAssertionsError: null,\n      expectedAssertionsNumber: null,\n      expectedAssertionsNumberErrorGen: null,\n      environment: (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_4__.a)(),\n      testPath,\n      currentTestName: test ? (0,_tasks_DhVtQBtW_js__WEBPACK_IMPORTED_MODULE_8__.g)(test) : globalState.currentTestName\n    },\n    expect\n  );\n  expect.extend = (matchers) => chai__WEBPACK_IMPORTED_MODULE_0__.expect.extend(expect, matchers);\n  expect.addEqualityTesters = (customTesters) => (0,_vitest_expect__WEBPACK_IMPORTED_MODULE_7__.addCustomEqualityTesters)(customTesters);\n  expect.soft = (...args) => {\n    return expect(...args).withContext({ soft: true });\n  };\n  expect.poll = createExpectPoll(expect);\n  expect.unreachable = (message) => {\n    chai__WEBPACK_IMPORTED_MODULE_0__.assert.fail(\n      `expected${message ? ` \"${message}\" ` : \" \"}not to be reached`\n    );\n  };\n  function assertions(expected) {\n    const errorGen = () => new Error(\n      `expected number of assertions to be ${expected}, but got ${expect.getState().assertionCalls}`\n    );\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(errorGen(), assertions);\n    }\n    expect.setState({\n      expectedAssertionsNumber: expected,\n      expectedAssertionsNumberErrorGen: errorGen\n    });\n  }\n  function hasAssertions() {\n    const error = new Error(\"expected any number of assertion, but got none\");\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(error, hasAssertions);\n    }\n    expect.setState({\n      isExpectingAssertions: true,\n      isExpectingAssertionsError: error\n    });\n  }\n  chai__WEBPACK_IMPORTED_MODULE_0__.util.addMethod(expect, \"assertions\", assertions);\n  chai__WEBPACK_IMPORTED_MODULE_0__.util.addMethod(expect, \"hasAssertions\", hasAssertions);\n  return expect;\n}\nfunction getTestFile(test) {\n  if (test) {\n    return test.file.filepath;\n  }\n  const state = (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_4__.g)();\n  return state.filepath;\n}\nconst globalExpect = createExpect();\nObject.defineProperty(globalThis, _vitest_expect__WEBPACK_IMPORTED_MODULE_7__.GLOBAL_EXPECT, {\n  value: globalExpect,\n  writable: true,\n  configurable: true\n});\n\n/**\n * A reference to the global object\n *\n * @type {object} globalObject\n */\nvar globalObject$1;\n\n/* istanbul ignore else */\nif (typeof _commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__.c !== \"undefined\") {\n    // Node\n    globalObject$1 = _commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__.c;\n} else if (typeof window !== \"undefined\") {\n    // Browser\n    globalObject$1 = window;\n} else {\n    // WebWorker\n    globalObject$1 = self;\n}\n\nvar global = globalObject$1;\n\n/**\n * Is true when the environment causes an error to be thrown for accessing the\n * __proto__ property.\n *\n * This is necessary in order to support `node --disable-proto=throw`.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\n *\n * @type {boolean}\n */\nlet throwsOnProto$1;\ntry {\n    const object = {};\n    // eslint-disable-next-line no-proto, no-unused-expressions\n    object.__proto__;\n    throwsOnProto$1 = false;\n} catch (_) {\n    // This branch is covered when tests are run with `--disable-proto=throw`,\n    // however we can test both branches at the same time, so this is ignored\n    /* istanbul ignore next */\n    throwsOnProto$1 = true;\n}\n\nvar throwsOnProto_1 = throwsOnProto$1;\n\nvar call = Function.call;\nvar throwsOnProto = throwsOnProto_1;\n\nvar disallowedProperties = [\n    // ignore size because it throws from Map\n    \"size\",\n    \"caller\",\n    \"callee\",\n    \"arguments\",\n];\n\n// This branch is covered when tests are run with `--disable-proto=throw`,\n// however we can test both branches at the same time, so this is ignored\n/* istanbul ignore next */\nif (throwsOnProto) {\n    disallowedProperties.push(\"__proto__\");\n}\n\nvar copyPrototypeMethods = function copyPrototypeMethods(prototype) {\n    // eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\n    return Object.getOwnPropertyNames(prototype).reduce(function (\n        result,\n        name\n    ) {\n        if (disallowedProperties.includes(name)) {\n            return result;\n        }\n\n        if (typeof prototype[name] !== \"function\") {\n            return result;\n        }\n\n        result[name] = call.bind(prototype[name]);\n\n        return result;\n    },\n    Object.create(null));\n};\n\nvar copyPrototype$5 = copyPrototypeMethods;\n\nvar array = copyPrototype$5(Array.prototype);\n\nvar every$1 = array.every;\n\n/**\n * @private\n */\nfunction hasCallsLeft(callMap, spy) {\n    if (callMap[spy.id] === undefined) {\n        callMap[spy.id] = 0;\n    }\n\n    return callMap[spy.id] < spy.callCount;\n}\n\n/**\n * @private\n */\nfunction checkAdjacentCalls(callMap, spy, index, spies) {\n    var calledBeforeNext = true;\n\n    if (index !== spies.length - 1) {\n        calledBeforeNext = spy.calledBefore(spies[index + 1]);\n    }\n\n    if (hasCallsLeft(callMap, spy) && calledBeforeNext) {\n        callMap[spy.id] += 1;\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * A Sinon proxy object (fake, spy, stub)\n *\n * @typedef {object} SinonProxy\n * @property {Function} calledBefore - A method that determines if this proxy was called before another one\n * @property {string} id - Some id\n * @property {number} callCount - Number of times this proxy has been called\n */\n\n/**\n * Returns true when the spies have been called in the order they were supplied in\n *\n * @param  {SinonProxy[] | SinonProxy} spies An array of proxies, or several proxies as arguments\n * @returns {boolean} true when spies are called in order, false otherwise\n */\nfunction calledInOrder(spies) {\n    var callMap = {};\n    // eslint-disable-next-line no-underscore-dangle\n    var _spies = arguments.length > 1 ? arguments : spies;\n\n    return every$1(_spies, checkAdjacentCalls.bind(null, callMap));\n}\n\nvar calledInOrder_1 = calledInOrder;\n\n/**\n * Returns a display name for a function\n *\n * @param  {Function} func\n * @returns {string}\n */\nvar functionName$1 = function functionName(func) {\n    if (!func) {\n        return \"\";\n    }\n\n    try {\n        return (\n            func.displayName ||\n            func.name ||\n            // Use function decomposition as a last resort to get function\n            // name. Does not rely on function decomposition to work - if it\n            // doesn't debugging will be slightly less informative\n            // (i.e. toString will say 'spy' rather than 'myFunc').\n            (String(func).match(/function ([^\\s(]+)/) || [])[1]\n        );\n    } catch (e) {\n        // Stringify may fail and we might get an exception, as a last-last\n        // resort fall back to empty string.\n        return \"\";\n    }\n};\n\nvar functionName = functionName$1;\n\n/**\n * Returns a display name for a value from a constructor\n *\n * @param  {object} value A value to examine\n * @returns {(string|null)} A string or null\n */\nfunction className(value) {\n    return (\n        (value.constructor && value.constructor.name) ||\n        // The next branch is for IE11 support only:\n        // Because the name property is not set on the prototype\n        // of the Function object, we finally try to grab the\n        // name from its definition. This will never be reached\n        // in node, so we are not able to test this properly.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n        (typeof value.constructor === \"function\" &&\n            /* istanbul ignore next */\n            functionName(value.constructor)) ||\n        null\n    );\n}\n\nvar className_1 = className;\n\nvar deprecated = {};\n\n/* eslint-disable no-console */\n\n(function (exports) {\n\n\t/**\n\t * Returns a function that will invoke the supplied function and print a\n\t * deprecation warning to the console each time it is called.\n\t *\n\t * @param  {Function} func\n\t * @param  {string} msg\n\t * @returns {Function}\n\t */\n\texports.wrap = function (func, msg) {\n\t    var wrapped = function () {\n\t        exports.printWarning(msg);\n\t        return func.apply(this, arguments);\n\t    };\n\t    if (func.prototype) {\n\t        wrapped.prototype = func.prototype;\n\t    }\n\t    return wrapped;\n\t};\n\n\t/**\n\t * Returns a string which can be supplied to `wrap()` to notify the user that a\n\t * particular part of the sinon API has been deprecated.\n\t *\n\t * @param  {string} packageName\n\t * @param  {string} funcName\n\t * @returns {string}\n\t */\n\texports.defaultMsg = function (packageName, funcName) {\n\t    return `${packageName}.${funcName} is deprecated and will be removed from the public API in a future version of ${packageName}.`;\n\t};\n\n\t/**\n\t * Prints a warning on the console, when it exists\n\t *\n\t * @param  {string} msg\n\t * @returns {undefined}\n\t */\n\texports.printWarning = function (msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof process === \"object\" && process.emitWarning) {\n\t        // Emit Warnings in Node\n\t        process.emitWarning(msg);\n\t    } else if (console.info) {\n\t        console.info(msg);\n\t    } else {\n\t        console.log(msg);\n\t    }\n\t}; \n} (deprecated));\n\n/**\n * Returns true when fn returns true for all members of obj.\n * This is an every implementation that works for all iterables\n *\n * @param  {object}   obj\n * @param  {Function} fn\n * @returns {boolean}\n */\nvar every = function every(obj, fn) {\n    var pass = true;\n\n    try {\n        // eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\n        obj.forEach(function () {\n            if (!fn.apply(this, arguments)) {\n                // Throwing an error is the only way to break `forEach`\n                throw new Error();\n            }\n        });\n    } catch (e) {\n        pass = false;\n    }\n\n    return pass;\n};\n\nvar sort = array.sort;\nvar slice = array.slice;\n\n/**\n * @private\n */\nfunction comparator(a, b) {\n    // uuid, won't ever be equal\n    var aCall = a.getCall(0);\n    var bCall = b.getCall(0);\n    var aId = (aCall && aCall.callId) || -1;\n    var bId = (bCall && bCall.callId) || -1;\n\n    return aId < bId ? -1 : 1;\n}\n\n/**\n * A Sinon proxy object (fake, spy, stub)\n *\n * @typedef {object} SinonProxy\n * @property {Function} getCall - A method that can return the first call\n */\n\n/**\n * Sorts an array of SinonProxy instances (fake, spy, stub) by their first call\n *\n * @param  {SinonProxy[] | SinonProxy} spies\n * @returns {SinonProxy[]}\n */\nfunction orderByFirstCall(spies) {\n    return sort(slice(spies), comparator);\n}\n\nvar orderByFirstCall_1 = orderByFirstCall;\n\nvar copyPrototype$4 = copyPrototypeMethods;\n\nvar _function = copyPrototype$4(Function.prototype);\n\nvar copyPrototype$3 = copyPrototypeMethods;\n\nvar map = copyPrototype$3(Map.prototype);\n\nvar copyPrototype$2 = copyPrototypeMethods;\n\nvar object = copyPrototype$2(Object.prototype);\n\nvar copyPrototype$1 = copyPrototypeMethods;\n\nvar set = copyPrototype$1(Set.prototype);\n\nvar copyPrototype = copyPrototypeMethods;\n\nvar string = copyPrototype(String.prototype);\n\nvar prototypes = {\n    array: array,\n    function: _function,\n    map: map,\n    object: object,\n    set: set,\n    string: string,\n};\n\nvar typeDetect = {exports: {}};\n\n(function (module, exports) {\n\t(function (global, factory) {\n\t\tmodule.exports = factory() ;\n\t}(_commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__.c, (function () {\n\t/* !\n\t * type-detect\n\t * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\tvar promiseExists = typeof Promise === 'function';\n\n\t/* eslint-disable no-undef */\n\tvar globalObject = typeof self === 'object' ? self : _commonjsHelpers_BFTU3MAI_js__WEBPACK_IMPORTED_MODULE_5__.c; // eslint-disable-line id-blacklist\n\n\tvar symbolExists = typeof Symbol !== 'undefined';\n\tvar mapExists = typeof Map !== 'undefined';\n\tvar setExists = typeof Set !== 'undefined';\n\tvar weakMapExists = typeof WeakMap !== 'undefined';\n\tvar weakSetExists = typeof WeakSet !== 'undefined';\n\tvar dataViewExists = typeof DataView !== 'undefined';\n\tvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\n\tvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\n\tvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\n\tvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\n\tvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\n\tvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\n\tvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\n\tvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\n\tvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\n\tvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\n\tvar toStringLeftSliceLength = 8;\n\tvar toStringRightSliceLength = -1;\n\t/**\n\t * ### typeOf (obj)\n\t *\n\t * Uses `Object.prototype.toString` to determine the type of an object,\n\t * normalising behaviour across engine versions & well optimised.\n\t *\n\t * @param {Mixed} object\n\t * @return {String} object type\n\t * @api public\n\t */\n\tfunction typeDetect(obj) {\n\t  /* ! Speed optimisation\n\t   * Pre:\n\t   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n\t   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n\t   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n\t   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n\t   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n\t   * Post:\n\t   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n\t   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n\t   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n\t   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n\t   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n\t   */\n\t  var typeofObj = typeof obj;\n\t  if (typeofObj !== 'object') {\n\t    return typeofObj;\n\t  }\n\n\t  /* ! Speed optimisation\n\t   * Pre:\n\t   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n\t   * Post:\n\t   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n\t   */\n\t  if (obj === null) {\n\t    return 'null';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * Test: `Object.prototype.toString.call(window)``\n\t   *  - Node === \"[object global]\"\n\t   *  - Chrome === \"[object global]\"\n\t   *  - Firefox === \"[object Window]\"\n\t   *  - PhantomJS === \"[object Window]\"\n\t   *  - Safari === \"[object Window]\"\n\t   *  - IE 11 === \"[object Window]\"\n\t   *  - IE Edge === \"[object Window]\"\n\t   * Test: `Object.prototype.toString.call(this)``\n\t   *  - Chrome Worker === \"[object global]\"\n\t   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n\t   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n\t   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n\t   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n\t   */\n\t  if (obj === globalObject) {\n\t    return 'global';\n\t  }\n\n\t  /* ! Speed optimisation\n\t   * Pre:\n\t   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n\t   * Post:\n\t   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n\t   */\n\t  if (\n\t    Array.isArray(obj) &&\n\t    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n\t  ) {\n\t    return 'Array';\n\t  }\n\n\t  // Not caching existence of `window` and related properties due to potential\n\t  // for `window` to be unset before tests in quasi-browser environments.\n\t  if (typeof window === 'object' && window !== null) {\n\t    /* ! Spec Conformance\n\t     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n\t     * WhatWG HTML$7.7.3 - The `Location` interface\n\t     * Test: `Object.prototype.toString.call(window.location)``\n\t     *  - IE <=11 === \"[object Object]\"\n\t     *  - IE Edge <=13 === \"[object Object]\"\n\t     */\n\t    if (typeof window.location === 'object' && obj === window.location) {\n\t      return 'Location';\n\t    }\n\n\t    /* ! Spec Conformance\n\t     * (https://html.spec.whatwg.org/#document)\n\t     * WhatWG HTML$3.1.1 - The `Document` object\n\t     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n\t     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n\t     *       which suggests that browsers should use HTMLTableCellElement for\n\t     *       both TD and TH elements. WhatWG separates these.\n\t     *       WhatWG HTML states:\n\t     *         > For historical reasons, Window objects must also have a\n\t     *         > writable, configurable, non-enumerable property named\n\t     *         > HTMLDocument whose value is the Document interface object.\n\t     * Test: `Object.prototype.toString.call(document)``\n\t     *  - Chrome === \"[object HTMLDocument]\"\n\t     *  - Firefox === \"[object HTMLDocument]\"\n\t     *  - Safari === \"[object HTMLDocument]\"\n\t     *  - IE <=10 === \"[object Document]\"\n\t     *  - IE 11 === \"[object HTMLDocument]\"\n\t     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n\t     */\n\t    if (typeof window.document === 'object' && obj === window.document) {\n\t      return 'Document';\n\t    }\n\n\t    if (typeof window.navigator === 'object') {\n\t      /* ! Spec Conformance\n\t       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n\t       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n\t       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n\t       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n\t       */\n\t      if (typeof window.navigator.mimeTypes === 'object' &&\n\t          obj === window.navigator.mimeTypes) {\n\t        return 'MimeTypeArray';\n\t      }\n\n\t      /* ! Spec Conformance\n\t       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n\t       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n\t       * Test: `Object.prototype.toString.call(navigator.plugins)``\n\t       *  - IE <=10 === \"[object MSPluginsCollection]\"\n\t       */\n\t      if (typeof window.navigator.plugins === 'object' &&\n\t          obj === window.navigator.plugins) {\n\t        return 'PluginArray';\n\t      }\n\t    }\n\n\t    if ((typeof window.HTMLElement === 'function' ||\n\t        typeof window.HTMLElement === 'object') &&\n\t        obj instanceof window.HTMLElement) {\n\t      /* ! Spec Conformance\n\t      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n\t      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n\t      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n\t      *  - IE <=10 === \"[object HTMLBlockElement]\"\n\t      */\n\t      if (obj.tagName === 'BLOCKQUOTE') {\n\t        return 'HTMLQuoteElement';\n\t      }\n\n\t      /* ! Spec Conformance\n\t       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n\t       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n\t       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n\t       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n\t       *       which suggests that browsers should use HTMLTableCellElement for\n\t       *       both TD and TH elements. WhatWG separates these.\n\t       * Test: Object.prototype.toString.call(document.createElement('td'))\n\t       *  - Chrome === \"[object HTMLTableCellElement]\"\n\t       *  - Firefox === \"[object HTMLTableCellElement]\"\n\t       *  - Safari === \"[object HTMLTableCellElement]\"\n\t       */\n\t      if (obj.tagName === 'TD') {\n\t        return 'HTMLTableDataCellElement';\n\t      }\n\n\t      /* ! Spec Conformance\n\t       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n\t       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n\t       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n\t       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n\t       *       which suggests that browsers should use HTMLTableCellElement for\n\t       *       both TD and TH elements. WhatWG separates these.\n\t       * Test: Object.prototype.toString.call(document.createElement('th'))\n\t       *  - Chrome === \"[object HTMLTableCellElement]\"\n\t       *  - Firefox === \"[object HTMLTableCellElement]\"\n\t       *  - Safari === \"[object HTMLTableCellElement]\"\n\t       */\n\t      if (obj.tagName === 'TH') {\n\t        return 'HTMLTableHeaderCellElement';\n\t      }\n\t    }\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n\t  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n\t  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n\t  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n\t  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n\t  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n\t  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n\t  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n\t  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n\t  * Post:\n\t  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n\t  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n\t  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n\t  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n\t  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n\t  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n\t  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n\t  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n\t  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n\t  */\n\t  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n\t  if (typeof stringTag === 'string') {\n\t    return stringTag;\n\t  }\n\n\t  var objPrototype = Object.getPrototypeOf(obj);\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n\t  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n\t  * Post:\n\t  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n\t  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n\t  */\n\t  if (objPrototype === RegExp.prototype) {\n\t    return 'RegExp';\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n\t  * Post:\n\t  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n\t  */\n\t  if (objPrototype === Date.prototype) {\n\t    return 'Date';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n\t   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n\t   * Test: `Object.prototype.toString.call(Promise.resolve())``\n\t   *  - Chrome <=47 === \"[object Object]\"\n\t   *  - Edge <=20 === \"[object Object]\"\n\t   *  - Firefox 29-Latest === \"[object Promise]\"\n\t   *  - Safari 7.1-Latest === \"[object Promise]\"\n\t   */\n\t  if (promiseExists && objPrototype === Promise.prototype) {\n\t    return 'Promise';\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n\t  * Post:\n\t  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n\t  */\n\t  if (setExists && objPrototype === Set.prototype) {\n\t    return 'Set';\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n\t  * Post:\n\t  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n\t  */\n\t  if (mapExists && objPrototype === Map.prototype) {\n\t    return 'Map';\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n\t  * Post:\n\t  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n\t  */\n\t  if (weakSetExists && objPrototype === WeakSet.prototype) {\n\t    return 'WeakSet';\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n\t  * Post:\n\t  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n\t  */\n\t  if (weakMapExists && objPrototype === WeakMap.prototype) {\n\t    return 'WeakMap';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n\t   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n\t   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n\t   *  - Edge <=13 === \"[object Object]\"\n\t   */\n\t  if (dataViewExists && objPrototype === DataView.prototype) {\n\t    return 'DataView';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n\t   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n\t   * Test: `Object.prototype.toString.call(new Map().entries())``\n\t   *  - Edge <=13 === \"[object Object]\"\n\t   */\n\t  if (mapExists && objPrototype === mapIteratorPrototype) {\n\t    return 'Map Iterator';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n\t   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n\t   * Test: `Object.prototype.toString.call(new Set().entries())``\n\t   *  - Edge <=13 === \"[object Object]\"\n\t   */\n\t  if (setExists && objPrototype === setIteratorPrototype) {\n\t    return 'Set Iterator';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n\t   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n\t   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n\t   *  - Edge <=13 === \"[object Object]\"\n\t   */\n\t  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n\t    return 'Array Iterator';\n\t  }\n\n\t  /* ! Spec Conformance\n\t   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n\t   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n\t   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n\t   *  - Edge <=13 === \"[object Object]\"\n\t   */\n\t  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n\t    return 'String Iterator';\n\t  }\n\n\t  /* ! Speed optimisation\n\t  * Pre:\n\t  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n\t  * Post:\n\t  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n\t  */\n\t  if (objPrototype === null) {\n\t    return 'Object';\n\t  }\n\n\t  return Object\n\t    .prototype\n\t    .toString\n\t    .call(obj)\n\t    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n\t}\n\n\treturn typeDetect;\n\n\t}))); \n} (typeDetect));\n\nvar typeDetectExports = typeDetect.exports;\n\nvar type = typeDetectExports;\n\n/**\n * Returns the lower-case result of running type from type-detect on the value\n *\n * @param  {*} value\n * @returns {string}\n */\nvar typeOf = function typeOf(value) {\n    return type(value).toLowerCase();\n};\n\n/**\n * Returns a string representation of the value\n *\n * @param  {*} value\n * @returns {string}\n */\nfunction valueToString(value) {\n    if (value && value.toString) {\n        // eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\n        return value.toString();\n    }\n    return String(value);\n}\n\nvar valueToString_1 = valueToString;\n\nvar lib = {\n    global: global,\n    calledInOrder: calledInOrder_1,\n    className: className_1,\n    deprecated: deprecated,\n    every: every,\n    functionName: functionName$1,\n    orderByFirstCall: orderByFirstCall_1,\n    prototypes: prototypes,\n    typeOf: typeOf,\n    valueToString: valueToString_1,\n};\n\nconst globalObject = lib.global;\nlet timersModule;\nif (typeof __vitest_required__ !== 'undefined') {\n    try {\n        timersModule = __vitest_required__.timers;\n    } catch (e) {\n        // ignored\n    }\n}\n\n/**\n * @typedef {object} IdleDeadline\n * @property {boolean} didTimeout - whether or not the callback was called before reaching the optional timeout\n * @property {function():number} timeRemaining - a floating-point value providing an estimate of the number of milliseconds remaining in the current idle period\n */\n\n/**\n * Queues a function to be called during a browser's idle periods\n *\n * @callback RequestIdleCallback\n * @param {function(IdleDeadline)} callback\n * @param {{timeout: number}} options - an options object\n * @returns {number} the id\n */\n\n/**\n * @callback NextTick\n * @param {VoidVarArgsFunc} callback - the callback to run\n * @param {...*} arguments - optional arguments to call the callback with\n * @returns {void}\n */\n\n/**\n * @callback SetImmediate\n * @param {VoidVarArgsFunc} callback - the callback to run\n * @param {...*} arguments - optional arguments to call the callback with\n * @returns {NodeImmediate}\n */\n\n/**\n * @callback VoidVarArgsFunc\n * @param {...*} callback - the callback to run\n * @returns {void}\n */\n\n/**\n * @typedef RequestAnimationFrame\n * @property {function(number):void} requestAnimationFrame\n * @returns {number} - the id\n */\n\n/**\n * @typedef Performance\n * @property {function(): number} now\n */\n\n/* eslint-disable jsdoc/require-property-description */\n/**\n * @typedef {object} Clock\n * @property {number} now - the current time\n * @property {Date} Date - the Date constructor\n * @property {number} loopLimit - the maximum number of timers before assuming an infinite loop\n * @property {RequestIdleCallback} requestIdleCallback\n * @property {function(number):void} cancelIdleCallback\n * @property {setTimeout} setTimeout\n * @property {clearTimeout} clearTimeout\n * @property {NextTick} nextTick\n * @property {queueMicrotask} queueMicrotask\n * @property {setInterval} setInterval\n * @property {clearInterval} clearInterval\n * @property {SetImmediate} setImmediate\n * @property {function(NodeImmediate):void} clearImmediate\n * @property {function():number} countTimers\n * @property {RequestAnimationFrame} requestAnimationFrame\n * @property {function(number):void} cancelAnimationFrame\n * @property {function():void} runMicrotasks\n * @property {function(string | number): number} tick\n * @property {function(string | number): Promise<number>} tickAsync\n * @property {function(): number} next\n * @property {function(): Promise<number>} nextAsync\n * @property {function(): number} runAll\n * @property {function(): number} runToFrame\n * @property {function(): Promise<number>} runAllAsync\n * @property {function(): number} runToLast\n * @property {function(): Promise<number>} runToLastAsync\n * @property {function(): void} reset\n * @property {function(number | Date): void} setSystemTime\n * @property {function(number): void} jump\n * @property {Performance} performance\n * @property {function(number[]): number[]} hrtime - process.hrtime (legacy)\n * @property {function(): void} uninstall Uninstall the clock.\n * @property {Function[]} methods - the methods that are faked\n * @property {boolean} [shouldClearNativeTimers] inherited from config\n * @property {{methodName:string, original:any}[] | undefined} timersModuleMethods\n */\n/* eslint-enable jsdoc/require-property-description */\n\n/**\n * Configuration object for the `install` method.\n *\n * @typedef {object} Config\n * @property {number|Date} [now] a number (in milliseconds) or a Date object (default epoch)\n * @property {string[]} [toFake] names of the methods that should be faked.\n * @property {number} [loopLimit] the maximum number of timers that will be run when calling runAll()\n * @property {boolean} [shouldAdvanceTime] tells FakeTimers to increment mocked time automatically (default false)\n * @property {number} [advanceTimeDelta] increment mocked time every <<advanceTimeDelta>> ms (default: 20ms)\n * @property {boolean} [shouldClearNativeTimers] forwards clear timer calls to native functions if they are not fakes (default: false)\n */\n\n/* eslint-disable jsdoc/require-property-description */\n/**\n * The internal structure to describe a scheduled fake timer\n *\n * @typedef {object} Timer\n * @property {Function} func\n * @property {*[]} args\n * @property {number} delay\n * @property {number} callAt\n * @property {number} createdAt\n * @property {boolean} immediate\n * @property {number} id\n * @property {Error} [error]\n */\n\n/**\n * A Node timer\n *\n * @typedef {object} NodeImmediate\n * @property {function(): boolean} hasRef\n * @property {function(): NodeImmediate} ref\n * @property {function(): NodeImmediate} unref\n */\n/* eslint-enable jsdoc/require-property-description */\n\n/* eslint-disable complexity */\n\n/**\n * Mocks available features in the specified global namespace.\n *\n * @param {*} _global Namespace to mock (e.g. `window`)\n * @returns {FakeTimers}\n */\nfunction withGlobal(_global) {\n    const maxTimeout = Math.pow(2, 31) - 1; //see https://heycam.github.io/webidl/#abstract-opdef-converttoint\n    const idCounterStart = 1e12; // arbitrarily large number to avoid collisions with native timer IDs\n    const NOOP = function () {\n        return undefined;\n    };\n    const NOOP_ARRAY = function () {\n        return [];\n    };\n    const timeoutResult = _global.setTimeout(NOOP, 0);\n    const addTimerReturnsObject = typeof timeoutResult === \"object\";\n    const hrtimePresent =\n        _global.process && typeof _global.process.hrtime === \"function\";\n    const hrtimeBigintPresent =\n        hrtimePresent && typeof _global.process.hrtime.bigint === \"function\";\n    const nextTickPresent =\n        _global.process && typeof _global.process.nextTick === \"function\";\n    const utilPromisify = _global.process && _global.__vitest_required__ && _global.__vitest_required__.util.promisify;\n    const performancePresent =\n        _global.performance && typeof _global.performance.now === \"function\";\n    const hasPerformancePrototype =\n        _global.Performance &&\n        (typeof _global.Performance).match(/^(function|object)$/);\n    const hasPerformanceConstructorPrototype =\n        _global.performance &&\n        _global.performance.constructor &&\n        _global.performance.constructor.prototype;\n    const queueMicrotaskPresent = _global.hasOwnProperty(\"queueMicrotask\");\n    const requestAnimationFramePresent =\n        _global.requestAnimationFrame &&\n        typeof _global.requestAnimationFrame === \"function\";\n    const cancelAnimationFramePresent =\n        _global.cancelAnimationFrame &&\n        typeof _global.cancelAnimationFrame === \"function\";\n    const requestIdleCallbackPresent =\n        _global.requestIdleCallback &&\n        typeof _global.requestIdleCallback === \"function\";\n    const cancelIdleCallbackPresent =\n        _global.cancelIdleCallback &&\n        typeof _global.cancelIdleCallback === \"function\";\n    const setImmediatePresent =\n        _global.setImmediate && typeof _global.setImmediate === \"function\";\n    const intlPresent = _global.Intl && typeof _global.Intl === \"object\";\n\n    _global.clearTimeout(timeoutResult);\n\n    const NativeDate = _global.Date;\n    const NativeIntl = _global.Intl;\n    let uniqueTimerId = idCounterStart;\n\n    /**\n     * @param {number} num\n     * @returns {boolean}\n     */\n    function isNumberFinite(num) {\n        if (Number.isFinite) {\n            return Number.isFinite(num);\n        }\n\n        return isFinite(num);\n    }\n\n    let isNearInfiniteLimit = false;\n\n    /**\n     * @param {Clock} clock\n     * @param {number} i\n     */\n    function checkIsNearInfiniteLimit(clock, i) {\n        if (clock.loopLimit && i === clock.loopLimit - 1) {\n            isNearInfiniteLimit = true;\n        }\n    }\n\n    /**\n     *\n     */\n    function resetIsNearInfiniteLimit() {\n        isNearInfiniteLimit = false;\n    }\n\n    /**\n     * Parse strings like \"01:10:00\" (meaning 1 hour, 10 minutes, 0 seconds) into\n     * number of milliseconds. This is used to support human-readable strings passed\n     * to clock.tick()\n     *\n     * @param {string} str\n     * @returns {number}\n     */\n    function parseTime(str) {\n        if (!str) {\n            return 0;\n        }\n\n        const strings = str.split(\":\");\n        const l = strings.length;\n        let i = l;\n        let ms = 0;\n        let parsed;\n\n        if (l > 3 || !/^(\\d\\d:){0,2}\\d\\d?$/.test(str)) {\n            throw new Error(\n                \"tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits\"\n            );\n        }\n\n        while (i--) {\n            parsed = parseInt(strings[i], 10);\n\n            if (parsed >= 60) {\n                throw new Error(`Invalid time ${str}`);\n            }\n\n            ms += parsed * Math.pow(60, l - i - 1);\n        }\n\n        return ms * 1000;\n    }\n\n    /**\n     * Get the decimal part of the millisecond value as nanoseconds\n     *\n     * @param {number} msFloat the number of milliseconds\n     * @returns {number} an integer number of nanoseconds in the range [0,1e6)\n     *\n     * Example: nanoRemainer(123.456789) -> 456789\n     */\n    function nanoRemainder(msFloat) {\n        const modulo = 1e6;\n        const remainder = (msFloat * 1e6) % modulo;\n        const positiveRemainder =\n            remainder < 0 ? remainder + modulo : remainder;\n\n        return Math.floor(positiveRemainder);\n    }\n\n    /**\n     * Used to grok the `now` parameter to createClock.\n     *\n     * @param {Date|number} epoch the system time\n     * @returns {number}\n     */\n    function getEpoch(epoch) {\n        if (!epoch) {\n            return 0;\n        }\n        if (typeof epoch.getTime === \"function\") {\n            return epoch.getTime();\n        }\n        if (typeof epoch === \"number\") {\n            return epoch;\n        }\n        throw new TypeError(\"now should be milliseconds since UNIX epoch\");\n    }\n\n    /**\n     * @param {number} from\n     * @param {number} to\n     * @param {Timer} timer\n     * @returns {boolean}\n     */\n    function inRange(from, to, timer) {\n        return timer && timer.callAt >= from && timer.callAt <= to;\n    }\n\n    /**\n     * @param {Clock} clock\n     * @param {Timer} job\n     */\n    function getInfiniteLoopError(clock, job) {\n        const infiniteLoopError = new Error(\n            `Aborting after running ${clock.loopLimit} timers, assuming an infinite loop!`\n        );\n\n        if (!job.error) {\n            return infiniteLoopError;\n        }\n\n        // pattern never matched in Node\n        const computedTargetPattern = /target\\.*[<|(|[].*?[>|\\]|)]\\s*/;\n        let clockMethodPattern = new RegExp(\n            String(Object.keys(clock).join(\"|\"))\n        );\n\n        if (addTimerReturnsObject) {\n            // node.js environment\n            clockMethodPattern = new RegExp(\n                `\\\\s+at (Object\\\\.)?(?:${Object.keys(clock).join(\"|\")})\\\\s+`\n            );\n        }\n\n        let matchedLineIndex = -1;\n        job.error.stack.split(\"\\n\").some(function (line, i) {\n            // If we've matched a computed target line (e.g. setTimeout) then we\n            // don't need to look any further. Return true to stop iterating.\n            const matchedComputedTarget = line.match(computedTargetPattern);\n            /* istanbul ignore if */\n            if (matchedComputedTarget) {\n                matchedLineIndex = i;\n                return true;\n            }\n\n            // If we've matched a clock method line, then there may still be\n            // others further down the trace. Return false to keep iterating.\n            const matchedClockMethod = line.match(clockMethodPattern);\n            if (matchedClockMethod) {\n                matchedLineIndex = i;\n                return false;\n            }\n\n            // If we haven't matched anything on this line, but we matched\n            // previously and set the matched line index, then we can stop.\n            // If we haven't matched previously, then we should keep iterating.\n            return matchedLineIndex >= 0;\n        });\n\n        const stack = `${infiniteLoopError}\\n${job.type || \"Microtask\"} - ${\n            job.func.name || \"anonymous\"\n        }\\n${job.error.stack\n            .split(\"\\n\")\n            .slice(matchedLineIndex + 1)\n            .join(\"\\n\")}`;\n\n        try {\n            Object.defineProperty(infiniteLoopError, \"stack\", {\n                value: stack,\n            });\n        } catch (e) {\n            // noop\n        }\n\n        return infiniteLoopError;\n    }\n\n    /**\n     * @param {Date} target\n     * @param {Date} source\n     * @returns {Date} the target after modifications\n     */\n    function mirrorDateProperties(target, source) {\n        let prop;\n        for (prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n\n        // set special now implementation\n        if (source.now) {\n            target.now = function now() {\n                return target.clock.now;\n            };\n        } else {\n            delete target.now;\n        }\n\n        // set special toSource implementation\n        if (source.toSource) {\n            target.toSource = function toSource() {\n                return source.toSource();\n            };\n        } else {\n            delete target.toSource;\n        }\n\n        // set special toString implementation\n        target.toString = function toString() {\n            return source.toString();\n        };\n\n        target.prototype = source.prototype;\n        target.parse = source.parse;\n        target.UTC = source.UTC;\n        target.prototype.toUTCString = source.prototype.toUTCString;\n        target.isFake = true;\n\n        return target;\n    }\n\n    //eslint-disable-next-line jsdoc/require-jsdoc\n    function createDate() {\n        /**\n         * @param {number} year\n         * @param {number} month\n         * @param {number} date\n         * @param {number} hour\n         * @param {number} minute\n         * @param {number} second\n         * @param {number} ms\n         * @returns {Date}\n         */\n        function ClockDate(year, month, date, hour, minute, second, ms) {\n            // the Date constructor called as a function, ref Ecma-262 Edition 5.1, section 15.9.2.\n            // This remains so in the 10th edition of 2019 as well.\n            if (!(this instanceof ClockDate)) {\n                return new NativeDate(ClockDate.clock.now).toString();\n            }\n\n            // if Date is called as a constructor with 'new' keyword\n            // Defensive and verbose to avoid potential harm in passing\n            // explicit undefined when user does not pass argument\n            switch (arguments.length) {\n                case 0:\n                    return new NativeDate(ClockDate.clock.now);\n                case 1:\n                    return new NativeDate(year);\n                case 2:\n                    return new NativeDate(year, month);\n                case 3:\n                    return new NativeDate(year, month, date);\n                case 4:\n                    return new NativeDate(year, month, date, hour);\n                case 5:\n                    return new NativeDate(year, month, date, hour, minute);\n                case 6:\n                    return new NativeDate(\n                        year,\n                        month,\n                        date,\n                        hour,\n                        minute,\n                        second\n                    );\n                default:\n                    return new NativeDate(\n                        year,\n                        month,\n                        date,\n                        hour,\n                        minute,\n                        second,\n                        ms\n                    );\n            }\n        }\n\n        return mirrorDateProperties(ClockDate, NativeDate);\n    }\n\n    //eslint-disable-next-line jsdoc/require-jsdoc\n    function createIntl() {\n        const ClockIntl = { ...NativeIntl };\n\n        ClockIntl.DateTimeFormat = function (...args) {\n            const realFormatter = new NativeIntl.DateTimeFormat(...args);\n            const formatter = {};\n\n            [\"formatRange\", \"formatRangeToParts\", \"resolvedOptions\"].forEach(\n                (method) => {\n                    formatter[method] =\n                        realFormatter[method].bind(realFormatter);\n                }\n            );\n\n            [\"format\", \"formatToParts\"].forEach((method) => {\n                formatter[method] = function (date) {\n                    return realFormatter[method](date || ClockIntl.clock.now);\n                };\n            });\n\n            return formatter;\n        };\n\n        ClockIntl.DateTimeFormat.prototype = Object.create(\n            NativeIntl.DateTimeFormat.prototype\n        );\n\n        ClockIntl.DateTimeFormat.supportedLocalesOf =\n            NativeIntl.DateTimeFormat.supportedLocalesOf;\n\n        return ClockIntl;\n    }\n\n    //eslint-disable-next-line jsdoc/require-jsdoc\n    function enqueueJob(clock, job) {\n        // enqueues a microtick-deferred task - ecma262/#sec-enqueuejob\n        if (!clock.jobs) {\n            clock.jobs = [];\n        }\n        clock.jobs.push(job);\n    }\n\n    //eslint-disable-next-line jsdoc/require-jsdoc\n    function runJobs(clock) {\n        // runs all microtick-deferred tasks - ecma262/#sec-runjobs\n        if (!clock.jobs) {\n            return;\n        }\n        for (let i = 0; i < clock.jobs.length; i++) {\n            const job = clock.jobs[i];\n            job.func.apply(null, job.args);\n\n            checkIsNearInfiniteLimit(clock, i);\n            if (clock.loopLimit && i > clock.loopLimit) {\n                throw getInfiniteLoopError(clock, job);\n            }\n        }\n        resetIsNearInfiniteLimit();\n        clock.jobs = [];\n    }\n\n    /**\n     * @param {Clock} clock\n     * @param {Timer} timer\n     * @returns {number} id of the created timer\n     */\n    function addTimer(clock, timer) {\n        if (timer.func === undefined) {\n            throw new Error(\"Callback must be provided to timer calls\");\n        }\n\n        if (addTimerReturnsObject) {\n            // Node.js environment\n            if (typeof timer.func !== \"function\") {\n                throw new TypeError(\n                    `[ERR_INVALID_CALLBACK]: Callback must be a function. Received ${\n                        timer.func\n                    } of type ${typeof timer.func}`\n                );\n            }\n        }\n\n        if (isNearInfiniteLimit) {\n            timer.error = new Error();\n        }\n\n        timer.type = timer.immediate ? \"Immediate\" : \"Timeout\";\n\n        if (timer.hasOwnProperty(\"delay\")) {\n            if (typeof timer.delay !== \"number\") {\n                timer.delay = parseInt(timer.delay, 10);\n            }\n\n            if (!isNumberFinite(timer.delay)) {\n                timer.delay = 0;\n            }\n            timer.delay = timer.delay > maxTimeout ? 1 : timer.delay;\n            timer.delay = Math.max(0, timer.delay);\n        }\n\n        if (timer.hasOwnProperty(\"interval\")) {\n            timer.type = \"Interval\";\n            timer.interval = timer.interval > maxTimeout ? 1 : timer.interval;\n        }\n\n        if (timer.hasOwnProperty(\"animation\")) {\n            timer.type = \"AnimationFrame\";\n            timer.animation = true;\n        }\n\n        if (timer.hasOwnProperty(\"idleCallback\")) {\n            timer.type = \"IdleCallback\";\n            timer.idleCallback = true;\n        }\n\n        if (!clock.timers) {\n            clock.timers = {};\n        }\n\n        timer.id = uniqueTimerId++;\n        timer.createdAt = clock.now;\n        timer.callAt =\n            clock.now + (parseInt(timer.delay) || (clock.duringTick ? 1 : 0));\n\n        clock.timers[timer.id] = timer;\n\n        if (addTimerReturnsObject) {\n            const res = {\n                refed: true,\n                ref: function () {\n                    this.refed = true;\n                    return res;\n                },\n                unref: function () {\n                    this.refed = false;\n                    return res;\n                },\n                hasRef: function () {\n                    return this.refed;\n                },\n                refresh: function () {\n                    timer.callAt =\n                        clock.now +\n                        (parseInt(timer.delay) || (clock.duringTick ? 1 : 0));\n\n                    // it _might_ have been removed, but if not the assignment is perfectly fine\n                    clock.timers[timer.id] = timer;\n\n                    return res;\n                },\n                [Symbol.toPrimitive]: function () {\n                    return timer.id;\n                },\n            };\n            return res;\n        }\n\n        return timer.id;\n    }\n\n    /* eslint consistent-return: \"off\" */\n    /**\n     * Timer comparitor\n     *\n     * @param {Timer} a\n     * @param {Timer} b\n     * @returns {number}\n     */\n    function compareTimers(a, b) {\n        // Sort first by absolute timing\n        if (a.callAt < b.callAt) {\n            return -1;\n        }\n        if (a.callAt > b.callAt) {\n            return 1;\n        }\n\n        // Sort next by immediate, immediate timers take precedence\n        if (a.immediate && !b.immediate) {\n            return -1;\n        }\n        if (!a.immediate && b.immediate) {\n            return 1;\n        }\n\n        // Sort next by creation time, earlier-created timers take precedence\n        if (a.createdAt < b.createdAt) {\n            return -1;\n        }\n        if (a.createdAt > b.createdAt) {\n            return 1;\n        }\n\n        // Sort next by id, lower-id timers take precedence\n        if (a.id < b.id) {\n            return -1;\n        }\n        if (a.id > b.id) {\n            return 1;\n        }\n\n        // As timer ids are unique, no fallback `0` is necessary\n    }\n\n    /**\n     * @param {Clock} clock\n     * @param {number} from\n     * @param {number} to\n     * @returns {Timer}\n     */\n    function firstTimerInRange(clock, from, to) {\n        const timers = clock.timers;\n        let timer = null;\n        let id, isInRange;\n\n        for (id in timers) {\n            if (timers.hasOwnProperty(id)) {\n                isInRange = inRange(from, to, timers[id]);\n\n                if (\n                    isInRange &&\n                    (!timer || compareTimers(timer, timers[id]) === 1)\n                ) {\n                    timer = timers[id];\n                }\n            }\n        }\n\n        return timer;\n    }\n\n    /**\n     * @param {Clock} clock\n     * @returns {Timer}\n     */\n    function firstTimer(clock) {\n        const timers = clock.timers;\n        let timer = null;\n        let id;\n\n        for (id in timers) {\n            if (timers.hasOwnProperty(id)) {\n                if (!timer || compareTimers(timer, timers[id]) === 1) {\n                    timer = timers[id];\n                }\n            }\n        }\n\n        return timer;\n    }\n\n    /**\n     * @param {Clock} clock\n     * @returns {Timer}\n     */\n    function lastTimer(clock) {\n        const timers = clock.timers;\n        let timer = null;\n        let id;\n\n        for (id in timers) {\n            if (timers.hasOwnProperty(id)) {\n                if (!timer || compareTimers(timer, timers[id]) === -1) {\n                    timer = timers[id];\n                }\n            }\n        }\n\n        return timer;\n    }\n\n    /**\n     * @param {Clock} clock\n     * @param {Timer} timer\n     */\n    function callTimer(clock, timer) {\n        if (typeof timer.interval === \"number\") {\n            clock.timers[timer.id].callAt += timer.interval;\n        } else {\n            delete clock.timers[timer.id];\n        }\n\n        if (typeof timer.func === \"function\") {\n            timer.func.apply(null, timer.args);\n        } else {\n            /* eslint no-eval: \"off\" */\n            const eval2 = eval;\n            (function () {\n                eval2(timer.func);\n            })();\n        }\n    }\n\n    /**\n     * Gets clear handler name for a given timer type\n     *\n     * @param {string} ttype\n     */\n    function getClearHandler(ttype) {\n        if (ttype === \"IdleCallback\" || ttype === \"AnimationFrame\") {\n            return `cancel${ttype}`;\n        }\n        return `clear${ttype}`;\n    }\n\n    /**\n     * Gets schedule handler name for a given timer type\n     *\n     * @param {string} ttype\n     */\n    function getScheduleHandler(ttype) {\n        if (ttype === \"IdleCallback\" || ttype === \"AnimationFrame\") {\n            return `request${ttype}`;\n        }\n        return `set${ttype}`;\n    }\n\n    /**\n     * Creates an anonymous function to warn only once\n     */\n    function createWarnOnce() {\n        let calls = 0;\n        return function (msg) {\n            // eslint-disable-next-line\n            !calls++ && console.warn(msg);\n        };\n    }\n    const warnOnce = createWarnOnce();\n\n    /**\n     * @param {Clock} clock\n     * @param {number} timerId\n     * @param {string} ttype\n     */\n    function clearTimer(clock, timerId, ttype) {\n        if (!timerId) {\n            // null appears to be allowed in most browsers, and appears to be\n            // relied upon by some libraries, like Bootstrap carousel\n            return;\n        }\n\n        if (!clock.timers) {\n            clock.timers = {};\n        }\n\n        // in Node, the ID is stored as the primitive value for `Timeout` objects\n        // for `Immediate` objects, no ID exists, so it gets coerced to NaN\n        const id = Number(timerId);\n\n        if (Number.isNaN(id) || id < idCounterStart) {\n            const handlerName = getClearHandler(ttype);\n\n            if (clock.shouldClearNativeTimers === true) {\n                const nativeHandler = clock[`_${handlerName}`];\n                return typeof nativeHandler === \"function\"\n                    ? nativeHandler(timerId)\n                    : undefined;\n            }\n            warnOnce(\n                `FakeTimers: ${handlerName} was invoked to clear a native timer instead of one created by this library.` +\n                    \"\\nTo automatically clean-up native timers, use `shouldClearNativeTimers`.\"\n            );\n        }\n\n        if (clock.timers.hasOwnProperty(id)) {\n            // check that the ID matches a timer of the correct type\n            const timer = clock.timers[id];\n            if (\n                timer.type === ttype ||\n                (timer.type === \"Timeout\" && ttype === \"Interval\") ||\n                (timer.type === \"Interval\" && ttype === \"Timeout\")\n            ) {\n                delete clock.timers[id];\n            } else {\n                const clear = getClearHandler(ttype);\n                const schedule = getScheduleHandler(timer.type);\n                throw new Error(\n                    `Cannot clear timer: timer created with ${schedule}() but cleared with ${clear}()`\n                );\n            }\n        }\n    }\n\n    /**\n     * @param {Clock} clock\n     * @param {Config} config\n     * @returns {Timer[]}\n     */\n    function uninstall(clock, config) {\n        let method, i, l;\n        const installedHrTime = \"_hrtime\";\n        const installedNextTick = \"_nextTick\";\n\n        for (i = 0, l = clock.methods.length; i < l; i++) {\n            method = clock.methods[i];\n            if (method === \"hrtime\" && _global.process) {\n                _global.process.hrtime = clock[installedHrTime];\n            } else if (method === \"nextTick\" && _global.process) {\n                _global.process.nextTick = clock[installedNextTick];\n            } else if (method === \"performance\") {\n                const originalPerfDescriptor = Object.getOwnPropertyDescriptor(\n                    clock,\n                    `_${method}`\n                );\n                if (\n                    originalPerfDescriptor &&\n                    originalPerfDescriptor.get &&\n                    !originalPerfDescriptor.set\n                ) {\n                    Object.defineProperty(\n                        _global,\n                        method,\n                        originalPerfDescriptor\n                    );\n                } else if (originalPerfDescriptor.configurable) {\n                    _global[method] = clock[`_${method}`];\n                }\n            } else {\n                if (_global[method] && _global[method].hadOwnProperty) {\n                    _global[method] = clock[`_${method}`];\n                } else {\n                    try {\n                        delete _global[method];\n                    } catch (ignore) {\n                        /* eslint no-empty: \"off\" */\n                    }\n                }\n            }\n            if (clock.timersModuleMethods !== undefined) {\n                for (let j = 0; j < clock.timersModuleMethods.length; j++) {\n                    const entry = clock.timersModuleMethods[j];\n                    timersModule[entry.methodName] = entry.original;\n                }\n            }\n        }\n\n        if (config.shouldAdvanceTime === true) {\n            _global.clearInterval(clock.attachedInterval);\n        }\n\n        // Prevent multiple executions which will completely remove these props\n        clock.methods = [];\n\n        // return pending timers, to enable checking what timers remained on uninstall\n        if (!clock.timers) {\n            return [];\n        }\n        return Object.keys(clock.timers).map(function mapper(key) {\n            return clock.timers[key];\n        });\n    }\n\n    /**\n     * @param {object} target the target containing the method to replace\n     * @param {string} method the keyname of the method on the target\n     * @param {Clock} clock\n     */\n    function hijackMethod(target, method, clock) {\n        clock[method].hadOwnProperty = Object.prototype.hasOwnProperty.call(\n            target,\n            method\n        );\n        clock[`_${method}`] = target[method];\n\n        if (method === \"Date\") {\n            const date = mirrorDateProperties(clock[method], target[method]);\n            target[method] = date;\n        } else if (method === \"Intl\") {\n            target[method] = clock[method];\n        } else if (method === \"performance\") {\n            const originalPerfDescriptor = Object.getOwnPropertyDescriptor(\n                target,\n                method\n            );\n            // JSDOM has a read only performance field so we have to save/copy it differently\n            if (\n                originalPerfDescriptor &&\n                originalPerfDescriptor.get &&\n                !originalPerfDescriptor.set\n            ) {\n                Object.defineProperty(\n                    clock,\n                    `_${method}`,\n                    originalPerfDescriptor\n                );\n\n                const perfDescriptor = Object.getOwnPropertyDescriptor(\n                    clock,\n                    method\n                );\n                Object.defineProperty(target, method, perfDescriptor);\n            } else {\n                target[method] = clock[method];\n            }\n        } else {\n            target[method] = function () {\n                return clock[method].apply(clock, arguments);\n            };\n\n            Object.defineProperties(\n                target[method],\n                Object.getOwnPropertyDescriptors(clock[method])\n            );\n        }\n\n        target[method].clock = clock;\n    }\n\n    /**\n     * @param {Clock} clock\n     * @param {number} advanceTimeDelta\n     */\n    function doIntervalTick(clock, advanceTimeDelta) {\n        clock.tick(advanceTimeDelta);\n    }\n\n    /**\n     * @typedef {object} Timers\n     * @property {setTimeout} setTimeout\n     * @property {clearTimeout} clearTimeout\n     * @property {setInterval} setInterval\n     * @property {clearInterval} clearInterval\n     * @property {Date} Date\n     * @property {Intl} Intl\n     * @property {SetImmediate=} setImmediate\n     * @property {function(NodeImmediate): void=} clearImmediate\n     * @property {function(number[]):number[]=} hrtime\n     * @property {NextTick=} nextTick\n     * @property {Performance=} performance\n     * @property {RequestAnimationFrame=} requestAnimationFrame\n     * @property {boolean=} queueMicrotask\n     * @property {function(number): void=} cancelAnimationFrame\n     * @property {RequestIdleCallback=} requestIdleCallback\n     * @property {function(number): void=} cancelIdleCallback\n     */\n\n    /** @type {Timers} */\n    const timers = {\n        setTimeout: _global.setTimeout,\n        clearTimeout: _global.clearTimeout,\n        setInterval: _global.setInterval,\n        clearInterval: _global.clearInterval,\n        Date: _global.Date,\n    };\n\n    if (setImmediatePresent) {\n        timers.setImmediate = _global.setImmediate;\n        timers.clearImmediate = _global.clearImmediate;\n    }\n\n    if (hrtimePresent) {\n        timers.hrtime = _global.process.hrtime;\n    }\n\n    if (nextTickPresent) {\n        timers.nextTick = _global.process.nextTick;\n    }\n\n    if (performancePresent) {\n        timers.performance = _global.performance;\n    }\n\n    if (requestAnimationFramePresent) {\n        timers.requestAnimationFrame = _global.requestAnimationFrame;\n    }\n\n    if (queueMicrotaskPresent) {\n        timers.queueMicrotask = true;\n    }\n\n    if (cancelAnimationFramePresent) {\n        timers.cancelAnimationFrame = _global.cancelAnimationFrame;\n    }\n\n    if (requestIdleCallbackPresent) {\n        timers.requestIdleCallback = _global.requestIdleCallback;\n    }\n\n    if (cancelIdleCallbackPresent) {\n        timers.cancelIdleCallback = _global.cancelIdleCallback;\n    }\n\n    if (intlPresent) {\n        timers.Intl = _global.Intl;\n    }\n\n    const originalSetTimeout = _global.setImmediate || _global.setTimeout;\n\n    /**\n     * @param {Date|number} [start] the system time - non-integer values are floored\n     * @param {number} [loopLimit] maximum number of timers that will be run when calling runAll()\n     * @returns {Clock}\n     */\n    function createClock(start, loopLimit) {\n        // eslint-disable-next-line no-param-reassign\n        start = Math.floor(getEpoch(start));\n        // eslint-disable-next-line no-param-reassign\n        loopLimit = loopLimit || 1000;\n        let nanos = 0;\n        const adjustedSystemTime = [0, 0]; // [millis, nanoremainder]\n\n        if (NativeDate === undefined) {\n            throw new Error(\n                \"The global scope doesn't have a `Date` object\" +\n                    \" (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)\"\n            );\n        }\n\n        const clock = {\n            now: start,\n            Date: createDate(),\n            loopLimit: loopLimit,\n        };\n\n        clock.Date.clock = clock;\n\n        //eslint-disable-next-line jsdoc/require-jsdoc\n        function getTimeToNextFrame() {\n            return 16 - ((clock.now - start) % 16);\n        }\n\n        //eslint-disable-next-line jsdoc/require-jsdoc\n        function hrtime(prev) {\n            const millisSinceStart = clock.now - adjustedSystemTime[0] - start;\n            const secsSinceStart = Math.floor(millisSinceStart / 1000);\n            const remainderInNanos =\n                (millisSinceStart - secsSinceStart * 1e3) * 1e6 +\n                nanos -\n                adjustedSystemTime[1];\n\n            if (Array.isArray(prev)) {\n                if (prev[1] > 1e9) {\n                    throw new TypeError(\n                        \"Number of nanoseconds can't exceed a billion\"\n                    );\n                }\n\n                const oldSecs = prev[0];\n                let nanoDiff = remainderInNanos - prev[1];\n                let secDiff = secsSinceStart - oldSecs;\n\n                if (nanoDiff < 0) {\n                    nanoDiff += 1e9;\n                    secDiff -= 1;\n                }\n\n                return [secDiff, nanoDiff];\n            }\n            return [secsSinceStart, remainderInNanos];\n        }\n\n        function fakePerformanceNow() {\n            const hrt = hrtime();\n            const millis = hrt[0] * 1000 + hrt[1] / 1e6;\n            return millis;\n        }\n\n        if (hrtimeBigintPresent) {\n            hrtime.bigint = function () {\n                const parts = hrtime();\n                return BigInt(parts[0]) * BigInt(1e9) + BigInt(parts[1]); // eslint-disable-line\n            };\n        }\n\n        if (intlPresent) {\n            clock.Intl = createIntl();\n            clock.Intl.clock = clock;\n        }\n\n        clock.requestIdleCallback = function requestIdleCallback(\n            func,\n            timeout\n        ) {\n            let timeToNextIdlePeriod = 0;\n\n            if (clock.countTimers() > 0) {\n                timeToNextIdlePeriod = 50; // const for now\n            }\n\n            const result = addTimer(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 2),\n                delay:\n                    typeof timeout === \"undefined\"\n                        ? timeToNextIdlePeriod\n                        : Math.min(timeout, timeToNextIdlePeriod),\n                idleCallback: true,\n            });\n\n            return Number(result);\n        };\n\n        clock.cancelIdleCallback = function cancelIdleCallback(timerId) {\n            return clearTimer(clock, timerId, \"IdleCallback\");\n        };\n\n        clock.setTimeout = function setTimeout(func, timeout) {\n            return addTimer(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 2),\n                delay: timeout,\n            });\n        };\n        if (typeof _global.Promise !== \"undefined\" && utilPromisify) {\n            clock.setTimeout[utilPromisify.custom] =\n                function promisifiedSetTimeout(timeout, arg) {\n                    return new _global.Promise(function setTimeoutExecutor(\n                        resolve\n                    ) {\n                        addTimer(clock, {\n                            func: resolve,\n                            args: [arg],\n                            delay: timeout,\n                        });\n                    });\n                };\n        }\n\n        clock.clearTimeout = function clearTimeout(timerId) {\n            return clearTimer(clock, timerId, \"Timeout\");\n        };\n\n        clock.nextTick = function nextTick(func) {\n            return enqueueJob(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 1),\n                error: isNearInfiniteLimit ? new Error() : null,\n            });\n        };\n\n        clock.queueMicrotask = function queueMicrotask(func) {\n            return clock.nextTick(func); // explicitly drop additional arguments\n        };\n\n        clock.setInterval = function setInterval(func, timeout) {\n            // eslint-disable-next-line no-param-reassign\n            timeout = parseInt(timeout, 10);\n            return addTimer(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 2),\n                delay: timeout,\n                interval: timeout,\n            });\n        };\n\n        clock.clearInterval = function clearInterval(timerId) {\n            return clearTimer(clock, timerId, \"Interval\");\n        };\n\n        if (setImmediatePresent) {\n            clock.setImmediate = function setImmediate(func) {\n                return addTimer(clock, {\n                    func: func,\n                    args: Array.prototype.slice.call(arguments, 1),\n                    immediate: true,\n                });\n            };\n\n            if (typeof _global.Promise !== \"undefined\" && utilPromisify) {\n                clock.setImmediate[utilPromisify.custom] =\n                    function promisifiedSetImmediate(arg) {\n                        return new _global.Promise(\n                            function setImmediateExecutor(resolve) {\n                                addTimer(clock, {\n                                    func: resolve,\n                                    args: [arg],\n                                    immediate: true,\n                                });\n                            }\n                        );\n                    };\n            }\n\n            clock.clearImmediate = function clearImmediate(timerId) {\n                return clearTimer(clock, timerId, \"Immediate\");\n            };\n        }\n\n        clock.countTimers = function countTimers() {\n            return (\n                Object.keys(clock.timers || {}).length +\n                (clock.jobs || []).length\n            );\n        };\n\n        clock.requestAnimationFrame = function requestAnimationFrame(func) {\n            const result = addTimer(clock, {\n                func: func,\n                delay: getTimeToNextFrame(),\n                get args() {\n                    return [fakePerformanceNow()];\n                },\n                animation: true,\n            });\n\n            return Number(result);\n        };\n\n        clock.cancelAnimationFrame = function cancelAnimationFrame(timerId) {\n            return clearTimer(clock, timerId, \"AnimationFrame\");\n        };\n\n        clock.runMicrotasks = function runMicrotasks() {\n            runJobs(clock);\n        };\n\n        /**\n         * @param {number|string} tickValue milliseconds or a string parseable by parseTime\n         * @param {boolean} isAsync\n         * @param {Function} resolve\n         * @param {Function} reject\n         * @returns {number|undefined} will return the new `now` value or nothing for async\n         */\n        function doTick(tickValue, isAsync, resolve, reject) {\n            const msFloat =\n                typeof tickValue === \"number\"\n                    ? tickValue\n                    : parseTime(tickValue);\n            const ms = Math.floor(msFloat);\n            const remainder = nanoRemainder(msFloat);\n            let nanosTotal = nanos + remainder;\n            let tickTo = clock.now + ms;\n\n            if (msFloat < 0) {\n                throw new TypeError(\"Negative ticks are not supported\");\n            }\n\n            // adjust for positive overflow\n            if (nanosTotal >= 1e6) {\n                tickTo += 1;\n                nanosTotal -= 1e6;\n            }\n\n            nanos = nanosTotal;\n            let tickFrom = clock.now;\n            let previous = clock.now;\n            // ESLint fails to detect this correctly\n            /* eslint-disable prefer-const */\n            let timer,\n                firstException,\n                oldNow,\n                nextPromiseTick,\n                compensationCheck,\n                postTimerCall;\n            /* eslint-enable prefer-const */\n\n            clock.duringTick = true;\n\n            // perform microtasks\n            oldNow = clock.now;\n            runJobs(clock);\n            if (oldNow !== clock.now) {\n                // compensate for any setSystemTime() call during microtask callback\n                tickFrom += clock.now - oldNow;\n                tickTo += clock.now - oldNow;\n            }\n\n            //eslint-disable-next-line jsdoc/require-jsdoc\n            function doTickInner() {\n                // perform each timer in the requested range\n                timer = firstTimerInRange(clock, tickFrom, tickTo);\n                // eslint-disable-next-line no-unmodified-loop-condition\n                while (timer && tickFrom <= tickTo) {\n                    if (clock.timers[timer.id]) {\n                        tickFrom = timer.callAt;\n                        clock.now = timer.callAt;\n                        oldNow = clock.now;\n                        try {\n                            runJobs(clock);\n                            callTimer(clock, timer);\n                        } catch (e) {\n                            firstException = firstException || e;\n                        }\n\n                        if (isAsync) {\n                            // finish up after native setImmediate callback to allow\n                            // all native es6 promises to process their callbacks after\n                            // each timer fires.\n                            originalSetTimeout(nextPromiseTick);\n                            return;\n                        }\n\n                        compensationCheck();\n                    }\n\n                    postTimerCall();\n                }\n\n                // perform process.nextTick()s again\n                oldNow = clock.now;\n                runJobs(clock);\n                if (oldNow !== clock.now) {\n                    // compensate for any setSystemTime() call during process.nextTick() callback\n                    tickFrom += clock.now - oldNow;\n                    tickTo += clock.now - oldNow;\n                }\n                clock.duringTick = false;\n\n                // corner case: during runJobs new timers were scheduled which could be in the range [clock.now, tickTo]\n                timer = firstTimerInRange(clock, tickFrom, tickTo);\n                if (timer) {\n                    try {\n                        clock.tick(tickTo - clock.now); // do it all again - for the remainder of the requested range\n                    } catch (e) {\n                        firstException = firstException || e;\n                    }\n                } else {\n                    // no timers remaining in the requested range: move the clock all the way to the end\n                    clock.now = tickTo;\n\n                    // update nanos\n                    nanos = nanosTotal;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n\n                if (isAsync) {\n                    resolve(clock.now);\n                } else {\n                    return clock.now;\n                }\n            }\n\n            nextPromiseTick =\n                isAsync &&\n                function () {\n                    try {\n                        compensationCheck();\n                        postTimerCall();\n                        doTickInner();\n                    } catch (e) {\n                        reject(e);\n                    }\n                };\n\n            compensationCheck = function () {\n                // compensate for any setSystemTime() call during timer callback\n                if (oldNow !== clock.now) {\n                    tickFrom += clock.now - oldNow;\n                    tickTo += clock.now - oldNow;\n                    previous += clock.now - oldNow;\n                }\n            };\n\n            postTimerCall = function () {\n                timer = firstTimerInRange(clock, previous, tickTo);\n                previous = tickFrom;\n            };\n\n            return doTickInner();\n        }\n\n        /**\n         * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n         * @returns {number} will return the new `now` value\n         */\n        clock.tick = function tick(tickValue) {\n            return doTick(tickValue, false);\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            /**\n             * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n             * @returns {Promise}\n             */\n            clock.tickAsync = function tickAsync(tickValue) {\n                return new _global.Promise(function (resolve, reject) {\n                    originalSetTimeout(function () {\n                        try {\n                            doTick(tickValue, true, resolve, reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            };\n        }\n\n        clock.next = function next() {\n            runJobs(clock);\n            const timer = firstTimer(clock);\n            if (!timer) {\n                return clock.now;\n            }\n\n            clock.duringTick = true;\n            try {\n                clock.now = timer.callAt;\n                callTimer(clock, timer);\n                runJobs(clock);\n                return clock.now;\n            } finally {\n                clock.duringTick = false;\n            }\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.nextAsync = function nextAsync() {\n                return new _global.Promise(function (resolve, reject) {\n                    originalSetTimeout(function () {\n                        try {\n                            const timer = firstTimer(clock);\n                            if (!timer) {\n                                resolve(clock.now);\n                                return;\n                            }\n\n                            let err;\n                            clock.duringTick = true;\n                            clock.now = timer.callAt;\n                            try {\n                                callTimer(clock, timer);\n                            } catch (e) {\n                                err = e;\n                            }\n                            clock.duringTick = false;\n\n                            originalSetTimeout(function () {\n                                if (err) {\n                                    reject(err);\n                                } else {\n                                    resolve(clock.now);\n                                }\n                            });\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            };\n        }\n\n        clock.runAll = function runAll() {\n            let numTimers, i;\n            runJobs(clock);\n            for (i = 0; i < clock.loopLimit; i++) {\n                if (!clock.timers) {\n                    resetIsNearInfiniteLimit();\n                    return clock.now;\n                }\n\n                numTimers = Object.keys(clock.timers).length;\n                if (numTimers === 0) {\n                    resetIsNearInfiniteLimit();\n                    return clock.now;\n                }\n\n                clock.next();\n                checkIsNearInfiniteLimit(clock, i);\n            }\n\n            const excessJob = firstTimer(clock);\n            throw getInfiniteLoopError(clock, excessJob);\n        };\n\n        clock.runToFrame = function runToFrame() {\n            return clock.tick(getTimeToNextFrame());\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.runAllAsync = function runAllAsync() {\n                return new _global.Promise(function (resolve, reject) {\n                    let i = 0;\n                    /**\n                     *\n                     */\n                    function doRun() {\n                        originalSetTimeout(function () {\n                            try {\n                                let numTimers;\n                                if (i < clock.loopLimit) {\n                                    if (!clock.timers) {\n                                        resetIsNearInfiniteLimit();\n                                        resolve(clock.now);\n                                        return;\n                                    }\n\n                                    numTimers = Object.keys(\n                                        clock.timers\n                                    ).length;\n                                    if (numTimers === 0) {\n                                        resetIsNearInfiniteLimit();\n                                        resolve(clock.now);\n                                        return;\n                                    }\n\n                                    clock.next();\n\n                                    i++;\n\n                                    doRun();\n                                    checkIsNearInfiniteLimit(clock, i);\n                                    return;\n                                }\n\n                                const excessJob = firstTimer(clock);\n                                reject(getInfiniteLoopError(clock, excessJob));\n                            } catch (e) {\n                                reject(e);\n                            }\n                        });\n                    }\n                    doRun();\n                });\n            };\n        }\n\n        clock.runToLast = function runToLast() {\n            const timer = lastTimer(clock);\n            if (!timer) {\n                runJobs(clock);\n                return clock.now;\n            }\n\n            return clock.tick(timer.callAt - clock.now);\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.runToLastAsync = function runToLastAsync() {\n                return new _global.Promise(function (resolve, reject) {\n                    originalSetTimeout(function () {\n                        try {\n                            const timer = lastTimer(clock);\n                            if (!timer) {\n                                resolve(clock.now);\n                            }\n\n                            resolve(clock.tickAsync(timer.callAt - clock.now));\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            };\n        }\n\n        clock.reset = function reset() {\n            nanos = 0;\n            clock.timers = {};\n            clock.jobs = [];\n            clock.now = start;\n        };\n\n        clock.setSystemTime = function setSystemTime(systemTime) {\n            // determine time difference\n            const newNow = getEpoch(systemTime);\n            const difference = newNow - clock.now;\n            let id, timer;\n\n            adjustedSystemTime[0] = adjustedSystemTime[0] + difference;\n            adjustedSystemTime[1] = adjustedSystemTime[1] + nanos;\n            // update 'system clock'\n            clock.now = newNow;\n            nanos = 0;\n\n            // update timers and intervals to keep them stable\n            for (id in clock.timers) {\n                if (clock.timers.hasOwnProperty(id)) {\n                    timer = clock.timers[id];\n                    timer.createdAt += difference;\n                    timer.callAt += difference;\n                }\n            }\n        };\n\n        /**\n         * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n         * @returns {number} will return the new `now` value\n         */\n        clock.jump = function jump(tickValue) {\n            const msFloat =\n                typeof tickValue === \"number\"\n                    ? tickValue\n                    : parseTime(tickValue);\n            const ms = Math.floor(msFloat);\n\n            for (const timer of Object.values(clock.timers)) {\n                if (clock.now + ms > timer.callAt) {\n                    timer.callAt = clock.now + ms;\n                }\n            }\n            clock.tick(ms);\n        };\n\n        if (performancePresent) {\n            clock.performance = Object.create(null);\n            clock.performance.now = fakePerformanceNow;\n        }\n\n        if (hrtimePresent) {\n            clock.hrtime = hrtime;\n        }\n\n        return clock;\n    }\n\n    /* eslint-disable complexity */\n\n    /**\n     * @param {Config=} [config] Optional config\n     * @returns {Clock}\n     */\n    function install(config) {\n        if (\n            arguments.length > 1 ||\n            config instanceof Date ||\n            Array.isArray(config) ||\n            typeof config === \"number\"\n        ) {\n            throw new TypeError(\n                `FakeTimers.install called with ${String(\n                    config\n                )} install requires an object parameter`\n            );\n        }\n\n        if (_global.Date.isFake === true) {\n            // Timers are already faked; this is a problem.\n            // Make the user reset timers before continuing.\n            throw new TypeError(\n                \"Can't install fake timers twice on the same global object.\"\n            );\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        config = typeof config !== \"undefined\" ? config : {};\n        config.shouldAdvanceTime = config.shouldAdvanceTime || false;\n        config.advanceTimeDelta = config.advanceTimeDelta || 20;\n        config.shouldClearNativeTimers =\n            config.shouldClearNativeTimers || false;\n\n        if (config.target) {\n            throw new TypeError(\n                \"config.target is no longer supported. Use `withGlobal(target)` instead.\"\n            );\n        }\n\n        let i, l;\n        const clock = createClock(config.now, config.loopLimit);\n        clock.shouldClearNativeTimers = config.shouldClearNativeTimers;\n\n        clock.uninstall = function () {\n            return uninstall(clock, config);\n        };\n\n        clock.methods = config.toFake || [];\n\n        if (clock.methods.length === 0) {\n            // do not fake nextTick by default - GitHub#126\n            clock.methods = Object.keys(timers).filter(function (key) {\n                return key !== \"nextTick\" && key !== \"queueMicrotask\";\n            });\n        }\n\n        if (config.shouldAdvanceTime === true) {\n            const intervalTick = doIntervalTick.bind(\n                null,\n                clock,\n                config.advanceTimeDelta\n            );\n            const intervalId = _global.setInterval(\n                intervalTick,\n                config.advanceTimeDelta\n            );\n            clock.attachedInterval = intervalId;\n        }\n\n        if (clock.methods.includes(\"performance\")) {\n            const proto = (() => {\n                if (hasPerformanceConstructorPrototype) {\n                    return _global.performance.constructor.prototype;\n                }\n                if (hasPerformancePrototype) {\n                    return _global.Performance.prototype;\n                }\n            })();\n            if (proto) {\n                Object.getOwnPropertyNames(proto).forEach(function (name) {\n                    if (name !== \"now\") {\n                        clock.performance[name] =\n                            name.indexOf(\"getEntries\") === 0\n                                ? NOOP_ARRAY\n                                : NOOP;\n                    }\n                });\n            } else if ((config.toFake || []).includes(\"performance\")) {\n                // user explicitly tried to fake performance when not present\n                throw new ReferenceError(\n                    \"non-existent performance object cannot be faked\"\n                );\n            }\n        }\n        if (_global === globalObject && timersModule) {\n            clock.timersModuleMethods = [];\n        }\n        for (i = 0, l = clock.methods.length; i < l; i++) {\n            const nameOfMethodToReplace = clock.methods[i];\n            if (nameOfMethodToReplace === \"hrtime\") {\n                if (\n                    _global.process &&\n                    typeof _global.process.hrtime === \"function\"\n                ) {\n                    hijackMethod(_global.process, nameOfMethodToReplace, clock);\n                }\n            } else if (nameOfMethodToReplace === \"nextTick\") {\n                if (\n                    _global.process &&\n                    typeof _global.process.nextTick === \"function\"\n                ) {\n                    hijackMethod(_global.process, nameOfMethodToReplace, clock);\n                }\n            } else {\n                hijackMethod(_global, nameOfMethodToReplace, clock);\n            }\n            if (\n                clock.timersModuleMethods !== undefined &&\n                timersModule[nameOfMethodToReplace]\n            ) {\n                const original = timersModule[nameOfMethodToReplace];\n                clock.timersModuleMethods.push({\n                    methodName: nameOfMethodToReplace,\n                    original: original,\n                });\n                timersModule[nameOfMethodToReplace] =\n                    _global[nameOfMethodToReplace];\n            }\n        }\n\n        return clock;\n    }\n\n    /* eslint-enable complexity */\n\n    return {\n        timers: timers,\n        createClock: createClock,\n        install: install,\n        withGlobal: withGlobal,\n    };\n}\n\n/**\n * @typedef {object} FakeTimers\n * @property {Timers} timers\n * @property {createClock} createClock\n * @property {Function} install\n * @property {withGlobal} withGlobal\n */\n\n/* eslint-enable complexity */\n\n/** @type {FakeTimers} */\nconst defaultImplementation = withGlobal(globalObject);\n\ndefaultImplementation.timers;\ndefaultImplementation.createClock;\ndefaultImplementation.install;\nvar withGlobal_1 = withGlobal;\n\nclass FakeTimers {\n  _global;\n  _clock;\n  _fakingTime;\n  _fakingDate;\n  _fakeTimers;\n  _userConfig;\n  _now = _date_W2xKR2qe_js__WEBPACK_IMPORTED_MODULE_9__.R.now;\n  constructor({\n    global,\n    config\n  }) {\n    this._userConfig = config;\n    this._fakingDate = false;\n    this._fakingTime = false;\n    this._fakeTimers = withGlobal_1(global);\n    this._global = global;\n  }\n  clearAllTimers() {\n    if (this._fakingTime) {\n      this._clock.reset();\n    }\n  }\n  dispose() {\n    this.useRealTimers();\n  }\n  runAllTimers() {\n    if (this._checkFakeTimers()) {\n      this._clock.runAll();\n    }\n  }\n  async runAllTimersAsync() {\n    if (this._checkFakeTimers()) {\n      await this._clock.runAllAsync();\n    }\n  }\n  runOnlyPendingTimers() {\n    if (this._checkFakeTimers()) {\n      this._clock.runToLast();\n    }\n  }\n  async runOnlyPendingTimersAsync() {\n    if (this._checkFakeTimers()) {\n      await this._clock.runToLastAsync();\n    }\n  }\n  advanceTimersToNextTimer(steps = 1) {\n    if (this._checkFakeTimers()) {\n      for (let i = steps; i > 0; i--) {\n        this._clock.next();\n        this._clock.tick(0);\n        if (this._clock.countTimers() === 0) {\n          break;\n        }\n      }\n    }\n  }\n  async advanceTimersToNextTimerAsync(steps = 1) {\n    if (this._checkFakeTimers()) {\n      for (let i = steps; i > 0; i--) {\n        await this._clock.nextAsync();\n        this._clock.tick(0);\n        if (this._clock.countTimers() === 0) {\n          break;\n        }\n      }\n    }\n  }\n  advanceTimersByTime(msToRun) {\n    if (this._checkFakeTimers()) {\n      this._clock.tick(msToRun);\n    }\n  }\n  async advanceTimersByTimeAsync(msToRun) {\n    if (this._checkFakeTimers()) {\n      await this._clock.tickAsync(msToRun);\n    }\n  }\n  runAllTicks() {\n    if (this._checkFakeTimers()) {\n      this._clock.runMicrotasks();\n    }\n  }\n  useRealTimers() {\n    if (this._fakingDate) {\n      (0,_date_W2xKR2qe_js__WEBPACK_IMPORTED_MODULE_9__.r)();\n      this._fakingDate = false;\n    }\n    if (this._fakingTime) {\n      this._clock.uninstall();\n      this._fakingTime = false;\n    }\n  }\n  useFakeTimers() {\n    var _a, _b, _c;\n    if (this._fakingDate) {\n      throw new Error(\n        '\"setSystemTime\" was called already and date was mocked. Reset timers using `vi.useRealTimers()` if you want to use fake timers again.'\n      );\n    }\n    if (!this._fakingTime) {\n      const toFake = Object.keys(this._fakeTimers.timers).filter(\n        (timer) => timer !== \"nextTick\"\n      );\n      if (((_b = (_a = this._userConfig) == null ? void 0 : _a.toFake) == null ? void 0 : _b.includes(\"nextTick\")) && (0,_base_CTYV4Gnz_js__WEBPACK_IMPORTED_MODULE_10__.i)()) {\n        throw new Error(\n          \"process.nextTick cannot be mocked inside child_process\"\n        );\n      }\n      const existingFakedMethods = (((_c = this._userConfig) == null ? void 0 : _c.toFake) || toFake).filter(\n        (method) => {\n          switch (method) {\n            case \"setImmediate\":\n            case \"clearImmediate\":\n              return method in this._global && this._global[method];\n            default:\n              return true;\n          }\n        }\n      );\n      this._clock = this._fakeTimers.install({\n        now: Date.now(),\n        ...this._userConfig,\n        toFake: existingFakedMethods\n      });\n      this._fakingTime = true;\n    }\n  }\n  reset() {\n    if (this._checkFakeTimers()) {\n      const { now } = this._clock;\n      this._clock.reset();\n      this._clock.setSystemTime(now);\n    }\n  }\n  setSystemTime(now) {\n    if (this._fakingTime) {\n      this._clock.setSystemTime(now);\n    } else {\n      (0,_date_W2xKR2qe_js__WEBPACK_IMPORTED_MODULE_9__.m)(now ?? this.getRealSystemTime());\n      this._fakingDate = true;\n    }\n  }\n  getRealSystemTime() {\n    return this._now();\n  }\n  getTimerCount() {\n    if (this._checkFakeTimers()) {\n      return this._clock.countTimers();\n    }\n    return 0;\n  }\n  configure(config) {\n    this._userConfig = config;\n  }\n  isFakeTimers() {\n    return this._fakingTime;\n  }\n  _checkFakeTimers() {\n    if (!this._fakingTime) {\n      throw new Error(\n        'Timers are not mocked. Try calling \"vi.useFakeTimers()\" first.'\n      );\n    }\n    return this._fakingTime;\n  }\n}\n\nfunction copyStackTrace(target, source) {\n  if (source.stack !== void 0) {\n    target.stack = source.stack.replace(source.message, target.message);\n  }\n  return target;\n}\nfunction waitFor(callback, options = {}) {\n  const { setTimeout, setInterval, clearTimeout, clearInterval } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_3__.getSafeTimers)();\n  const { interval = 50, timeout = 1e3 } = typeof options === \"number\" ? { timeout: options } : options;\n  const STACK_TRACE_ERROR = new Error(\"STACK_TRACE_ERROR\");\n  return new Promise((resolve, reject) => {\n    let lastError;\n    let promiseStatus = \"idle\";\n    let timeoutId;\n    let intervalId;\n    const onResolve = (result) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      resolve(result);\n    };\n    const handleTimeout = () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      let error = lastError;\n      if (!error) {\n        error = copyStackTrace(\n          new Error(\"Timed out in waitFor!\"),\n          STACK_TRACE_ERROR\n        );\n      }\n      reject(error);\n    };\n    const checkCallback = () => {\n      if (vi.isFakeTimers()) {\n        vi.advanceTimersByTime(interval);\n      }\n      if (promiseStatus === \"pending\") {\n        return;\n      }\n      try {\n        const result = callback();\n        if (result !== null && typeof result === \"object\" && typeof result.then === \"function\") {\n          const thenable = result;\n          promiseStatus = \"pending\";\n          thenable.then(\n            (resolvedValue) => {\n              promiseStatus = \"resolved\";\n              onResolve(resolvedValue);\n            },\n            (rejectedValue) => {\n              promiseStatus = \"rejected\";\n              lastError = rejectedValue;\n            }\n          );\n        } else {\n          onResolve(result);\n          return true;\n        }\n      } catch (error) {\n        lastError = error;\n      }\n    };\n    if (checkCallback() === true) {\n      return;\n    }\n    timeoutId = setTimeout(handleTimeout, timeout);\n    intervalId = setInterval(checkCallback, interval);\n  });\n}\nfunction waitUntil(callback, options = {}) {\n  const { setTimeout, setInterval, clearTimeout, clearInterval } = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_3__.getSafeTimers)();\n  const { interval = 50, timeout = 1e3 } = typeof options === \"number\" ? { timeout: options } : options;\n  const STACK_TRACE_ERROR = new Error(\"STACK_TRACE_ERROR\");\n  return new Promise((resolve, reject) => {\n    let promiseStatus = \"idle\";\n    let timeoutId;\n    let intervalId;\n    const onReject = (error) => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      if (!error) {\n        error = copyStackTrace(\n          new Error(\"Timed out in waitUntil!\"),\n          STACK_TRACE_ERROR\n        );\n      }\n      reject(error);\n    };\n    const onResolve = (result) => {\n      if (!result) {\n        return;\n      }\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      resolve(result);\n      return true;\n    };\n    const checkCallback = () => {\n      if (vi.isFakeTimers()) {\n        vi.advanceTimersByTime(interval);\n      }\n      if (promiseStatus === \"pending\") {\n        return;\n      }\n      try {\n        const result = callback();\n        if (result !== null && typeof result === \"object\" && typeof result.then === \"function\") {\n          const thenable = result;\n          promiseStatus = \"pending\";\n          thenable.then(\n            (resolvedValue) => {\n              promiseStatus = \"resolved\";\n              onResolve(resolvedValue);\n            },\n            (rejectedValue) => {\n              promiseStatus = \"rejected\";\n              onReject(rejectedValue);\n            }\n          );\n        } else {\n          return onResolve(result);\n        }\n      } catch (error) {\n        onReject(error);\n      }\n    };\n    if (checkCallback() === true) {\n      return;\n    }\n    timeoutId = setTimeout(onReject, timeout);\n    intervalId = setInterval(checkCallback, interval);\n  });\n}\n\nfunction createVitest() {\n  let _mockedDate = null;\n  let _config = null;\n  function _mocker() {\n    return typeof __vitest_mocker__ !== \"undefined\" ? __vitest_mocker__ : new Proxy(\n      {},\n      {\n        get(_, name) {\n          throw new Error(\n            `Vitest mocker was not initialized in this environment. vi.${String(name)}() is forbidden.`\n          );\n        }\n      }\n    );\n  }\n  const workerState = (0,_global_7bFbnyXl_js__WEBPACK_IMPORTED_MODULE_4__.g)();\n  let _timers;\n  const timers = () => _timers || (_timers = new FakeTimers({\n    global: globalThis,\n    config: workerState.config.fakeTimers\n  }));\n  const _stubsGlobal = /* @__PURE__ */ new Map();\n  const _stubsEnv = /* @__PURE__ */ new Map();\n  const _envBooleans = [\"PROD\", \"DEV\", \"SSR\"];\n  const getImporter = (name) => {\n    const stackTrace = (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_3__.createSimpleStackTrace)({ stackTraceLimit: 5 });\n    const stackArray = stackTrace.split(\"\\n\");\n    const importerStackIndex = stackArray.findIndex((stack2) => {\n      return stack2.includes(` at Object.${name}`) || stack2.includes(`${name}@`);\n    });\n    const stack = (0,_vitest_utils_source_map__WEBPACK_IMPORTED_MODULE_11__.parseSingleStack)(stackArray[importerStackIndex + 1]);\n    return (stack == null ? void 0 : stack.file) || \"\";\n  };\n  const utils = {\n    useFakeTimers(config) {\n      var _a, _b, _c, _d;\n      if ((0,_base_CTYV4Gnz_js__WEBPACK_IMPORTED_MODULE_10__.i)()) {\n        if (((_a = config == null ? void 0 : config.toFake) == null ? void 0 : _a.includes(\"nextTick\")) || ((_d = (_c = (_b = workerState.config) == null ? void 0 : _b.fakeTimers) == null ? void 0 : _c.toFake) == null ? void 0 : _d.includes(\"nextTick\"))) {\n          throw new Error(\n            'vi.useFakeTimers({ toFake: [\"nextTick\"] }) is not supported in node:child_process. Use --pool=threads if mocking nextTick is required.'\n          );\n        }\n      }\n      if (config) {\n        timers().configure({ ...workerState.config.fakeTimers, ...config });\n      } else {\n        timers().configure(workerState.config.fakeTimers);\n      }\n      timers().useFakeTimers();\n      return utils;\n    },\n    isFakeTimers() {\n      return timers().isFakeTimers();\n    },\n    useRealTimers() {\n      timers().useRealTimers();\n      _mockedDate = null;\n      return utils;\n    },\n    runOnlyPendingTimers() {\n      timers().runOnlyPendingTimers();\n      return utils;\n    },\n    async runOnlyPendingTimersAsync() {\n      await timers().runOnlyPendingTimersAsync();\n      return utils;\n    },\n    runAllTimers() {\n      timers().runAllTimers();\n      return utils;\n    },\n    async runAllTimersAsync() {\n      await timers().runAllTimersAsync();\n      return utils;\n    },\n    runAllTicks() {\n      timers().runAllTicks();\n      return utils;\n    },\n    advanceTimersByTime(ms) {\n      timers().advanceTimersByTime(ms);\n      return utils;\n    },\n    async advanceTimersByTimeAsync(ms) {\n      await timers().advanceTimersByTimeAsync(ms);\n      return utils;\n    },\n    advanceTimersToNextTimer() {\n      timers().advanceTimersToNextTimer();\n      return utils;\n    },\n    async advanceTimersToNextTimerAsync() {\n      await timers().advanceTimersToNextTimerAsync();\n      return utils;\n    },\n    getTimerCount() {\n      return timers().getTimerCount();\n    },\n    setSystemTime(time) {\n      const date = time instanceof Date ? time : new Date(time);\n      _mockedDate = date;\n      timers().setSystemTime(date);\n      return utils;\n    },\n    getMockedSystemTime() {\n      return _mockedDate;\n    },\n    getRealSystemTime() {\n      return timers().getRealSystemTime();\n    },\n    clearAllTimers() {\n      timers().clearAllTimers();\n      return utils;\n    },\n    // mocks\n    spyOn: _vitest_spy__WEBPACK_IMPORTED_MODULE_12__.spyOn,\n    fn: _vitest_spy__WEBPACK_IMPORTED_MODULE_12__.fn,\n    waitFor,\n    waitUntil,\n    hoisted(factory) {\n      (0,_vitest_utils__WEBPACK_IMPORTED_MODULE_3__.assertTypes)(factory, '\"vi.hoisted\" factory', [\"function\"]);\n      return factory();\n    },\n    mock(path, factory) {\n      if (typeof path !== \"string\") {\n        throw new TypeError(\n          `vi.mock() expects a string path, but received a ${typeof path}`\n        );\n      }\n      const importer = getImporter(\"mock\");\n      _mocker().queueMock(\n        path,\n        importer,\n        factory ? () => factory(\n          () => _mocker().importActual(\n            path,\n            importer,\n            _mocker().getMockContext().callstack\n          )\n        ) : void 0,\n        true\n      );\n    },\n    unmock(path) {\n      if (typeof path !== \"string\") {\n        throw new TypeError(\n          `vi.unmock() expects a string path, but received a ${typeof path}`\n        );\n      }\n      _mocker().queueUnmock(path, getImporter(\"unmock\"));\n    },\n    doMock(path, factory) {\n      if (typeof path !== \"string\") {\n        throw new TypeError(\n          `vi.doMock() expects a string path, but received a ${typeof path}`\n        );\n      }\n      const importer = getImporter(\"doMock\");\n      _mocker().queueMock(\n        path,\n        importer,\n        factory ? () => factory(\n          () => _mocker().importActual(\n            path,\n            importer,\n            _mocker().getMockContext().callstack\n          )\n        ) : void 0,\n        false\n      );\n    },\n    doUnmock(path) {\n      if (typeof path !== \"string\") {\n        throw new TypeError(\n          `vi.doUnmock() expects a string path, but received a ${typeof path}`\n        );\n      }\n      _mocker().queueUnmock(path, getImporter(\"doUnmock\"));\n    },\n    async importActual(path) {\n      return _mocker().importActual(\n        path,\n        getImporter(\"importActual\"),\n        _mocker().getMockContext().callstack\n      );\n    },\n    async importMock(path) {\n      return _mocker().importMock(path, getImporter(\"importMock\"));\n    },\n    // this is typed in the interface so it's not necessary to type it here\n    mocked(item, _options = {}) {\n      return item;\n    },\n    isMockFunction(fn2) {\n      return (0,_vitest_spy__WEBPACK_IMPORTED_MODULE_12__.isMockFunction)(fn2);\n    },\n    clearAllMocks() {\n      _vitest_spy__WEBPACK_IMPORTED_MODULE_12__.mocks.forEach((spy) => spy.mockClear());\n      return utils;\n    },\n    resetAllMocks() {\n      _vitest_spy__WEBPACK_IMPORTED_MODULE_12__.mocks.forEach((spy) => spy.mockReset());\n      return utils;\n    },\n    restoreAllMocks() {\n      _vitest_spy__WEBPACK_IMPORTED_MODULE_12__.mocks.forEach((spy) => spy.mockRestore());\n      return utils;\n    },\n    stubGlobal(name, value) {\n      if (!_stubsGlobal.has(name)) {\n        _stubsGlobal.set(\n          name,\n          Object.getOwnPropertyDescriptor(globalThis, name)\n        );\n      }\n      Object.defineProperty(globalThis, name, {\n        value,\n        writable: true,\n        configurable: true,\n        enumerable: true\n      });\n      return utils;\n    },\n    stubEnv(name, value) {\n      if (!_stubsEnv.has(name)) {\n        _stubsEnv.set(name, process.env[name]);\n      }\n      if (_envBooleans.includes(name)) {\n        process.env[name] = value ? \"1\" : \"\";\n      } else {\n        process.env[name] = String(value);\n      }\n      return utils;\n    },\n    unstubAllGlobals() {\n      _stubsGlobal.forEach((original, name) => {\n        if (!original) {\n          Reflect.deleteProperty(globalThis, name);\n        } else {\n          Object.defineProperty(globalThis, name, original);\n        }\n      });\n      _stubsGlobal.clear();\n      return utils;\n    },\n    unstubAllEnvs() {\n      _stubsEnv.forEach((original, name) => {\n        if (original === void 0) {\n          delete process.env[name];\n        } else {\n          process.env[name] = original;\n        }\n      });\n      _stubsEnv.clear();\n      return utils;\n    },\n    resetModules() {\n      resetModules(workerState.moduleCache);\n      return utils;\n    },\n    async dynamicImportSettled() {\n      return waitForImportsToResolve();\n    },\n    setConfig(config) {\n      if (!_config) {\n        _config = { ...workerState.config };\n      }\n      Object.assign(workerState.config, config);\n    },\n    resetConfig() {\n      if (_config) {\n        Object.assign(workerState.config, _config);\n      }\n    }\n  };\n  return utils;\n}\nconst vitest = createVitest();\nconst vi = vitest;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vitest/dist/vendor/vi.DXACdGTu.js\n"));

/***/ })

});